
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {
  function runWithFS() {
function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createPath']('/', 'data', true, true);
Module['FS_createPath']('/data', 'svg', true, true);
Module['FS_createDataFile']('/data/svg', 'alt_double_sharp.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 100, 111, 117, 98, 108, 101, 95, 115, 104, 97, 114, 112, 34, 32, 100, 61, 34, 77, 45, 50, 48, 32, 49, 49, 52, 72, 53, 56, 86, 54, 51, 76, 55, 52, 32, 52, 55, 72, 49, 53, 55, 76, 49, 55, 51, 32, 54, 50, 86, 49, 49, 52, 72, 50, 53, 49, 86, 52, 54, 72, 49, 56, 56, 76, 49, 54, 50, 32, 49, 57, 86, 45, 49, 55, 76, 49, 56, 56, 32, 45, 52, 56, 72, 50, 53, 49, 86, 45, 49, 49, 52, 72, 49, 55, 50, 86, 45, 54, 50, 76, 49, 53, 55, 32, 45, 52, 56, 72, 55, 51, 76, 53, 56, 32, 45, 54, 50, 86, 45, 49, 49, 52, 72, 45, 50, 48, 86, 45, 52, 54, 72, 52, 51, 76, 55, 48, 32, 45, 49, 55, 86, 49, 57, 76, 52, 49, 32, 52, 55, 72, 45, 50, 48, 86, 49, 49, 52, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_double_sharp_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 100, 111, 117, 98, 108, 101, 95, 115, 104, 97, 114, 112, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 48, 32, 49, 49, 52, 72, 55, 56, 86, 54, 52, 76, 57, 52, 32, 52, 55, 72, 49, 55, 55, 76, 49, 57, 51, 32, 54, 50, 86, 49, 49, 52, 72, 50, 55, 49, 86, 52, 54, 72, 50, 48, 56, 76, 49, 56, 50, 32, 49, 57, 86, 45, 49, 55, 76, 50, 48, 56, 32, 45, 52, 55, 72, 50, 55, 49, 86, 45, 49, 49, 52, 72, 49, 57, 50, 86, 45, 54, 49, 76, 49, 55, 55, 32, 45, 52, 55, 72, 57, 51, 76, 55, 56, 32, 45, 54, 49, 86, 45, 49, 49, 52, 72, 48, 86, 45, 52, 52, 72, 54, 51, 76, 57, 48, 32, 45, 49, 55, 86, 49, 57, 76, 54, 49, 32, 52, 55, 72, 48, 86, 49, 49, 52, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_flat.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 102, 108, 97, 116, 34, 32, 100, 61, 34, 77, 50, 50, 32, 52, 57, 52, 72, 52, 50, 86, 49, 49, 54, 81, 55, 50, 32, 49, 51, 50, 32, 57, 51, 32, 49, 51, 56, 84, 49, 51, 53, 32, 49, 52, 52, 81, 49, 53, 50, 32, 49, 52, 52, 32, 49, 54, 51, 32, 49, 52, 49, 84, 49, 56, 57, 32, 49, 51, 48, 81, 50, 48, 56, 32, 49, 49, 56, 32, 50, 49, 54, 32, 57, 48, 76, 50, 50, 48, 32, 54, 52, 81, 50, 50, 48, 32, 49, 57, 32, 49, 55, 53, 32, 45, 51, 48, 81, 49, 53, 57, 32, 45, 52, 57, 32, 49, 52, 53, 32, 45, 54, 54, 84, 49, 49, 48, 32, 45, 49, 48, 49, 76, 50, 50, 32, 45, 49, 56, 52, 86, 52, 57, 52, 90, 77, 49, 51, 53, 32, 49, 48, 54, 76, 49, 50, 55, 32, 49, 49, 48, 76, 49, 49, 50, 32, 49, 49, 50, 81, 57, 53, 32, 49, 49, 50, 32, 55, 57, 32, 49, 48, 54, 84, 52, 50, 32, 56, 49, 86, 45, 49, 50, 51, 81, 56, 56, 32, 45, 55, 52, 32, 49, 49, 51, 32, 45, 51, 53, 81, 49, 52, 53, 32, 49, 53, 32, 49, 52, 53, 32, 53, 52, 81, 49, 52, 54, 32, 54, 56, 32, 49, 52, 54, 32, 55, 53, 81, 49, 52, 54, 32, 56, 52, 32, 49, 52, 52, 32, 57, 49, 84, 49, 51, 53, 32, 49, 48, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_flat_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 102, 108, 97, 116, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 49, 53, 54, 32, 49, 48, 81, 49, 53, 54, 32, 51, 54, 32, 49, 51, 49, 32, 53, 53, 81, 49, 48, 49, 32, 55, 56, 32, 52, 50, 32, 55, 56, 86, 45, 55, 51, 81, 49, 48, 49, 32, 45, 55, 51, 32, 49, 51, 51, 32, 45, 52, 51, 81, 49, 53, 54, 32, 45, 50, 48, 32, 49, 53, 54, 32, 49, 48, 90, 77, 51, 48, 32, 45, 49, 49, 50, 86, 53, 50, 57, 72, 52, 50, 86, 49, 48, 50, 76, 53, 52, 32, 49, 48, 51, 76, 54, 56, 32, 49, 48, 52, 81, 49, 49, 56, 32, 49, 48, 52, 32, 49, 53, 53, 32, 56, 55, 81, 50, 48, 55, 32, 53, 57, 32, 50, 48, 55, 32, 48, 81, 50, 48, 55, 32, 45, 53, 54, 32, 49, 53, 50, 32, 45, 56, 54, 81, 49, 48, 51, 32, 45, 49, 49, 50, 32, 51, 48, 32, 45, 49, 49, 50, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_natural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 110, 97, 116, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 48, 32, 45, 50, 48, 50, 86, 51, 55, 55, 72, 51, 56, 86, 49, 55, 50, 76, 49, 55, 55, 32, 49, 57, 54, 86, 45, 51, 55, 55, 72, 49, 54, 48, 86, 45, 49, 55, 55, 76, 50, 48, 32, 45, 50, 48, 50, 90, 77, 51, 56, 32, 45, 49, 48, 56, 76, 49, 54, 48, 32, 45, 56, 57, 86, 49, 48, 48, 76, 51, 56, 32, 56, 48, 86, 45, 49, 48, 56, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_natural_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 110, 97, 116, 117, 114, 97, 108, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 51, 48, 32, 45, 49, 52, 51, 86, 51, 55, 57, 72, 52, 50, 86, 49, 52, 52, 72, 49, 54, 52, 86, 45, 51, 51, 52, 72, 49, 53, 50, 86, 45, 49, 52, 51, 72, 51, 48, 90, 77, 52, 50, 32, 45, 53, 56, 72, 49, 53, 50, 86, 55, 49, 72, 52, 50, 86, 45, 53, 56, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_sharp.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 115, 104, 97, 114, 112, 34, 32, 100, 61, 34, 77, 49, 51, 54, 32, 50, 48, 48, 86, 51, 56, 50, 72, 49, 53, 51, 86, 50, 48, 53, 76, 49, 57, 55, 32, 50, 50, 48, 86, 49, 50, 51, 76, 49, 53, 51, 32, 49, 48, 56, 86, 45, 55, 48, 76, 49, 57, 55, 32, 45, 53, 55, 86, 45, 49, 53, 53, 76, 49, 53, 51, 32, 45, 49, 54, 57, 86, 45, 51, 51, 54, 72, 49, 51, 54, 86, 45, 49, 55, 52, 76, 54, 48, 32, 45, 49, 57, 56, 86, 45, 51, 54, 52, 72, 52, 51, 86, 45, 50, 48, 52, 76, 48, 32, 45, 50, 49, 56, 86, 45, 49, 50, 49, 76, 52, 51, 32, 45, 49, 48, 54, 86, 55, 51, 76, 48, 32, 53, 56, 86, 49, 53, 55, 76, 52, 51, 32, 49, 55, 49, 86, 51, 53, 51, 72, 54, 48, 86, 49, 55, 55, 76, 49, 51, 54, 32, 50, 48, 48, 90, 77, 54, 48, 32, 55, 56, 86, 45, 49, 48, 49, 76, 49, 51, 54, 32, 45, 55, 55, 86, 49, 48, 51, 76, 54, 48, 32, 55, 56, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'alt_sharp_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 97, 108, 116, 95, 115, 104, 97, 114, 112, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 49, 51, 56, 32, 48, 76, 49, 49, 57, 32, 45, 50, 52, 76, 49, 48, 49, 32, 48, 76, 49, 49, 57, 32, 50, 52, 76, 49, 51, 56, 32, 48, 90, 77, 49, 56, 48, 32, 49, 51, 48, 76, 49, 49, 57, 32, 53, 48, 76, 53, 55, 32, 49, 51, 48, 72, 51, 54, 76, 49, 48, 56, 32, 51, 56, 76, 57, 48, 32, 49, 52, 76, 48, 32, 49, 50, 57, 86, 49, 48, 51, 76, 56, 48, 32, 48, 76, 48, 32, 45, 49, 48, 52, 86, 45, 49, 51, 48, 76, 57, 48, 32, 45, 49, 51, 76, 49, 48, 56, 32, 45, 51, 56, 76, 51, 54, 32, 45, 49, 51, 48, 72, 53, 55, 76, 49, 49, 57, 32, 45, 53, 49, 76, 49, 56, 48, 32, 45, 49, 51, 48, 72, 50, 48, 51, 76, 49, 51, 48, 32, 45, 51, 55, 76, 49, 52, 56, 32, 45, 49, 51, 76, 50, 52, 48, 32, 45, 49, 51, 48, 86, 45, 49, 48, 52, 76, 49, 53, 57, 32, 48, 76, 50, 52, 48, 32, 49, 48, 51, 86, 49, 50, 57, 76, 49, 52, 56, 32, 49, 51, 76, 49, 51, 48, 32, 51, 55, 76, 50, 48, 51, 32, 49, 51, 48, 72, 49, 56, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_C.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 67, 34, 32, 100, 61, 34, 77, 48, 32, 53, 52, 54, 72, 49, 50, 56, 86, 45, 53, 51, 54, 72, 48, 86, 53, 52, 54, 90, 77, 49, 57, 48, 32, 53, 52, 54, 72, 50, 51, 55, 86, 53, 48, 81, 50, 52, 54, 32, 53, 53, 32, 50, 53, 54, 32, 54, 51, 84, 50, 55, 55, 32, 56, 49, 81, 50, 57, 52, 32, 49, 48, 48, 32, 51, 48, 54, 32, 49, 50, 51, 81, 51, 49, 54, 32, 49, 52, 54, 32, 51, 50, 50, 32, 49, 55, 54, 81, 51, 50, 55, 32, 50, 48, 57, 32, 51, 50, 55, 32, 50, 52, 52, 81, 51, 51, 57, 32, 49, 56, 55, 32, 52, 48, 54, 32, 49, 55, 56, 81, 52, 54, 56, 32, 49, 57, 51, 32, 52, 57, 49, 32, 50, 51, 53, 84, 53, 49, 53, 32, 51, 53, 56, 81, 53, 49, 53, 32, 51, 57, 51, 32, 53, 48, 55, 32, 52, 50, 48, 84, 52, 56, 49, 32, 52, 54, 54, 81, 52, 53, 49, 32, 53, 48, 52, 32, 52, 48, 54, 32, 53, 48, 52, 81, 51, 55, 54, 32, 53, 48, 52, 32, 51, 53, 54, 32, 52, 56, 49, 84, 51, 51, 53, 32, 52, 49, 51, 81, 51, 52, 48, 32, 52, 50, 51, 32, 51, 52, 57, 32, 52, 50, 56, 84, 51, 55, 55, 32, 52, 51, 57, 81, 51, 56, 54, 32, 52, 51, 57, 32, 51, 57, 53, 32, 52, 51, 53, 76, 52, 49, 51, 32, 52, 50, 52, 76, 52, 50, 52, 32, 52, 48, 57, 76, 52, 51, 49, 32, 51, 56, 57, 81, 52, 50, 52, 32, 51, 51, 55, 32, 51, 55, 49, 32, 51, 51, 55, 81, 51, 50, 57, 32, 51, 51, 55, 32, 51, 48, 56, 32, 51, 54, 52, 84, 50, 56, 55, 32, 52, 52, 51, 81, 50, 57, 52, 32, 52, 54, 56, 32, 51, 48, 49, 32, 52, 56, 51, 84, 51, 50, 48, 32, 53, 49, 48, 81, 51, 51, 49, 32, 53, 50, 50, 32, 51, 52, 53, 32, 53, 50, 56, 81, 51, 52, 55, 32, 53, 51, 48, 32, 51, 53, 55, 32, 53, 51, 52, 84, 51, 55, 52, 32, 53, 52, 48, 76, 52, 49, 49, 32, 53, 52, 52, 76, 52, 52, 57, 32, 53, 52, 54, 81, 53, 53, 49, 32, 53, 52, 54, 32, 54, 48, 51, 32, 52, 57, 53, 84, 54, 53, 53, 32, 51, 53, 50, 76, 54, 53, 57, 32, 51, 49, 54, 81, 54, 53, 57, 32, 50, 51, 49, 32, 53, 57, 51, 32, 49, 55, 49, 81, 53, 54, 48, 32, 49, 52, 52, 32, 53, 49, 51, 32, 49, 50, 56, 81, 52, 54, 51, 32, 49, 49, 52, 32, 52, 48, 51, 32, 49, 49, 52, 76, 51, 48, 50, 32, 49, 57, 86, 45, 49, 55, 76, 52, 48, 51, 32, 45, 49, 48, 55, 81, 52, 53, 49, 32, 45, 49, 48, 55, 32, 52, 56, 51, 32, 45, 49, 49, 52, 84, 53, 53, 50, 32, 45, 49, 51, 55, 81, 54, 48, 57, 32, 45, 49, 54, 54, 32, 54, 50, 56, 32, 45, 50, 49, 48, 81, 54, 51, 52, 32, 45, 50, 50, 50, 32, 54, 51, 57, 32, 45, 50, 51, 52, 84, 54, 52, 55, 32, 45, 50, 54, 50, 81, 54, 53, 53, 32, 45, 50, 57, 50, 32, 54, 53, 53, 32, 45, 51, 50, 51, 81, 54, 53, 53, 32, 45, 51, 55, 54, 32, 54, 51, 57, 32, 45, 52, 49, 52, 84, 53, 57, 49, 32, 45, 52, 56, 49, 81, 53, 53, 54, 32, 45, 53, 48, 55, 32, 53, 49, 53, 32, 45, 53, 50, 48, 84, 52, 50, 49, 32, 45, 53, 51, 52, 81, 51, 57, 53, 32, 45, 53, 51, 52, 32, 51, 55, 51, 32, 45, 53, 50, 57, 84, 51, 51, 48, 32, 45, 53, 49, 49, 84, 50, 57, 55, 32, 45, 52, 56, 48, 81, 50, 56, 53, 32, 45, 52, 53, 57, 32, 50, 56, 53, 32, 45, 52, 51, 56, 81, 50, 57, 55, 32, 45, 51, 51, 56, 32, 51, 54, 57, 32, 45, 51, 50, 57, 81, 51, 57, 51, 32, 45, 51, 50, 57, 32, 52, 49, 51, 32, 45, 51, 52, 56, 84, 52, 51, 52, 32, 45, 51, 56, 55, 81, 52, 50, 53, 32, 45, 52, 50, 53, 32, 51, 55, 49, 32, 45, 52, 51, 49, 81, 51, 53, 54, 32, 45, 52, 51, 49, 32, 51, 51, 57, 32, 45, 52, 49, 52, 81, 51, 51, 57, 32, 45, 52, 50, 56, 32, 51, 52, 49, 32, 45, 52, 51, 53, 84, 51, 52, 51, 32, 45, 52, 52, 53, 76, 51, 53, 52, 32, 45, 52, 54, 57, 81, 51, 54, 57, 32, 45, 52, 56, 54, 32, 52, 49, 49, 32, 45, 52, 57, 51, 81, 52, 52, 50, 32, 45, 52, 56, 54, 32, 52, 54, 51, 32, 45, 52, 55, 51, 84, 52, 57, 51, 32, 45, 52, 52, 48, 84, 53, 48, 54, 32, 45, 51, 57, 48, 84, 53, 49, 48, 32, 45, 51, 49, 51, 81, 53, 49, 48, 32, 45, 50, 52, 53, 32, 52, 56, 49, 32, 45, 50, 48, 54, 81, 52, 54, 54, 32, 45, 49, 56, 56, 32, 52, 52, 56, 32, 45, 49, 55, 54, 81, 52, 50, 57, 32, 45, 49, 54, 56, 32, 52, 48, 56, 32, 45, 49, 54, 56, 76, 51, 56, 48, 32, 45, 49, 55, 56, 81, 51, 54, 56, 32, 45, 49, 56, 51, 32, 51, 54, 49, 32, 45, 49, 56, 57, 81, 51, 52, 51, 32, 45, 50, 48, 52, 32, 51, 50, 52, 32, 45, 50, 52, 49, 81, 51, 50, 52, 32, 45, 49, 54, 56, 32, 51, 48, 57, 32, 45, 49, 50, 49, 81, 51, 48, 49, 32, 45, 57, 55, 32, 50, 56, 53, 32, 45, 56, 48, 84, 50, 51, 55, 32, 45, 53, 48, 86, 45, 53, 51, 54, 72, 49, 57, 48, 86, 53, 52, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_C_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 67, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 49, 53, 52, 32, 53, 57, 53, 72, 49, 56, 50, 86, 51, 53, 51, 72, 52, 55, 52, 86, 53, 57, 53, 72, 53, 48, 51, 86, 54, 52, 72, 49, 56, 50, 86, 45, 54, 52, 72, 53, 48, 51, 86, 45, 54, 48, 50, 72, 52, 55, 52, 86, 45, 51, 53, 53, 72, 49, 56, 50, 86, 45, 54, 48, 50, 72, 49, 53, 52, 86, 53, 57, 53, 90, 77, 52, 55, 52, 32, 50, 53, 53, 72, 49, 56, 50, 86, 49, 54, 52, 72, 52, 55, 52, 86, 50, 53, 53, 90, 77, 52, 55, 52, 32, 45, 49, 55, 50, 72, 49, 56, 50, 86, 45, 50, 54, 51, 72, 52, 55, 52, 86, 45, 49, 55, 50, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_F.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 70, 34, 32, 100, 61, 34, 77, 49, 53, 56, 32, 49, 49, 49, 81, 49, 56, 54, 32, 49, 49, 49, 32, 50, 48, 48, 32, 49, 48, 53, 81, 50, 48, 56, 32, 49, 48, 50, 32, 50, 49, 53, 32, 57, 56, 84, 50, 50, 57, 32, 56, 55, 84, 50, 52, 54, 32, 54, 50, 76, 50, 54, 50, 32, 50, 51, 81, 50, 54, 50, 32, 45, 50, 32, 50, 53, 53, 32, 45, 49, 55, 81, 50, 53, 49, 32, 45, 51, 52, 32, 50, 51, 54, 32, 45, 52, 56, 81, 50, 50, 57, 32, 45, 53, 54, 32, 50, 50, 50, 32, 45, 54, 49, 81, 50, 49, 57, 32, 45, 54, 51, 32, 50, 48, 51, 32, 45, 55, 51, 81, 49, 57, 51, 32, 45, 55, 57, 32, 49, 55, 57, 32, 45, 56, 52, 84, 49, 53, 50, 32, 45, 57, 49, 81, 49, 50, 50, 32, 45, 57, 49, 32, 57, 53, 32, 45, 56, 51, 81, 55, 50, 32, 45, 55, 52, 32, 52, 48, 32, 45, 52, 55, 81, 53, 32, 45, 49, 53, 32, 53, 32, 53, 51, 81, 53, 32, 56, 52, 32, 49, 51, 32, 49, 49, 52, 81, 50, 50, 32, 49, 52, 49, 32, 51, 55, 32, 49, 54, 53, 81, 54, 48, 32, 50, 48, 54, 32, 57, 56, 32, 50, 50, 54, 84, 49, 56, 51, 32, 50, 53, 54, 76, 50, 50, 48, 32, 50, 54, 50, 76, 50, 51, 54, 32, 50, 54, 54, 81, 50, 55, 55, 32, 50, 54, 54, 32, 51, 49, 48, 32, 50, 54, 49, 84, 51, 55, 51, 32, 50, 52, 51, 81, 52, 50, 56, 32, 50, 49, 57, 32, 52, 54, 48, 32, 49, 55, 54, 81, 52, 57, 51, 32, 49, 51, 56, 32, 53, 49, 48, 32, 56, 52, 81, 53, 50, 56, 32, 51, 54, 32, 53, 50, 56, 32, 45, 50, 51, 81, 53, 50, 56, 32, 45, 57, 50, 32, 53, 49, 49, 32, 45, 49, 53, 52, 84, 52, 54, 48, 32, 45, 50, 55, 51, 81, 51, 57, 51, 32, 45, 51, 56, 49, 32, 50, 56, 55, 32, 45, 52, 53, 48, 81, 50, 54, 55, 32, 45, 52, 54, 51, 32, 50, 51, 50, 32, 45, 52, 56, 50, 81, 50, 48, 52, 32, 45, 52, 57, 56, 32, 49, 55, 52, 32, 45, 53, 49, 50, 81, 49, 49, 54, 32, 45, 53, 51, 57, 32, 52, 56, 32, 45, 53, 54, 49, 76, 49, 56, 32, 45, 53, 54, 54, 81, 52, 32, 45, 53, 54, 54, 32, 52, 32, 45, 53, 53, 56, 81, 54, 32, 45, 53, 53, 48, 32, 56, 32, 45, 53, 52, 56, 76, 49, 52, 32, 45, 53, 52, 50, 81, 52, 53, 32, 45, 53, 50, 57, 32, 54, 52, 32, 45, 53, 50, 48, 81, 57, 52, 32, 45, 53, 48, 54, 32, 49, 49, 48, 32, 45, 52, 57, 56, 76, 49, 56, 56, 32, 45, 52, 53, 53, 81, 50, 50, 51, 32, 45, 52, 51, 52, 32, 50, 52, 57, 32, 45, 52, 49, 50, 84, 51, 48, 49, 32, 45, 51, 54, 48, 81, 51, 52, 54, 32, 45, 51, 48, 56, 32, 51, 55, 53, 32, 45, 50, 51, 48, 81, 51, 55, 57, 32, 45, 50, 49, 56, 32, 51, 56, 53, 32, 45, 49, 57, 55, 84, 51, 57, 55, 32, 45, 49, 53, 51, 84, 52, 48, 55, 32, 45, 57, 55, 84, 52, 49, 51, 32, 45, 53, 56, 81, 52, 48, 50, 32, 52, 53, 32, 51, 57, 48, 32, 56, 50, 81, 51, 56, 54, 32, 49, 48, 48, 32, 51, 56, 52, 32, 49, 48, 53, 84, 51, 55, 52, 32, 49, 50, 50, 81, 51, 54, 50, 32, 49, 52, 48, 32, 51, 52, 51, 32, 49, 53, 54, 81, 51, 48, 56, 32, 49, 56, 56, 32, 50, 50, 53, 32, 50, 48, 48, 81, 49, 57, 49, 32, 50, 48, 48, 32, 49, 54, 51, 32, 49, 57, 52, 84, 49, 49, 50, 32, 49, 55, 50, 81, 55, 48, 32, 49, 52, 51, 32, 55, 48, 32, 57, 57, 81, 55, 48, 32, 57, 49, 32, 55, 48, 32, 56, 51, 81, 55, 51, 32, 55, 53, 32, 55, 52, 32, 55, 50, 81, 49, 49, 48, 32, 49, 48, 53, 32, 49, 53, 56, 32, 49, 49, 49, 90, 77, 54, 52, 50, 32, 45, 54, 48, 81, 54, 53, 52, 32, 45, 54, 48, 32, 54, 54, 53, 32, 45, 54, 52, 84, 54, 56, 50, 32, 45, 55, 56, 84, 54, 57, 50, 32, 45, 57, 53, 84, 54, 57, 56, 32, 45, 49, 49, 56, 81, 54, 57, 56, 32, 45, 49, 51, 49, 32, 54, 57, 51, 32, 45, 49, 51, 57, 81, 54, 57, 48, 32, 45, 49, 52, 56, 32, 54, 56, 48, 32, 45, 49, 54, 48, 81, 54, 54, 53, 32, 45, 49, 55, 54, 32, 54, 52, 50, 32, 45, 49, 55, 54, 81, 54, 49, 53, 32, 45, 49, 55, 54, 32, 54, 48, 49, 32, 45, 49, 53, 57, 81, 53, 56, 53, 32, 45, 49, 52, 50, 32, 53, 56, 53, 32, 45, 49, 49, 56, 81, 53, 56, 53, 32, 45, 57, 52, 32, 54, 48, 49, 32, 45, 55, 55, 81, 54, 49, 53, 32, 45, 54, 48, 32, 54, 52, 50, 32, 45, 54, 48, 90, 77, 54, 52, 50, 32, 49, 55, 55, 81, 54, 54, 53, 32, 49, 55, 55, 32, 54, 56, 49, 32, 49, 54, 48, 84, 54, 57, 56, 32, 49, 49, 57, 81, 54, 57, 56, 32, 57, 55, 32, 54, 56, 50, 32, 55, 57, 84, 54, 52, 50, 32, 54, 49, 76, 54, 49, 57, 32, 54, 52, 81, 54, 49, 49, 32, 54, 55, 32, 54, 48, 49, 32, 55, 55, 81, 53, 56, 53, 32, 57, 53, 32, 53, 56, 53, 32, 49, 49, 57, 76, 53, 56, 56, 32, 49, 52, 50, 81, 53, 57, 51, 32, 49, 53, 51, 32, 54, 48, 49, 32, 49, 54, 48, 81, 54, 49, 54, 32, 49, 55, 55, 32, 54, 52, 50, 32, 49, 55, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_F_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 70, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 51, 54, 32, 45, 50, 54, 48, 76, 50, 54, 54, 32, 45, 50, 53, 48, 86, 45, 55, 53, 51, 72, 50, 51, 54, 86, 45, 50, 54, 48, 90, 77, 50, 53, 51, 32, 51, 53, 53, 76, 51, 57, 53, 32, 49, 55, 55, 76, 50, 53, 51, 32, 45, 49, 76, 49, 48, 57, 32, 49, 55, 55, 76, 50, 53, 51, 32, 51, 53, 53, 90, 77, 50, 50, 54, 32, 50, 55, 57, 76, 49, 55, 50, 32, 50, 49, 50, 76, 50, 56, 52, 32, 55, 52, 76, 51, 51, 54, 32, 49, 52, 48, 76, 50, 50, 54, 32, 50, 55, 57, 90, 77, 50, 53, 51, 32, 54, 55, 76, 51, 57, 53, 32, 45, 49, 49, 49, 76, 50, 53, 51, 32, 45, 50, 56, 57, 76, 49, 48, 57, 32, 45, 49, 49, 49, 76, 50, 53, 51, 32, 54, 55, 90, 77, 50, 50, 54, 32, 45, 57, 76, 49, 55, 50, 32, 45, 55, 54, 76, 50, 56, 52, 32, 45, 50, 49, 52, 76, 51, 51, 54, 32, 45, 49, 52, 56, 76, 50, 50, 54, 32, 45, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_G.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 71, 34, 32, 100, 61, 34, 77, 54, 49, 52, 32, 57, 48, 54, 81, 54, 49, 52, 32, 56, 54, 49, 32, 53, 51, 54, 32, 55, 55, 50, 81, 52, 54, 56, 32, 54, 57, 53, 32, 51, 57, 52, 32, 54, 52, 49, 86, 55, 51, 53, 81, 52, 49, 57, 32, 56, 52, 51, 32, 52, 54, 57, 32, 57, 51, 48, 84, 53, 56, 51, 32, 49, 48, 54, 51, 81, 54, 48, 49, 32, 49, 48, 51, 54, 32, 54, 48, 55, 32, 57, 57, 56, 84, 54, 49, 52, 32, 57, 48, 54, 90, 77, 51, 54, 55, 32, 45, 50, 51, 54, 81, 51, 48, 49, 32, 45, 50, 51, 54, 32, 50, 53, 49, 32, 45, 50, 49, 54, 84, 49, 54, 50, 32, 45, 49, 53, 56, 81, 57, 56, 32, 45, 57, 53, 32, 57, 56, 32, 49, 52, 81, 57, 56, 32, 50, 51, 32, 57, 56, 32, 51, 50, 81, 49, 48, 48, 32, 52, 53, 32, 49, 48, 48, 32, 53, 49, 81, 49, 48, 48, 32, 49, 50, 53, 32, 49, 51, 52, 32, 49, 56, 56, 81, 49, 54, 50, 32, 50, 51, 57, 32, 50, 50, 56, 32, 51, 48, 54, 84, 51, 54, 51, 32, 52, 52, 49, 76, 51, 55, 49, 32, 52, 52, 57, 86, 50, 54, 50, 81, 50, 55, 51, 32, 50, 52, 51, 32, 50, 50, 49, 32, 49, 54, 49, 81, 49, 55, 56, 32, 57, 51, 32, 49, 55, 56, 32, 54, 81, 49, 55, 56, 32, 45, 52, 55, 32, 49, 57, 53, 32, 45, 55, 56, 81, 49, 57, 53, 32, 45, 56, 51, 32, 50, 48, 51, 32, 45, 56, 49, 84, 50, 48, 55, 32, 45, 55, 49, 81, 50, 48, 55, 32, 50, 57, 32, 50, 51, 49, 32, 56, 50, 81, 50, 54, 57, 32, 49, 54, 54, 32, 51, 55, 49, 32, 49, 54, 54, 86, 45, 50, 51, 55, 76, 51, 54, 55, 32, 45, 50, 51, 54, 90, 77, 53, 57, 49, 32, 45, 51, 48, 81, 53, 57, 49, 32, 45, 49, 49, 48, 32, 53, 51, 50, 32, 45, 49, 54, 57, 84, 51, 57, 52, 32, 45, 50, 51, 54, 86, 49, 54, 55, 81, 52, 57, 48, 32, 49, 54, 55, 32, 53, 52, 51, 32, 49, 48, 57, 81, 53, 57, 49, 32, 53, 54, 32, 53, 57, 49, 32, 45, 51, 48, 90, 77, 54, 53, 53, 32, 56, 53, 56, 81, 54, 53, 54, 32, 56, 54, 54, 32, 54, 53, 54, 32, 56, 55, 53, 84, 54, 53, 54, 32, 56, 57, 48, 81, 54, 53, 54, 32, 57, 54, 55, 32, 54, 51, 54, 32, 49, 48, 52, 55, 84, 53, 56, 51, 32, 49, 49, 53, 52, 81, 53, 49, 55, 32, 49, 49, 50, 48, 32, 52, 52, 49, 32, 49, 48, 49, 49, 81, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 49, 32, 56, 55, 50, 86, 54, 50, 48, 81, 51, 54, 57, 32, 54, 49, 48, 32, 50, 55, 48, 32, 53, 50, 52, 81, 49, 53, 54, 32, 52, 50, 52, 32, 57, 52, 32, 51, 51, 52, 81, 48, 32, 49, 57, 55, 32, 48, 32, 53, 57, 81, 48, 32, 45, 49, 52, 32, 50, 50, 32, 45, 55, 50, 81, 53, 52, 32, 45, 49, 53, 54, 32, 49, 50, 56, 32, 45, 50, 48, 54, 81, 50, 50, 48, 32, 45, 50, 54, 56, 32, 51, 55, 49, 32, 45, 50, 54, 56, 86, 45, 53, 48, 51, 81, 51, 55, 49, 32, 45, 53, 53, 48, 32, 51, 49, 57, 32, 45, 53, 57, 48, 84, 50, 48, 52, 32, 45, 54, 51, 49, 81, 49, 53, 57, 32, 45, 54, 51, 49, 32, 49, 50, 54, 32, 45, 54, 48, 56, 81, 56, 55, 32, 45, 53, 56, 49, 32, 54, 54, 32, 45, 53, 50, 53, 81, 57, 51, 32, 45, 53, 52, 54, 32, 49, 49, 56, 32, 45, 53, 53, 54, 84, 49, 54, 54, 32, 45, 53, 54, 55, 81, 50, 49, 49, 32, 45, 53, 54, 55, 32, 50, 52, 48, 32, 45, 53, 51, 48, 84, 50, 54, 57, 32, 45, 52, 52, 54, 81, 50, 54, 57, 32, 45, 51, 57, 54, 32, 50, 52, 54, 32, 45, 51, 54, 53, 81, 50, 49, 55, 32, 45, 51, 50, 55, 32, 49, 53, 55, 32, 45, 51, 50, 55, 81, 57, 54, 32, 45, 51, 50, 55, 32, 54, 55, 32, 45, 51, 54, 55, 84, 51, 55, 32, 45, 52, 55, 51, 81, 51, 55, 32, 45, 52, 57, 52, 32, 51, 57, 32, 45, 53, 49, 52, 84, 52, 55, 32, 45, 53, 52, 56, 81, 54, 56, 32, 45, 54, 48, 49, 32, 49, 49, 51, 32, 45, 54, 50, 56, 84, 50, 49, 49, 32, 45, 54, 53, 53, 81, 50, 56, 52, 32, 45, 54, 53, 53, 32, 51, 51, 55, 32, 45, 54, 49, 50, 81, 51, 57, 52, 32, 45, 53, 54, 53, 32, 51, 57, 52, 32, 45, 52, 57, 49, 86, 45, 50, 54, 55, 81, 52, 56, 51, 32, 45, 50, 54, 55, 32, 53, 54, 54, 32, 45, 50, 49, 50, 81, 54, 55, 57, 32, 45, 49, 51, 55, 32, 54, 55, 57, 32, 45, 49, 81, 54, 55, 57, 32, 49, 50, 55, 32, 53, 57, 55, 32, 50, 48, 49, 81, 53, 50, 53, 32, 50, 54, 54, 32, 52, 50, 53, 32, 50, 54, 54, 76, 51, 57, 52, 32, 50, 54, 53, 86, 52, 55, 51, 81, 52, 55, 50, 32, 53, 53, 49, 32, 53, 48, 54, 32, 53, 56, 56, 81, 53, 55, 48, 32, 54, 53, 57, 32, 54, 48, 53, 32, 55, 49, 56, 81, 54, 52, 56, 32, 55, 57, 49, 32, 54, 53, 53, 32, 56, 53, 56, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_G8.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 71, 56, 34, 32, 100, 61, 34, 77, 54, 49, 52, 32, 57, 48, 54, 81, 54, 49, 52, 32, 56, 54, 49, 32, 53, 51, 54, 32, 55, 55, 50, 81, 52, 54, 56, 32, 54, 57, 53, 32, 51, 57, 52, 32, 54, 52, 49, 86, 55, 51, 53, 81, 52, 49, 57, 32, 56, 52, 51, 32, 52, 54, 57, 32, 57, 51, 48, 84, 53, 56, 51, 32, 49, 48, 54, 51, 81, 54, 48, 49, 32, 49, 48, 51, 54, 32, 54, 48, 55, 32, 57, 57, 56, 84, 54, 49, 52, 32, 57, 48, 54, 90, 77, 51, 54, 55, 32, 45, 50, 51, 54, 81, 51, 48, 49, 32, 45, 50, 51, 54, 32, 50, 53, 49, 32, 45, 50, 49, 54, 84, 49, 54, 50, 32, 45, 49, 53, 56, 81, 57, 56, 32, 45, 57, 53, 32, 57, 56, 32, 49, 52, 81, 57, 56, 32, 50, 51, 32, 57, 56, 32, 51, 50, 81, 49, 48, 48, 32, 52, 53, 32, 49, 48, 48, 32, 53, 49, 81, 49, 48, 48, 32, 49, 50, 53, 32, 49, 51, 52, 32, 49, 56, 56, 81, 49, 54, 50, 32, 50, 51, 57, 32, 50, 50, 56, 32, 51, 48, 54, 84, 51, 54, 51, 32, 52, 52, 49, 76, 51, 55, 49, 32, 52, 52, 57, 86, 50, 54, 50, 81, 50, 55, 51, 32, 50, 52, 51, 32, 50, 50, 49, 32, 49, 54, 49, 81, 49, 55, 56, 32, 57, 51, 32, 49, 55, 56, 32, 54, 81, 49, 55, 56, 32, 45, 52, 55, 32, 49, 57, 53, 32, 45, 55, 56, 81, 49, 57, 53, 32, 45, 56, 51, 32, 50, 48, 51, 32, 45, 56, 49, 84, 50, 48, 55, 32, 45, 55, 49, 81, 50, 48, 55, 32, 50, 57, 32, 50, 51, 49, 32, 56, 50, 81, 50, 54, 57, 32, 49, 54, 54, 32, 51, 55, 49, 32, 49, 54, 54, 86, 45, 50, 51, 55, 76, 51, 54, 55, 32, 45, 50, 51, 54, 90, 77, 53, 57, 49, 32, 45, 51, 48, 81, 53, 57, 49, 32, 45, 49, 49, 48, 32, 53, 51, 50, 32, 45, 49, 54, 57, 84, 51, 57, 52, 32, 45, 50, 51, 54, 86, 49, 54, 55, 81, 52, 57, 48, 32, 49, 54, 55, 32, 53, 52, 51, 32, 49, 48, 57, 81, 53, 57, 49, 32, 53, 54, 32, 53, 57, 49, 32, 45, 51, 48, 90, 77, 54, 53, 53, 32, 56, 53, 56, 81, 54, 53, 54, 32, 56, 54, 54, 32, 54, 53, 54, 32, 56, 55, 53, 84, 54, 53, 54, 32, 56, 57, 48, 81, 54, 53, 54, 32, 57, 54, 55, 32, 54, 51, 54, 32, 49, 48, 52, 55, 84, 53, 56, 51, 32, 49, 49, 53, 52, 81, 53, 49, 55, 32, 49, 49, 50, 48, 32, 52, 52, 49, 32, 49, 48, 49, 49, 81, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 49, 32, 56, 55, 50, 86, 54, 50, 48, 81, 51, 54, 57, 32, 54, 49, 48, 32, 50, 55, 48, 32, 53, 50, 52, 81, 49, 53, 54, 32, 52, 50, 52, 32, 57, 52, 32, 51, 51, 52, 81, 48, 32, 49, 57, 55, 32, 48, 32, 53, 57, 81, 48, 32, 45, 49, 52, 32, 50, 50, 32, 45, 55, 50, 81, 53, 52, 32, 45, 49, 53, 54, 32, 49, 50, 56, 32, 45, 50, 48, 54, 81, 50, 50, 48, 32, 45, 50, 54, 56, 32, 51, 55, 49, 32, 45, 50, 54, 56, 86, 45, 53, 48, 51, 81, 51, 55, 49, 32, 45, 53, 53, 48, 32, 51, 49, 57, 32, 45, 53, 57, 48, 84, 50, 48, 52, 32, 45, 54, 51, 49, 81, 49, 53, 57, 32, 45, 54, 51, 49, 32, 49, 50, 54, 32, 45, 54, 48, 56, 81, 56, 55, 32, 45, 53, 56, 49, 32, 54, 54, 32, 45, 53, 50, 53, 81, 57, 51, 32, 45, 53, 52, 54, 32, 49, 49, 56, 32, 45, 53, 53, 54, 84, 49, 54, 54, 32, 45, 53, 54, 55, 81, 50, 49, 49, 32, 45, 53, 54, 55, 32, 50, 52, 48, 32, 45, 53, 51, 48, 84, 50, 54, 57, 32, 45, 52, 52, 54, 81, 50, 54, 57, 32, 45, 51, 57, 54, 32, 50, 52, 54, 32, 45, 51, 54, 53, 81, 50, 49, 55, 32, 45, 51, 50, 55, 32, 49, 53, 55, 32, 45, 51, 50, 55, 81, 57, 54, 32, 45, 51, 50, 55, 32, 54, 55, 32, 45, 51, 54, 55, 84, 51, 55, 32, 45, 52, 55, 51, 81, 51, 55, 32, 45, 52, 57, 52, 32, 51, 57, 32, 45, 53, 49, 52, 84, 52, 55, 32, 45, 53, 52, 56, 81, 54, 56, 32, 45, 54, 48, 49, 32, 49, 49, 51, 32, 45, 54, 50, 56, 84, 50, 49, 49, 32, 45, 54, 53, 53, 81, 50, 56, 52, 32, 45, 54, 53, 53, 32, 51, 51, 55, 32, 45, 54, 49, 50, 81, 51, 57, 52, 32, 45, 53, 54, 53, 32, 51, 57, 52, 32, 45, 52, 57, 49, 86, 45, 50, 54, 55, 81, 52, 56, 51, 32, 45, 50, 54, 55, 32, 53, 54, 54, 32, 45, 50, 49, 50, 81, 54, 55, 57, 32, 45, 49, 51, 55, 32, 54, 55, 57, 32, 45, 49, 81, 54, 55, 57, 32, 49, 50, 55, 32, 53, 57, 55, 32, 50, 48, 49, 81, 53, 50, 53, 32, 50, 54, 54, 32, 52, 50, 53, 32, 50, 54, 54, 76, 51, 57, 52, 32, 50, 54, 53, 86, 52, 55, 51, 81, 52, 55, 50, 32, 53, 53, 49, 32, 53, 48, 54, 32, 53, 56, 56, 81, 53, 55, 48, 32, 54, 53, 57, 32, 54, 48, 53, 32, 55, 49, 56, 81, 54, 52, 56, 32, 55, 57, 49, 32, 54, 53, 53, 32, 56, 53, 56, 90, 77, 53, 53, 54, 32, 45, 53, 51, 50, 81, 53, 57, 49, 32, 45, 53, 51, 50, 32, 54, 49, 55, 32, 45, 53, 53, 54, 84, 54, 52, 51, 32, 45, 54, 49, 53, 81, 54, 52, 51, 32, 45, 54, 52, 48, 32, 54, 51, 52, 32, 45, 54, 53, 54, 84, 54, 48, 50, 32, 45, 54, 57, 53, 81, 54, 50, 57, 32, 45, 55, 51, 49, 32, 54, 50, 57, 32, 45, 55, 55, 48, 81, 54, 50, 57, 32, 45, 56, 48, 50, 32, 54, 48, 56, 32, 45, 56, 50, 51, 84, 53, 52, 53, 32, 45, 56, 52, 52, 81, 52, 53, 55, 32, 45, 56, 52, 52, 32, 52, 53, 55, 32, 45, 55, 52, 57, 81, 52, 54, 55, 32, 45, 55, 48, 54, 32, 53, 48, 48, 32, 45, 54, 56, 50, 81, 52, 56, 54, 32, 45, 54, 54, 56, 32, 52, 55, 53, 32, 45, 54, 52, 55, 84, 52, 54, 52, 32, 45, 54, 49, 48, 81, 52, 54, 52, 32, 45, 53, 55, 53, 32, 52, 57, 49, 32, 45, 53, 53, 52, 84, 53, 53, 54, 32, 45, 53, 51, 50, 90, 77, 53, 54, 51, 32, 45, 53, 53, 53, 81, 53, 52, 53, 32, 45, 53, 53, 53, 32, 53, 51, 51, 32, 45, 53, 54, 54, 84, 53, 50, 48, 32, 45, 53, 57, 53, 81, 53, 50, 48, 32, 45, 54, 49, 48, 32, 53, 51, 50, 32, 45, 54, 50, 56, 81, 53, 51, 55, 32, 45, 54, 51, 53, 32, 53, 54, 50, 32, 45, 54, 53, 51, 81, 53, 54, 54, 32, 45, 54, 53, 54, 32, 53, 55, 51, 32, 45, 54, 54, 49, 81, 53, 56, 56, 32, 45, 54, 54, 51, 32, 54, 48, 56, 32, 45, 54, 52, 56, 84, 54, 50, 56, 32, 45, 54, 49, 52, 81, 54, 50, 56, 32, 45, 53, 57, 51, 32, 54, 49, 48, 32, 45, 53, 55, 54, 84, 53, 54, 51, 32, 45, 53, 53, 53, 90, 77, 53, 49, 56, 32, 45, 55, 49, 57, 81, 52, 57, 50, 32, 45, 55, 49, 57, 32, 52, 56, 50, 32, 45, 55, 51, 52, 81, 52, 55, 57, 32, 45, 55, 51, 57, 32, 52, 55, 49, 32, 45, 55, 54, 51, 81, 52, 55, 53, 32, 45, 55, 57, 51, 32, 52, 57, 50, 32, 45, 56, 49, 51, 81, 52, 57, 55, 32, 45, 56, 49, 56, 32, 53, 48, 53, 32, 45, 56, 50, 50, 81, 53, 50, 50, 32, 45, 56, 51, 49, 32, 53, 51, 56, 32, 45, 56, 51, 49, 81, 53, 53, 52, 32, 45, 56, 51, 49, 32, 53, 54, 54, 32, 45, 56, 50, 50, 84, 53, 56, 51, 32, 45, 55, 56, 57, 81, 53, 55, 51, 32, 45, 55, 54, 48, 32, 53, 54, 55, 32, 45, 55, 53, 50, 81, 53, 53, 51, 32, 45, 55, 51, 51, 32, 53, 49, 56, 32, 45, 55, 49, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_G_chiavette.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 71, 95, 99, 104, 105, 97, 118, 101, 116, 116, 101, 34, 32, 100, 61, 34, 77, 53, 49, 54, 32, 54, 57, 51, 81, 53, 49, 54, 32, 54, 56, 53, 32, 53, 49, 53, 32, 54, 56, 48, 84, 53, 49, 51, 32, 54, 55, 51, 81, 53, 48, 55, 32, 54, 54, 56, 32, 53, 48, 51, 32, 54, 54, 56, 81, 52, 52, 50, 32, 55, 48, 48, 32, 51, 54, 49, 32, 55, 48, 48, 81, 51, 49, 48, 32, 54, 56, 57, 32, 50, 56, 52, 32, 54, 55, 54, 84, 50, 51, 57, 32, 54, 51, 50, 81, 50, 51, 48, 32, 54, 49, 51, 32, 50, 50, 53, 32, 53, 57, 52, 84, 50, 49, 57, 32, 53, 52, 54, 81, 50, 49, 57, 32, 53, 51, 53, 32, 50, 50, 48, 32, 53, 50, 52, 84, 50, 50, 52, 32, 53, 48, 51, 76, 50, 51, 57, 32, 52, 54, 53, 81, 50, 53, 51, 32, 52, 51, 55, 32, 50, 57, 53, 32, 51, 57, 56, 76, 51, 52, 49, 32, 51, 53, 50, 76, 52, 50, 49, 32, 51, 52, 55, 76, 53, 49, 54, 32, 51, 52, 53, 81, 53, 51, 52, 32, 51, 52, 53, 32, 53, 51, 52, 32, 51, 51, 50, 81, 53, 51, 52, 32, 51, 50, 51, 32, 53, 48, 57, 32, 51, 49, 51, 76, 52, 51, 56, 32, 51, 48, 53, 81, 52, 50, 48, 32, 51, 48, 51, 32, 52, 48, 52, 32, 51, 48, 49, 84, 51, 55, 52, 32, 50, 57, 54, 84, 51, 52, 55, 32, 50, 56, 57, 84, 51, 49, 53, 32, 50, 55, 53, 81, 50, 50, 57, 32, 50, 50, 57, 32, 49, 56, 55, 32, 49, 55, 54, 84, 49, 51, 51, 32, 55, 53, 76, 49, 50, 53, 32, 50, 54, 76, 49, 50, 50, 32, 45, 50, 56, 81, 49, 51, 57, 32, 45, 50, 48, 50, 32, 50, 56, 57, 32, 45, 50, 48, 50, 81, 51, 51, 55, 32, 45, 50, 48, 50, 32, 51, 57, 51, 32, 45, 49, 56, 48, 84, 52, 55, 55, 32, 45, 49, 50, 52, 81, 53, 54, 49, 32, 45, 53, 55, 32, 53, 54, 49, 32, 49, 48, 81, 53, 54, 49, 32, 54, 48, 32, 53, 48, 51, 32, 57, 52, 81, 52, 53, 49, 32, 57, 52, 32, 51, 57, 50, 32, 49, 48, 55, 81, 51, 51, 56, 32, 49, 48, 55, 32, 50, 55, 54, 32, 53, 55, 81, 50, 53, 57, 32, 53, 55, 32, 50, 53, 57, 32, 54, 57, 81, 50, 57, 51, 32, 49, 49, 52, 32, 51, 49, 48, 32, 49, 50, 56, 81, 51, 50, 55, 32, 49, 52, 52, 32, 51, 54, 55, 32, 49, 53, 52, 84, 52, 55, 55, 32, 49, 54, 52, 81, 53, 52, 56, 32, 49, 52, 52, 32, 53, 54, 55, 32, 49, 51, 51, 81, 53, 56, 53, 32, 49, 50, 53, 32, 54, 48, 50, 32, 57, 55, 84, 54, 51, 50, 32, 52, 81, 54, 49, 49, 32, 45, 49, 48, 57, 32, 53, 51, 53, 32, 45, 49, 55, 55, 84, 51, 48, 50, 32, 45, 50, 55, 51, 81, 50, 49, 57, 32, 45, 50, 55, 51, 32, 49, 53, 56, 32, 45, 50, 52, 55, 84, 54, 48, 32, 45, 49, 54, 57, 84, 49, 51, 32, 45, 51, 52, 81, 49, 51, 32, 53, 55, 32, 53, 48, 32, 49, 51, 49, 81, 54, 53, 32, 49, 54, 57, 32, 57, 48, 32, 49, 57, 56, 81, 49, 48, 49, 32, 50, 49, 52, 32, 49, 49, 52, 32, 50, 50, 55, 84, 49, 52, 52, 32, 50, 53, 53, 81, 49, 55, 49, 32, 50, 55, 57, 32, 50, 48, 50, 32, 50, 57, 55, 84, 50, 55, 49, 32, 51, 51, 50, 81, 49, 52, 53, 32, 52, 48, 56, 32, 49, 51, 53, 32, 53, 48, 55, 81, 49, 51, 53, 32, 53, 54, 55, 32, 49, 52, 52, 32, 54, 48, 53, 81, 49, 53, 50, 32, 54, 51, 49, 32, 49, 53, 54, 32, 54, 52, 48, 84, 49, 54, 57, 32, 54, 54, 48, 76, 49, 56, 57, 32, 54, 56, 51, 76, 50, 49, 57, 32, 55, 49, 51, 81, 50, 57, 51, 32, 55, 53, 56, 32, 51, 56, 48, 32, 55, 53, 56, 81, 52, 54, 57, 32, 55, 53, 56, 32, 53, 49, 54, 32, 54, 57, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'clef_G_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 99, 108, 101, 102, 95, 71, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 51, 52, 49, 32, 55, 52, 51, 81, 51, 54, 49, 32, 55, 53, 52, 32, 51, 56, 52, 32, 55, 53, 53, 84, 52, 50, 55, 32, 55, 52, 57, 84, 52, 54, 48, 32, 55, 50, 53, 84, 52, 55, 55, 32, 54, 56, 56, 81, 52, 56, 49, 32, 54, 54, 52, 32, 52, 54, 52, 32, 54, 50, 56, 84, 52, 50, 51, 32, 53, 55, 52, 81, 52, 49, 48, 32, 53, 54, 52, 32, 52, 48, 53, 32, 53, 53, 54, 84, 51, 57, 57, 32, 53, 51, 54, 81, 51, 57, 57, 32, 53, 50, 56, 32, 52, 48, 50, 32, 53, 50, 50, 84, 52, 48, 57, 32, 53, 49, 52, 84, 52, 50, 52, 32, 53, 48, 48, 84, 52, 52, 54, 32, 52, 55, 51, 81, 52, 54, 54, 32, 52, 52, 56, 32, 52, 55, 48, 32, 52, 51, 53, 84, 52, 55, 56, 32, 51, 56, 55, 81, 52, 56, 49, 32, 51, 52, 49, 32, 52, 55, 54, 32, 51, 50, 50, 84, 52, 52, 56, 32, 50, 55, 56, 81, 52, 51, 53, 32, 50, 54, 51, 32, 52, 51, 49, 32, 50, 53, 51, 84, 52, 50, 55, 32, 50, 51, 51, 81, 52, 50, 57, 32, 50, 49, 52, 32, 52, 52, 56, 32, 50, 48, 54, 84, 53, 49, 52, 32, 49, 57, 56, 81, 53, 52, 55, 32, 49, 57, 56, 32, 53, 54, 48, 32, 50, 48, 49, 81, 53, 55, 51, 32, 50, 48, 51, 32, 53, 56, 55, 32, 50, 49, 50, 76, 54, 48, 55, 32, 50, 50, 54, 76, 53, 57, 53, 32, 50, 48, 57, 81, 53, 56, 51, 32, 49, 57, 50, 32, 53, 56, 55, 32, 49, 55, 53, 76, 53, 57, 48, 32, 49, 53, 56, 72, 52, 53, 52, 81, 52, 48, 53, 32, 49, 53, 56, 32, 51, 55, 57, 32, 49, 53, 55, 84, 51, 51, 48, 32, 49, 53, 53, 84, 50, 57, 52, 32, 49, 52, 56, 84, 50, 55, 49, 32, 49, 51, 54, 84, 50, 52, 56, 32, 49, 49, 54, 81, 50, 49, 54, 32, 56, 54, 32, 50, 48, 54, 32, 51, 57, 84, 50, 48, 57, 32, 45, 53, 54, 81, 50, 49, 54, 32, 45, 56, 50, 32, 50, 51, 53, 32, 45, 49, 48, 52, 84, 50, 55, 57, 32, 45, 49, 52, 48, 84, 51, 51, 52, 32, 45, 49, 54, 51, 84, 51, 57, 53, 32, 45, 49, 54, 57, 84, 52, 53, 52, 32, 45, 49, 53, 53, 81, 52, 56, 53, 32, 45, 49, 52, 50, 32, 52, 57, 56, 32, 45, 49, 50, 51, 84, 53, 49, 54, 32, 45, 54, 53, 81, 53, 49, 57, 32, 45, 51, 56, 32, 53, 49, 55, 32, 45, 50, 53, 84, 53, 48, 54, 32, 56, 81, 52, 57, 52, 32, 51, 50, 32, 52, 55, 55, 32, 52, 54, 84, 52, 52, 56, 32, 53, 54, 81, 52, 52, 50, 32, 53, 51, 32, 52, 52, 49, 32, 52, 54, 84, 52, 52, 49, 32, 50, 51, 81, 52, 52, 53, 32, 45, 51, 32, 52, 51, 52, 32, 45, 51, 49, 84, 52, 48, 52, 32, 45, 55, 50, 84, 51, 54, 52, 32, 45, 56, 53, 81, 51, 52, 54, 32, 45, 56, 53, 32, 51, 49, 56, 32, 45, 55, 48, 84, 50, 55, 57, 32, 45, 51, 52, 81, 50, 54, 49, 32, 50, 32, 50, 55, 55, 32, 51, 55, 84, 51, 51, 54, 32, 57, 50, 81, 51, 54, 48, 32, 49, 48, 52, 32, 51, 56, 52, 32, 49, 48, 52, 84, 52, 53, 50, 32, 57, 52, 81, 52, 57, 50, 32, 56, 53, 32, 53, 49, 51, 32, 54, 55, 84, 53, 52, 57, 32, 56, 81, 53, 53, 55, 32, 45, 49, 50, 32, 53, 53, 56, 32, 45, 50, 52, 84, 53, 53, 52, 32, 45, 54, 51, 84, 53, 52, 51, 32, 45, 49, 48, 49, 84, 53, 50, 49, 32, 45, 49, 50, 54, 81, 52, 57, 54, 32, 45, 49, 52, 56, 32, 52, 54, 49, 32, 45, 49, 54, 53, 81, 52, 51, 55, 32, 45, 49, 55, 55, 32, 52, 50, 50, 32, 45, 49, 55, 57, 84, 51, 54, 56, 32, 45, 49, 56, 48, 81, 50, 57, 49, 32, 45, 49, 55, 54, 32, 50, 52, 50, 32, 45, 49, 52, 57, 84, 49, 54, 52, 32, 45, 54, 53, 81, 49, 52, 55, 32, 45, 51, 49, 32, 49, 52, 54, 32, 45, 50, 84, 49, 54, 48, 32, 54, 55, 81, 49, 56, 48, 32, 49, 50, 48, 32, 50, 48, 56, 32, 49, 52, 55, 84, 50, 57, 48, 32, 49, 57, 49, 81, 51, 49, 53, 32, 49, 57, 57, 32, 51, 52, 51, 32, 50, 49, 53, 84, 51, 56, 51, 32, 50, 52, 54, 81, 51, 57, 56, 32, 50, 54, 50, 32, 52, 49, 57, 32, 50, 57, 56, 81, 52, 51, 52, 32, 51, 50, 51, 32, 52, 51, 55, 32, 51, 51, 53, 84, 52, 51, 56, 32, 51, 56, 49, 81, 52, 51, 53, 32, 52, 50, 55, 32, 52, 49, 57, 32, 52, 53, 49, 81, 52, 48, 53, 32, 52, 55, 50, 32, 51, 56, 50, 32, 52, 56, 56, 84, 51, 52, 49, 32, 53, 48, 52, 84, 50, 57, 57, 32, 52, 55, 54, 84, 50, 54, 54, 32, 52, 49, 57, 81, 50, 54, 48, 32, 51, 57, 55, 32, 50, 54, 50, 32, 51, 56, 48, 81, 50, 54, 52, 32, 51, 53, 55, 32, 50, 55, 55, 32, 51, 50, 52, 81, 50, 55, 56, 32, 51, 50, 48, 32, 50, 55, 53, 32, 51, 49, 50, 84, 50, 54, 55, 32, 50, 57, 55, 81, 50, 53, 52, 32, 50, 56, 50, 32, 50, 52, 51, 32, 50, 56, 55, 84, 50, 49, 53, 32, 51, 50, 50, 81, 49, 57, 48, 32, 51, 54, 53, 32, 50, 48, 55, 32, 52, 48, 57, 81, 50, 49, 51, 32, 52, 50, 52, 32, 50, 52, 51, 32, 52, 53, 51, 84, 50, 57, 53, 32, 52, 57, 52, 81, 51, 48, 53, 32, 53, 48, 48, 32, 51, 48, 57, 32, 53, 48, 55, 84, 51, 49, 51, 32, 53, 50, 55, 81, 51, 49, 51, 32, 53, 52, 57, 32, 51, 48, 55, 32, 53, 53, 51, 81, 50, 57, 56, 32, 53, 53, 56, 32, 50, 56, 54, 32, 53, 57, 48, 84, 50, 55, 51, 32, 54, 52, 48, 81, 50, 55, 51, 32, 54, 55, 52, 32, 50, 56, 57, 32, 54, 57, 57, 84, 51, 52, 49, 32, 55, 52, 51, 90, 77, 52, 51, 53, 32, 55, 49, 49, 81, 52, 50, 50, 32, 55, 50, 52, 32, 51, 57, 54, 32, 55, 50, 54, 84, 51, 52, 56, 32, 55, 50, 49, 81, 51, 51, 49, 32, 55, 49, 51, 32, 51, 50, 48, 32, 54, 57, 55, 84, 51, 48, 56, 32, 54, 54, 51, 84, 51, 49, 48, 32, 54, 50, 55, 84, 51, 50, 54, 32, 53, 57, 54, 84, 51, 53, 55, 32, 53, 56, 48, 81, 51, 56, 51, 32, 53, 55, 53, 32, 52, 48, 48, 32, 53, 56, 50, 84, 52, 51, 51, 32, 54, 49, 50, 81, 52, 52, 54, 32, 54, 51, 48, 32, 52, 52, 57, 32, 54, 52, 48, 84, 52, 53, 48, 32, 54, 54, 57, 81, 52, 52, 57, 32, 54, 56, 50, 32, 52, 52, 53, 32, 54, 57, 52, 84, 52, 51, 53, 32, 55, 49, 49, 90, 77, 51, 57, 49, 32, 53, 53, 81, 51, 56, 48, 32, 54, 51, 32, 51, 53, 54, 32, 54, 52, 84, 51, 50, 50, 32, 54, 48, 81, 51, 49, 50, 32, 53, 51, 32, 51, 48, 54, 32, 51, 54, 84, 51, 48, 48, 32, 45, 50, 81, 51, 48, 48, 32, 45, 49, 57, 32, 51, 48, 52, 32, 45, 50, 56, 81, 51, 48, 53, 32, 45, 51, 50, 32, 51, 50, 48, 32, 45, 52, 57, 81, 51, 51, 51, 32, 45, 54, 52, 32, 51, 53, 54, 32, 45, 54, 56, 81, 51, 55, 53, 32, 45, 55, 49, 32, 51, 57, 48, 32, 45, 54, 49, 84, 52, 49, 48, 32, 45, 51, 49, 81, 52, 49, 53, 32, 45, 49, 48, 32, 52, 48, 57, 32, 49, 56, 84, 51, 57, 49, 32, 53, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'fermata_down.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 101, 114, 109, 97, 116, 97, 95, 100, 111, 119, 110, 34, 32, 100, 61, 34, 77, 54, 52, 32, 45, 49, 81, 54, 52, 32, 45, 50, 51, 32, 52, 54, 32, 45, 52, 49, 81, 50, 54, 32, 45, 53, 56, 32, 45, 49, 32, 45, 53, 56, 81, 45, 50, 52, 32, 45, 53, 56, 32, 45, 52, 51, 32, 45, 52, 48, 84, 45, 54, 50, 32, 45, 49, 81, 45, 54, 50, 32, 50, 50, 32, 45, 52, 52, 32, 51, 57, 84, 45, 49, 32, 53, 55, 81, 50, 55, 32, 53, 55, 32, 52, 53, 32, 52, 48, 84, 54, 52, 32, 45, 49, 90, 77, 51, 55, 55, 32, 53, 55, 81, 51, 55, 50, 32, 49, 50, 32, 51, 54, 52, 32, 45, 50, 48, 81, 51, 53, 55, 32, 45, 53, 54, 32, 51, 52, 49, 32, 45, 57, 52, 81, 51, 49, 51, 32, 45, 49, 54, 52, 32, 50, 54, 52, 32, 45, 50, 50, 51, 84, 49, 52, 56, 32, 45, 51, 49, 52, 81, 49, 49, 53, 32, 45, 51, 51, 48, 32, 55, 56, 32, 45, 51, 51, 57, 84, 49, 32, 45, 51, 52, 56, 81, 45, 55, 56, 32, 45, 51, 52, 56, 32, 45, 49, 52, 52, 32, 45, 51, 49, 54, 84, 45, 50, 54, 50, 32, 45, 50, 50, 54, 81, 45, 50, 56, 54, 32, 45, 49, 57, 56, 32, 45, 51, 48, 53, 32, 45, 49, 54, 55, 84, 45, 51, 52, 49, 32, 45, 57, 53, 81, 45, 51, 53, 51, 32, 45, 54, 49, 32, 45, 51, 54, 50, 32, 45, 50, 50, 84, 45, 51, 55, 54, 32, 53, 55, 72, 45, 51, 51, 56, 81, 45, 51, 51, 56, 32, 51, 53, 32, 45, 51, 51, 55, 32, 50, 54, 84, 45, 51, 51, 48, 32, 45, 50, 84, 45, 51, 49, 55, 32, 45, 51, 53, 81, 45, 51, 49, 52, 32, 45, 52, 50, 32, 45, 51, 48, 53, 32, 45, 53, 56, 81, 45, 50, 55, 54, 32, 45, 49, 49, 48, 32, 45, 50, 50, 54, 32, 45, 49, 52, 57, 84, 45, 49, 49, 55, 32, 45, 50, 49, 48, 84, 49, 32, 45, 50, 51, 49, 81, 56, 49, 32, 45, 50, 51, 49, 32, 49, 53, 54, 32, 45, 49, 57, 53, 84, 50, 56, 51, 32, 45, 56, 57, 81, 51, 48, 57, 32, 45, 53, 52, 32, 51, 50, 50, 32, 45, 49, 56, 84, 51, 51, 54, 32, 53, 55, 72, 51, 55, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'fermata_up.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 101, 114, 109, 97, 116, 97, 95, 117, 112, 34, 32, 100, 61, 34, 77, 45, 51, 55, 54, 32, 45, 53, 55, 72, 45, 51, 51, 56, 81, 45, 51, 51, 56, 32, 45, 51, 53, 32, 45, 51, 51, 55, 32, 45, 50, 54, 84, 45, 51, 50, 57, 32, 52, 84, 45, 51, 49, 56, 32, 51, 51, 84, 45, 51, 48, 53, 32, 53, 56, 81, 45, 50, 55, 55, 32, 49, 48, 57, 32, 45, 50, 50, 57, 32, 49, 52, 55, 84, 45, 49, 49, 55, 32, 50, 48, 57, 84, 49, 32, 50, 51, 50, 81, 55, 56, 32, 50, 51, 50, 32, 49, 53, 52, 32, 49, 57, 53, 84, 50, 56, 51, 32, 57, 48, 81, 50, 57, 53, 32, 55, 51, 32, 51, 48, 53, 32, 53, 53, 84, 51, 50, 50, 32, 49, 56, 81, 51, 51, 54, 32, 45, 49, 57, 32, 51, 51, 54, 32, 45, 53, 55, 72, 51, 55, 55, 81, 51, 55, 50, 32, 45, 49, 50, 32, 51, 54, 52, 32, 50, 48, 81, 51, 53, 55, 32, 53, 54, 32, 51, 52, 49, 32, 57, 52, 81, 51, 49, 51, 32, 49, 54, 52, 32, 50, 54, 52, 32, 50, 50, 51, 84, 49, 52, 56, 32, 51, 49, 52, 81, 49, 49, 53, 32, 51, 51, 48, 32, 55, 56, 32, 51, 51, 57, 84, 49, 32, 51, 52, 56, 81, 45, 55, 56, 32, 51, 52, 56, 32, 45, 49, 52, 53, 32, 51, 49, 54, 84, 45, 50, 54, 50, 32, 50, 50, 53, 81, 45, 50, 56, 54, 32, 49, 57, 56, 32, 45, 51, 48, 53, 32, 49, 54, 55, 84, 45, 51, 52, 49, 32, 57, 53, 81, 45, 51, 53, 51, 32, 54, 49, 32, 45, 51, 54, 50, 32, 50, 50, 84, 45, 51, 55, 54, 32, 45, 53, 55, 90, 77, 45, 54, 50, 32, 49, 81, 45, 54, 50, 32, 45, 50, 50, 32, 45, 52, 52, 32, 45, 51, 57, 84, 45, 49, 32, 45, 53, 55, 81, 50, 55, 32, 45, 53, 55, 32, 52, 53, 32, 45, 52, 48, 84, 54, 52, 32, 49, 81, 54, 52, 32, 50, 51, 32, 52, 55, 32, 52, 48, 84, 45, 49, 32, 53, 55, 81, 45, 50, 55, 32, 53, 55, 32, 45, 52, 52, 32, 52, 48, 84, 45, 54, 50, 32, 49, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_0.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 48, 34, 32, 100, 61, 34, 77, 48, 32, 50, 53, 57, 81, 48, 32, 51, 51, 54, 32, 50, 56, 32, 51, 57, 52, 84, 49, 48, 54, 32, 52, 56, 52, 84, 50, 49, 53, 32, 53, 49, 54, 81, 50, 55, 50, 32, 53, 49, 54, 32, 51, 50, 48, 32, 52, 56, 50, 84, 51, 57, 56, 32, 51, 56, 55, 84, 52, 50, 55, 32, 50, 53, 57, 81, 52, 50, 55, 32, 49, 57, 50, 32, 51, 57, 55, 32, 49, 51, 50, 84, 51, 49, 56, 32, 51, 54, 84, 50, 49, 55, 32, 48, 81, 49, 54, 55, 32, 48, 32, 49, 49, 52, 32, 51, 50, 81, 57, 49, 32, 52, 54, 32, 55, 48, 32, 54, 57, 84, 51, 50, 32, 49, 50, 51, 81, 48, 32, 49, 56, 52, 32, 48, 32, 50, 53, 57, 90, 77, 50, 49, 51, 32, 51, 55, 81, 50, 53, 53, 32, 51, 55, 32, 50, 55, 55, 32, 57, 51, 84, 51, 48, 48, 32, 50, 53, 57, 81, 51, 48, 48, 32, 51, 52, 56, 32, 50, 55, 56, 32, 52, 49, 52, 84, 50, 49, 51, 32, 52, 56, 49, 81, 49, 55, 49, 32, 52, 56, 49, 32, 49, 52, 55, 32, 52, 49, 53, 84, 49, 50, 51, 32, 50, 53, 57, 81, 49, 50, 51, 32, 50, 49, 51, 32, 49, 50, 56, 32, 49, 55, 50, 84, 49, 52, 53, 32, 49, 48, 48, 81, 49, 54, 54, 32, 51, 55, 32, 50, 49, 51, 32, 51, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_1.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 49, 34, 32, 100, 61, 34, 77, 52, 56, 32, 48, 86, 51, 54, 81, 56, 51, 32, 51, 54, 32, 57, 55, 32, 53, 52, 81, 49, 48, 57, 32, 55, 53, 32, 49, 48, 57, 32, 49, 49, 49, 86, 51, 54, 49, 76, 50, 55, 32, 50, 51, 50, 76, 48, 32, 50, 52, 53, 76, 49, 48, 55, 32, 52, 57, 54, 72, 50, 51, 53, 86, 49, 48, 54, 81, 50, 51, 53, 32, 55, 48, 32, 50, 52, 57, 32, 53, 51, 84, 50, 57, 54, 32, 51, 54, 86, 48, 72, 52, 56, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_2.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 50, 34, 32, 100, 61, 34, 77, 51, 32, 48, 76, 48, 32, 50, 57, 81, 48, 32, 54, 54, 32, 49, 56, 32, 57, 51, 81, 50, 54, 32, 49, 48, 55, 32, 51, 53, 32, 49, 49, 54, 84, 53, 55, 32, 49, 51, 54, 76, 56, 55, 32, 49, 53, 54, 76, 49, 51, 49, 32, 49, 56, 55, 76, 49, 55, 56, 32, 50, 49, 56, 76, 50, 49, 53, 32, 50, 52, 55, 81, 50, 51, 55, 32, 50, 54, 52, 32, 50, 53, 51, 32, 51, 48, 49, 81, 50, 55, 49, 32, 51, 51, 55, 32, 50, 55, 49, 32, 51, 55, 49, 81, 50, 55, 49, 32, 52, 49, 48, 32, 50, 52, 56, 32, 52, 51, 52, 84, 49, 55, 55, 32, 52, 53, 57, 81, 49, 53, 56, 32, 52, 53, 57, 32, 49, 53, 48, 32, 52, 53, 56, 84, 49, 50, 55, 32, 52, 53, 49, 81, 49, 48, 54, 32, 52, 52, 52, 32, 49, 48, 49, 32, 52, 50, 57, 81, 49, 48, 54, 32, 52, 49, 54, 32, 49, 49, 49, 32, 52, 49, 49, 76, 49, 51, 53, 32, 51, 57, 52, 81, 49, 52, 52, 32, 51, 56, 57, 32, 49, 52, 57, 32, 51, 56, 53, 84, 49, 54, 50, 32, 51, 55, 51, 81, 49, 54, 57, 32, 51, 54, 50, 32, 49, 54, 57, 32, 51, 52, 54, 81, 49, 54, 57, 32, 51, 49, 52, 32, 49, 52, 54, 32, 50, 57, 55, 84, 57, 48, 32, 50, 55, 50, 81, 54, 50, 32, 50, 55, 50, 32, 51, 56, 32, 50, 57, 55, 84, 49, 52, 32, 51, 54, 54, 81, 49, 52, 32, 52, 48, 50, 32, 52, 51, 32, 52, 51, 50, 84, 49, 50, 48, 32, 52, 56, 50, 81, 49, 54, 53, 32, 52, 57, 56, 32, 50, 49, 53, 32, 52, 57, 56, 81, 50, 56, 57, 32, 52, 57, 56, 32, 51, 52, 48, 32, 52, 54, 50, 84, 51, 57, 50, 32, 51, 53, 49, 81, 51, 57, 50, 32, 51, 48, 53, 32, 51, 54, 49, 32, 50, 55, 52, 84, 50, 55, 57, 32, 50, 49, 56, 76, 49, 56, 56, 32, 49, 55, 55, 81, 49, 52, 57, 32, 49, 54, 49, 32, 49, 51, 49, 32, 49, 52, 48, 76, 49, 56, 48, 32, 49, 52, 55, 81, 50, 49, 51, 32, 49, 52, 55, 32, 50, 51, 52, 32, 49, 52, 49, 84, 50, 56, 56, 32, 49, 49, 57, 81, 51, 49, 55, 32, 49, 48, 54, 32, 51, 50, 56, 32, 49, 48, 54, 81, 51, 53, 56, 32, 49, 48, 54, 32, 51, 54, 55, 32, 49, 54, 55, 72, 52, 48, 50, 81, 52, 48, 50, 32, 55, 51, 32, 51, 54, 57, 32, 50, 57, 84, 50, 56, 54, 32, 45, 49, 53, 81, 50, 54, 49, 32, 45, 49, 53, 32, 50, 52, 48, 32, 45, 53, 76, 50, 49, 57, 32, 54, 76, 49, 57, 49, 32, 50, 51, 81, 49, 54, 51, 32, 52, 52, 32, 49, 52, 53, 32, 53, 51, 84, 49, 48, 52, 32, 54, 53, 81, 57, 53, 32, 54, 53, 32, 56, 50, 32, 54, 48, 81, 55, 56, 32, 53, 56, 32, 55, 51, 32, 53, 53, 84, 54, 50, 32, 52, 54, 81, 52, 53, 32, 51, 48, 32, 51, 57, 32, 48, 72, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_3.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 51, 34, 32, 100, 61, 34, 77, 50, 53, 53, 32, 50, 54, 54, 81, 50, 57, 48, 32, 50, 54, 51, 32, 51, 50, 49, 32, 50, 52, 53, 81, 51, 53, 50, 32, 50, 50, 57, 32, 51, 54, 55, 32, 50, 48, 51, 81, 51, 56, 51, 32, 49, 56, 48, 32, 51, 56, 51, 32, 49, 52, 55, 81, 51, 56, 51, 32, 57, 57, 32, 51, 53, 49, 32, 54, 54, 81, 51, 50, 50, 32, 51, 51, 32, 50, 55, 49, 32, 49, 54, 76, 50, 50, 48, 32, 52, 81, 49, 57, 55, 32, 48, 32, 49, 54, 55, 32, 48, 81, 49, 50, 56, 32, 48, 32, 57, 56, 32, 57, 84, 52, 54, 32, 51, 54, 81, 51, 52, 32, 52, 52, 32, 50, 55, 32, 53, 49, 84, 49, 49, 32, 55, 49, 81, 48, 32, 57, 49, 32, 48, 32, 49, 49, 49, 81, 48, 32, 49, 52, 53, 32, 50, 48, 32, 49, 55, 48, 84, 55, 48, 32, 49, 57, 54, 76, 55, 51, 32, 49, 57, 52, 81, 49, 49, 50, 32, 49, 57, 52, 32, 49, 51, 49, 32, 49, 55, 51, 84, 49, 53, 48, 32, 49, 50, 50, 81, 49, 53, 48, 32, 49, 49, 48, 32, 49, 51, 56, 32, 57, 49, 84, 49, 50, 52, 32, 54, 51, 81, 49, 51, 53, 32, 51, 55, 32, 49, 54, 50, 32, 51, 55, 81, 49, 57, 54, 32, 51, 55, 32, 50, 50, 53, 32, 53, 55, 81, 50, 52, 48, 32, 54, 55, 32, 50, 52, 57, 32, 56, 50, 84, 50, 53, 57, 32, 49, 49, 56, 81, 50, 53, 57, 32, 49, 56, 54, 32, 50, 50, 51, 32, 50, 49, 54, 84, 49, 49, 54, 32, 50, 52, 55, 86, 50, 56, 52, 81, 49, 56, 56, 32, 50, 56, 52, 32, 50, 50, 48, 32, 51, 48, 55, 81, 50, 53, 50, 32, 51, 51, 51, 32, 50, 53, 50, 32, 51, 56, 53, 81, 50, 53, 50, 32, 52, 50, 55, 32, 50, 50, 54, 32, 52, 53, 49, 81, 50, 48, 50, 32, 52, 55, 54, 32, 49, 54, 50, 32, 52, 55, 54, 81, 49, 50, 50, 32, 52, 55, 54, 32, 49, 48, 57, 32, 52, 53, 51, 81, 49, 49, 49, 32, 52, 53, 48, 32, 49, 49, 51, 32, 52, 52, 55, 84, 49, 50, 50, 32, 52, 52, 48, 84, 49, 51, 53, 32, 52, 51, 50, 84, 49, 52, 54, 32, 52, 50, 48, 81, 49, 53, 53, 32, 52, 48, 54, 32, 49, 53, 53, 32, 51, 56, 49, 81, 49, 53, 53, 32, 51, 55, 54, 32, 49, 53, 53, 32, 51, 55, 48, 84, 49, 52, 57, 32, 51, 53, 53, 84, 49, 51, 50, 32, 51, 51, 54, 84, 49, 48, 56, 32, 51, 50, 50, 84, 56, 49, 32, 51, 49, 55, 81, 54, 56, 32, 51, 49, 55, 32, 53, 53, 32, 51, 50, 50, 84, 51, 48, 32, 51, 51, 57, 81, 49, 48, 32, 51, 53, 57, 32, 49, 48, 32, 51, 57, 53, 81, 49, 48, 32, 52, 53, 48, 32, 54, 53, 32, 52, 56, 49, 81, 57, 50, 32, 52, 57, 55, 32, 49, 50, 53, 32, 53, 48, 54, 84, 49, 57, 52, 32, 53, 49, 53, 81, 50, 54, 53, 32, 53, 49, 53, 32, 51, 49, 56, 32, 52, 56, 50, 81, 51, 52, 55, 32, 52, 54, 52, 32, 51, 54, 49, 32, 52, 52, 51, 84, 51, 55, 54, 32, 51, 57, 53, 81, 51, 55, 54, 32, 50, 56, 56, 32, 50, 53, 53, 32, 50, 54, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_4.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 52, 34, 32, 100, 61, 34, 77, 49, 52, 51, 32, 48, 86, 51, 54, 81, 49, 55, 51, 32, 51, 54, 32, 49, 56, 56, 32, 53, 49, 84, 50, 48, 51, 32, 49, 48, 54, 86, 49, 51, 51, 72, 48, 86, 49, 55, 50, 81, 54, 48, 32, 50, 52, 49, 32, 56, 57, 32, 51, 48, 56, 84, 49, 51, 52, 32, 52, 57, 52, 72, 51, 48, 55, 81, 51, 48, 51, 32, 52, 56, 52, 32, 50, 57, 54, 32, 52, 55, 50, 84, 50, 55, 50, 32, 52, 51, 56, 81, 50, 53, 52, 32, 52, 49, 49, 32, 50, 51, 51, 32, 51, 56, 53, 81, 50, 49, 55, 32, 51, 54, 52, 32, 50, 48, 53, 32, 51, 53, 48, 76, 49, 50, 49, 32, 50, 53, 51, 81, 55, 50, 32, 49, 57, 57, 32, 52, 49, 32, 49, 55, 50, 72, 50, 48, 51, 86, 50, 55, 52, 76, 51, 51, 48, 32, 51, 57, 55, 86, 49, 55, 50, 72, 51, 56, 55, 86, 49, 51, 51, 72, 51, 51, 48, 86, 57, 57, 81, 51, 51, 48, 32, 51, 52, 32, 51, 56, 55, 32, 51, 52, 86, 48, 72, 49, 52, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_5.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 53, 34, 32, 100, 61, 34, 77, 49, 55, 32, 50, 51, 55, 76, 50, 50, 32, 52, 57, 52, 81, 49, 48, 53, 32, 52, 55, 55, 32, 49, 56, 48, 32, 52, 55, 55, 81, 50, 52, 48, 32, 52, 55, 55, 32, 51, 49, 51, 32, 52, 57, 52, 81, 51, 48, 52, 32, 52, 51, 53, 32, 50, 54, 51, 32, 52, 49, 48, 84, 49, 53, 53, 32, 51, 56, 53, 76, 49, 48, 53, 32, 51, 56, 55, 81, 57, 52, 32, 51, 56, 56, 32, 56, 51, 32, 51, 57, 48, 84, 53, 54, 32, 51, 57, 55, 76, 53, 49, 32, 50, 56, 54, 81, 49, 48, 56, 32, 51, 50, 53, 32, 49, 56, 48, 32, 51, 50, 53, 81, 50, 50, 54, 32, 51, 50, 53, 32, 50, 54, 55, 32, 51, 48, 53, 84, 51, 51, 51, 32, 50, 52, 56, 84, 51, 53, 55, 32, 49, 54, 54, 81, 51, 53, 55, 32, 49, 49, 54, 32, 51, 50, 55, 32, 55, 56, 84, 50, 52, 56, 32, 50, 48, 84, 49, 52, 54, 32, 48, 81, 49, 49, 48, 32, 48, 32, 55, 56, 32, 49, 50, 84, 50, 51, 32, 53, 50, 84, 48, 32, 49, 49, 53, 81, 48, 32, 49, 53, 50, 32, 50, 51, 32, 49, 55, 53, 81, 51, 52, 32, 49, 56, 54, 32, 52, 54, 32, 49, 57, 50, 84, 55, 53, 32, 49, 57, 56, 81, 56, 57, 32, 49, 57, 56, 32, 49, 48, 49, 32, 49, 57, 50, 81, 49, 49, 52, 32, 49, 56, 56, 32, 49, 50, 52, 32, 49, 55, 54, 81, 49, 52, 52, 32, 49, 53, 52, 32, 49, 52, 52, 32, 49, 50, 54, 81, 49, 52, 52, 32, 49, 50, 48, 32, 49, 52, 48, 32, 49, 48, 56, 76, 49, 50, 54, 32, 56, 56, 76, 49, 49, 51, 32, 55, 49, 81, 49, 49, 48, 32, 54, 54, 32, 49, 49, 48, 32, 53, 55, 81, 49, 49, 48, 32, 51, 52, 32, 49, 52, 54, 32, 51, 52, 81, 49, 57, 51, 32, 51, 52, 32, 50, 49, 53, 32, 55, 50, 84, 50, 51, 56, 32, 49, 54, 54, 81, 50, 51, 56, 32, 49, 57, 51, 32, 50, 50, 55, 32, 50, 50, 49, 84, 49, 57, 52, 32, 50, 54, 56, 84, 49, 52, 49, 32, 50, 56, 56, 81, 49, 50, 48, 32, 50, 56, 56, 32, 57, 53, 32, 50, 55, 54, 84, 52, 57, 32, 50, 51, 55, 72, 49, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_6.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 54, 34, 32, 100, 61, 34, 77, 50, 48, 51, 32, 50, 53, 57, 81, 49, 55, 53, 32, 50, 53, 57, 32, 49, 53, 54, 32, 50, 50, 51, 81, 49, 52, 56, 32, 50, 48, 57, 32, 49, 52, 49, 32, 49, 56, 55, 81, 49, 51, 55, 32, 49, 54, 57, 32, 49, 51, 55, 32, 49, 54, 48, 84, 49, 51, 54, 32, 49, 52, 53, 81, 49, 51, 54, 32, 49, 48, 49, 32, 49, 53, 52, 32, 54, 57, 84, 50, 48, 54, 32, 51, 55, 81, 50, 51, 55, 32, 51, 55, 32, 50, 53, 52, 32, 55, 51, 84, 50, 55, 50, 32, 49, 54, 52, 81, 50, 55, 50, 32, 49, 56, 52, 32, 50, 54, 53, 32, 49, 57, 57, 81, 50, 54, 49, 32, 50, 49, 53, 32, 50, 52, 57, 32, 50, 51, 49, 81, 50, 50, 57, 32, 50, 53, 57, 32, 50, 48, 51, 32, 50, 53, 57, 90, 77, 49, 50, 54, 32, 50, 53, 50, 81, 49, 56, 56, 32, 50, 56, 57, 32, 50, 52, 57, 32, 50, 56, 57, 81, 50, 56, 57, 32, 50, 56, 57, 32, 51, 50, 51, 32, 50, 55, 52, 84, 51, 55, 53, 32, 50, 50, 56, 81, 51, 57, 52, 32, 50, 48, 48, 32, 51, 57, 52, 32, 49, 54, 52, 81, 51, 57, 52, 32, 49, 49, 54, 32, 51, 54, 56, 32, 56, 49, 84, 50, 57, 54, 32, 50, 49, 81, 50, 53, 49, 32, 48, 32, 50, 48, 54, 32, 48, 81, 49, 52, 49, 32, 48, 32, 57, 52, 32, 51, 54, 81, 55, 50, 32, 53, 52, 32, 53, 53, 32, 55, 55, 84, 50, 53, 32, 49, 51, 50, 84, 57, 32, 49, 56, 52, 84, 50, 32, 50, 50, 49, 84, 48, 32, 50, 53, 50, 81, 48, 32, 50, 54, 56, 32, 49, 32, 50, 56, 53, 84, 55, 32, 51, 50, 53, 81, 49, 50, 32, 51, 52, 51, 32, 49, 55, 32, 51, 54, 49, 84, 51, 49, 32, 51, 57, 54, 81, 53, 57, 32, 52, 54, 50, 32, 49, 49, 54, 32, 52, 56, 55, 81, 49, 56, 48, 32, 53, 49, 54, 32, 50, 50, 53, 32, 53, 49, 54, 81, 50, 54, 56, 32, 53, 49, 54, 32, 51, 48, 50, 32, 52, 57, 57, 84, 51, 53, 51, 32, 52, 53, 54, 81, 51, 55, 49, 32, 52, 51, 50, 32, 51, 55, 49, 32, 52, 48, 55, 81, 51, 55, 49, 32, 51, 55, 51, 32, 51, 52, 57, 32, 51, 53, 51, 81, 51, 52, 50, 32, 51, 52, 55, 32, 51, 50, 55, 32, 51, 52, 48, 84, 50, 57, 54, 32, 51, 51, 51, 81, 50, 55, 48, 32, 51, 51, 51, 32, 50, 52, 54, 32, 51, 53, 49, 81, 50, 51, 51, 32, 51, 54, 49, 32, 50, 50, 57, 32, 51, 54, 57, 84, 50, 50, 50, 32, 51, 57, 53, 76, 50, 51, 51, 32, 52, 50, 54, 81, 50, 52, 50, 32, 52, 52, 57, 32, 50, 52, 50, 32, 52, 54, 50, 81, 50, 52, 50, 32, 52, 55, 57, 32, 50, 49, 55, 32, 52, 55, 57, 81, 49, 55, 53, 32, 52, 55, 57, 32, 49, 53, 48, 32, 52, 51, 48, 84, 49, 50, 52, 32, 50, 56, 57, 76, 49, 50, 54, 32, 50, 53, 50, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_7.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 55, 34, 32, 100, 61, 34, 77, 51, 51, 48, 32, 51, 55, 53, 81, 51, 49, 55, 32, 51, 54, 52, 32, 51, 48, 54, 32, 51, 53, 54, 81, 50, 57, 57, 32, 51, 53, 49, 32, 50, 55, 56, 32, 51, 52, 48, 84, 50, 51, 53, 32, 51, 50, 57, 81, 50, 48, 56, 32, 51, 51, 50, 32, 49, 57, 49, 32, 51, 52, 54, 81, 49, 54, 54, 32, 51, 55, 53, 32, 49, 52, 51, 32, 51, 57, 49, 81, 49, 50, 51, 32, 52, 48, 56, 32, 49, 48, 49, 32, 52, 48, 56, 81, 54, 54, 32, 52, 48, 56, 32, 51, 55, 32, 51, 52, 50, 72, 48, 86, 52, 57, 55, 72, 51, 55, 81, 52, 51, 32, 52, 55, 48, 32, 53, 56, 32, 52, 54, 55, 81, 55, 48, 32, 52, 54, 56, 32, 56, 48, 32, 52, 55, 53, 76, 57, 48, 32, 52, 56, 48, 76, 49, 48, 52, 32, 52, 57, 48, 81, 49, 48, 56, 32, 52, 57, 51, 32, 49, 49, 55, 32, 52, 57, 55, 84, 49, 51, 54, 32, 53, 48, 54, 84, 49, 54, 48, 32, 53, 49, 49, 81, 50, 49, 56, 32, 53, 49, 49, 32, 50, 54, 56, 32, 52, 53, 55, 81, 50, 56, 53, 32, 52, 51, 53, 32, 51, 49, 50, 32, 52, 51, 49, 81, 51, 53, 50, 32, 52, 51, 53, 32, 51, 54, 53, 32, 52, 57, 55, 72, 52, 48, 52, 81, 52, 48, 48, 32, 52, 54, 51, 32, 51, 57, 51, 32, 52, 51, 52, 84, 51, 56, 52, 32, 51, 57, 56, 84, 51, 55, 53, 32, 51, 55, 54, 81, 51, 54, 56, 32, 51, 53, 55, 32, 51, 53, 52, 32, 51, 51, 48, 76, 51, 50, 49, 32, 50, 55, 48, 81, 51, 48, 51, 32, 50, 52, 48, 32, 50, 57, 48, 32, 50, 49, 49, 84, 50, 54, 56, 32, 49, 53, 49, 81, 50, 53, 50, 32, 57, 52, 32, 50, 53, 50, 32, 48, 72, 55, 56, 81, 55, 56, 32, 54, 56, 32, 49, 49, 49, 32, 49, 50, 50, 81, 49, 52, 54, 32, 49, 55, 52, 32, 50, 49, 55, 32, 50, 51, 57, 81, 50, 56, 52, 32, 50, 57, 54, 32, 51, 48, 57, 32, 51, 50, 49, 81, 51, 51, 48, 32, 51, 52, 50, 32, 51, 51, 48, 32, 51, 55, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_8.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 56, 34, 32, 100, 61, 34, 77, 49, 51, 54, 32, 50, 51, 51, 81, 49, 48, 52, 32, 50, 48, 54, 32, 57, 48, 32, 49, 56, 55, 84, 55, 50, 32, 49, 51, 56, 81, 56, 49, 32, 57, 50, 32, 49, 49, 49, 32, 54, 53, 84, 49, 57, 49, 32, 51, 55, 81, 50, 50, 52, 32, 51, 55, 32, 50, 53, 50, 32, 53, 52, 81, 50, 55, 53, 32, 55, 49, 32, 50, 56, 52, 32, 49, 48, 55, 81, 50, 56, 52, 32, 49, 50, 56, 32, 50, 54, 55, 32, 49, 52, 56, 84, 50, 50, 53, 32, 49, 56, 51, 76, 49, 55, 49, 32, 50, 49, 51, 81, 49, 51, 57, 32, 50, 50, 57, 32, 49, 51, 54, 32, 50, 51, 51, 90, 77, 50, 52, 55, 32, 51, 48, 55, 81, 51, 48, 48, 32, 51, 52, 57, 32, 51, 48, 48, 32, 51, 57, 55, 81, 51, 48, 48, 32, 52, 51, 55, 32, 50, 54, 53, 32, 52, 53, 54, 84, 49, 56, 52, 32, 52, 55, 54, 81, 49, 53, 48, 32, 52, 55, 54, 32, 49, 50, 55, 32, 52, 54, 50, 84, 49, 48, 52, 32, 52, 50, 51, 81, 49, 48, 54, 32, 52, 48, 57, 32, 49, 49, 51, 32, 51, 57, 54, 84, 49, 51, 49, 32, 51, 55, 49, 81, 49, 53, 55, 32, 51, 52, 56, 32, 49, 56, 48, 32, 51, 51, 54, 76, 50, 49, 50, 32, 51, 50, 50, 76, 50, 52, 55, 32, 51, 48, 55, 90, 77, 57, 50, 32, 50, 53, 54, 81, 53, 56, 32, 50, 55, 50, 32, 51, 52, 32, 51, 48, 55, 81, 50, 49, 32, 51, 50, 54, 32, 49, 54, 32, 51, 52, 51, 84, 49, 48, 32, 51, 55, 57, 81, 49, 48, 32, 52, 48, 57, 32, 50, 53, 32, 52, 51, 53, 81, 52, 51, 32, 52, 54, 50, 32, 55, 48, 32, 52, 56, 48, 81, 49, 50, 52, 32, 53, 49, 53, 32, 49, 57, 52, 32, 53, 49, 53, 81, 50, 48, 53, 32, 53, 49, 53, 32, 50, 49, 50, 32, 53, 49, 53, 84, 50, 51, 49, 32, 53, 49, 50, 81, 50, 51, 57, 32, 53, 49, 50, 32, 50, 52, 53, 32, 53, 49, 49, 84, 50, 55, 50, 32, 53, 48, 51, 81, 51, 49, 51, 32, 52, 57, 49, 32, 51, 52, 50, 32, 52, 54, 53, 84, 51, 55, 49, 32, 52, 48, 48, 81, 51, 55, 49, 32, 51, 52, 51, 32, 51, 48, 48, 32, 50, 56, 49, 81, 51, 51, 53, 32, 50, 54, 49, 32, 51, 54, 48, 32, 50, 50, 55, 84, 51, 56, 54, 32, 49, 53, 56, 81, 51, 56, 54, 32, 49, 49, 48, 32, 51, 53, 50, 32, 55, 51, 84, 50, 54, 56, 32, 49, 56, 84, 49, 55, 49, 32, 48, 81, 49, 50, 55, 32, 48, 32, 56, 56, 32, 49, 54, 81, 53, 48, 32, 50, 57, 32, 50, 52, 32, 54, 49, 81, 48, 32, 57, 51, 32, 48, 32, 49, 51, 54, 81, 48, 32, 50, 48, 57, 32, 57, 50, 32, 50, 53, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'figure_9.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 102, 105, 103, 117, 114, 101, 95, 57, 34, 32, 100, 61, 34, 77, 49, 57, 49, 32, 50, 54, 49, 81, 50, 50, 49, 32, 50, 54, 49, 32, 50, 51, 57, 32, 50, 57, 52, 84, 50, 53, 55, 32, 51, 55, 53, 81, 50, 53, 55, 32, 52, 49, 50, 32, 50, 51, 55, 32, 52, 52, 52, 84, 49, 57, 49, 32, 52, 55, 54, 81, 49, 54, 51, 32, 52, 55, 54, 32, 49, 52, 50, 32, 52, 52, 51, 81, 49, 50, 51, 32, 52, 48, 55, 32, 49, 50, 51, 32, 51, 54, 56, 81, 49, 50, 51, 32, 51, 50, 52, 32, 49, 52, 49, 32, 50, 57, 51, 84, 49, 57, 49, 32, 50, 54, 49, 90, 77, 50, 54, 56, 32, 50, 54, 49, 81, 50, 49, 57, 32, 50, 50, 52, 32, 49, 52, 53, 32, 50, 50, 52, 81, 49, 48, 48, 32, 50, 50, 52, 32, 54, 52, 32, 50, 52, 53, 81, 50, 57, 32, 50, 54, 51, 32, 49, 50, 32, 51, 48, 51, 81, 54, 32, 51, 49, 55, 32, 48, 32, 51, 53, 54, 81, 48, 32, 51, 57, 54, 32, 50, 51, 32, 52, 51, 49, 84, 57, 48, 32, 52, 57, 49, 81, 49, 51, 54, 32, 53, 49, 51, 32, 49, 57, 52, 32, 53, 49, 51, 81, 50, 52, 53, 32, 53, 49, 51, 32, 50, 56, 51, 32, 52, 57, 52, 84, 51, 52, 53, 32, 52, 52, 49, 84, 51, 56, 51, 32, 51, 54, 52, 84, 51, 57, 55, 32, 50, 55, 49, 81, 51, 57, 55, 32, 50, 50, 52, 32, 51, 56, 51, 32, 49, 55, 53, 84, 51, 52, 50, 32, 56, 56, 84, 50, 55, 52, 32, 50, 54, 81, 50, 54, 52, 32, 50, 48, 32, 50, 53, 52, 32, 49, 53, 84, 50, 51, 49, 32, 55, 81, 50, 49, 49, 32, 48, 32, 49, 56, 52, 32, 48, 81, 49, 51, 54, 32, 48, 32, 49, 48, 49, 32, 49, 54, 84, 52, 53, 32, 53, 55, 84, 50, 52, 32, 49, 48, 52, 81, 50, 52, 32, 49, 51, 56, 32, 52, 54, 32, 49, 54, 49, 81, 54, 57, 32, 49, 56, 50, 32, 57, 55, 32, 49, 56, 50, 81, 49, 50, 55, 32, 49, 56, 50, 32, 49, 52, 57, 32, 49, 54, 52, 84, 49, 55, 49, 32, 49, 49, 53, 81, 49, 55, 49, 32, 49, 48, 51, 32, 49, 54, 50, 32, 56, 48, 76, 49, 53, 53, 32, 54, 51, 76, 49, 53, 48, 32, 52, 56, 81, 49, 53, 51, 32, 51, 53, 32, 49, 56, 50, 32, 51, 53, 81, 50, 54, 56, 32, 51, 53, 32, 50, 54, 56, 32, 50, 54, 49, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'font.xml', [60, 100, 101, 102, 115, 62, 10, 32, 32, 60, 115, 116, 121, 108, 101, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 62, 10, 32, 32, 32, 32, 60, 33, 91, 67, 68, 65, 84, 65, 91, 10, 10, 9, 9, 64, 102, 111, 110, 116, 45, 102, 97, 99, 101, 32, 123, 10, 9, 9, 32, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121, 58, 32, 34, 76, 101, 105, 112, 122, 105, 103, 52, 54, 34, 59, 10, 9, 9, 32, 32, 115, 114, 99, 58, 32, 117, 114, 108, 40, 46, 47, 76, 101, 105, 112, 122, 105, 103, 45, 52, 46, 54, 46, 116, 116, 102, 41, 32, 102, 111, 114, 109, 97, 116, 40, 34, 116, 114, 117, 101, 116, 121, 112, 101, 34, 41, 59, 10, 9, 9, 125, 10, 10, 32, 32, 32, 32, 93, 93, 62, 10, 32, 60, 47, 115, 116, 121, 108, 101, 62, 10, 60, 47, 100, 101, 102, 115, 62, 32, 10, 60, 100, 101, 102, 115, 62, 10, 60, 102, 111, 110, 116, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 52, 48, 34, 32, 62, 60, 102, 111, 110, 116, 45, 102, 97, 99, 101, 10, 32, 32, 32, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121, 61, 34, 76, 101, 105, 112, 122, 105, 103, 52, 54, 34, 10, 32, 32, 32, 32, 117, 110, 105, 116, 115, 45, 112, 101, 114, 45, 101, 109, 61, 34, 50, 48, 52, 56, 34, 10, 32, 32, 32, 32, 112, 97, 110, 111, 115, 101, 45, 49, 61, 34, 48, 32, 48, 32, 48, 32, 48, 32, 48, 32, 48, 32, 48, 32, 48, 32, 48, 32, 48, 34, 10, 32, 32, 32, 32, 97, 115, 99, 101, 110, 116, 61, 34, 49, 49, 56, 51, 34, 10, 32, 32, 32, 32, 100, 101, 115, 99, 101, 110, 116, 61, 34, 45, 56, 54, 53, 34, 10, 32, 32, 32, 32, 97, 108, 112, 104, 97, 98, 101, 116, 105, 99, 61, 34, 48, 34, 32, 47, 62, 10, 60, 109, 105, 115, 115, 105, 110, 103, 45, 103, 108, 121, 112, 104, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 48, 50, 52, 34, 32, 100, 61, 34, 77, 54, 52, 32, 48, 86, 49, 49, 56, 51, 72, 57, 54, 48, 86, 48, 72, 54, 52, 90, 77, 56, 57, 54, 32, 54, 52, 86, 49, 49, 49, 57, 72, 49, 50, 56, 86, 54, 52, 72, 56, 57, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 32, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 112, 97, 99, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 48, 48, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 33, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 120, 99, 108, 97, 109, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 49, 48, 34, 32, 100, 61, 34, 77, 51, 56, 56, 32, 53, 48, 55, 76, 50, 52, 50, 32, 50, 56, 54, 81, 51, 48, 52, 32, 50, 53, 52, 32, 51, 51, 56, 32, 50, 49, 57, 81, 51, 56, 48, 32, 49, 55, 53, 32, 51, 56, 48, 32, 49, 50, 50, 81, 51, 56, 48, 32, 55, 52, 32, 51, 52, 54, 32, 51, 56, 84, 50, 53, 54, 32, 49, 81, 50, 50, 54, 32, 49, 32, 50, 48, 51, 32, 50, 50, 84, 49, 56, 48, 32, 55, 51, 81, 49, 56, 48, 32, 56, 57, 32, 49, 57, 51, 32, 49, 48, 48, 84, 50, 50, 51, 32, 49, 49, 49, 81, 50, 51, 55, 32, 49, 49, 49, 32, 50, 52, 55, 32, 49, 48, 50, 84, 50, 54, 50, 32, 55, 51, 81, 50, 55, 49, 32, 51, 57, 32, 50, 57, 51, 32, 51, 57, 81, 51, 48, 57, 32, 51, 57, 32, 51, 50, 50, 32, 53, 50, 84, 51, 51, 53, 32, 57, 51, 81, 51, 51, 53, 32, 49, 49, 50, 32, 51, 50, 55, 10, 49, 50, 53, 81, 51, 49, 51, 32, 49, 53, 48, 32, 50, 53, 53, 32, 49, 56, 50, 81, 50, 50, 53, 32, 49, 57, 55, 32, 49, 57, 53, 32, 50, 49, 50, 76, 54, 49, 32, 52, 72, 50, 49, 76, 49, 54, 50, 32, 50, 50, 55, 81, 56, 57, 32, 50, 54, 50, 32, 53, 51, 32, 51, 48, 55, 81, 50, 49, 32, 51, 52, 55, 32, 50, 49, 32, 51, 57, 49, 81, 50, 49, 32, 52, 50, 49, 32, 51, 53, 32, 52, 52, 55, 84, 55, 53, 32, 52, 57, 51, 84, 49, 51, 51, 32, 53, 49, 51, 81, 49, 54, 57, 32, 53, 49, 51, 32, 49, 57, 54, 32, 52, 57, 49, 84, 50, 50, 52, 32, 52, 51, 54, 81, 50, 50, 52, 32, 52, 50, 49, 32, 50, 49, 49, 32, 52, 49, 49, 84, 49, 55, 57, 32, 52, 48, 48, 81, 49, 53, 49, 32, 52, 48, 48, 32, 49, 52, 52, 32, 52, 50, 53, 76, 49, 51, 55, 32, 52, 52, 56, 81, 49, 50, 57, 32, 52, 55, 52, 32, 49, 48, 55, 32, 52, 55, 52, 81, 57, 49, 32, 52, 55, 52, 32, 56, 48, 32, 52, 53, 54, 81, 55, 53, 32, 52, 52, 56, 32, 55, 50, 32, 52, 51, 55, 84, 54, 57, 32, 52, 49, 56, 81, 54, 57, 32, 51, 55, 50, 32, 49, 52, 55, 10, 51, 51, 49, 81, 49, 53, 51, 32, 51, 50, 56, 32, 50, 48, 57, 32, 51, 48, 50, 76, 51, 52, 55, 32, 53, 48, 55, 72, 51, 56, 56, 90, 77, 48, 32, 49, 56, 57, 81, 45, 49, 32, 50, 48, 52, 32, 57, 32, 50, 49, 54, 84, 51, 53, 32, 50, 50, 56, 81, 53, 49, 32, 50, 50, 56, 32, 54, 50, 32, 50, 49, 56, 84, 55, 52, 32, 49, 57, 50, 81, 55, 52, 32, 49, 55, 55, 32, 54, 52, 32, 49, 54, 54, 84, 51, 56, 32, 49, 53, 52, 81, 50, 49, 32, 49, 53, 52, 32, 49, 49, 32, 49, 54, 51, 84, 48, 32, 49, 56, 57, 90, 77, 51, 51, 56, 32, 51, 51, 52, 81, 51, 52, 54, 32, 51, 54, 48, 32, 51, 55, 51, 32, 51, 54, 48, 81, 51, 55, 54, 32, 51, 54, 48, 32, 51, 56, 52, 32, 51, 53, 56, 81, 52, 49, 48, 32, 51, 52, 56, 32, 52, 49, 48, 32, 51, 50, 51, 81, 52, 49, 48, 32, 51, 50, 48, 32, 52, 48, 56, 32, 51, 49, 50, 81, 52, 48, 48, 32, 50, 56, 54, 32, 51, 55, 51, 32, 50, 56, 54, 81, 51, 55, 48, 32, 50, 56, 54, 32, 51, 54, 50, 32, 50, 56, 56, 81, 51, 51, 54, 32, 50, 57, 54, 32, 51, 51, 54, 32, 51, 50, 50, 81, 51, 51, 54, 10, 51, 50, 54, 32, 51, 51, 56, 32, 51, 51, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 113, 117, 111, 116, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 100, 98, 108, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 49, 56, 34, 32, 100, 61, 34, 77, 49, 48, 57, 32, 45, 49, 51, 48, 76, 48, 32, 49, 51, 48, 76, 45, 49, 48, 57, 32, 45, 49, 51, 48, 72, 45, 56, 53, 76, 48, 32, 54, 54, 76, 56, 53, 32, 45, 49, 51, 48, 72, 49, 48, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 35, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 110, 117, 109, 98, 101, 114, 115, 105, 103, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 56, 56, 34, 32, 100, 61, 34, 77, 48, 32, 50, 49, 86, 56, 48, 76, 49, 50, 57, 32, 50, 51, 48, 76, 49, 52, 54, 32, 50, 52, 48, 81, 49, 53, 54, 32, 50, 52, 48, 32, 49, 53, 56, 32, 50, 51, 52, 76, 50, 54, 52, 32, 49, 52, 49, 76, 50, 56, 49, 32, 49, 51, 49, 76, 50, 57, 51, 32, 49, 51, 55, 76, 51, 55, 51, 32, 50, 51, 48, 76, 51, 57, 49, 32, 50, 52, 48, 81, 51, 57, 57, 32, 50, 52, 48, 32, 52, 48, 51, 32, 50, 51, 52, 76, 53, 48, 56, 32, 49, 52, 49, 76, 53, 49, 55, 32, 49, 51, 52, 76, 53, 50, 53, 32, 49, 50, 57, 81, 53, 51, 51, 32, 49, 51, 49, 32, 53, 51, 55, 32, 49, 51, 55, 76, 54, 48, 53, 32, 50, 49, 55, 86, 49, 53, 56, 76, 52, 55, 55, 32, 56, 81, 52, 54, 51, 32, 45, 50, 32, 52, 53, 55, 32, 45, 50, 81, 52, 53, 50, 32, 45, 50, 32, 52, 52, 55, 10, 52, 76, 51, 52, 50, 32, 57, 56, 81, 51, 51, 51, 32, 49, 48, 53, 32, 51, 50, 50, 32, 49, 48, 53, 81, 51, 49, 54, 32, 49, 48, 53, 32, 51, 49, 51, 32, 49, 48, 50, 76, 50, 51, 50, 32, 56, 81, 50, 50, 49, 32, 45, 50, 32, 50, 49, 51, 32, 45, 50, 81, 50, 48, 56, 32, 45, 50, 32, 50, 48, 51, 32, 52, 76, 57, 56, 32, 57, 56, 81, 56, 57, 32, 49, 48, 55, 32, 55, 56, 32, 49, 48, 55, 81, 55, 51, 32, 49, 48, 55, 32, 54, 56, 32, 49, 48, 50, 76, 48, 32, 50, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 36, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 111, 108, 108, 97, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 56, 56, 34, 32, 100, 61, 34, 77, 48, 32, 50, 49, 86, 56, 48, 76, 49, 50, 49, 32, 50, 50, 51, 81, 49, 50, 55, 32, 50, 50, 57, 32, 49, 51, 50, 32, 50, 51, 50, 84, 49, 52, 51, 32, 50, 51, 54, 81, 49, 53, 48, 32, 50, 51, 54, 32, 49, 54, 56, 32, 50, 49, 57, 76, 50, 55, 53, 32, 49, 50, 53, 86, 51, 48, 57, 72, 51, 48, 53, 86, 49, 53, 48, 76, 51, 54, 51, 32, 50, 49, 57, 81, 51, 56, 48, 32, 50, 51, 57, 32, 51, 56, 54, 32, 50, 51, 57, 76, 52, 49, 48, 32, 50, 50, 51, 76, 52, 57, 52, 32, 49, 52, 56, 76, 53, 50, 53, 32, 49, 50, 51, 81, 53, 50, 57, 32, 49, 50, 52, 32, 53, 51, 56, 32, 49, 51, 53, 76, 53, 53, 50, 32, 49, 53, 48, 76, 53, 56, 54, 32, 49, 57, 52, 86, 49, 51, 57, 76, 52, 56, 48, 32, 49, 52, 81, 52, 54, 56, 32, 45, 50, 32, 52, 53, 55, 32, 45, 50, 81, 52, 53, 51, 10, 48, 32, 52, 53, 48, 32, 50, 81, 52, 52, 49, 32, 56, 32, 52, 51, 50, 32, 49, 54, 76, 51, 53, 52, 32, 56, 54, 81, 51, 51, 51, 32, 49, 48, 55, 32, 51, 50, 48, 32, 49, 48, 55, 76, 51, 49, 53, 32, 49, 48, 53, 76, 51, 49, 48, 32, 49, 48, 48, 76, 51, 48, 53, 32, 57, 52, 86, 45, 57, 48, 72, 50, 55, 53, 86, 53, 57, 76, 50, 51, 57, 32, 49, 52, 81, 50, 50, 52, 32, 45, 50, 32, 50, 49, 53, 32, 45, 50, 76, 50, 48, 56, 32, 48, 76, 49, 57, 56, 32, 56, 76, 49, 56, 56, 32, 49, 54, 76, 49, 48, 48, 32, 57, 54, 81, 56, 57, 32, 49, 48, 54, 32, 56, 48, 32, 49, 48, 57, 81, 55, 53, 32, 49, 48, 57, 32, 54, 51, 32, 57, 54, 76, 48, 32, 50, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 37, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 101, 114, 99, 101, 110, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 53, 51, 34, 32, 100, 61, 34, 77, 55, 32, 53, 81, 45, 50, 54, 32, 53, 51, 32, 45, 52, 48, 32, 56, 53, 81, 45, 53, 55, 32, 49, 50, 53, 32, 45, 53, 55, 32, 49, 54, 52, 81, 45, 53, 55, 32, 50, 48, 51, 32, 45, 51, 57, 32, 50, 52, 51, 84, 50, 48, 32, 51, 50, 57, 86, 51, 50, 50, 81, 45, 52, 32, 50, 55, 49, 32, 45, 49, 52, 32, 50, 51, 54, 84, 45, 50, 52, 32, 49, 55, 52, 81, 45, 50, 52, 32, 49, 52, 54, 32, 45, 49, 52, 32, 49, 49, 52, 81, 45, 52, 32, 56, 56, 32, 49, 32, 55, 52, 81, 49, 48, 32, 49, 50, 50, 32, 53, 56, 32, 49, 56, 48, 81, 55, 52, 32, 49, 57, 57, 32, 49, 48, 54, 32, 50, 51, 48, 76, 49, 50, 51, 32, 50, 52, 48, 81, 49, 51, 51, 32, 50, 52, 48, 32, 49, 51, 53, 32, 50, 51, 52, 76, 50, 52, 49, 32, 49, 52, 49, 76, 50, 53, 57, 32, 49, 51, 49, 76, 50, 55, 48, 10, 49, 51, 55, 76, 51, 53, 48, 32, 50, 51, 48, 76, 51, 54, 57, 32, 50, 52, 48, 81, 51, 55, 54, 32, 50, 52, 48, 32, 51, 56, 48, 32, 50, 51, 52, 76, 52, 56, 53, 32, 49, 52, 49, 76, 52, 57, 52, 32, 49, 51, 52, 76, 53, 48, 50, 32, 49, 50, 57, 81, 53, 49, 48, 32, 49, 51, 49, 32, 53, 49, 52, 32, 49, 51, 55, 76, 53, 56, 50, 32, 50, 49, 55, 86, 49, 53, 56, 76, 52, 53, 52, 32, 56, 81, 52, 52, 48, 32, 45, 50, 32, 52, 51, 52, 32, 45, 50, 81, 52, 50, 57, 32, 45, 50, 32, 52, 50, 52, 32, 52, 76, 51, 50, 48, 32, 57, 56, 81, 51, 48, 57, 32, 49, 48, 53, 32, 51, 48, 48, 32, 49, 48, 53, 81, 50, 57, 51, 32, 49, 48, 53, 32, 50, 57, 48, 32, 49, 48, 50, 76, 50, 48, 57, 32, 56, 81, 49, 57, 57, 32, 45, 50, 32, 49, 57, 48, 32, 45, 50, 81, 49, 56, 53, 32, 45, 50, 32, 49, 56, 48, 32, 52, 76, 55, 53, 32, 57, 56, 81, 54, 55, 32, 49, 48, 55, 32, 53, 53, 32, 49, 48, 55, 81, 53, 50, 32, 49, 48, 55, 32, 53, 48, 32, 49, 48, 53, 84, 52, 54, 32, 49, 48, 50, 81, 51, 55, 32, 57, 50, 32, 51, 51, 10, 56, 53, 81, 50, 48, 32, 54, 51, 32, 50, 51, 32, 52, 51, 81, 50, 51, 32, 49, 52, 32, 49, 56, 32, 55, 84, 55, 32, 53, 90, 77, 49, 32, 55, 52, 76, 55, 32, 53, 56, 86, 53, 81, 52, 32, 55, 32, 50, 32, 49, 48, 84, 48, 32, 49, 53, 76, 49, 32, 55, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 97, 109, 112, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 109, 112, 101, 114, 115, 97, 110, 100, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 52, 34, 32, 100, 61, 34, 77, 53, 56, 32, 45, 49, 54, 55, 81, 49, 56, 32, 45, 49, 50, 50, 32, 48, 32, 45, 56, 49, 84, 45, 49, 57, 32, 48, 81, 45, 49, 57, 32, 52, 48, 32, 45, 51, 32, 55, 56, 84, 52, 54, 32, 49, 54, 51, 86, 49, 48, 50, 81, 51, 53, 32, 55, 49, 32, 50, 53, 32, 52, 49, 84, 49, 52, 32, 45, 49, 51, 81, 49, 52, 32, 45, 51, 57, 32, 50, 52, 32, 45, 55, 52, 84, 53, 56, 32, 45, 49, 54, 48, 86, 45, 49, 54, 55, 90, 77, 48, 32, 54, 55, 81, 54, 32, 49, 49, 52, 32, 53, 54, 32, 49, 55, 55, 81, 55, 50, 32, 49, 57, 56, 32, 49, 48, 54, 32, 50, 51, 48, 76, 49, 50, 51, 32, 50, 52, 48, 81, 49, 51, 51, 32, 50, 52, 48, 32, 49, 51, 53, 32, 50, 51, 52, 76, 50, 52, 49, 32, 49, 52, 49, 76, 50, 53, 57, 32, 49, 51, 49, 76, 50, 55, 48, 10, 49, 51, 55, 76, 51, 53, 48, 32, 50, 51, 48, 76, 51, 54, 57, 32, 50, 52, 48, 81, 51, 55, 54, 32, 50, 52, 48, 32, 51, 56, 48, 32, 50, 51, 52, 76, 52, 56, 53, 32, 49, 52, 49, 76, 52, 57, 52, 32, 49, 51, 52, 76, 53, 48, 50, 32, 49, 50, 57, 81, 53, 49, 48, 32, 49, 51, 49, 32, 53, 49, 52, 32, 49, 51, 55, 76, 53, 56, 50, 32, 50, 49, 55, 86, 49, 53, 56, 76, 52, 53, 52, 32, 56, 81, 52, 52, 48, 32, 45, 50, 32, 52, 51, 52, 32, 45, 50, 81, 52, 50, 57, 32, 45, 50, 32, 52, 50, 52, 32, 52, 76, 51, 50, 48, 32, 57, 56, 81, 51, 48, 57, 32, 49, 48, 53, 32, 51, 48, 48, 32, 49, 48, 53, 81, 50, 57, 51, 32, 49, 48, 53, 32, 50, 57, 48, 32, 49, 48, 50, 76, 50, 48, 57, 32, 56, 81, 49, 57, 57, 32, 45, 50, 32, 49, 57, 48, 32, 45, 50, 81, 49, 56, 53, 32, 45, 50, 32, 49, 56, 48, 32, 52, 76, 55, 53, 32, 57, 56, 81, 54, 55, 32, 49, 48, 55, 32, 53, 53, 32, 49, 48, 55, 81, 53, 50, 32, 49, 48, 55, 32, 53, 48, 32, 49, 48, 53, 84, 52, 54, 32, 49, 48, 50, 76, 48, 32, 54, 55, 90, 34, 10, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 97, 112, 111, 115, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 115, 105, 110, 103, 108, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 48, 34, 32, 100, 61, 34, 77, 57, 48, 32, 49, 54, 54, 76, 55, 56, 32, 49, 54, 52, 72, 55, 48, 81, 51, 57, 32, 49, 54, 52, 32, 50, 48, 32, 49, 56, 52, 84, 48, 32, 50, 51, 48, 81, 48, 32, 50, 53, 57, 32, 50, 51, 32, 50, 55, 57, 81, 52, 52, 32, 51, 48, 48, 32, 56, 54, 32, 51, 48, 48, 81, 49, 51, 48, 32, 51, 48, 48, 32, 49, 53, 53, 32, 50, 54, 57, 84, 49, 56, 48, 32, 49, 57, 51, 81, 49, 56, 48, 32, 49, 54, 51, 32, 49, 55, 49, 32, 49, 51, 53, 84, 49, 52, 50, 32, 55, 56, 81, 49, 48, 54, 32, 50, 53, 32, 51, 53, 32, 48, 76, 51, 49, 32, 49, 55, 81, 54, 55, 32, 51, 49, 32, 56, 55, 32, 54, 49, 84, 49, 48, 55, 32, 49, 50, 51, 81, 49, 48, 55, 32, 49, 53, 51, 32, 57, 48, 32, 49, 54, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 40, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 97, 114, 101, 110, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 48, 34, 32, 100, 61, 34, 77, 56, 52, 32, 45, 51, 48, 51, 76, 55, 56, 32, 45, 51, 49, 51, 81, 51, 55, 32, 45, 50, 56, 57, 32, 49, 49, 32, 45, 50, 54, 50, 81, 45, 49, 57, 32, 45, 50, 51, 52, 32, 45, 52, 49, 32, 45, 49, 57, 56, 81, 45, 56, 54, 32, 45, 49, 50, 52, 32, 45, 56, 54, 32, 45, 52, 50, 81, 45, 56, 54, 32, 45, 50, 49, 32, 45, 56, 51, 32, 50, 84, 45, 55, 53, 32, 52, 56, 81, 45, 54, 48, 32, 57, 55, 32, 45, 52, 50, 32, 49, 51, 49, 81, 49, 50, 32, 50, 50, 50, 32, 55, 54, 32, 50, 53, 50, 76, 56, 52, 32, 50, 52, 51, 81, 49, 51, 32, 49, 57, 51, 32, 45, 49, 54, 32, 49, 49, 53, 81, 45, 52, 49, 32, 52, 55, 32, 45, 52, 49, 32, 45, 52, 52, 81, 45, 52, 49, 32, 45, 49, 50, 51, 32, 45, 49, 48, 32, 45, 49, 57, 50, 84, 56, 52, 32, 45, 51, 48, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 41, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 97, 114, 101, 110, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 48, 34, 32, 100, 61, 34, 77, 49, 48, 32, 45, 52, 50, 81, 49, 48, 32, 45, 49, 50, 52, 32, 45, 51, 53, 32, 45, 49, 57, 56, 81, 45, 53, 55, 32, 45, 50, 51, 52, 32, 45, 56, 54, 32, 45, 50, 54, 50, 84, 45, 49, 53, 52, 32, 45, 51, 49, 51, 76, 45, 49, 54, 48, 32, 45, 51, 48, 51, 81, 45, 57, 55, 32, 45, 50, 54, 49, 32, 45, 54, 54, 32, 45, 49, 57, 50, 84, 45, 51, 53, 32, 45, 52, 52, 81, 45, 51, 53, 32, 52, 55, 32, 45, 54, 48, 32, 49, 49, 53, 81, 45, 56, 57, 32, 49, 57, 51, 32, 45, 49, 54, 48, 32, 50, 52, 51, 76, 45, 49, 53, 50, 32, 50, 53, 50, 81, 45, 56, 56, 32, 50, 50, 50, 32, 45, 51, 52, 32, 49, 51, 49, 81, 45, 50, 53, 32, 49, 49, 53, 32, 45, 49, 55, 32, 57, 51, 84, 45, 50, 32, 52, 56, 81, 49, 48, 32, 52, 32, 49, 48, 32, 45, 52, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 42, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 115, 116, 101, 114, 105, 115, 107, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 53, 48, 55, 34, 32, 100, 61, 34, 77, 45, 50, 57, 55, 32, 50, 52, 53, 81, 45, 50, 57, 55, 32, 50, 51, 48, 32, 45, 50, 56, 51, 32, 50, 49, 55, 84, 45, 50, 53, 50, 32, 50, 48, 51, 81, 45, 50, 52, 52, 32, 50, 48, 51, 32, 45, 50, 51, 56, 32, 50, 48, 53, 84, 45, 50, 50, 51, 32, 50, 49, 54, 81, 45, 50, 49, 49, 32, 50, 51, 49, 32, 45, 50, 49, 49, 32, 50, 52, 55, 81, 45, 50, 49, 49, 32, 50, 54, 53, 32, 45, 50, 50, 50, 32, 50, 55, 54, 84, 45, 50, 53, 50, 32, 50, 56, 56, 81, 45, 50, 55, 49, 32, 50, 56, 56, 32, 45, 50, 56, 50, 32, 50, 55, 55, 81, 45, 50, 57, 55, 32, 50, 54, 54, 32, 45, 50, 57, 55, 32, 50, 52, 53, 90, 77, 45, 52, 51, 56, 32, 52, 49, 49, 81, 45, 52, 50, 49, 32, 52, 51, 52, 32, 45, 51, 57, 52, 32, 52, 51, 52, 81, 45, 51, 54, 53, 32, 52, 51, 52, 10, 45, 51, 53, 55, 32, 52, 50, 48, 81, 45, 51, 52, 55, 32, 52, 48, 56, 32, 45, 51, 52, 50, 32, 51, 55, 53, 81, 45, 51, 52, 48, 32, 51, 54, 51, 32, 45, 51, 51, 56, 32, 51, 53, 51, 84, 45, 51, 51, 49, 32, 51, 51, 49, 81, 45, 51, 50, 49, 32, 51, 49, 55, 32, 45, 51, 48, 49, 32, 51, 49, 52, 76, 45, 50, 56, 50, 32, 51, 50, 48, 81, 45, 50, 55, 52, 32, 51, 50, 52, 32, 45, 50, 55, 48, 32, 51, 51, 48, 84, 45, 50, 54, 53, 32, 51, 52, 57, 81, 45, 50, 54, 53, 32, 51, 54, 49, 32, 45, 50, 55, 48, 32, 51, 54, 57, 76, 45, 50, 56, 52, 32, 51, 57, 48, 76, 45, 51, 48, 51, 32, 52, 49, 49, 76, 45, 51, 49, 52, 32, 52, 51, 55, 81, 45, 51, 49, 52, 32, 52, 52, 56, 32, 45, 51, 49, 48, 32, 52, 53, 55, 84, 45, 50, 57, 53, 32, 52, 55, 55, 81, 45, 50, 55, 56, 32, 52, 57, 50, 32, 45, 50, 53, 50, 32, 52, 57, 50, 81, 45, 50, 50, 55, 32, 52, 57, 50, 32, 45, 50, 49, 50, 32, 52, 55, 55, 81, 45, 49, 57, 51, 32, 52, 53, 56, 32, 45, 49, 57, 51, 32, 52, 51, 55, 81, 45, 49, 57, 51, 32, 52, 50, 53, 10, 45, 49, 57, 55, 32, 52, 49, 54, 84, 45, 50, 49, 55, 32, 51, 57, 48, 76, 45, 50, 51, 53, 32, 51, 54, 55, 81, 45, 50, 52, 50, 32, 51, 53, 53, 32, 45, 50, 52, 51, 32, 51, 52, 54, 81, 45, 50, 52, 50, 32, 51, 52, 48, 32, 45, 50, 52, 48, 32, 51, 51, 53, 84, 45, 50, 51, 56, 32, 51, 50, 57, 76, 45, 50, 50, 53, 32, 51, 49, 55, 76, 45, 50, 48, 56, 32, 51, 48, 56, 81, 45, 49, 57, 52, 32, 51, 48, 57, 32, 45, 49, 56, 49, 32, 51, 50, 52, 81, 45, 49, 55, 50, 32, 51, 51, 55, 32, 45, 49, 54, 57, 32, 51, 54, 51, 81, 45, 49, 54, 57, 32, 52, 51, 50, 32, 45, 49, 49, 50, 32, 52, 51, 50, 81, 45, 56, 57, 32, 52, 51, 50, 32, 45, 55, 51, 32, 52, 49, 54, 84, 45, 53, 55, 32, 51, 55, 55, 81, 45, 53, 55, 32, 51, 53, 51, 32, 45, 55, 53, 32, 51, 51, 54, 81, 45, 56, 52, 32, 51, 51, 48, 32, 45, 56, 57, 32, 51, 50, 56, 81, 45, 49, 48, 51, 32, 51, 50, 50, 32, 45, 49, 50, 49, 32, 51, 50, 50, 81, 45, 49, 55, 52, 32, 51, 50, 50, 32, 45, 49, 55, 56, 32, 50, 56, 50, 76, 45, 49, 55, 50, 10, 50, 54, 56, 81, 45, 49, 55, 48, 32, 50, 54, 51, 32, 45, 49, 54, 52, 32, 50, 53, 57, 81, 45, 49, 54, 50, 32, 50, 53, 54, 32, 45, 49, 52, 55, 32, 50, 53, 51, 81, 45, 49, 51, 53, 32, 50, 53, 53, 32, 45, 49, 50, 54, 32, 50, 54, 49, 76, 45, 49, 50, 48, 32, 50, 54, 55, 81, 45, 49, 49, 54, 32, 50, 54, 57, 32, 45, 49, 49, 52, 32, 50, 55, 49, 84, 45, 49, 48, 49, 32, 50, 56, 49, 76, 45, 55, 54, 32, 50, 57, 57, 81, 45, 54, 56, 32, 51, 48, 53, 32, 45, 53, 50, 32, 51, 48, 53, 81, 45, 51, 51, 32, 51, 48, 53, 32, 45, 49, 55, 32, 50, 56, 55, 84, 48, 32, 50, 52, 55, 81, 48, 32, 50, 50, 53, 32, 45, 49, 54, 32, 50, 48, 54, 81, 45, 50, 53, 32, 49, 57, 53, 32, 45, 51, 53, 32, 49, 56, 57, 81, 45, 52, 48, 32, 49, 56, 55, 32, 45, 53, 55, 32, 49, 56, 53, 81, 45, 54, 57, 32, 49, 56, 54, 32, 45, 57, 51, 32, 50, 48, 54, 76, 45, 49, 50, 51, 32, 50, 50, 56, 81, 45, 49, 51, 49, 32, 50, 51, 51, 32, 45, 49, 52, 55, 32, 50, 51, 51, 81, 45, 49, 54, 49, 32, 50, 51, 51, 32, 45, 49, 54, 55, 10, 50, 50, 56, 76, 45, 49, 55, 56, 32, 50, 48, 54, 81, 45, 49, 55, 53, 32, 49, 56, 52, 32, 45, 49, 54, 49, 32, 49, 55, 56, 76, 45, 49, 52, 56, 32, 49, 55, 51, 76, 45, 49, 49, 55, 32, 49, 54, 55, 81, 45, 56, 57, 32, 49, 54, 55, 32, 45, 55, 51, 32, 49, 53, 51, 81, 45, 53, 55, 32, 49, 52, 51, 32, 45, 53, 55, 32, 49, 49, 51, 81, 45, 53, 55, 32, 57, 48, 32, 45, 55, 52, 32, 55, 51, 81, 45, 57, 49, 32, 54, 48, 32, 45, 49, 49, 55, 32, 53, 52, 81, 45, 49, 51, 55, 32, 53, 55, 32, 45, 49, 53, 54, 32, 55, 55, 81, 45, 49, 54, 57, 32, 57, 55, 32, 45, 49, 54, 57, 32, 49, 51, 50, 81, 45, 49, 54, 57, 32, 49, 51, 57, 32, 45, 49, 55, 48, 32, 49, 52, 51, 81, 45, 49, 55, 53, 32, 49, 53, 54, 32, 45, 49, 55, 56, 32, 49, 54, 51, 81, 45, 49, 56, 55, 32, 49, 55, 56, 32, 45, 50, 48, 56, 32, 49, 55, 56, 81, 45, 50, 50, 50, 32, 49, 55, 56, 32, 45, 50, 51, 50, 32, 49, 54, 56, 84, 45, 50, 52, 54, 32, 49, 52, 49, 81, 45, 50, 52, 52, 32, 49, 51, 53, 32, 45, 50, 52, 48, 32, 49, 50, 57, 84, 45, 50, 51, 51, 10, 49, 49, 55, 76, 45, 50, 50, 53, 32, 49, 48, 52, 76, 45, 50, 49, 55, 32, 57, 50, 76, 45, 50, 48, 56, 32, 56, 50, 76, 45, 50, 48, 50, 32, 55, 48, 81, 45, 49, 57, 57, 32, 54, 54, 32, 45, 49, 57, 56, 32, 54, 48, 84, 45, 49, 57, 54, 32, 52, 54, 81, 45, 49, 57, 54, 32, 50, 51, 32, 45, 50, 49, 54, 32, 49, 50, 81, 45, 50, 51, 52, 32, 48, 32, 45, 50, 53, 55, 32, 48, 81, 45, 50, 55, 53, 32, 48, 32, 45, 50, 57, 51, 32, 49, 49, 84, 45, 51, 49, 52, 32, 52, 54, 81, 45, 51, 49, 51, 32, 53, 51, 32, 45, 51, 49, 48, 32, 54, 49, 84, 45, 51, 48, 54, 32, 55, 49, 76, 45, 50, 56, 55, 32, 57, 54, 76, 45, 50, 54, 55, 32, 49, 50, 49, 81, 45, 50, 54, 52, 32, 49, 50, 56, 32, 45, 50, 54, 50, 32, 49, 52, 52, 81, 45, 50, 54, 50, 32, 49, 55, 52, 32, 45, 50, 57, 49, 32, 49, 55, 56, 81, 45, 51, 49, 57, 32, 49, 55, 56, 32, 45, 51, 50, 57, 32, 49, 54, 49, 81, 45, 51, 51, 50, 32, 49, 53, 52, 32, 45, 51, 51, 53, 32, 49, 52, 52, 84, 45, 51, 51, 56, 32, 49, 49, 56, 81, 45, 51, 51, 56, 10, 54, 51, 32, 45, 51, 57, 52, 32, 53, 52, 81, 45, 52, 50, 50, 32, 54, 48, 32, 45, 52, 51, 52, 32, 55, 51, 84, 45, 52, 53, 51, 32, 49, 49, 53, 81, 45, 52, 52, 55, 32, 49, 54, 57, 32, 45, 51, 55, 53, 32, 49, 54, 57, 81, 45, 51, 54, 53, 32, 49, 54, 57, 32, 45, 51, 53, 57, 32, 49, 55, 50, 84, 45, 51, 52, 52, 32, 49, 56, 49, 81, 45, 51, 51, 50, 32, 49, 57, 48, 32, 45, 51, 51, 50, 32, 50, 48, 54, 81, 45, 51, 51, 50, 32, 50, 49, 57, 32, 45, 51, 52, 49, 32, 50, 50, 53, 81, 45, 51, 52, 55, 32, 50, 51, 51, 32, 45, 51, 54, 48, 32, 50, 51, 51, 81, 45, 51, 55, 56, 32, 50, 51, 51, 32, 45, 52, 48, 55, 32, 50, 49, 50, 81, 45, 52, 50, 50, 32, 50, 48, 50, 32, 45, 52, 51, 51, 32, 49, 57, 54, 84, 45, 52, 53, 51, 32, 49, 56, 55, 81, 45, 52, 55, 56, 32, 49, 57, 48, 32, 45, 52, 57, 50, 32, 50, 48, 53, 84, 45, 53, 48, 55, 32, 50, 52, 55, 81, 45, 53, 48, 55, 32, 50, 54, 57, 32, 45, 52, 57, 51, 32, 50, 56, 54, 81, 45, 52, 55, 55, 32, 51, 48, 50, 32, 45, 52, 53, 53, 32, 51, 48, 50, 81, 45, 52, 52, 52, 10, 51, 48, 50, 32, 45, 52, 51, 49, 32, 50, 57, 55, 84, 45, 52, 48, 51, 32, 50, 56, 48, 76, 45, 51, 56, 50, 32, 50, 54, 52, 76, 45, 51, 54, 48, 32, 50, 53, 53, 81, 45, 51, 50, 57, 32, 50, 54, 51, 32, 45, 51, 50, 57, 32, 50, 56, 50, 81, 45, 51, 50, 57, 32, 51, 50, 50, 32, 45, 51, 56, 52, 32, 51, 50, 50, 81, 45, 52, 52, 56, 32, 51, 50, 50, 32, 45, 52, 53, 53, 32, 51, 55, 52, 81, 45, 52, 53, 50, 32, 51, 57, 53, 32, 45, 52, 51, 56, 32, 52, 49, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 43, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 108, 117, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 54, 34, 32, 100, 61, 34, 77, 49, 53, 56, 32, 45, 51, 53, 72, 51, 53, 86, 45, 49, 53, 56, 72, 45, 51, 53, 86, 45, 51, 53, 72, 45, 49, 53, 56, 86, 51, 54, 72, 45, 51, 53, 86, 49, 53, 56, 72, 51, 53, 86, 51, 54, 72, 49, 53, 56, 86, 45, 51, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 44, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 111, 109, 109, 97, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 57, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 49, 51, 51, 76, 48, 32, 45, 49, 51, 50, 76, 45, 49, 49, 52, 32, 49, 51, 51, 72, 45, 57, 48, 76, 45, 56, 32, 45, 52, 55, 76, 49, 48, 48, 32, 49, 51, 51, 72, 49, 53, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 45, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 104, 121, 112, 104, 101, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 49, 52, 34, 32, 100, 61, 34, 77, 48, 32, 51, 55, 53, 72, 49, 49, 52, 86, 51, 52, 53, 72, 48, 86, 51, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 46, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 101, 114, 105, 111, 100, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 53, 48, 56, 34, 32, 100, 61, 34, 77, 45, 52, 55, 32, 45, 50, 81, 45, 52, 55, 32, 49, 56, 32, 45, 51, 52, 32, 51, 50, 84, 45, 50, 32, 52, 55, 81, 49, 57, 32, 52, 55, 32, 51, 51, 32, 51, 53, 84, 52, 56, 32, 50, 81, 52, 56, 32, 45, 49, 56, 32, 51, 53, 32, 45, 51, 50, 84, 51, 32, 45, 52, 55, 81, 45, 49, 56, 32, 45, 52, 55, 32, 45, 51, 50, 32, 45, 51, 53, 84, 45, 52, 55, 32, 45, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 47, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 108, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 53, 48, 56, 34, 32, 100, 61, 34, 77, 50, 53, 52, 32, 50, 49, 50, 76, 45, 49, 48, 56, 32, 45, 50, 49, 50, 72, 45, 50, 53, 52, 76, 49, 48, 56, 32, 50, 49, 50, 72, 50, 53, 52, 90, 77, 45, 50, 48, 50, 32, 49, 48, 56, 81, 45, 50, 48, 50, 32, 49, 50, 56, 32, 45, 49, 56, 57, 32, 49, 52, 50, 84, 45, 49, 53, 55, 32, 49, 53, 55, 81, 45, 49, 51, 54, 32, 49, 53, 55, 32, 45, 49, 50, 50, 32, 49, 52, 53, 84, 45, 49, 48, 55, 32, 49, 49, 50, 81, 45, 49, 48, 55, 32, 57, 50, 32, 45, 49, 50, 48, 32, 55, 56, 84, 45, 49, 53, 50, 32, 54, 51, 81, 45, 49, 55, 51, 32, 54, 51, 32, 45, 49, 56, 55, 32, 55, 53, 84, 45, 50, 48, 50, 32, 49, 48, 56, 90, 77, 49, 48, 55, 32, 45, 49, 49, 49, 81, 49, 48, 55, 32, 45, 57, 49, 32, 49, 50, 48, 32, 45, 55, 55, 84, 49, 53, 50, 32, 45, 54, 50, 81, 49, 55, 51, 10, 45, 54, 50, 32, 49, 56, 55, 32, 45, 55, 52, 84, 50, 48, 50, 32, 45, 49, 48, 55, 81, 50, 48, 50, 32, 45, 49, 50, 55, 32, 49, 56, 57, 32, 45, 49, 52, 49, 84, 49, 53, 55, 32, 45, 49, 53, 54, 81, 49, 51, 54, 32, 45, 49, 53, 54, 32, 49, 50, 50, 32, 45, 49, 52, 52, 84, 49, 48, 55, 32, 45, 49, 49, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 48, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 122, 101, 114, 111, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 50, 55, 34, 32, 100, 61, 34, 77, 48, 32, 50, 53, 57, 81, 48, 32, 51, 51, 54, 32, 50, 56, 32, 51, 57, 52, 84, 49, 48, 54, 32, 52, 56, 52, 84, 50, 49, 53, 32, 53, 49, 54, 81, 50, 55, 50, 32, 53, 49, 54, 32, 51, 50, 48, 32, 52, 56, 50, 84, 51, 57, 56, 32, 51, 56, 55, 84, 52, 50, 55, 32, 50, 53, 57, 81, 52, 50, 55, 32, 49, 57, 50, 32, 51, 57, 55, 32, 49, 51, 50, 84, 51, 49, 56, 32, 51, 54, 84, 50, 49, 55, 32, 48, 81, 49, 54, 55, 32, 48, 32, 49, 49, 52, 32, 51, 50, 81, 57, 49, 32, 52, 54, 32, 55, 48, 32, 54, 57, 84, 51, 50, 32, 49, 50, 51, 81, 48, 32, 49, 56, 52, 32, 48, 32, 50, 53, 57, 90, 77, 50, 49, 51, 32, 51, 55, 81, 50, 53, 53, 32, 51, 55, 32, 50, 55, 55, 32, 57, 51, 84, 51, 48, 48, 32, 50, 53, 57, 81, 51, 48, 48, 32, 51, 52, 56, 32, 50, 55, 56, 10, 52, 49, 52, 84, 50, 49, 51, 32, 52, 56, 49, 81, 49, 55, 49, 32, 52, 56, 49, 32, 49, 52, 55, 32, 52, 49, 53, 84, 49, 50, 51, 32, 50, 53, 57, 81, 49, 50, 51, 32, 50, 49, 51, 32, 49, 50, 56, 32, 49, 55, 50, 84, 49, 52, 53, 32, 49, 48, 48, 81, 49, 54, 54, 32, 51, 55, 32, 50, 49, 51, 32, 51, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 49, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 110, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 57, 54, 34, 32, 100, 61, 34, 77, 52, 56, 32, 48, 86, 51, 54, 81, 56, 51, 32, 51, 54, 32, 57, 55, 32, 53, 52, 81, 49, 48, 57, 32, 55, 53, 32, 49, 48, 57, 32, 49, 49, 49, 86, 51, 54, 49, 76, 50, 55, 32, 50, 51, 50, 76, 48, 32, 50, 52, 53, 76, 49, 48, 55, 32, 52, 57, 54, 72, 50, 51, 53, 86, 49, 48, 54, 81, 50, 51, 53, 32, 55, 48, 32, 50, 52, 57, 32, 53, 51, 84, 50, 57, 54, 32, 51, 54, 86, 48, 72, 52, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 50, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 119, 111, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 48, 50, 34, 32, 100, 61, 34, 77, 51, 32, 48, 76, 48, 32, 50, 57, 81, 48, 32, 54, 54, 32, 49, 56, 32, 57, 51, 81, 50, 54, 32, 49, 48, 55, 32, 51, 53, 32, 49, 49, 54, 84, 53, 55, 32, 49, 51, 54, 76, 56, 55, 32, 49, 53, 54, 76, 49, 51, 49, 32, 49, 56, 55, 76, 49, 55, 56, 32, 50, 49, 56, 76, 50, 49, 53, 32, 50, 52, 55, 81, 50, 51, 55, 32, 50, 54, 52, 32, 50, 53, 51, 32, 51, 48, 49, 81, 50, 55, 49, 32, 51, 51, 55, 32, 50, 55, 49, 32, 51, 55, 49, 81, 50, 55, 49, 32, 52, 49, 48, 32, 50, 52, 56, 32, 52, 51, 52, 84, 49, 55, 55, 32, 52, 53, 57, 81, 49, 53, 56, 32, 52, 53, 57, 32, 49, 53, 48, 32, 52, 53, 56, 84, 49, 50, 55, 32, 52, 53, 49, 81, 49, 48, 54, 32, 52, 52, 52, 32, 49, 48, 49, 32, 52, 50, 57, 81, 49, 48, 54, 32, 52, 49, 54, 32, 49, 49, 49, 32, 52, 49, 49, 76, 49, 51, 53, 10, 51, 57, 52, 81, 49, 52, 52, 32, 51, 56, 57, 32, 49, 52, 57, 32, 51, 56, 53, 84, 49, 54, 50, 32, 51, 55, 51, 81, 49, 54, 57, 32, 51, 54, 50, 32, 49, 54, 57, 32, 51, 52, 54, 81, 49, 54, 57, 32, 51, 49, 52, 32, 49, 52, 54, 32, 50, 57, 55, 84, 57, 48, 32, 50, 55, 50, 81, 54, 50, 32, 50, 55, 50, 32, 51, 56, 32, 50, 57, 55, 84, 49, 52, 32, 51, 54, 54, 81, 49, 52, 32, 52, 48, 50, 32, 52, 51, 32, 52, 51, 50, 84, 49, 50, 48, 32, 52, 56, 50, 81, 49, 54, 53, 32, 52, 57, 56, 32, 50, 49, 53, 32, 52, 57, 56, 81, 50, 56, 57, 32, 52, 57, 56, 32, 51, 52, 48, 32, 52, 54, 50, 84, 51, 57, 50, 32, 51, 53, 49, 81, 51, 57, 50, 32, 51, 48, 53, 32, 51, 54, 49, 32, 50, 55, 52, 84, 50, 55, 57, 32, 50, 49, 56, 76, 49, 56, 56, 32, 49, 55, 55, 81, 49, 52, 57, 32, 49, 54, 49, 32, 49, 51, 49, 32, 49, 52, 48, 76, 49, 56, 48, 32, 49, 52, 55, 81, 50, 49, 51, 32, 49, 52, 55, 32, 50, 51, 52, 32, 49, 52, 49, 84, 50, 56, 56, 32, 49, 49, 57, 81, 51, 49, 55, 32, 49, 48, 54, 32, 51, 50, 56, 10, 49, 48, 54, 81, 51, 53, 56, 32, 49, 48, 54, 32, 51, 54, 55, 32, 49, 54, 55, 72, 52, 48, 50, 81, 52, 48, 50, 32, 55, 51, 32, 51, 54, 57, 32, 50, 57, 84, 50, 56, 54, 32, 45, 49, 53, 81, 50, 54, 49, 32, 45, 49, 53, 32, 50, 52, 48, 32, 45, 53, 76, 50, 49, 57, 32, 54, 76, 49, 57, 49, 32, 50, 51, 81, 49, 54, 51, 32, 52, 52, 32, 49, 52, 53, 32, 53, 51, 84, 49, 48, 52, 32, 54, 53, 81, 57, 53, 32, 54, 53, 32, 56, 50, 32, 54, 48, 81, 55, 56, 32, 53, 56, 32, 55, 51, 32, 53, 53, 84, 54, 50, 32, 52, 54, 81, 52, 53, 32, 51, 48, 32, 51, 57, 32, 48, 72, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 51, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 104, 114, 101, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 56, 51, 34, 32, 100, 61, 34, 77, 50, 53, 53, 32, 50, 54, 54, 81, 50, 57, 48, 32, 50, 54, 51, 32, 51, 50, 49, 32, 50, 52, 53, 81, 51, 53, 50, 32, 50, 50, 57, 32, 51, 54, 55, 32, 50, 48, 51, 81, 51, 56, 51, 32, 49, 56, 48, 32, 51, 56, 51, 32, 49, 52, 55, 81, 51, 56, 51, 32, 57, 57, 32, 51, 53, 49, 32, 54, 54, 81, 51, 50, 50, 32, 51, 51, 32, 50, 55, 49, 32, 49, 54, 76, 50, 50, 48, 32, 52, 81, 49, 57, 55, 32, 48, 32, 49, 54, 55, 32, 48, 81, 49, 50, 56, 32, 48, 32, 57, 56, 32, 57, 84, 52, 54, 32, 51, 54, 81, 51, 52, 32, 52, 52, 32, 50, 55, 32, 53, 49, 84, 49, 49, 32, 55, 49, 81, 48, 32, 57, 49, 32, 48, 32, 49, 49, 49, 81, 48, 32, 49, 52, 53, 32, 50, 48, 32, 49, 55, 48, 84, 55, 48, 32, 49, 57, 54, 76, 55, 51, 32, 49, 57, 52, 81, 49, 49, 50, 32, 49, 57, 52, 10, 49, 51, 49, 32, 49, 55, 51, 84, 49, 53, 48, 32, 49, 50, 50, 81, 49, 53, 48, 32, 49, 49, 48, 32, 49, 51, 56, 32, 57, 49, 84, 49, 50, 52, 32, 54, 51, 81, 49, 51, 53, 32, 51, 55, 32, 49, 54, 50, 32, 51, 55, 81, 49, 57, 54, 32, 51, 55, 32, 50, 50, 53, 32, 53, 55, 81, 50, 52, 48, 32, 54, 55, 32, 50, 52, 57, 32, 56, 50, 84, 50, 53, 57, 32, 49, 49, 56, 81, 50, 53, 57, 32, 49, 56, 54, 32, 50, 50, 51, 32, 50, 49, 54, 84, 49, 49, 54, 32, 50, 52, 55, 86, 50, 56, 52, 81, 49, 56, 56, 32, 50, 56, 52, 32, 50, 50, 48, 32, 51, 48, 55, 81, 50, 53, 50, 32, 51, 51, 51, 32, 50, 53, 50, 32, 51, 56, 53, 81, 50, 53, 50, 32, 52, 50, 55, 32, 50, 50, 54, 32, 52, 53, 49, 81, 50, 48, 50, 32, 52, 55, 54, 32, 49, 54, 50, 32, 52, 55, 54, 81, 49, 50, 50, 32, 52, 55, 54, 32, 49, 48, 57, 32, 52, 53, 51, 81, 49, 49, 49, 32, 52, 53, 48, 32, 49, 49, 51, 32, 52, 52, 55, 84, 49, 50, 50, 32, 52, 52, 48, 84, 49, 51, 53, 32, 52, 51, 50, 84, 49, 52, 54, 32, 52, 50, 48, 81, 49, 53, 53, 32, 52, 48, 54, 10, 49, 53, 53, 32, 51, 56, 49, 81, 49, 53, 53, 32, 51, 55, 54, 32, 49, 53, 53, 32, 51, 55, 48, 84, 49, 52, 57, 32, 51, 53, 53, 84, 49, 51, 50, 32, 51, 51, 54, 84, 49, 48, 56, 32, 51, 50, 50, 84, 56, 49, 32, 51, 49, 55, 81, 54, 56, 32, 51, 49, 55, 32, 53, 53, 32, 51, 50, 50, 84, 51, 48, 32, 51, 51, 57, 81, 49, 48, 32, 51, 53, 57, 32, 49, 48, 32, 51, 57, 53, 81, 49, 48, 32, 52, 53, 48, 32, 54, 53, 32, 52, 56, 49, 81, 57, 50, 32, 52, 57, 55, 32, 49, 50, 53, 32, 53, 48, 54, 84, 49, 57, 52, 32, 53, 49, 53, 81, 50, 54, 53, 32, 53, 49, 53, 32, 51, 49, 56, 32, 52, 56, 50, 81, 51, 52, 55, 32, 52, 54, 52, 32, 51, 54, 49, 32, 52, 52, 51, 84, 51, 55, 54, 32, 51, 57, 53, 81, 51, 55, 54, 32, 50, 56, 56, 32, 50, 53, 53, 32, 50, 54, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 52, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 102, 111, 117, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 56, 55, 34, 32, 100, 61, 34, 77, 49, 52, 51, 32, 48, 86, 51, 54, 81, 49, 55, 51, 32, 51, 54, 32, 49, 56, 56, 32, 53, 49, 84, 50, 48, 51, 32, 49, 48, 54, 86, 49, 51, 51, 72, 48, 86, 49, 55, 50, 81, 54, 48, 32, 50, 52, 49, 32, 56, 57, 32, 51, 48, 56, 84, 49, 51, 52, 32, 52, 57, 52, 72, 51, 48, 55, 81, 51, 48, 51, 32, 52, 56, 52, 32, 50, 57, 54, 32, 52, 55, 50, 84, 50, 55, 50, 32, 52, 51, 56, 81, 50, 53, 52, 32, 52, 49, 49, 32, 50, 51, 51, 32, 51, 56, 53, 81, 50, 49, 55, 32, 51, 54, 52, 32, 50, 48, 53, 32, 51, 53, 48, 76, 49, 50, 49, 32, 50, 53, 51, 81, 55, 50, 32, 49, 57, 57, 32, 52, 49, 32, 49, 55, 50, 72, 50, 48, 51, 86, 50, 55, 52, 76, 51, 51, 48, 32, 51, 57, 55, 86, 49, 55, 50, 72, 51, 56, 55, 86, 49, 51, 51, 72, 51, 51, 48, 86, 57, 57, 81, 51, 51, 48, 10, 51, 52, 32, 51, 56, 55, 32, 51, 52, 86, 48, 72, 49, 52, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 53, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 102, 105, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 52, 34, 32, 100, 61, 34, 77, 49, 55, 32, 50, 51, 55, 76, 50, 50, 32, 52, 57, 52, 81, 49, 48, 53, 32, 52, 55, 55, 32, 49, 56, 48, 32, 52, 55, 55, 81, 50, 52, 48, 32, 52, 55, 55, 32, 51, 49, 51, 32, 52, 57, 52, 81, 51, 48, 52, 32, 52, 51, 53, 32, 50, 54, 51, 32, 52, 49, 48, 84, 49, 53, 53, 32, 51, 56, 53, 76, 49, 48, 53, 32, 51, 56, 55, 81, 57, 52, 32, 51, 56, 56, 32, 56, 51, 32, 51, 57, 48, 84, 53, 54, 32, 51, 57, 55, 76, 53, 49, 32, 50, 56, 54, 81, 49, 48, 56, 32, 51, 50, 53, 32, 49, 56, 48, 32, 51, 50, 53, 81, 50, 50, 54, 32, 51, 50, 53, 32, 50, 54, 55, 32, 51, 48, 53, 84, 51, 51, 51, 32, 50, 52, 56, 84, 51, 53, 55, 32, 49, 54, 54, 81, 51, 53, 55, 32, 49, 49, 54, 32, 51, 50, 55, 32, 55, 56, 84, 50, 52, 56, 32, 50, 48, 84, 49, 52, 54, 32, 48, 81, 49, 49, 48, 10, 48, 32, 55, 56, 32, 49, 50, 84, 50, 51, 32, 53, 50, 84, 48, 32, 49, 49, 53, 81, 48, 32, 49, 53, 50, 32, 50, 51, 32, 49, 55, 53, 81, 51, 52, 32, 49, 56, 54, 32, 52, 54, 32, 49, 57, 50, 84, 55, 53, 32, 49, 57, 56, 81, 56, 57, 32, 49, 57, 56, 32, 49, 48, 49, 32, 49, 57, 50, 81, 49, 49, 52, 32, 49, 56, 56, 32, 49, 50, 52, 32, 49, 55, 54, 81, 49, 52, 52, 32, 49, 53, 52, 32, 49, 52, 52, 32, 49, 50, 54, 81, 49, 52, 52, 32, 49, 50, 48, 32, 49, 52, 48, 32, 49, 48, 56, 76, 49, 50, 54, 32, 56, 56, 76, 49, 49, 51, 32, 55, 49, 81, 49, 49, 48, 32, 54, 54, 32, 49, 49, 48, 32, 53, 55, 81, 49, 49, 48, 32, 51, 52, 32, 49, 52, 54, 32, 51, 52, 81, 49, 57, 51, 32, 51, 52, 32, 50, 49, 53, 32, 55, 50, 84, 50, 51, 56, 32, 49, 54, 54, 81, 50, 51, 56, 32, 49, 57, 51, 32, 50, 50, 55, 32, 50, 50, 49, 84, 49, 57, 52, 32, 50, 54, 56, 84, 49, 52, 49, 32, 50, 56, 56, 81, 49, 50, 48, 32, 50, 56, 56, 32, 57, 53, 32, 50, 55, 54, 84, 52, 57, 32, 50, 51, 55, 72, 49, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 54, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 105, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 52, 34, 32, 100, 61, 34, 77, 50, 48, 51, 32, 50, 53, 57, 81, 49, 55, 53, 32, 50, 53, 57, 32, 49, 53, 54, 32, 50, 50, 51, 81, 49, 52, 56, 32, 50, 48, 57, 32, 49, 52, 49, 32, 49, 56, 55, 81, 49, 51, 55, 32, 49, 54, 57, 32, 49, 51, 55, 32, 49, 54, 48, 84, 49, 51, 54, 32, 49, 52, 53, 81, 49, 51, 54, 32, 49, 48, 49, 32, 49, 53, 52, 32, 54, 57, 84, 50, 48, 54, 32, 51, 55, 81, 50, 51, 55, 32, 51, 55, 32, 50, 53, 52, 32, 55, 51, 84, 50, 55, 50, 32, 49, 54, 52, 81, 50, 55, 50, 32, 49, 56, 52, 32, 50, 54, 53, 32, 49, 57, 57, 81, 50, 54, 49, 32, 50, 49, 53, 32, 50, 52, 57, 32, 50, 51, 49, 81, 50, 50, 57, 32, 50, 53, 57, 32, 50, 48, 51, 32, 50, 53, 57, 90, 77, 49, 50, 54, 32, 50, 53, 50, 81, 49, 56, 56, 32, 50, 56, 57, 32, 50, 52, 57, 32, 50, 56, 57, 81, 50, 56, 57, 10, 50, 56, 57, 32, 51, 50, 51, 32, 50, 55, 52, 84, 51, 55, 53, 32, 50, 50, 56, 81, 51, 57, 52, 32, 50, 48, 48, 32, 51, 57, 52, 32, 49, 54, 52, 81, 51, 57, 52, 32, 49, 49, 54, 32, 51, 54, 56, 32, 56, 49, 84, 50, 57, 54, 32, 50, 49, 81, 50, 53, 49, 32, 48, 32, 50, 48, 54, 32, 48, 81, 49, 52, 49, 32, 48, 32, 57, 52, 32, 51, 54, 81, 55, 50, 32, 53, 52, 32, 53, 53, 32, 55, 55, 84, 50, 53, 32, 49, 51, 50, 84, 57, 32, 49, 56, 52, 84, 50, 32, 50, 50, 49, 84, 48, 32, 50, 53, 50, 81, 48, 32, 50, 54, 56, 32, 49, 32, 50, 56, 53, 84, 55, 32, 51, 50, 53, 81, 49, 50, 32, 51, 52, 51, 32, 49, 55, 32, 51, 54, 49, 84, 51, 49, 32, 51, 57, 54, 81, 53, 57, 32, 52, 54, 50, 32, 49, 49, 54, 32, 52, 56, 55, 81, 49, 56, 48, 32, 53, 49, 54, 32, 50, 50, 53, 32, 53, 49, 54, 81, 50, 54, 56, 32, 53, 49, 54, 32, 51, 48, 50, 32, 52, 57, 57, 84, 51, 53, 51, 32, 52, 53, 54, 81, 51, 55, 49, 32, 52, 51, 50, 32, 51, 55, 49, 32, 52, 48, 55, 81, 51, 55, 49, 32, 51, 55, 51, 32, 51, 52, 57, 10, 51, 53, 51, 81, 51, 52, 50, 32, 51, 52, 55, 32, 51, 50, 55, 32, 51, 52, 48, 84, 50, 57, 54, 32, 51, 51, 51, 81, 50, 55, 48, 32, 51, 51, 51, 32, 50, 52, 54, 32, 51, 53, 49, 81, 50, 51, 51, 32, 51, 54, 49, 32, 50, 50, 57, 32, 51, 54, 57, 84, 50, 50, 50, 32, 51, 57, 53, 76, 50, 51, 51, 32, 52, 50, 54, 81, 50, 52, 50, 32, 52, 52, 57, 32, 50, 52, 50, 32, 52, 54, 50, 81, 50, 52, 50, 32, 52, 55, 57, 32, 50, 49, 55, 32, 52, 55, 57, 81, 49, 55, 53, 32, 52, 55, 57, 32, 49, 53, 48, 32, 52, 51, 48, 84, 49, 50, 52, 32, 50, 56, 57, 76, 49, 50, 54, 32, 50, 53, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 55, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 101, 118, 101, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 48, 52, 34, 32, 100, 61, 34, 77, 51, 51, 48, 32, 51, 55, 53, 81, 51, 49, 55, 32, 51, 54, 52, 32, 51, 48, 54, 32, 51, 53, 54, 81, 50, 57, 57, 32, 51, 53, 49, 32, 50, 55, 56, 32, 51, 52, 48, 84, 50, 51, 53, 32, 51, 50, 57, 81, 50, 48, 56, 32, 51, 51, 50, 32, 49, 57, 49, 32, 51, 52, 54, 81, 49, 54, 54, 32, 51, 55, 53, 32, 49, 52, 51, 32, 51, 57, 49, 81, 49, 50, 51, 32, 52, 48, 56, 32, 49, 48, 49, 32, 52, 48, 56, 81, 54, 54, 32, 52, 48, 56, 32, 51, 55, 32, 51, 52, 50, 72, 48, 86, 52, 57, 55, 72, 51, 55, 81, 52, 51, 32, 52, 55, 48, 32, 53, 56, 32, 52, 54, 55, 81, 55, 48, 32, 52, 54, 56, 32, 56, 48, 32, 52, 55, 53, 76, 57, 48, 32, 52, 56, 48, 76, 49, 48, 52, 32, 52, 57, 48, 81, 49, 48, 56, 32, 52, 57, 51, 32, 49, 49, 55, 32, 52, 57, 55, 84, 49, 51, 54, 10, 53, 48, 54, 84, 49, 54, 48, 32, 53, 49, 49, 81, 50, 49, 56, 32, 53, 49, 49, 32, 50, 54, 56, 32, 52, 53, 55, 81, 50, 56, 53, 32, 52, 51, 53, 32, 51, 49, 50, 32, 52, 51, 49, 81, 51, 53, 50, 32, 52, 51, 53, 32, 51, 54, 53, 32, 52, 57, 55, 72, 52, 48, 52, 81, 52, 48, 48, 32, 52, 54, 51, 32, 51, 57, 51, 32, 52, 51, 52, 84, 51, 56, 52, 32, 51, 57, 56, 84, 51, 55, 53, 32, 51, 55, 54, 81, 51, 54, 56, 32, 51, 53, 55, 32, 51, 53, 52, 32, 51, 51, 48, 76, 51, 50, 49, 32, 50, 55, 48, 81, 51, 48, 51, 32, 50, 52, 48, 32, 50, 57, 48, 32, 50, 49, 49, 84, 50, 54, 56, 32, 49, 53, 49, 81, 50, 53, 50, 32, 57, 52, 32, 50, 53, 50, 32, 48, 72, 55, 56, 81, 55, 56, 32, 54, 56, 32, 49, 49, 49, 32, 49, 50, 50, 81, 49, 52, 54, 32, 49, 55, 52, 32, 50, 49, 55, 32, 50, 51, 57, 81, 50, 56, 52, 32, 50, 57, 54, 32, 51, 48, 57, 32, 51, 50, 49, 81, 51, 51, 48, 32, 51, 52, 50, 32, 51, 51, 48, 32, 51, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 56, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 56, 54, 34, 32, 100, 61, 34].concat([77, 49, 51, 54, 32, 50, 51, 51, 81, 49, 48, 52, 32, 50, 48, 54, 32, 57, 48, 32, 49, 56, 55, 84, 55, 50, 32, 49, 51, 56, 81, 56, 49, 32, 57, 50, 32, 49, 49, 49, 32, 54, 53, 84, 49, 57, 49, 32, 51, 55, 81, 50, 50, 52, 32, 51, 55, 32, 50, 53, 50, 32, 53, 52, 81, 50, 55, 53, 32, 55, 49, 32, 50, 56, 52, 32, 49, 48, 55, 81, 50, 56, 52, 32, 49, 50, 56, 32, 50, 54, 55, 32, 49, 52, 56, 84, 50, 50, 53, 32, 49, 56, 51, 76, 49, 55, 49, 32, 50, 49, 51, 81, 49, 51, 57, 32, 50, 50, 57, 32, 49, 51, 54, 32, 50, 51, 51, 90, 77, 50, 52, 55, 32, 51, 48, 55, 81, 51, 48, 48, 32, 51, 52, 57, 32, 51, 48, 48, 32, 51, 57, 55, 81, 51, 48, 48, 32, 52, 51, 55, 32, 50, 54, 53, 32, 52, 53, 54, 84, 49, 56, 52, 32, 52, 55, 54, 81, 49, 53, 48, 32, 52, 55, 54, 10, 49, 50, 55, 32, 52, 54, 50, 84, 49, 48, 52, 32, 52, 50, 51, 81, 49, 48, 54, 32, 52, 48, 57, 32, 49, 49, 51, 32, 51, 57, 54, 84, 49, 51, 49, 32, 51, 55, 49, 81, 49, 53, 55, 32, 51, 52, 56, 32, 49, 56, 48, 32, 51, 51, 54, 76, 50, 49, 50, 32, 51, 50, 50, 76, 50, 52, 55, 32, 51, 48, 55, 90, 77, 57, 50, 32, 50, 53, 54, 81, 53, 56, 32, 50, 55, 50, 32, 51, 52, 32, 51, 48, 55, 81, 50, 49, 32, 51, 50, 54, 32, 49, 54, 32, 51, 52, 51, 84, 49, 48, 32, 51, 55, 57, 81, 49, 48, 32, 52, 48, 57, 32, 50, 53, 32, 52, 51, 53, 81, 52, 51, 32, 52, 54, 50, 32, 55, 48, 32, 52, 56, 48, 81, 49, 50, 52, 32, 53, 49, 53, 32, 49, 57, 52, 32, 53, 49, 53, 81, 50, 48, 53, 32, 53, 49, 53, 32, 50, 49, 50, 32, 53, 49, 53, 84, 50, 51, 49, 32, 53, 49, 50, 81, 50, 51, 57, 32, 53, 49, 50, 32, 50, 52, 53, 32, 53, 49, 49, 84, 50, 55, 50, 32, 53, 48, 51, 81, 51, 49, 51, 32, 52, 57, 49, 32, 51, 52, 50, 32, 52, 54, 53, 84, 51, 55, 49, 32, 52, 48, 48, 81, 51, 55, 49, 32, 51, 52, 51, 32, 51, 48, 48, 10, 50, 56, 49, 81, 51, 51, 53, 32, 50, 54, 49, 32, 51, 54, 48, 32, 50, 50, 55, 84, 51, 56, 54, 32, 49, 53, 56, 81, 51, 56, 54, 32, 49, 49, 48, 32, 51, 53, 50, 32, 55, 51, 84, 50, 54, 56, 32, 49, 56, 84, 49, 55, 49, 32, 48, 81, 49, 50, 55, 32, 48, 32, 56, 56, 32, 49, 54, 81, 53, 48, 32, 50, 57, 32, 50, 52, 32, 54, 49, 81, 48, 32, 57, 51, 32, 48, 32, 49, 51, 54, 81, 48, 32, 50, 48, 57, 32, 57, 50, 32, 50, 53, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 57, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 110, 105, 110, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 55, 34, 32, 100, 61, 34, 77, 49, 57, 49, 32, 50, 54, 49, 81, 50, 50, 49, 32, 50, 54, 49, 32, 50, 51, 57, 32, 50, 57, 52, 84, 50, 53, 55, 32, 51, 55, 53, 81, 50, 53, 55, 32, 52, 49, 50, 32, 50, 51, 55, 32, 52, 52, 52, 84, 49, 57, 49, 32, 52, 55, 54, 81, 49, 54, 51, 32, 52, 55, 54, 32, 49, 52, 50, 32, 52, 52, 51, 81, 49, 50, 51, 32, 52, 48, 55, 32, 49, 50, 51, 32, 51, 54, 56, 81, 49, 50, 51, 32, 51, 50, 52, 32, 49, 52, 49, 32, 50, 57, 51, 84, 49, 57, 49, 32, 50, 54, 49, 90, 77, 50, 54, 56, 32, 50, 54, 49, 81, 50, 49, 57, 32, 50, 50, 52, 32, 49, 52, 53, 32, 50, 50, 52, 81, 49, 48, 48, 32, 50, 50, 52, 32, 54, 52, 32, 50, 52, 53, 81, 50, 57, 32, 50, 54, 51, 32, 49, 50, 32, 51, 48, 51, 81, 54, 32, 51, 49, 55, 32, 48, 32, 51, 53, 54, 81, 48, 32, 51, 57, 54, 10, 50, 51, 32, 52, 51, 49, 84, 57, 48, 32, 52, 57, 49, 81, 49, 51, 54, 32, 53, 49, 51, 32, 49, 57, 52, 32, 53, 49, 51, 81, 50, 52, 53, 32, 53, 49, 51, 32, 50, 56, 51, 32, 52, 57, 52, 84, 51, 52, 53, 32, 52, 52, 49, 84, 51, 56, 51, 32, 51, 54, 52, 84, 51, 57, 55, 32, 50, 55, 49, 81, 51, 57, 55, 32, 50, 50, 52, 32, 51, 56, 51, 32, 49, 55, 53, 84, 51, 52, 50, 32, 56, 56, 84, 50, 55, 52, 32, 50, 54, 81, 50, 54, 52, 32, 50, 48, 32, 50, 53, 52, 32, 49, 53, 84, 50, 51, 49, 32, 55, 81, 50, 49, 49, 32, 48, 32, 49, 56, 52, 32, 48, 81, 49, 51, 54, 32, 48, 32, 49, 48, 49, 32, 49, 54, 84, 52, 53, 32, 53, 55, 84, 50, 52, 32, 49, 48, 52, 81, 50, 52, 32, 49, 51, 56, 32, 52, 54, 32, 49, 54, 49, 81, 54, 57, 32, 49, 56, 50, 32, 57, 55, 32, 49, 56, 50, 81, 49, 50, 55, 32, 49, 56, 50, 32, 49, 52, 57, 32, 49, 54, 52, 84, 49, 55, 49, 32, 49, 49, 53, 81, 49, 55, 49, 32, 49, 48, 51, 32, 49, 54, 50, 32, 56, 48, 76, 49, 53, 53, 32, 54, 51, 76, 49, 53, 48, 32, 52, 56, 81, 49, 53, 51, 10, 51, 53, 32, 49, 56, 50, 32, 51, 53, 81, 50, 54, 56, 32, 51, 53, 32, 50, 54, 56, 32, 50, 54, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 58, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 111, 108, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 51, 34, 32, 100, 61, 34, 77, 55, 55, 32, 49, 48, 55, 76, 48, 32, 45, 49, 48, 55, 76, 45, 55, 54, 32, 49, 48, 55, 72, 45, 52, 48, 81, 45, 50, 53, 32, 49, 48, 49, 32, 45, 49, 52, 32, 55, 55, 81, 45, 57, 32, 54, 54, 32, 48, 32, 54, 51, 81, 54, 32, 54, 53, 32, 50, 48, 32, 56, 57, 81, 50, 55, 32, 49, 48, 50, 32, 52, 48, 32, 49, 48, 55, 72, 55, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 101, 109, 105, 99, 111, 108, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 51, 34, 32, 100, 61, 34, 77, 55, 55, 32, 45, 49, 48, 55, 72, 52, 48, 81, 50, 53, 32, 45, 49, 48, 49, 32, 49, 52, 32, 45, 55, 55, 81, 57, 32, 45, 54, 54, 32, 48, 32, 45, 54, 51, 81, 45, 54, 32, 45, 54, 53, 32, 45, 50, 48, 32, 45, 56, 57, 81, 45, 50, 55, 32, 45, 49, 48, 50, 32, 45, 52, 48, 32, 45, 49, 48, 55, 72, 45, 55, 54, 76, 48, 32, 49, 48, 55, 76, 55, 55, 32, 45, 49, 48, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 108, 116, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 108, 101, 115, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 52, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 45, 49, 51, 50, 72, 49, 48, 48, 76, 45, 56, 32, 52, 56, 76, 45, 57, 48, 32, 45, 49, 51, 50, 72, 45, 49, 49, 52, 76, 48, 32, 49, 51, 51, 76, 49, 53, 57, 32, 45, 49, 51, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 61, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 113, 117, 97, 108, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 45, 49, 54, 51, 32, 45, 49, 57, 51, 86, 45, 49, 49, 48, 76, 49, 54, 51, 32, 53, 54, 86, 45, 51, 48, 76, 45, 49, 54, 51, 32, 45, 49, 57, 51, 90, 77, 45, 49, 54, 51, 32, 45, 53, 55, 86, 50, 55, 76, 49, 54, 51, 32, 49, 57, 51, 86, 49, 49, 48, 76, 45, 49, 54, 51, 32, 45, 53, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 103, 116, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 114, 101, 97, 116, 101, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 52, 55, 34, 32, 100, 61, 34, 77, 45, 49, 55, 51, 32, 49, 49, 56, 76, 49, 55, 52, 32, 45, 49, 76, 45, 49, 55, 51, 32, 45, 49, 49, 56, 86, 45, 57, 48, 76, 56, 52, 32, 45, 49, 76, 45, 49, 55, 51, 32, 57, 48, 86, 49, 49, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 63, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 101, 115, 116, 105, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 53, 51, 34, 32, 100, 61, 34, 77, 45, 51, 55, 54, 32, 45, 53, 55, 72, 45, 51, 51, 56, 81, 45, 51, 51, 56, 32, 45, 51, 53, 32, 45, 51, 51, 55, 32, 45, 50, 54, 84, 45, 51, 50, 57, 32, 52, 84, 45, 51, 49, 56, 32, 51, 51, 84, 45, 51, 48, 53, 32, 53, 56, 81, 45, 50, 55, 55, 32, 49, 48, 57, 32, 45, 50, 50, 57, 32, 49, 52, 55, 84, 45, 49, 49, 55, 32, 50, 48, 57, 84, 49, 32, 50, 51, 50, 81, 55, 56, 32, 50, 51, 50, 32, 49, 53, 52, 32, 49, 57, 53, 84, 50, 56, 51, 32, 57, 48, 81, 50, 57, 53, 32, 55, 51, 32, 51, 48, 53, 32, 53, 53, 84, 51, 50, 50, 32, 49, 56, 81, 51, 51, 54, 32, 45, 49, 57, 32, 51, 51, 54, 32, 45, 53, 55, 72, 51, 55, 55, 81, 51, 55, 50, 32, 45, 49, 50, 32, 51, 54, 52, 32, 50, 48, 81, 51, 53, 55, 32, 53, 54, 32, 51, 52, 49, 32, 57, 52, 81, 51, 49, 51, 10, 49, 54, 52, 32, 50, 54, 52, 32, 50, 50, 51, 84, 49, 52, 56, 32, 51, 49, 52, 81, 49, 49, 53, 32, 51, 51, 48, 32, 55, 56, 32, 51, 51, 57, 84, 49, 32, 51, 52, 56, 81, 45, 55, 56, 32, 51, 52, 56, 32, 45, 49, 52, 53, 32, 51, 49, 54, 84, 45, 50, 54, 50, 32, 50, 50, 53, 81, 45, 50, 56, 54, 32, 49, 57, 56, 32, 45, 51, 48, 53, 32, 49, 54, 55, 84, 45, 51, 52, 49, 32, 57, 53, 81, 45, 51, 53, 51, 32, 54, 49, 32, 45, 51, 54, 50, 32, 50, 50, 84, 45, 51, 55, 54, 32, 45, 53, 55, 90, 77, 45, 54, 50, 32, 49, 81, 45, 54, 50, 32, 45, 50, 50, 32, 45, 52, 52, 32, 45, 51, 57, 84, 45, 49, 32, 45, 53, 55, 81, 50, 55, 32, 45, 53, 55, 32, 52, 53, 32, 45, 52, 48, 84, 54, 52, 32, 49, 81, 54, 52, 32, 50, 51, 32, 52, 55, 32, 52, 48, 84, 45, 49, 32, 53, 55, 81, 45, 50, 55, 32, 53, 55, 32, 45, 52, 52, 32, 52, 48, 84, 45, 54, 50, 32, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 64, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 53, 51, 34, 32, 100, 61, 34, 77, 54, 52, 32, 45, 49, 81, 54, 52, 32, 45, 50, 51, 32, 52, 54, 32, 45, 52, 49, 81, 50, 54, 32, 45, 53, 56, 32, 45, 49, 32, 45, 53, 56, 81, 45, 50, 52, 32, 45, 53, 56, 32, 45, 52, 51, 32, 45, 52, 48, 84, 45, 54, 50, 32, 45, 49, 81, 45, 54, 50, 32, 50, 50, 32, 45, 52, 52, 32, 51, 57, 84, 45, 49, 32, 53, 55, 81, 50, 55, 32, 53, 55, 32, 52, 53, 32, 52, 48, 84, 54, 52, 32, 45, 49, 90, 77, 51, 55, 55, 32, 53, 55, 81, 51, 55, 50, 32, 49, 50, 32, 51, 54, 52, 32, 45, 50, 48, 81, 51, 53, 55, 32, 45, 53, 54, 32, 51, 52, 49, 32, 45, 57, 52, 81, 51, 49, 51, 32, 45, 49, 54, 52, 32, 50, 54, 52, 32, 45, 50, 50, 51, 84, 49, 52, 56, 32, 45, 51, 49, 52, 81, 49, 49, 53, 32, 45, 51, 51, 48, 32, 55, 56, 32, 45, 51, 51, 57, 84, 49, 32, 45, 51, 52, 56, 81, 45, 55, 56, 10, 45, 51, 52, 56, 32, 45, 49, 52, 52, 32, 45, 51, 49, 54, 84, 45, 50, 54, 50, 32, 45, 50, 50, 54, 81, 45, 50, 56, 54, 32, 45, 49, 57, 56, 32, 45, 51, 48, 53, 32, 45, 49, 54, 55, 84, 45, 51, 52, 49, 32, 45, 57, 53, 81, 45, 51, 53, 51, 32, 45, 54, 49, 32, 45, 51, 54, 50, 32, 45, 50, 50, 84, 45, 51, 55, 54, 32, 53, 55, 72, 45, 51, 51, 56, 81, 45, 51, 51, 56, 32, 51, 53, 32, 45, 51, 51, 55, 32, 50, 54, 84, 45, 51, 51, 48, 32, 45, 50, 84, 45, 51, 49, 55, 32, 45, 51, 53, 81, 45, 51, 49, 52, 32, 45, 52, 50, 32, 45, 51, 48, 53, 32, 45, 53, 56, 81, 45, 50, 55, 54, 32, 45, 49, 49, 48, 32, 45, 50, 50, 54, 32, 45, 49, 52, 57, 84, 45, 49, 49, 55, 32, 45, 50, 49, 48, 84, 49, 32, 45, 50, 51, 49, 81, 56, 49, 32, 45, 50, 51, 49, 32, 49, 53, 54, 32, 45, 49, 57, 53, 84, 50, 56, 51, 32, 45, 56, 57, 81, 51, 48, 57, 32, 45, 53, 52, 32, 51, 50, 50, 32, 45, 49, 56, 84, 51, 51, 54, 32, 53, 55, 72, 51, 55, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 65, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 56, 34, 32, 100, 61, 34, 77, 49, 32, 53, 56, 76, 45, 50, 54, 32, 51, 48, 76, 45, 54, 56, 32, 45, 49, 50, 81, 45, 57, 50, 32, 45, 51, 51, 32, 45, 49, 49, 51, 32, 45, 52, 53, 84, 45, 49, 53, 48, 32, 45, 53, 56, 81, 45, 49, 54, 50, 32, 45, 53, 56, 32, 45, 49, 55, 48, 32, 45, 53, 49, 84, 45, 49, 56, 55, 32, 45, 51, 48, 76, 45, 49, 57, 57, 32, 45, 52, 81, 45, 50, 48, 52, 32, 49, 48, 32, 45, 50, 48, 52, 32, 49, 53, 84, 45, 50, 48, 52, 32, 50, 51, 81, 45, 50, 48, 52, 32, 54, 54, 32, 45, 49, 54, 52, 32, 54, 54, 76, 45, 49, 53, 53, 32, 54, 52, 76, 45, 49, 52, 52, 32, 53, 53, 76, 45, 49, 51, 55, 32, 52, 56, 76, 45, 49, 50, 57, 32, 52, 51, 81, 45, 49, 50, 49, 32, 52, 48, 32, 45, 49, 49, 51, 32, 52, 48, 81, 45, 56, 55, 32, 52, 48, 32, 45, 56, 48, 32, 54, 56, 81, 45, 56, 48, 10, 57, 53, 32, 45, 57, 56, 32, 49, 48, 56, 84, 45, 49, 51, 56, 32, 49, 50, 50, 81, 45, 49, 53, 52, 32, 49, 50, 50, 32, 45, 49, 54, 49, 32, 49, 50, 49, 84, 45, 49, 55, 57, 32, 49, 49, 52, 81, 45, 49, 57, 54, 32, 49, 48, 55, 32, 45, 50, 49, 48, 32, 57, 48, 81, 45, 50, 51, 52, 32, 54, 48, 32, 45, 50, 51, 52, 32, 49, 55, 81, 45, 50, 51, 52, 32, 45, 49, 53, 32, 45, 50, 50, 50, 32, 45, 52, 52, 84, 45, 49, 56, 53, 32, 45, 57, 55, 81, 45, 49, 53, 56, 32, 45, 49, 49, 57, 32, 45, 49, 51, 48, 32, 45, 49, 50, 50, 81, 45, 57, 49, 32, 45, 49, 50, 50, 32, 45, 53, 53, 32, 45, 49, 48, 49, 81, 45, 52, 50, 32, 45, 57, 51, 32, 45, 51, 55, 32, 45, 57, 48, 81, 45, 50, 53, 32, 45, 56, 48, 32, 45, 49, 57, 32, 45, 55, 53, 84, 45, 51, 32, 45, 54, 49, 84, 49, 52, 32, 45, 52, 52, 76, 55, 57, 32, 50, 51, 76, 56, 57, 32, 51, 50, 76, 49, 49, 49, 32, 52, 56, 81, 49, 51, 49, 32, 53, 57, 32, 49, 52, 56, 32, 53, 57, 81, 49, 54, 49, 32, 53, 57, 32, 49, 55, 50, 32, 53, 51, 84, 49, 56, 57, 10, 51, 55, 81, 50, 48, 51, 32, 49, 53, 32, 50, 48, 51, 32, 45, 49, 49, 81, 50, 48, 51, 32, 45, 51, 52, 32, 49, 57, 51, 32, 45, 53, 48, 84, 49, 54, 52, 32, 45, 54, 54, 81, 49, 54, 49, 32, 45, 54, 53, 32, 49, 53, 55, 32, 45, 54, 51, 84, 49, 52, 55, 32, 45, 53, 55, 76, 49, 50, 57, 32, 45, 52, 52, 81, 49, 50, 52, 32, 45, 52, 48, 32, 49, 49, 49, 32, 45, 52, 48, 81, 57, 57, 32, 45, 52, 48, 32, 56, 57, 32, 45, 53, 48, 81, 56, 49, 32, 45, 54, 48, 32, 55, 57, 32, 45, 55, 55, 81, 55, 57, 32, 45, 57, 55, 32, 57, 56, 32, 45, 49, 49, 48, 81, 49, 48, 54, 32, 45, 49, 49, 52, 32, 49, 49, 53, 32, 45, 49, 49, 55, 84, 49, 51, 55, 32, 45, 49, 50, 49, 81, 49, 54, 55, 32, 45, 49, 50, 49, 32, 49, 56, 56, 32, 45, 49, 48, 51, 84, 50, 50, 50, 32, 45, 53, 57, 84, 50, 51, 52, 32, 52, 81, 50, 51, 52, 32, 51, 57, 32, 50, 50, 50, 32, 54, 51, 81, 50, 49, 51, 32, 56, 55, 32, 49, 56, 56, 32, 49, 48, 52, 84, 49, 50, 56, 32, 49, 50, 50, 81, 57, 52, 32, 49, 50, 50, 32, 54, 53, 32, 49, 48, 55, 81, 53, 50, 10, 57, 57, 32, 51, 53, 32, 56, 54, 84, 49, 32, 53, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 66, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 66, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 53, 34, 32, 100, 61, 34, 77, 56, 54, 32, 50, 48, 48, 81, 54, 51, 32, 50, 50, 54, 32, 53, 56, 32, 50, 54, 55, 81, 53, 56, 32, 50, 56, 51, 32, 54, 54, 32, 51, 48, 48, 84, 56, 57, 32, 51, 50, 57, 81, 49, 50, 49, 32, 51, 53, 50, 32, 49, 54, 55, 32, 51, 53, 50, 81, 50, 49, 49, 32, 51, 53, 50, 32, 50, 51, 56, 32, 51, 50, 53, 84, 50, 54, 54, 32, 50, 54, 55, 81, 50, 54, 54, 32, 50, 52, 50, 32, 50, 52, 57, 32, 50, 50, 50, 84, 49, 57, 56, 32, 49, 56, 54, 81, 50, 51, 48, 32, 49, 52, 56, 32, 50, 51, 48, 32, 49, 48, 54, 81, 50, 51, 48, 32, 55, 49, 32, 50, 48, 48, 32, 52, 53, 81, 49, 54, 56, 32, 50, 49, 32, 49, 49, 48, 32, 50, 49, 81, 53, 57, 32, 50, 49, 32, 51, 48, 32, 52, 54, 84, 48, 32, 49, 48, 54, 81, 48, 32, 49, 51, 51, 32, 50, 50, 32, 49, 54, 49, 81, 52, 49, 32, 49, 56, 53, 10, 56, 54, 32, 50, 48, 48, 90, 77, 57, 56, 32, 49, 56, 56, 81, 54, 57, 32, 49, 55, 48, 32, 53, 53, 32, 49, 53, 48, 84, 52, 48, 32, 49, 48, 54, 81, 52, 51, 32, 55, 50, 32, 54, 49, 32, 53, 57, 84, 49, 49, 54, 32, 52, 49, 81, 49, 52, 49, 32, 52, 49, 32, 49, 53, 52, 32, 53, 51, 84, 49, 54, 56, 32, 57, 49, 81, 49, 54, 52, 32, 49, 50, 51, 32, 57, 56, 32, 49, 56, 56, 90, 77, 49, 56, 55, 32, 50, 48, 48, 81, 50, 50, 54, 32, 50, 51, 48, 32, 50, 50, 54, 32, 50, 55, 49, 81, 50, 50, 54, 32, 50, 57, 54, 32, 50, 49, 48, 32, 51, 49, 53, 84, 49, 54, 56, 32, 51, 51, 53, 81, 49, 50, 54, 32, 51, 51, 53, 32, 49, 50, 49, 32, 50, 57, 49, 76, 49, 50, 51, 32, 50, 55, 57, 81, 49, 51, 52, 32, 50, 52, 54, 32, 49, 56, 55, 32, 50, 48, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 67, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 67, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 48, 54, 56, 34, 32, 100, 61, 34, 77, 49, 53, 54, 32, 55, 56, 76, 49, 54, 52, 32, 55, 51, 81, 49, 53, 49, 32, 52, 48, 32, 49, 51, 50, 32, 50, 51, 81, 49, 48, 53, 32, 45, 55, 32, 54, 55, 32, 45, 55, 81, 51, 49, 32, 45, 55, 32, 49, 52, 32, 49, 55, 81, 48, 32, 51, 52, 32, 48, 32, 54, 57, 81, 48, 32, 57, 57, 32, 49, 49, 32, 49, 50, 56, 84, 52, 53, 32, 49, 57, 48, 81, 57, 48, 32, 50, 53, 50, 32, 49, 52, 48, 32, 50, 53, 50, 81, 49, 53, 57, 32, 50, 53, 50, 32, 49, 55, 48, 32, 50, 52, 51, 84, 49, 56, 52, 32, 50, 50, 50, 76, 49, 56, 53, 32, 50, 49, 56, 81, 49, 56, 53, 32, 49, 57, 53, 32, 49, 54, 52, 32, 49, 57, 53, 81, 49, 53, 54, 32, 49, 57, 55, 32, 49, 53, 50, 32, 50, 48, 48, 81, 49, 52, 55, 32, 50, 48, 55, 32, 49, 52, 55, 32, 50, 49, 51, 81, 49, 52, 55, 32, 50, 49, 56, 10, 49, 53, 49, 32, 50, 50, 53, 76, 49, 53, 53, 32, 50, 51, 50, 81, 49, 53, 53, 32, 50, 51, 56, 32, 49, 52, 50, 32, 50, 51, 57, 81, 57, 53, 32, 50, 51, 57, 32, 54, 52, 32, 49, 53, 54, 81, 51, 57, 32, 57, 50, 32, 51, 57, 32, 53, 48, 81, 51, 57, 32, 54, 32, 55, 51, 32, 54, 81, 57, 53, 32, 54, 32, 49, 49, 48, 32, 49, 55, 81, 49, 51, 50, 32, 51, 51, 32, 49, 53, 54, 32, 55, 56, 90, 77, 51, 48, 55, 32, 49, 48, 50, 76, 50, 55, 50, 32, 48, 72, 50, 51, 50, 81, 50, 53, 50, 32, 53, 49, 32, 50, 54, 56, 32, 49, 48, 56, 76, 50, 56, 48, 32, 49, 53, 57, 81, 50, 56, 53, 32, 49, 56, 54, 32, 50, 56, 53, 32, 50, 48, 52, 81, 50, 56, 53, 32, 50, 49, 55, 32, 50, 56, 51, 32, 50, 50, 52, 84, 50, 55, 48, 32, 50, 51, 51, 81, 50, 53, 55, 32, 50, 51, 51, 32, 50, 51, 52, 32, 49, 57, 52, 76, 50, 49, 57, 32, 49, 54, 49, 76, 50, 48, 57, 32, 49, 54, 52, 81, 50, 49, 54, 32, 49, 56, 50, 32, 50, 50, 48, 32, 49, 57, 49, 81, 50, 50, 57, 32, 50, 49, 48, 32, 50, 52, 50, 32, 50, 50, 52, 81, 50, 54, 49, 10, 50, 53, 48, 32, 50, 56, 55, 32, 50, 53, 48, 81, 51, 48, 50, 32, 50, 53, 48, 32, 51, 49, 48, 32, 50, 51, 54, 81, 51, 49, 55, 32, 50, 50, 48, 32, 51, 49, 55, 32, 50, 48, 48, 76, 51, 49, 52, 32, 49, 54, 54, 76, 51, 49, 48, 32, 49, 52, 53, 76, 51, 51, 50, 32, 49, 57, 57, 81, 51, 54, 49, 32, 50, 53, 49, 32, 51, 57, 55, 32, 50, 53, 49, 81, 52, 48, 56, 32, 50, 53, 49, 32, 52, 49, 51, 32, 50, 52, 54, 81, 52, 50, 50, 32, 50, 52, 48, 32, 52, 50, 50, 32, 50, 50, 53, 81, 52, 50, 50, 32, 50, 49, 54, 32, 52, 49, 57, 32, 50, 49, 48, 84, 52, 48, 52, 32, 50, 48, 50, 76, 51, 57, 52, 32, 50, 48, 52, 81, 51, 57, 48, 32, 50, 48, 55, 32, 51, 56, 55, 32, 50, 50, 48, 81, 51, 56, 55, 32, 50, 50, 54, 32, 51, 56, 52, 32, 50, 51, 48, 81, 51, 56, 51, 32, 50, 51, 48, 32, 51, 56, 50, 32, 50, 51, 49, 81, 51, 52, 57, 32, 50, 51, 49, 32, 51, 48, 55, 32, 49, 48, 50, 90, 77, 52, 55, 57, 32, 49, 48, 54, 81, 53, 48, 52, 32, 49, 49, 55, 32, 53, 49, 57, 32, 49, 50, 55, 84, 53, 53, 50, 10, 49, 53, 54, 81, 53, 56, 50, 32, 49, 56, 56, 32, 53, 56, 50, 32, 50, 49, 55, 81, 53, 56, 50, 32, 50, 50, 53, 32, 53, 55, 55, 32, 50, 51, 50, 84, 53, 54, 51, 32, 50, 52, 48, 81, 53, 51, 54, 32, 50, 52, 48, 32, 53, 49, 48, 32, 49, 57, 49, 81, 52, 56, 56, 32, 49, 53, 50, 32, 52, 55, 57, 32, 49, 48, 54, 90, 77, 53, 55, 54, 32, 55, 51, 76, 53, 56, 54, 32, 54, 57, 81, 53, 55, 52, 32, 52, 57, 32, 53, 54, 49, 32, 51, 51, 84, 53, 51, 53, 32, 56, 81, 53, 49, 51, 32, 45, 56, 32, 52, 56, 54, 32, 45, 56, 81, 52, 53, 52, 32, 45, 56, 32, 52, 51, 57, 32, 49, 51, 81, 52, 51, 49, 32, 50, 52, 32, 52, 50, 57, 32, 51, 53, 84, 52, 50, 54, 32, 54, 49, 81, 52, 50, 54, 32, 49, 50, 52, 32, 52, 55, 52, 32, 49, 56, 55, 84, 53, 55, 49, 32, 50, 53, 48, 81, 53, 56, 55, 32, 50, 53, 48, 32, 54, 48, 48, 32, 50, 51, 57, 81, 54, 48, 57, 32, 50, 50, 56, 32, 54, 49, 49, 32, 50, 49, 48, 81, 54, 49, 49, 32, 49, 55, 48, 32, 53, 54, 55, 32, 49, 51, 57, 81, 53, 52, 56, 32, 49, 50, 53, 32, 53, 50, 54, 10, 49, 49, 52, 84, 52, 55, 53, 32, 57, 51, 76, 52, 54, 56, 32, 55, 50, 76, 52, 54, 53, 32, 52, 48, 81, 52, 54, 53, 32, 50, 51, 32, 52, 55, 49, 32, 49, 53, 84, 52, 57, 55, 32, 54, 81, 53, 49, 53, 32, 54, 32, 53, 52, 48, 32, 50, 54, 81, 53, 53, 57, 32, 52, 50, 32, 53, 55, 54, 32, 55, 51, 90, 77, 54, 50, 49, 32, 51, 52, 81, 54, 50, 49, 32, 52, 51, 32, 54, 50, 53, 32, 53, 48, 76, 54, 51, 55, 32, 53, 54, 81, 54, 52, 54, 32, 53, 51, 32, 54, 52, 57, 32, 53, 48, 84, 54, 53, 52, 32, 51, 53, 76, 54, 53, 50, 32, 50, 48, 81, 54, 53, 50, 32, 49, 51, 32, 54, 53, 56, 32, 55, 81, 54, 54, 51, 32, 52, 32, 54, 56, 53, 32, 52, 81, 55, 48, 56, 32, 52, 32, 55, 50, 51, 32, 49, 52, 84, 55, 51, 56, 32, 52, 55, 81, 55, 51, 56, 32, 53, 54, 32, 55, 51, 54, 32, 53, 57, 81, 55, 51, 51, 32, 55, 51, 32, 55, 50, 49, 32, 57, 50, 76, 54, 56, 57, 32, 49, 51, 50, 76, 54, 55, 50, 32, 49, 53, 56, 81, 54, 54, 55, 32, 49, 55, 50, 32, 54, 54, 55, 32, 49, 55, 55, 84, 54, 54, 55, 32, 49, 56, 53, 81, 54, 54, 55, 10, 50, 49, 49, 32, 54, 56, 55, 32, 50, 51, 48, 81, 54, 57, 57, 32, 50, 52, 48, 32, 55, 49, 49, 32, 50, 52, 53, 84, 55, 52, 48, 32, 50, 53, 49, 81, 55, 53, 56, 32, 50, 53, 49, 32, 55, 55, 53, 32, 50, 52, 49, 81, 55, 57, 49, 32, 50, 50, 57, 32, 55, 57, 49, 32, 50, 49, 53, 81, 55, 57, 49, 32, 50, 48, 49, 32, 55, 55, 53, 32, 50, 48, 49, 81, 55, 54, 53, 32, 50, 48, 49, 32, 55, 54, 52, 32, 50, 48, 53, 81, 55, 54, 52, 32, 50, 49, 55, 32, 55, 54, 49, 32, 50, 50, 53, 81, 55, 53, 56, 32, 50, 52, 49, 32, 55, 51, 56, 32, 50, 52, 49, 81, 55, 50, 51, 32, 50, 52, 49, 32, 55, 49, 50, 32, 50, 51, 51, 81, 54, 57, 55, 32, 50, 50, 49, 32, 54, 57, 55, 32, 50, 48, 52, 81, 54, 57, 55, 32, 49, 57, 54, 32, 55, 48, 49, 32, 49, 56, 55, 76, 55, 50, 52, 32, 49, 53, 51, 76, 55, 52, 57, 32, 49, 50, 50, 81, 55, 53, 56, 32, 49, 48, 54, 32, 55, 54, 51, 32, 57, 49, 84, 55, 54, 57, 32, 54, 54, 81, 55, 54, 57, 32, 51, 50, 32, 55, 52, 51, 32, 49, 50, 84, 54, 56, 49, 32, 45, 56, 81, 54, 54, 56, 10, 45, 56, 32, 54, 53, 56, 32, 45, 55, 84, 54, 51, 55, 32, 53, 81, 54, 50, 49, 32, 49, 55, 32, 54, 50, 49, 32, 51, 52, 90, 77, 57, 55, 53, 32, 55, 56, 76, 57, 56, 53, 32, 55, 51, 81, 57, 55, 49, 32, 52, 51, 32, 57, 53, 51, 32, 50, 51, 81, 57, 50, 51, 32, 45, 55, 32, 56, 56, 55, 32, 45, 55, 81, 56, 53, 49, 32, 45, 55, 32, 56, 51, 51, 32, 49, 55, 81, 56, 50, 48, 32, 51, 51, 32, 56, 50, 48, 32, 54, 57, 81, 56, 50, 48, 32, 49, 50, 56, 32, 56, 54, 54, 32, 49, 57, 48, 84, 57, 54, 48, 32, 50, 53, 50, 81, 57, 55, 57, 32, 50, 53, 50, 32, 57, 57, 48, 32, 50, 52, 51, 81, 49, 48, 48, 51, 32, 50, 51, 53, 32, 49, 48, 48, 52, 32, 50, 50, 50, 86, 50, 49, 56, 81, 49, 48, 48, 52, 32, 49, 57, 53, 32, 57, 56, 53, 32, 49, 57, 53, 81, 57, 55, 53, 32, 49, 57, 55, 32, 57, 55, 49, 32, 50, 48, 49, 84, 57, 54, 55, 32, 50, 49, 51, 81, 57, 54, 55, 32, 50, 49, 56, 32, 57, 55, 49, 32, 50, 50, 53, 76, 57, 55, 53, 32, 50, 51, 50, 81, 57, 55, 53, 32, 50, 51, 55, 32, 57, 54, 51, 32, 50, 51, 57, 81, 57, 49, 54, 10, 50, 51, 57, 32, 56, 56, 53, 32, 49, 53, 54, 81, 56, 55, 50, 32, 49, 50, 54, 32, 56, 54, 54, 32, 49, 48, 48, 84, 56, 53, 57, 32, 53, 48, 81, 56, 53, 57, 32, 54, 32, 56, 57, 52, 32, 54, 81, 57, 49, 51, 32, 54, 32, 57, 51, 48, 32, 49, 55, 81, 57, 53, 50, 32, 51, 50, 32, 57, 55, 53, 32, 55, 56, 90, 77, 49, 48, 56, 55, 32, 49, 48, 54, 81, 49, 49, 49, 51, 32, 49, 49, 56, 32, 49, 49, 50, 55, 32, 49, 50, 55, 84, 49, 49, 53, 57, 32, 49, 53, 54, 81, 49, 49, 57, 49, 32, 49, 56, 56, 32, 49, 49, 57, 49, 32, 50, 49, 55, 81, 49, 49, 57, 49, 32, 50, 50, 54, 32, 49, 49, 56, 53, 32, 50, 51, 50, 81, 49, 49, 56, 48, 32, 50, 52, 48, 32, 49, 49, 55, 50, 32, 50, 52, 48, 81, 49, 49, 53, 56, 32, 50, 52, 48, 32, 49, 49, 52, 53, 32, 50, 50, 56, 84, 49, 49, 49, 55, 32, 49, 57, 49, 81, 49, 49, 48, 55, 32, 49, 55, 51, 32, 49, 48, 57, 57, 32, 49, 53, 49, 84, 49, 48, 56, 55, 32, 49, 48, 54, 90, 77, 49, 49, 56, 53, 32, 55, 51, 76, 49, 49, 57, 53, 32, 54, 57, 81, 49, 49, 56, 51, 10, 52, 56, 32, 49, 49, 55, 49, 32, 51, 51, 84, 49, 49, 52, 52, 32, 56, 81, 49, 49, 50, 49, 32, 45, 56, 32, 49, 48, 57, 53, 32, 45, 56, 81, 49, 48, 55, 55, 32, 45, 56, 32, 49, 48, 54, 54, 32, 45, 52, 84, 49, 48, 52, 55, 32, 49, 50, 84, 49, 48, 51, 55, 32, 51, 53, 84, 49, 48, 51, 52, 32, 54, 49, 81, 49, 48, 51, 52, 32, 49, 50, 52, 32, 49, 48, 56, 49, 32, 49, 56, 55, 84, 49, 49, 55, 57, 32, 50, 53, 48, 81, 49, 49, 57, 54, 32, 50, 53, 48, 32, 49, 50, 48, 55, 32, 50, 51, 56, 84, 49, 50, 49, 56, 32, 50, 49, 48, 81, 49, 50, 49, 56, 32, 49, 55, 49, 32, 49, 49, 55, 54, 32, 49, 51, 57, 81, 49, 49, 53, 54, 32, 49, 50, 52, 32, 49, 49, 51, 52, 32, 49, 49, 52, 84, 49, 48, 56, 51, 32, 57, 51, 76, 49, 48, 55, 55, 32, 55, 50, 81, 49, 48, 55, 50, 32, 53, 50, 32, 49, 48, 55, 50, 32, 52, 48, 81, 49, 48, 55, 50, 32, 50, 55, 32, 49, 48, 55, 57, 32, 49, 55, 84, 49, 49, 48, 52, 32, 54, 81, 49, 49, 50, 52, 32, 54, 32, 49, 49, 52, 57, 32, 50, 54, 81, 49, 49, 53, 56, 32, 51, 53, 10, 49, 49, 54, 55, 32, 52, 54, 84, 49, 49, 56, 53, 32, 55, 51, 90, 77, 49, 52, 52, 50, 32, 50, 56, 76, 49, 52, 52, 49, 32, 50, 48, 81, 49, 52, 52, 50, 32, 49, 50, 32, 49, 52, 52, 51, 32, 49, 48, 81, 49, 52, 52, 56, 32, 55, 32, 49, 52, 53, 48, 32, 55, 81, 49, 52, 55, 48, 32, 55, 32, 49, 52, 57, 52, 32, 52, 53, 81, 49, 53, 48, 49, 32, 54, 48, 32, 49, 53, 48, 51, 32, 54, 53, 84, 49, 53, 49, 52, 32, 56, 50, 76, 49, 53, 50, 50, 32, 55, 56, 81, 49, 53, 48, 52, 32, 51, 54, 32, 49, 52, 57, 52, 32, 50, 49, 81, 49, 52, 55, 51, 32, 45, 55, 32, 49, 52, 52, 52, 32, 45, 55, 72, 49, 52, 51, 55, 81, 49, 52, 48, 55, 32, 45, 55, 32, 49, 52, 48, 55, 32, 50, 57, 81, 49, 52, 48, 55, 32, 53, 52, 32, 49, 52, 49, 55, 32, 56, 49, 76, 49, 52, 52, 54, 32, 49, 55, 49, 76, 49, 52, 53, 50, 32, 49, 57, 49, 76, 49, 52, 53, 54, 32, 50, 49, 50, 81, 49, 52, 53, 54, 32, 50, 50, 49, 32, 49, 52, 53, 49, 32, 50, 50, 57, 81, 49, 52, 52, 54, 32, 50, 51, 52, 32, 49, 52, 51, 55, 32, 50, 51, 52, 81, 49, 52, 50, 55, 10, 50, 51, 52, 32, 49, 52, 49, 54, 32, 50, 50, 55, 84, 49, 51, 57, 51, 32, 50, 48, 56, 81, 49, 51, 54, 57, 32, 49, 56, 49, 32, 49, 51, 52, 56, 32, 49, 51, 50, 81, 49, 51, 52, 54, 32, 49, 50, 52, 32, 49, 51, 52, 51, 32, 49, 49, 55, 84, 49, 51, 51, 55, 32, 49, 48, 51, 76, 49, 51, 48, 51, 32, 48, 72, 49, 50, 54, 52, 76, 49, 50, 57, 52, 32, 49, 48, 48, 76, 49, 51, 49, 49, 32, 49, 54, 52, 81, 49, 51, 49, 54, 32, 49, 57, 50, 32, 49, 51, 49, 54, 32, 50, 48, 57, 81, 49, 51, 49, 54, 32, 50, 51, 50, 32, 49, 51, 48, 52, 32, 50, 51, 51, 81, 49, 50, 57, 51, 32, 50, 51, 51, 32, 49, 50, 56, 49, 32, 50, 49, 56, 76, 49, 50, 52, 57, 32, 49, 53, 51, 76, 49, 50, 51, 57, 32, 49, 53, 55, 81, 49, 50, 53, 54, 32, 50, 49, 48, 32, 49, 50, 55, 57, 32, 50, 51, 50, 81, 49, 50, 57, 55, 32, 50, 53, 49, 32, 49, 51, 50, 51, 32, 50, 53, 49, 81, 49, 51, 51, 55, 32, 50, 53, 49, 32, 49, 51, 52, 54, 32, 50, 51, 55, 76, 49, 51, 53, 48, 32, 50, 48, 53, 76, 49, 51, 52, 55, 32, 49, 55, 49, 81, 49, 51, 52, 55, 10, 49, 54, 52, 32, 49, 51, 52, 54, 32, 49, 53, 57, 81, 49, 51, 52, 50, 32, 49, 52, 54, 32, 49, 51, 52, 49, 32, 49, 52, 49, 81, 49, 51, 55, 50, 32, 50, 49, 48, 32, 49, 52, 48, 51, 32, 50, 51, 49, 81, 49, 52, 50, 52, 32, 50, 52, 57, 32, 49, 52, 52, 56, 32, 50, 52, 57, 81, 49, 52, 54, 55, 32, 50, 52, 57, 32, 49, 52, 55, 56, 32, 50, 51, 53, 84, 49, 52, 57, 48, 32, 49, 57, 56, 81, 49, 52, 57, 48, 32, 49, 56, 49, 32, 49, 52, 56, 50, 32, 49, 53, 55, 76, 49, 52, 52, 50, 32, 50, 56, 90, 77, 49, 54, 49, 53, 32, 53, 81, 49, 54, 53, 48, 32, 53, 32, 49, 54, 56, 55, 32, 56, 53, 81, 49, 55, 49, 55, 32, 49, 53, 52, 32, 49, 55, 49, 55, 32, 49, 57, 55, 81, 49, 55, 49, 55, 32, 50, 49, 54, 32, 49, 55, 49, 49, 32, 50, 50, 52, 81, 49, 55, 48, 53, 32, 50, 51, 56, 32, 49, 54, 56, 54, 32, 50, 51, 56, 81, 49, 54, 53, 52, 32, 50, 51, 56, 32, 49, 54, 49, 56, 32, 49, 54, 57, 84, 49, 53, 56, 50, 32, 52, 57, 81, 49, 53, 56, 50, 32, 53, 32, 49, 54, 49, 53, 32, 53, 90, 77, 49, 55, 56, 55, 10, 56, 55, 76, 49, 55, 57, 54, 32, 56, 49, 81, 49, 55, 57, 48, 32, 53, 54, 32, 49, 55, 55, 52, 32, 50, 57, 81, 49, 55, 53, 48, 32, 45, 52, 32, 49, 55, 50, 51, 32, 45, 55, 81, 49, 55, 48, 52, 32, 45, 55, 32, 49, 54, 57, 53, 32, 54, 81, 49, 54, 57, 49, 32, 49, 50, 32, 49, 54, 56, 57, 32, 49, 57, 84, 49, 54, 56, 55, 32, 51, 55, 81, 49, 54, 56, 55, 32, 52, 54, 32, 49, 54, 56, 56, 32, 53, 54, 84, 49, 54, 57, 49, 32, 55, 51, 76, 49, 54, 57, 53, 32, 56, 49, 81, 49, 54, 55, 50, 32, 51, 49, 32, 49, 54, 53, 50, 32, 49, 50, 81, 49, 54, 51, 52, 32, 45, 55, 32, 49, 54, 48, 51, 32, 45, 55, 81, 49, 53, 55, 57, 32, 45, 55, 32, 49, 53, 54, 51, 32, 57, 81, 49, 53, 53, 51, 32, 49, 57, 32, 49, 53, 52, 56, 32, 51, 50, 84, 49, 53, 52, 51, 32, 54, 53, 81, 49, 53, 52, 51, 32, 49, 50, 57, 32, 49, 53, 57, 49, 32, 49, 57, 48, 84, 49, 54, 56, 49, 32, 50, 53, 49, 81, 49, 55, 48, 56, 32, 50, 53, 49, 32, 49, 55, 50, 54, 32, 50, 49, 57, 76, 49, 55, 53, 54, 32, 51, 53, 49, 76, 49, 55, 53, 55, 10, 51, 54, 51, 81, 49, 55, 53, 55, 32, 51, 55, 55, 32, 49, 55, 51, 56, 32, 51, 55, 55, 76, 49, 55, 50, 50, 32, 51, 55, 54, 76, 49, 55, 50, 53, 32, 51, 56, 57, 76, 49, 56, 49, 48, 32, 52, 48, 48, 76, 49, 55, 52, 55, 32, 49, 53, 55, 76, 49, 55, 51, 48, 32, 56, 52, 81, 49, 55, 50, 50, 32, 52, 55, 32, 49, 55, 50, 50, 32, 51, 49, 81, 49, 55, 50, 50, 32, 49, 48, 32, 49, 55, 51, 50, 32, 49, 48, 81, 49, 55, 51, 56, 32, 49, 48, 32, 49, 55, 53, 50, 32, 50, 52, 81, 49, 55, 54, 57, 32, 52, 53, 32, 49, 55, 56, 55, 32, 56, 55, 90, 77, 49, 57, 48, 49, 32, 52, 76, 49, 57, 48, 56, 32, 51, 81, 49, 57, 51, 50, 32, 51, 32, 49, 57, 53, 48, 32, 50, 54, 84, 49, 57, 56, 52, 32, 49, 49, 53, 76, 49, 57, 57, 50, 32, 49, 53, 50, 81, 49, 57, 57, 54, 32, 49, 54, 57, 32, 49, 57, 57, 54, 32, 49, 56, 54, 81, 49, 57, 57, 54, 32, 50, 49, 48, 32, 49, 57, 56, 57, 32, 50, 50, 49, 81, 49, 57, 56, 51, 32, 50, 51, 53, 32, 49, 57, 54, 55, 32, 50, 51, 56, 76, 49, 57, 53, 57, 32, 50, 52, 48, 81, 49, 57, 50, 55, 10, 50, 52, 48, 32, 49, 56, 57, 57, 32, 49, 55, 53, 81, 49, 56, 56, 49, 32, 49, 51, 52, 32, 49, 56, 55, 48, 32, 55, 56, 81, 49, 56, 54, 56, 32, 54, 50, 32, 49, 56, 54, 55, 32, 53, 51, 81, 49, 56, 54, 55, 32, 51, 51, 32, 49, 56, 55, 53, 32, 50, 48, 84, 49, 57, 48, 49, 32, 52, 90, 77, 49, 56, 57, 55, 32, 45, 55, 81, 49, 56, 54, 52, 32, 45, 55, 32, 49, 56, 52, 54, 32, 50, 48, 81, 49, 56, 51, 50, 32, 52, 50, 32, 49, 56, 51, 50, 32, 55, 53, 81, 49, 56, 51, 50, 32, 49, 48, 55, 32, 49, 56, 52, 48, 32, 49, 51, 52, 84, 49, 56, 54, 56, 32, 49, 57, 49, 81, 49, 57, 48, 55, 32, 50, 53, 49, 32, 49, 57, 54, 48, 32, 50, 53, 49, 81, 49, 57, 57, 50, 32, 50, 53, 49, 32, 50, 48, 49, 50, 32, 50, 50, 55, 84, 50, 48, 51, 51, 32, 49, 54, 50, 81, 50, 48, 51, 51, 32, 49, 52, 55, 32, 50, 48, 51, 49, 32, 49, 51, 50, 84, 50, 48, 50, 51, 32, 49, 48, 51, 81, 50, 48, 49, 48, 32, 53, 57, 32, 49, 57, 56, 49, 32, 50, 55, 81, 49, 57, 52, 55, 32, 45, 55, 32, 49, 57, 48, 54, 32, 45, 55, 72, 49, 56, 57, 55, 90, 34, 10, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 68, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 68, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 56, 34, 32, 100, 61, 34, 77, 50, 51, 52, 32, 49, 55, 81, 50, 51, 52, 32, 45, 49, 53, 32, 50, 50, 50, 32, 45, 52, 52, 84, 49, 56, 53, 32, 45, 57, 54, 84, 49, 51, 48, 32, 45, 49, 50, 50, 81, 57, 49, 32, 45, 49, 50, 50, 32, 53, 53, 32, 45, 49, 48, 49, 81, 52, 53, 32, 45, 57, 53, 32, 51, 56, 32, 45, 57, 48, 81, 50, 54, 32, 45, 56, 48, 32, 50, 49, 32, 45, 55, 54, 81, 51, 32, 45, 54, 51, 32, 45, 49, 52, 32, 45, 52, 52, 76, 45, 55, 57, 32, 50, 51, 76, 45, 56, 57, 32, 51, 50, 76, 45, 49, 49, 49, 32, 52, 56, 81, 45, 49, 51, 49, 32, 53, 57, 32, 45, 49, 52, 56, 32, 53, 57, 81, 45, 49, 54, 49, 32, 53, 57, 32, 45, 49, 55, 50, 32, 53, 51, 84, 45, 49, 56, 57, 32, 51, 55, 81, 45, 50, 48, 50, 32, 49, 55, 32, 45, 50, 48, 50, 32, 45, 49, 49, 81, 45, 50, 48, 50, 32, 45, 51, 54, 10, 45, 49, 57, 49, 32, 45, 53, 48, 81, 45, 49, 56, 50, 32, 45, 54, 54, 32, 45, 49, 54, 52, 32, 45, 54, 54, 81, 45, 49, 53, 56, 32, 45, 54, 54, 32, 45, 49, 52, 55, 32, 45, 53, 55, 76, 45, 49, 50, 57, 32, 45, 52, 52, 81, 45, 49, 50, 52, 32, 45, 52, 48, 32, 45, 49, 49, 49, 32, 45, 52, 48, 81, 45, 57, 57, 32, 45, 52, 48, 32, 45, 56, 57, 32, 45, 53, 48, 81, 45, 56, 49, 32, 45, 54, 48, 32, 45, 55, 57, 32, 45, 55, 55, 81, 45, 55, 57, 32, 45, 57, 56, 32, 45, 57, 55, 32, 45, 49, 49, 48, 81, 45, 49, 48, 53, 32, 45, 49, 49, 52, 32, 45, 49, 49, 52, 32, 45, 49, 49, 55, 84, 45, 49, 51, 55, 32, 45, 49, 50, 49, 81, 45, 49, 54, 55, 32, 45, 49, 50, 49, 32, 45, 49, 56, 56, 32, 45, 49, 48, 51, 84, 45, 50, 50, 50, 32, 45, 53, 55, 84, 45, 50, 51, 52, 32, 52, 81, 45, 50, 51, 52, 32, 51, 54, 32, 45, 50, 50, 50, 32, 54, 51, 81, 45, 50, 49, 51, 32, 56, 55, 32, 45, 49, 56, 56, 32, 49, 48, 52, 84, 45, 49, 50, 56, 32, 49, 50, 50, 81, 45, 57, 52, 32, 49, 50, 50, 32, 45, 54, 53, 10, 49, 48, 55, 81, 45, 51, 54, 32, 57, 48, 32, 45, 49, 32, 53, 56, 76, 50, 54, 32, 51, 48, 76, 54, 56, 32, 45, 49, 50, 81, 57, 50, 32, 45, 51, 51, 32, 49, 49, 51, 32, 45, 52, 53, 84, 49, 53, 49, 32, 45, 53, 56, 81, 49, 54, 50, 32, 45, 53, 56, 32, 49, 54, 57, 32, 45, 53, 50, 84, 49, 55, 57, 32, 45, 52, 50, 84, 49, 56, 55, 32, 45, 51, 48, 76, 50, 48, 48, 32, 45, 52, 81, 50, 48, 49, 32, 50, 32, 50, 48, 50, 32, 56, 84, 50, 48, 52, 32, 50, 51, 81, 50, 48, 52, 32, 54, 54, 32, 49, 54, 52, 32, 54, 54, 76, 49, 53, 53, 32, 54, 52, 76, 49, 52, 52, 32, 53, 53, 76, 49, 51, 55, 32, 52, 56, 76, 49, 50, 57, 32, 52, 51, 81, 49, 50, 51, 32, 52, 48, 32, 49, 49, 51, 32, 52, 48, 81, 56, 57, 32, 52, 48, 32, 56, 48, 32, 54, 56, 81, 56, 48, 32, 57, 54, 32, 57, 56, 32, 49, 48, 57, 84, 49, 51, 56, 32, 49, 50, 50, 81, 49, 53, 52, 32, 49, 50, 50, 32, 49, 54, 49, 32, 49, 50, 49, 84, 49, 55, 57, 32, 49, 49, 52, 81, 49, 57, 54, 32, 49, 48, 55, 32, 50, 49, 48, 32, 57, 48, 81, 50, 51, 52, 10, 54, 48, 32, 50, 51, 52, 32, 49, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 69, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 55, 55, 34, 32, 100, 61, 34, 77, 51, 54, 57, 32, 45, 55, 72, 48, 86, 55, 72, 51, 54, 57, 76, 51, 49, 54, 32, 53, 51, 86, 55, 52, 76, 52, 55, 55, 32, 45, 49, 76, 51, 49, 54, 32, 45, 55, 52, 86, 45, 53, 51, 76, 51, 54, 57, 32, 45, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 70, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 70, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 51, 54, 34, 32, 100, 61, 34, 77, 45, 51, 56, 55, 32, 50, 50, 48, 81, 45, 52, 48, 48, 32, 49, 51, 55, 32, 45, 52, 50, 57, 32, 52, 48, 84, 45, 52, 56, 48, 32, 45, 57, 56, 81, 45, 53, 48, 50, 32, 45, 49, 52, 52, 32, 45, 53, 50, 55, 32, 45, 49, 55, 55, 84, 45, 53, 57, 50, 32, 45, 50, 50, 49, 76, 45, 54, 49, 48, 32, 45, 50, 50, 51, 81, 45, 54, 52, 50, 32, 45, 50, 50, 51, 32, 45, 54, 53, 57, 32, 45, 49, 57, 55, 81, 45, 54, 54, 53, 32, 45, 49, 56, 56, 32, 45, 54, 54, 56, 32, 45, 49, 56, 49, 84, 45, 54, 55, 52, 32, 45, 49, 54, 53, 84, 45, 54, 55, 55, 32, 45, 49, 51, 54, 81, 45, 54, 55, 55, 32, 45, 49, 48, 56, 32, 45, 54, 54, 53, 32, 45, 57, 52, 84, 45, 54, 51, 50, 32, 45, 54, 57, 81, 45, 54, 50, 51, 32, 45, 54, 57, 32, 45, 54, 49, 56, 32, 45, 55, 51, 81, 45, 54, 49, 53, 10, 45, 55, 52, 32, 45, 54, 49, 50, 32, 45, 55, 55, 84, 45, 54, 48, 53, 32, 45, 56, 52, 81, 45, 53, 57, 53, 32, 45, 57, 55, 32, 45, 53, 57, 53, 32, 45, 49, 49, 56, 81, 45, 53, 57, 53, 32, 45, 49, 52, 48, 32, 45, 54, 50, 55, 32, 45, 49, 56, 51, 81, 45, 54, 50, 55, 32, 45, 49, 57, 48, 32, 45, 54, 49, 56, 32, 45, 49, 57, 48, 81, 45, 53, 54, 55, 32, 45, 49, 57, 48, 32, 45, 53, 51, 54, 32, 45, 53, 49, 76, 45, 53, 50, 57, 32, 45, 50, 50, 76, 45, 53, 49, 54, 32, 51, 56, 76, 45, 52, 57, 52, 32, 49, 52, 48, 76, 45, 52, 55, 55, 32, 50, 50, 48, 72, 45, 54, 49, 56, 81, 45, 54, 51, 48, 32, 49, 52, 52, 32, 45, 54, 53, 57, 32, 52, 54, 84, 45, 55, 49, 49, 32, 45, 57, 56, 81, 45, 55, 54, 49, 32, 45, 50, 48, 54, 32, 45, 56, 50, 49, 32, 45, 50, 50, 49, 76, 45, 56, 52, 48, 32, 45, 50, 50, 51, 81, 45, 56, 55, 50, 32, 45, 50, 50, 51, 32, 45, 56, 56, 57, 32, 45, 49, 57, 55, 81, 45, 56, 57, 54, 32, 45, 49, 56, 55, 32, 45, 57, 48, 51, 32, 45, 49, 54, 57, 76, 45, 57, 48, 56, 10, 45, 49, 51, 54, 81, 45, 57, 48, 54, 32, 45, 49, 50, 48, 32, 45, 57, 48, 51, 32, 45, 49, 48, 57, 84, 45, 56, 57, 53, 32, 45, 57, 48, 81, 45, 56, 56, 53, 32, 45, 55, 55, 32, 45, 56, 54, 50, 32, 45, 54, 57, 81, 45, 56, 52, 54, 32, 45, 54, 57, 32, 45, 56, 51, 53, 32, 45, 56, 52, 84, 45, 56, 50, 52, 32, 45, 49, 49, 56, 81, 45, 56, 50, 52, 32, 45, 49, 51, 48, 32, 45, 56, 51, 48, 32, 45, 49, 52, 49, 76, 45, 56, 52, 52, 32, 45, 49, 54, 52, 76, 45, 56, 53, 56, 32, 45, 49, 56, 51, 81, 45, 56, 53, 56, 32, 45, 49, 57, 48, 32, 45, 56, 52, 56, 32, 45, 49, 57, 48, 81, 45, 56, 51, 50, 32, 45, 49, 57, 48, 32, 45, 56, 49, 56, 32, 45, 49, 55, 53, 81, 45, 56, 48, 52, 32, 45, 49, 54, 51, 32, 45, 55, 57, 53, 32, 45, 49, 52, 48, 81, 45, 55, 57, 50, 32, 45, 49, 51, 53, 32, 45, 55, 56, 56, 32, 45, 49, 50, 51, 84, 45, 55, 56, 49, 32, 45, 49, 48, 52, 76, 45, 55, 54, 54, 32, 45, 53, 49, 76, 45, 55, 52, 55, 32, 51, 53, 76, 45, 55, 50, 53, 32, 49, 52, 48, 81, 45, 55, 50, 48, 10, 49, 54, 50, 32, 45, 55, 49, 54, 32, 49, 56, 50, 84, 45, 55, 48, 55, 32, 50, 50, 48, 72, 45, 55, 54, 52, 86, 50, 53, 56, 72, 45, 54, 57, 53, 81, 45, 54, 56, 49, 32, 51, 48, 55, 32, 45, 54, 53, 53, 32, 51, 52, 55, 81, 45, 54, 51, 48, 32, 51, 56, 57, 32, 45, 53, 57, 50, 32, 52, 49, 55, 81, 45, 53, 53, 52, 32, 52, 52, 50, 32, 45, 53, 48, 57, 32, 52, 52, 50, 81, 45, 52, 56, 55, 32, 52, 52, 50, 32, 45, 52, 55, 50, 32, 52, 50, 51, 81, 45, 52, 54, 48, 32, 52, 48, 53, 32, 45, 52, 54, 48, 32, 51, 55, 54, 81, 45, 52, 54, 48, 32, 51, 52, 55, 32, 45, 52, 55, 51, 32, 51, 50, 53, 81, 45, 52, 56, 56, 32, 51, 48, 52, 32, 45, 53, 49, 48, 32, 51, 48, 48, 81, 45, 53, 51, 54, 32, 51, 48, 48, 32, 45, 53, 51, 57, 32, 51, 51, 50, 81, 45, 53, 51, 57, 32, 51, 53, 48, 32, 45, 53, 50, 57, 32, 51, 54, 56, 84, 45, 53, 48, 50, 32, 51, 57, 52, 81, 45, 52, 57, 55, 32, 51, 57, 52, 32, 45, 52, 57, 55, 32, 52, 48, 48, 76, 45, 53, 48, 51, 32, 52, 48, 57, 81, 45, 53, 49, 49, 32, 52, 49, 52, 10, 45, 53, 50, 49, 32, 52, 49, 52, 81, 45, 53, 53, 53, 32, 52, 49, 52, 32, 45, 53, 55, 54, 32, 51, 54, 54, 84, 45, 54, 48, 56, 32, 50, 54, 48, 72, 45, 52, 54, 52, 81, 45, 52, 52, 51, 32, 51, 51, 54, 32, 45, 51, 57, 52, 32, 51, 56, 57, 84, 45, 50, 55, 57, 32, 52, 52, 50, 81, 45, 50, 54, 55, 32, 52, 52, 50, 32, 45, 50, 53, 56, 32, 52, 51, 56, 84, 45, 50, 52, 51, 32, 52, 50, 50, 81, 45, 50, 51, 57, 32, 52, 49, 55, 32, 45, 50, 51, 53, 32, 52, 48, 53, 84, 45, 50, 51, 48, 32, 51, 55, 54, 81, 45, 50, 51, 48, 32, 51, 52, 57, 32, 45, 50, 52, 51, 32, 51, 50, 53, 81, 45, 50, 53, 53, 32, 51, 48, 55, 32, 45, 50, 56, 48, 32, 51, 48, 48, 81, 45, 51, 48, 55, 32, 51, 48, 48, 32, 45, 51, 49, 48, 32, 51, 51, 50, 81, 45, 51, 49, 48, 32, 51, 52, 49, 32, 45, 51, 48, 55, 32, 51, 53, 48, 84, 45, 50, 57, 57, 32, 51, 54, 56, 84, 45, 50, 56, 56, 32, 51, 56, 51, 84, 45, 50, 55, 51, 32, 51, 57, 52, 81, 45, 50, 54, 56, 32, 51, 57, 52, 32, 45, 50, 54, 56, 32, 52, 48, 48, 81, 45, 50, 55, 49, 10, 52, 48, 55, 32, 45, 50, 55, 52, 32, 52, 48, 57, 81, 45, 50, 56, 49, 32, 52, 49, 52, 32, 45, 50, 57, 49, 32, 52, 49, 52, 81, 45, 51, 52, 55, 32, 52, 49, 52, 32, 45, 51, 55, 57, 32, 50, 53, 56, 72, 45, 50, 51, 53, 81, 45, 50, 49, 51, 32, 51, 51, 50, 32, 45, 49, 54, 51, 32, 51, 57, 48, 81, 45, 49, 49, 54, 32, 52, 52, 52, 32, 45, 52, 57, 32, 52, 52, 52, 81, 45, 51, 53, 32, 52, 52, 52, 32, 45, 50, 56, 32, 52, 51, 56, 81, 45, 50, 48, 32, 52, 51, 52, 32, 45, 49, 50, 32, 52, 50, 49, 81, 48, 32, 52, 48, 49, 32, 48, 32, 51, 55, 52, 81, 48, 32, 51, 52, 53, 32, 45, 49, 53, 32, 51, 50, 53, 81, 45, 50, 54, 32, 51, 48, 53, 32, 45, 53, 49, 32, 51, 48, 48, 81, 45, 55, 53, 32, 51, 48, 48, 32, 45, 55, 56, 32, 51, 51, 50, 81, 45, 55, 56, 32, 51, 52, 57, 32, 45, 54, 56, 32, 51, 54, 55, 84, 45, 52, 51, 32, 51, 57, 52, 81, 45, 51, 55, 32, 51, 57, 52, 32, 45, 51, 55, 32, 52, 48, 48, 81, 45, 52, 49, 32, 52, 48, 55, 32, 45, 52, 52, 32, 52, 48, 57, 81, 45, 53, 49, 32, 52, 49, 52, 10, 45, 54, 49, 32, 52, 49, 52, 81, 45, 49, 49, 55, 32, 52, 49, 52, 32, 45, 49, 52, 57, 32, 50, 53, 56, 72, 45, 55, 51, 86, 50, 50, 48, 72, 45, 49, 53, 56, 81, 45, 49, 54, 56, 32, 49, 53, 52, 32, 45, 49, 56, 52, 32, 57, 57, 81, 45, 50, 48, 48, 32, 51, 51, 32, 45, 50, 49, 55, 32, 45, 49, 54, 84, 45, 50, 53, 48, 32, 45, 57, 56, 81, 45, 50, 54, 50, 32, 45, 49, 50, 48, 32, 45, 50, 55, 52, 32, 45, 49, 52, 48, 84, 45, 51, 48, 48, 32, 45, 49, 55, 55, 81, 45, 51, 50, 52, 32, 45, 50, 48, 57, 32, 45, 51, 54, 49, 32, 45, 50, 50, 49, 76, 45, 51, 55, 57, 32, 45, 50, 50, 51, 81, 45, 52, 49, 50, 32, 45, 50, 50, 51, 32, 45, 52, 50, 56, 32, 45, 49, 57, 56, 81, 45, 52, 51, 54, 32, 45, 49, 56, 55, 32, 45, 52, 52, 49, 32, 45, 49, 54, 57, 81, 45, 52, 52, 55, 32, 45, 49, 53, 52, 32, 45, 52, 52, 55, 32, 45, 49, 51, 54, 81, 45, 52, 52, 52, 32, 45, 49, 48, 56, 32, 45, 52, 51, 52, 32, 45, 57, 50, 84, 45, 52, 48, 49, 32, 45, 54, 57, 81, 45, 51, 56, 54, 32, 45, 54, 57, 32, 45, 51, 55, 54, 10, 45, 56, 50, 84, 45, 51, 54, 53, 32, 45, 49, 49, 54, 81, 45, 51, 54, 53, 32, 45, 49, 50, 53, 32, 45, 51, 55, 48, 32, 45, 49, 52, 48, 76, 45, 51, 55, 52, 32, 45, 49, 52, 55, 76, 45, 51, 56, 52, 32, 45, 49, 54, 50, 81, 45, 51, 57, 48, 32, 45, 49, 55, 48, 32, 45, 51, 57, 50, 32, 45, 49, 55, 52, 84, 45, 51, 57, 55, 32, 45, 49, 56, 51, 81, 45, 51, 57, 55, 32, 45, 49, 57, 48, 32, 45, 51, 56, 55, 32, 45, 49, 57, 48, 81, 45, 51, 53, 57, 32, 45, 49, 57, 48, 32, 45, 51, 51, 57, 32, 45, 49, 52, 56, 81, 45, 51, 51, 48, 32, 45, 49, 50, 54, 32, 45, 51, 50, 50, 32, 45, 49, 48, 51, 84, 45, 51, 48, 54, 32, 45, 53, 49, 76, 45, 50, 56, 55, 32, 51, 53, 76, 45, 50, 54, 53, 32, 49, 51, 52, 76, 45, 50, 52, 55, 32, 50, 50, 48, 72, 45, 51, 56, 55, 90, 34]).concat([32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 71, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 71, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 57, 55, 34, 32, 100, 61, 34, 77, 53, 49, 55, 32, 50, 51, 51, 72, 52, 53, 51, 81, 52, 53, 51, 32, 50, 48, 57, 32, 52, 52, 48, 32, 49, 54, 48, 76, 52, 50, 54, 32, 49, 50, 49, 76, 52, 49, 48, 32, 57, 48, 81, 52, 48, 49, 32, 55, 56, 32, 51, 56, 57, 32, 54, 51, 84, 51, 54, 51, 32, 51, 55, 84, 51, 49, 55, 32, 49, 52, 81, 50, 57, 57, 32, 56, 32, 50, 54, 54, 32, 48, 86, 45, 55, 51, 72, 50, 51, 49, 86, 48, 81, 50, 48, 53, 32, 52, 32, 49, 57, 50, 32, 54, 84, 49, 54, 57, 32, 49, 50, 81, 49, 53, 49, 32, 50, 50, 32, 49, 51, 52, 32, 51, 54, 81, 49, 48, 57, 32, 53, 55, 32, 56, 55, 32, 57, 48, 81, 55, 50, 32, 49, 49, 51, 32, 53, 56, 32, 49, 54, 48, 76, 52, 55, 32, 49, 57, 57, 76, 52, 53, 32, 50, 51, 51, 72, 45, 50, 48, 86, 50, 55, 51, 72, 52, 53, 81, 52, 53, 32, 50, 57, 51, 10, 52, 55, 32, 51, 48, 55, 84, 53, 55, 32, 51, 52, 54, 81, 54, 50, 32, 51, 54, 53, 32, 55, 48, 32, 51, 56, 52, 84, 56, 55, 32, 52, 49, 54, 76, 49, 49, 48, 32, 52, 52, 54, 76, 49, 51, 52, 32, 52, 55, 49, 81, 49, 52, 54, 32, 52, 56, 48, 32, 49, 53, 48, 32, 52, 56, 50, 81, 49, 53, 57, 32, 52, 56, 56, 32, 49, 54, 56, 32, 52, 57, 50, 84, 49, 57, 53, 32, 52, 57, 57, 84, 50, 51, 49, 32, 53, 48, 54, 86, 53, 56, 48, 72, 50, 54, 54, 86, 53, 48, 54, 81, 50, 56, 49, 32, 53, 48, 52, 32, 50, 57, 56, 32, 53, 48, 50, 84, 51, 50, 55, 32, 52, 57, 51, 81, 51, 52, 55, 32, 52, 56, 53, 32, 51, 54, 50, 32, 52, 55, 49, 81, 51, 56, 54, 32, 52, 53, 49, 32, 52, 49, 48, 32, 52, 49, 54, 81, 52, 50, 51, 32, 51, 57, 51, 32, 52, 51, 56, 32, 51, 52, 54, 84, 52, 53, 51, 32, 50, 55, 51, 72, 53, 49, 55, 86, 50, 51, 51, 90, 77, 51, 53, 48, 32, 50, 55, 51, 76, 51, 52, 57, 32, 50, 57, 53, 76, 51, 52, 55, 32, 51, 51, 50, 81, 51, 52, 55, 32, 51, 53, 56, 32, 51, 51, 56, 32, 51, 57, 48, 81, 51, 51, 51, 10, 52, 50, 49, 32, 51, 49, 51, 32, 52, 52, 52, 81, 50, 56, 56, 32, 52, 55, 49, 32, 50, 54, 54, 32, 52, 55, 49, 86, 50, 55, 51, 72, 51, 53, 48, 90, 77, 50, 51, 49, 32, 50, 55, 51, 86, 52, 55, 49, 81, 50, 48, 57, 32, 52, 55, 49, 32, 49, 56, 53, 32, 52, 52, 53, 81, 49, 54, 50, 32, 52, 49, 55, 32, 49, 53, 56, 32, 51, 57, 51, 76, 49, 53, 52, 32, 51, 54, 54, 76, 49, 53, 48, 32, 51, 51, 57, 76, 49, 52, 57, 32, 51, 48, 51, 81, 49, 52, 57, 32, 50, 56, 52, 32, 49, 52, 55, 32, 50, 55, 51, 72, 50, 51, 49, 90, 77, 51, 53, 48, 32, 50, 51, 51, 72, 50, 54, 54, 86, 51, 55, 81, 50, 56, 57, 32, 51, 55, 32, 51, 49, 50, 32, 54, 49, 81, 51, 51, 50, 32, 56, 52, 32, 51, 51, 56, 32, 49, 49, 53, 76, 51, 52, 55, 32, 49, 55, 55, 76, 51, 53, 48, 32, 50, 51, 51, 90, 77, 50, 51, 49, 32, 51, 55, 86, 50, 51, 51, 72, 49, 52, 55, 86, 50, 49, 50, 76, 49, 52, 57, 32, 49, 55, 53, 81, 49, 52, 57, 32, 49, 52, 57, 32, 49, 53, 56, 32, 49, 49, 54, 81, 49, 54, 48, 32, 49, 48, 54, 32, 49, 54, 53, 10, 57, 50, 84, 49, 56, 52, 32, 54, 49, 81, 50, 48, 55, 32, 51, 55, 32, 50, 51, 49, 32, 51, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 72, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 72, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 50, 52, 34, 32, 100, 61, 34, 77, 50, 53, 50, 32, 52, 48, 54, 86, 48, 72, 50, 48, 52, 86, 50, 49, 52, 72, 52, 56, 86, 48, 72, 48, 86, 52, 53, 51, 72, 52, 56, 86, 50, 54, 55, 72, 50, 48, 52, 86, 52, 53, 51, 72, 50, 53, 50, 86, 52, 48, 54, 90, 77, 50, 53, 50, 32, 52, 53, 51, 72, 52, 50, 52, 86, 52, 48, 54, 72, 50, 53, 50, 86, 52, 53, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 73, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 73, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 49, 54, 50, 32, 49, 55, 53, 76, 45, 49, 54, 50, 32, 49, 49, 86, 57, 53, 76, 49, 54, 50, 32, 50, 53, 56, 86, 49, 55, 53, 90, 77, 49, 54, 50, 32, 52, 48, 76, 45, 49, 54, 50, 32, 45, 49, 50, 52, 86, 45, 52, 48, 76, 49, 54, 50, 32, 49, 50, 52, 86, 52, 48, 90, 77, 49, 54, 50, 32, 45, 57, 53, 76, 45, 49, 54, 50, 32, 45, 50, 53, 56, 86, 45, 49, 55, 53, 76, 49, 54, 50, 32, 45, 49, 49, 86, 45, 57, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 74, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 74, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 52, 57, 34, 32, 100, 61, 34, 77, 51, 52, 57, 32, 48, 76, 48, 32, 51, 53, 51, 86, 51, 56, 48, 76, 51, 52, 57, 32, 50, 55, 86, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 75, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 75, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 55, 34, 32, 100, 61, 34, 77, 51, 53, 55, 32, 45, 49, 57, 72, 51, 56, 86, 45, 50, 51, 56, 72, 48, 86, 49, 56, 72, 51, 53, 55, 86, 45, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 76, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 76, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 55, 34, 32, 100, 61, 34, 77, 51, 53, 55, 32, 45, 50, 51, 56, 72, 51, 50, 48, 86, 45, 49, 57, 72, 48, 86, 49, 56, 72, 51, 53, 55, 86, 45, 50, 51, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 77, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 77, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 53, 51, 34, 32, 100, 61, 34, 77, 49, 57, 52, 32, 51, 49, 56, 76, 49, 50, 55, 32, 53, 50, 76, 49, 50, 53, 32, 52, 54, 86, 52, 49, 81, 49, 50, 53, 32, 50, 56, 32, 49, 51, 54, 32, 50, 50, 81, 49, 51, 57, 32, 50, 48, 32, 49, 52, 52, 32, 49, 57, 84, 49, 53, 56, 32, 49, 55, 76, 49, 55, 48, 32, 49, 56, 76, 49, 56, 52, 32, 50, 48, 76, 49, 55, 57, 32, 48, 72, 50, 48, 76, 50, 53, 32, 50, 48, 72, 52, 52, 81, 54, 55, 32, 50, 48, 32, 55, 51, 32, 50, 51, 81, 56, 49, 32, 50, 57, 32, 56, 53, 32, 52, 52, 76, 49, 51, 55, 32, 50, 53, 53, 76, 49, 51, 56, 32, 50, 54, 48, 81, 49, 51, 50, 32, 50, 54, 54, 32, 49, 50, 57, 32, 50, 54, 54, 76, 55, 54, 32, 50, 54, 55, 76, 56, 49, 32, 50, 56, 55, 81, 49, 48, 55, 32, 50, 56, 55, 32, 49, 51, 50, 32, 50, 57, 54, 81, 49, 54, 48, 32, 51, 48, 51, 10, 49, 56, 50, 32, 51, 49, 56, 72, 49, 57, 52, 90, 77, 52, 52, 51, 32, 51, 49, 55, 81, 52, 50, 57, 32, 50, 57, 50, 32, 52, 49, 49, 32, 50, 56, 49, 81, 51, 57, 48, 32, 50, 54, 54, 32, 51, 53, 52, 32, 50, 54, 54, 81, 51, 52, 52, 32, 50, 54, 54, 32, 51, 50, 52, 32, 50, 54, 57, 84, 50, 57, 54, 32, 50, 55, 51, 76, 50, 55, 48, 32, 49, 56, 55, 81, 50, 56, 54, 32, 49, 57, 54, 32, 50, 57, 57, 32, 49, 57, 57, 84, 51, 50, 57, 32, 50, 48, 51, 81, 51, 54, 56, 32, 50, 48, 51, 32, 51, 56, 57, 32, 49, 56, 48, 84, 52, 49, 48, 32, 49, 49, 57, 81, 52, 49, 48, 32, 55, 50, 32, 51, 55, 51, 32, 51, 50, 84, 50, 56, 48, 32, 45, 56, 81, 50, 52, 52, 32, 45, 56, 32, 50, 49, 57, 32, 49, 50, 81, 50, 48, 57, 32, 50, 50, 32, 50, 48, 51, 32, 51, 52, 84, 49, 57, 55, 32, 54, 50, 81, 49, 57, 55, 32, 56, 49, 32, 50, 48, 54, 32, 57, 50, 84, 50, 51, 49, 32, 49, 48, 51, 81, 50, 52, 49, 32, 49, 48, 51, 32, 50, 52, 56, 32, 57, 53, 81, 50, 53, 55, 32, 56, 57, 32, 50, 53, 55, 32, 55, 53, 81, 50, 53, 55, 10, 54, 53, 32, 50, 53, 52, 32, 54, 50, 76, 50, 51, 56, 32, 52, 57, 76, 50, 51, 48, 32, 52, 52, 76, 50, 50, 56, 32, 52, 48, 81, 50, 50, 56, 32, 51, 50, 32, 50, 51, 57, 32, 50, 49, 81, 50, 53, 50, 32, 49, 49, 32, 50, 55, 53, 32, 49, 49, 81, 51, 48, 54, 32, 49, 49, 32, 51, 51, 52, 32, 52, 49, 84, 51, 54, 51, 32, 49, 50, 50, 81, 51, 54, 51, 32, 49, 53, 50, 32, 51, 52, 56, 32, 49, 54, 52, 81, 51, 51, 51, 32, 49, 55, 57, 32, 51, 48, 56, 32, 49, 55, 57, 81, 50, 57, 50, 32, 49, 55, 57, 32, 50, 56, 52, 32, 49, 55, 54, 84, 50, 55, 51, 32, 49, 55, 49, 84, 50, 54, 50, 32, 49, 54, 50, 81, 50, 53, 57, 32, 49, 52, 57, 32, 50, 53, 52, 32, 49, 52, 51, 84, 50, 52, 49, 32, 49, 51, 55, 76, 50, 51, 51, 32, 49, 51, 57, 81, 50, 51, 48, 32, 49, 52, 49, 32, 50, 50, 56, 32, 49, 53, 48, 81, 50, 50, 56, 32, 49, 54, 49, 32, 50, 52, 52, 32, 49, 55, 52, 76, 50, 53, 52, 32, 50, 48, 55, 76, 50, 54, 57, 32, 50, 53, 57, 76, 50, 56, 53, 32, 51, 50, 48, 76, 51, 51, 50, 32, 51, 49, 49, 81, 51, 51, 57, 10, 51, 48, 57, 32, 51, 53, 55, 32, 51, 48, 57, 81, 51, 54, 52, 32, 51, 48, 56, 32, 51, 55, 49, 32, 51, 48, 56, 81, 52, 49, 48, 32, 51, 48, 56, 32, 52, 51, 55, 32, 51, 50, 49, 76, 52, 52, 51, 32, 51, 49, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 78, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 78, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 55, 50, 34, 32, 100, 61, 34, 77, 50, 56, 50, 32, 52, 52, 55, 72, 52, 55, 50, 86, 52, 48, 55, 72, 50, 56, 50, 86, 48, 72, 50, 51, 57, 76, 55, 52, 32, 51, 53, 49, 86, 48, 72, 51, 51, 86, 52, 52, 55, 72, 55, 55, 76, 50, 52, 50, 32, 57, 55, 86, 52, 52, 55, 72, 50, 56, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 79, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 55, 34, 32, 100, 61, 34, 77, 57, 52, 32, 50, 49, 53, 81, 57, 52, 32, 49, 54, 52, 32, 53, 52, 32, 49, 52, 53, 84, 49, 52, 32, 49, 48, 49, 81, 49, 52, 32, 55, 50, 32, 56, 50, 32, 48, 72, 45, 55, 56, 81, 45, 53, 54, 32, 50, 51, 32, 45, 51, 53, 32, 52, 54, 81, 45, 49, 49, 32, 55, 53, 32, 45, 49, 49, 32, 49, 48, 49, 81, 45, 49, 49, 32, 49, 50, 55, 32, 45, 53, 48, 32, 49, 52, 54, 84, 45, 57, 48, 32, 50, 49, 53, 81, 45, 57, 48, 32, 50, 54, 48, 32, 45, 54, 48, 32, 50, 56, 54, 81, 45, 51, 52, 32, 51, 48, 56, 32, 49, 32, 51, 48, 56, 81, 52, 54, 32, 51, 48, 56, 32, 55, 50, 32, 50, 55, 55, 81, 57, 52, 32, 50, 53, 48, 32, 57, 52, 32, 50, 49, 53, 90, 77, 53, 55, 32, 50, 50, 50, 81, 53, 55, 32, 50, 52, 51, 32, 52, 49, 32, 50, 53, 54, 84, 49, 32, 50, 55, 48, 81, 45, 50, 50, 10, 50, 55, 48, 32, 45, 51, 55, 32, 50, 53, 55, 84, 45, 53, 50, 32, 50, 50, 50, 81, 45, 53, 50, 32, 50, 48, 49, 32, 45, 51, 55, 32, 49, 56, 56, 84, 49, 32, 49, 55, 52, 81, 50, 53, 32, 49, 55, 52, 32, 52, 49, 32, 49, 56, 55, 84, 53, 55, 32, 50, 50, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 80, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 80, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 57, 53, 34, 32, 100, 61, 34, 77, 45, 51, 56, 32, 49, 51, 52, 81, 45, 51, 56, 32, 56, 50, 32, 45, 55, 53, 32, 52, 49, 84, 45, 49, 54, 50, 32, 48, 72, 45, 49, 55, 54, 81, 45, 49, 56, 53, 32, 49, 50, 32, 45, 49, 57, 48, 32, 49, 55, 81, 45, 50, 48, 55, 32, 51, 53, 32, 45, 50, 49, 57, 32, 51, 53, 81, 45, 50, 52, 49, 32, 51, 53, 32, 45, 50, 53, 55, 32, 50, 53, 81, 45, 50, 55, 55, 32, 57, 32, 45, 50, 56, 57, 32, 48, 72, 45, 51, 53, 53, 76, 45, 51, 57, 53, 32, 52, 55, 76, 45, 52, 50, 56, 32, 48, 72, 45, 53, 48, 53, 81, 45, 53, 49, 51, 32, 50, 57, 32, 45, 53, 49, 56, 32, 52, 50, 81, 45, 53, 50, 55, 32, 54, 54, 32, 45, 53, 52, 53, 32, 54, 52, 81, 45, 53, 55, 48, 32, 54, 49, 32, 45, 53, 57, 52, 32, 51, 52, 81, 45, 54, 48, 56, 32, 49, 55, 32, 45, 54, 50, 51, 32, 48, 72, 45, 54, 53, 55, 81, 45, 54, 53, 55, 10, 52, 52, 32, 45, 53, 53, 52, 32, 49, 49, 51, 81, 45, 53, 48, 53, 32, 49, 52, 54, 32, 45, 53, 48, 53, 32, 49, 56, 53, 81, 45, 53, 48, 53, 32, 50, 49, 49, 32, 45, 53, 51, 55, 32, 50, 53, 54, 84, 45, 53, 55, 48, 32, 51, 54, 50, 81, 45, 53, 55, 48, 32, 51, 56, 52, 32, 45, 53, 54, 55, 32, 52, 48, 57, 84, 45, 53, 53, 54, 32, 52, 55, 48, 81, 45, 53, 53, 56, 32, 52, 55, 54, 32, 45, 53, 54, 51, 32, 52, 55, 57, 84, 45, 53, 56, 49, 32, 52, 56, 50, 81, 45, 54, 48, 57, 32, 52, 55, 52, 32, 45, 54, 50, 51, 32, 52, 54, 52, 81, 45, 54, 54, 53, 32, 52, 51, 50, 32, 45, 54, 54, 53, 32, 51, 54, 55, 81, 45, 54, 54, 53, 32, 51, 53, 48, 32, 45, 54, 54, 48, 32, 51, 52, 48, 84, 45, 54, 52, 55, 32, 51, 50, 53, 81, 45, 54, 50, 51, 32, 51, 49, 56, 32, 45, 54, 48, 53, 32, 51, 54, 54, 81, 45, 54, 48, 48, 32, 51, 55, 48, 32, 45, 53, 57, 54, 32, 51, 55, 52, 81, 45, 53, 57, 53, 32, 51, 55, 49, 32, 45, 53, 57, 53, 32, 51, 54, 51, 81, 45, 53, 57, 53, 32, 51, 52, 49, 32, 45, 54, 48, 55, 10, 51, 50, 51, 81, 45, 54, 50, 52, 32, 50, 57, 57, 32, 45, 54, 53, 55, 32, 50, 57, 50, 81, 45, 54, 55, 48, 32, 50, 57, 50, 32, 45, 54, 56, 49, 32, 51, 48, 55, 81, 45, 54, 57, 53, 32, 51, 50, 55, 32, 45, 54, 57, 53, 32, 51, 54, 50, 81, 45, 54, 57, 53, 32, 52, 51, 48, 32, 45, 54, 53, 48, 32, 52, 55, 50, 84, 45, 53, 51, 55, 32, 53, 49, 52, 81, 45, 52, 53, 57, 32, 53, 49, 52, 32, 45, 52, 49, 56, 32, 52, 56, 52, 84, 45, 51, 55, 54, 32, 52, 48, 49, 81, 45, 51, 55, 54, 32, 51, 56, 48, 32, 45, 51, 56, 51, 32, 51, 53, 57, 81, 45, 52, 48, 49, 32, 51, 50, 56, 32, 45, 52, 50, 55, 32, 51, 50, 56, 81, 45, 52, 53, 52, 32, 51, 50, 56, 32, 45, 52, 56, 48, 32, 51, 53, 54, 84, 45, 53, 48, 54, 32, 52, 48, 51, 81, 45, 53, 48, 54, 32, 52, 49, 50, 32, 45, 52, 57, 57, 32, 52, 49, 51, 81, 45, 52, 57, 51, 32, 51, 57, 54, 32, 45, 52, 56, 55, 32, 51, 56, 56, 81, 45, 52, 54, 57, 32, 51, 54, 50, 32, 45, 52, 52, 49, 32, 51, 54, 50, 81, 45, 52, 49, 57, 32, 51, 54, 50, 32, 45, 52, 49, 49, 10, 51, 55, 52, 84, 45, 52, 48, 51, 32, 52, 48, 54, 81, 45, 52, 48, 51, 32, 52, 51, 55, 32, 45, 52, 50, 54, 32, 52, 53, 51, 84, 45, 52, 56, 54, 32, 52, 55, 55, 81, 45, 53, 48, 49, 32, 52, 56, 48, 32, 45, 53, 48, 54, 32, 52, 56, 48, 81, 45, 53, 49, 50, 32, 52, 56, 48, 32, 45, 53, 51, 50, 32, 52, 55, 55, 81, 45, 53, 52, 48, 32, 52, 53, 52, 32, 45, 53, 52, 51, 32, 52, 51, 49, 84, 45, 53, 52, 54, 32, 51, 55, 52, 81, 45, 53, 52, 54, 32, 51, 52, 51, 32, 45, 53, 50, 53, 32, 51, 48, 54, 81, 45, 52, 57, 56, 32, 50, 54, 49, 32, 45, 52, 55, 49, 32, 50, 49, 54, 81, 45, 52, 54, 55, 32, 49, 57, 55, 32, 45, 52, 54, 55, 32, 49, 55, 57, 81, 45, 52, 54, 55, 32, 49, 52, 54, 32, 45, 52, 57, 50, 32, 49, 49, 56, 81, 45, 53, 48, 53, 32, 49, 48, 52, 32, 45, 53, 48, 53, 32, 57, 54, 81, 45, 52, 57, 49, 32, 56, 51, 32, 45, 52, 56, 55, 32, 54, 51, 84, 45, 52, 53, 49, 32, 51, 53, 81, 45, 52, 50, 53, 32, 52, 50, 32, 45, 52, 49, 53, 32, 53, 48, 84, 45, 52, 48, 53, 32, 55, 49, 81, 45, 52, 48, 53, 10, 56, 49, 32, 45, 52, 49, 55, 32, 49, 48, 57, 81, 45, 52, 50, 53, 32, 49, 50, 56, 32, 45, 52, 50, 56, 32, 49, 51, 57, 81, 45, 52, 50, 57, 32, 49, 52, 56, 32, 45, 52, 50, 57, 32, 49, 53, 51, 81, 45, 52, 50, 57, 32, 49, 57, 53, 32, 45, 52, 48, 53, 32, 50, 50, 57, 84, 45, 51, 51, 56, 32, 50, 54, 51, 81, 45, 51, 48, 54, 32, 50, 54, 51, 32, 45, 50, 57, 52, 32, 50, 53, 49, 84, 45, 50, 55, 55, 32, 50, 48, 53, 81, 45, 50, 55, 51, 32, 49, 55, 50, 32, 45, 50, 57, 56, 32, 49, 52, 55, 81, 45, 51, 51, 50, 32, 49, 49, 54, 32, 45, 51, 54, 54, 32, 56, 54, 81, 45, 51, 53, 55, 32, 55, 48, 32, 45, 51, 52, 53, 32, 53, 53, 81, 45, 51, 50, 48, 32, 50, 52, 32, 45, 50, 57, 53, 32, 50, 52, 81, 45, 50, 55, 55, 32, 50, 52, 32, 45, 50, 53, 54, 32, 51, 57, 81, 45, 50, 53, 48, 32, 52, 52, 32, 45, 50, 51, 57, 32, 53, 52, 81, 45, 50, 52, 49, 32, 55, 50, 32, 45, 50, 52, 49, 32, 56, 53, 81, 45, 50, 52, 49, 32, 49, 52, 48, 32, 45, 50, 50, 49, 32, 49, 56, 48, 81, 45, 49, 57, 51, 32, 50, 51, 55, 10, 45, 49, 50, 52, 32, 50, 54, 55, 81, 45, 49, 53, 53, 32, 51, 51, 55, 32, 45, 50, 50, 48, 32, 51, 57, 49, 81, 45, 50, 56, 49, 32, 52, 51, 52, 32, 45, 51, 52, 51, 32, 52, 55, 55, 81, 45, 50, 57, 57, 32, 52, 55, 51, 32, 45, 50, 51, 50, 32, 52, 51, 51, 81, 45, 49, 53, 48, 32, 51, 56, 53, 32, 45, 49, 48, 49, 32, 51, 49, 56, 81, 45, 51, 56, 32, 50, 51, 51, 32, 45, 51, 56, 32, 49, 51, 52, 90, 77, 45, 51, 49, 54, 32, 50, 50, 55, 81, 45, 51, 51, 49, 32, 50, 50, 55, 32, 45, 51, 52, 55, 32, 50, 50, 53, 84, 45, 51, 54, 57, 32, 50, 49, 48, 84, 45, 51, 55, 55, 32, 49, 56, 53, 84, 45, 51, 55, 57, 32, 49, 53, 57, 86, 49, 51, 57, 81, 45, 51, 51, 55, 32, 49, 51, 57, 32, 45, 51, 50, 52, 32, 49, 54, 55, 81, 45, 51, 49, 54, 32, 49, 56, 52, 32, 45, 51, 49, 54, 32, 50, 50, 55, 90, 77, 45, 49, 56, 50, 32, 53, 52, 81, 45, 49, 55, 51, 32, 51, 53, 32, 45, 49, 53, 50, 32, 51, 53, 81, 45, 49, 50, 56, 32, 51, 53, 32, 45, 49, 48, 57, 32, 53, 57, 84, 45, 56, 57, 32, 49, 50, 57, 81, 45, 56, 57, 10, 49, 54, 55, 32, 45, 57, 57, 32, 50, 48, 57, 84, 45, 49, 50, 52, 32, 50, 53, 50, 81, 45, 49, 53, 54, 32, 50, 51, 57, 32, 45, 49, 55, 52, 32, 50, 48, 48, 84, 45, 49, 57, 50, 32, 49, 49, 51, 81, 45, 49, 57, 50, 32, 55, 56, 32, 45, 49, 56, 50, 32, 53, 52, 90, 77, 45, 50, 52, 32, 53, 48, 81, 45, 49, 52, 32, 53, 48, 32, 45, 55, 32, 52, 50, 84, 48, 32, 50, 52, 81, 48, 32, 49, 52, 32, 45, 56, 32, 55, 84, 45, 50, 55, 32, 48, 81, 45, 51, 55, 32, 48, 32, 45, 52, 52, 32, 56, 84, 45, 53, 49, 32, 50, 55, 81, 45, 53, 49, 32, 53, 48, 32, 45, 50, 52, 32, 53, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 81, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 81, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 52, 34, 32, 100, 61, 34, 77, 55, 32, 51, 54, 57, 86, 48, 72, 45, 55, 86, 51, 54, 57, 76, 45, 53, 51, 32, 51, 49, 54, 72, 45, 55, 52, 76, 49, 32, 52, 55, 55, 76, 55, 52, 32, 51, 49, 54, 72, 53, 51, 76, 55, 32, 51, 54, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 82, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 82, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 55, 55, 34, 32, 100, 61, 34, 77, 49, 48, 55, 32, 49, 53, 72, 52, 55, 55, 86, 49, 72, 49, 48, 55, 76, 49, 54, 48, 32, 45, 52, 53, 86, 45, 54, 54, 76, 48, 32, 55, 76, 49, 54, 48, 32, 56, 50, 86, 54, 49, 76, 49, 48, 55, 32, 49, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 83, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 83, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 53, 34, 32, 100, 61, 34, 77, 45, 53, 55, 32, 49, 76, 45, 51, 48, 32, 45, 50, 53, 76, 49, 50, 32, 45, 54, 56, 81, 51, 50, 32, 45, 57, 48, 32, 52, 53, 32, 45, 49, 49, 49, 84, 53, 56, 32, 45, 49, 53, 48, 81, 53, 56, 32, 45, 49, 53, 57, 32, 53, 50, 32, 45, 49, 55, 48, 76, 51, 49, 32, 45, 49, 56, 55, 76, 52, 32, 45, 49, 57, 57, 81, 45, 57, 32, 45, 50, 48, 52, 32, 45, 50, 50, 32, 45, 50, 48, 52, 81, 45, 54, 54, 32, 45, 50, 48, 52, 32, 45, 54, 54, 32, 45, 49, 54, 51, 76, 45, 54, 52, 32, 45, 49, 53, 52, 76, 45, 53, 52, 32, 45, 49, 52, 51, 76, 45, 52, 56, 32, 45, 49, 51, 55, 76, 45, 52, 50, 32, 45, 49, 50, 57, 76, 45, 51, 57, 32, 45, 49, 49, 51, 81, 45, 51, 57, 32, 45, 56, 55, 32, 45, 54, 56, 32, 45, 56, 48, 81, 45, 57, 52, 32, 45, 56, 48, 32, 45, 49, 48, 57, 32, 45, 57, 56, 81, 45, 49, 49, 54, 10, 45, 49, 48, 55, 32, 45, 49, 49, 57, 32, 45, 49, 49, 56, 84, 45, 49, 50, 50, 32, 45, 49, 52, 51, 81, 45, 49, 50, 50, 32, 45, 49, 54, 49, 32, 45, 49, 49, 52, 32, 45, 49, 55, 56, 84, 45, 56, 57, 32, 45, 50, 49, 48, 81, 45, 53, 57, 32, 45, 50, 51, 52, 32, 45, 49, 54, 32, 45, 50, 51, 52, 81, 49, 54, 32, 45, 50, 51, 52, 32, 52, 53, 32, 45, 50, 50, 49, 81, 54, 48, 32, 45, 50, 49, 53, 32, 55, 50, 32, 45, 50, 48, 55, 84, 57, 55, 32, 45, 49, 56, 52, 81, 49, 49, 57, 32, 45, 49, 53, 57, 32, 49, 50, 51, 32, 45, 49, 51, 48, 81, 49, 50, 51, 32, 45, 57, 48, 32, 49, 48, 49, 32, 45, 53, 53, 76, 55, 55, 32, 45, 50, 48, 76, 52, 53, 32, 49, 52, 76, 45, 50, 50, 32, 55, 57, 76, 45, 51, 50, 32, 56, 57, 76, 45, 52, 55, 32, 49, 49, 50, 81, 45, 53, 50, 32, 49, 50, 48, 32, 45, 53, 53, 32, 49, 50, 57, 84, 45, 53, 56, 32, 49, 52, 57, 81, 45, 53, 56, 32, 49, 54, 51, 32, 45, 53, 50, 32, 49, 55, 51, 84, 45, 51, 55, 32, 49, 56, 57, 81, 45, 49, 53, 32, 50, 48, 51, 32, 49, 50, 32, 50, 48, 51, 81, 51, 52, 10, 50, 48, 51, 32, 53, 48, 32, 49, 57, 51, 84, 54, 55, 32, 49, 54, 52, 81, 54, 54, 32, 49, 54, 49, 32, 54, 52, 32, 49, 53, 55, 84, 53, 55, 32, 49, 52, 55, 76, 52, 52, 32, 49, 50, 57, 81, 52, 48, 32, 49, 50, 52, 32, 52, 48, 32, 49, 49, 49, 81, 52, 48, 32, 49, 48, 48, 32, 53, 49, 32, 56, 57, 81, 54, 49, 32, 56, 49, 32, 55, 56, 32, 55, 57, 81, 57, 57, 32, 55, 57, 32, 49, 49, 48, 32, 57, 56, 84, 49, 50, 49, 32, 49, 51, 55, 81, 49, 50, 49, 32, 49, 54, 54, 32, 49, 48, 51, 32, 49, 56, 57, 81, 57, 52, 32, 50, 48, 48, 32, 56, 51, 32, 50, 48, 56, 84, 53, 55, 32, 50, 50, 51, 81, 51, 49, 32, 50, 51, 52, 32, 45, 51, 32, 50, 51, 52, 81, 45, 50, 50, 32, 50, 51, 52, 32, 45, 51, 53, 32, 50, 51, 50, 84, 45, 54, 50, 32, 50, 50, 51, 81, 45, 56, 56, 32, 50, 49, 49, 32, 45, 49, 48, 53, 32, 49, 56, 54, 84, 45, 49, 50, 50, 32, 49, 50, 56, 81, 45, 49, 50, 50, 32, 57, 52, 32, 45, 49, 48, 53, 32, 54, 53, 84, 45, 53, 55, 32, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 84, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 84, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 52, 54, 34, 32, 100, 61, 34, 77, 50, 57, 54, 32, 49, 49, 49, 81, 51, 49, 51, 32, 49, 49, 49, 32, 51, 50, 54, 32, 49, 48, 51, 76, 51, 53, 50, 32, 56, 51, 76, 51, 55, 53, 32, 54, 51, 81, 51, 56, 57, 32, 53, 52, 32, 52, 48, 52, 32, 53, 52, 76, 52, 49, 52, 32, 53, 53, 76, 52, 50, 52, 32, 54, 48, 76, 52, 51, 53, 32, 54, 54, 76, 52, 52, 53, 32, 55, 49, 86, 53, 56, 76, 52, 48, 52, 32, 50, 56, 81, 51, 56, 53, 32, 49, 57, 32, 51, 55, 50, 32, 49, 56, 81, 51, 53, 57, 32, 49, 56, 32, 51, 52, 50, 32, 50, 55, 81, 51, 51, 55, 32, 50, 56, 32, 51, 49, 54, 32, 52, 54, 76, 50, 57, 51, 32, 54, 53, 81, 50, 56, 49, 32, 55, 52, 32, 50, 54, 53, 32, 55, 54, 76, 50, 53, 53, 32, 55, 52, 76, 50, 52, 52, 32, 55, 48, 76, 50, 51, 53, 32, 54, 52, 76, 50, 50, 51, 32, 53, 56, 76, 50, 48, 50, 10, 52, 50, 81, 49, 57, 49, 32, 51, 53, 32, 49, 56, 49, 32, 50, 56, 81, 49, 54, 50, 32, 49, 57, 32, 49, 52, 57, 32, 49, 56, 81, 49, 51, 54, 32, 49, 56, 32, 49, 49, 57, 32, 50, 55, 81, 49, 49, 52, 32, 50, 56, 32, 57, 52, 32, 52, 54, 76, 55, 48, 32, 54, 53, 81, 53, 56, 32, 55, 52, 32, 52, 50, 32, 55, 54, 76, 51, 50, 32, 55, 52, 76, 50, 50, 32, 55, 48, 76, 49, 51, 32, 54, 52, 76, 48, 32, 53, 56, 86, 55, 49, 81, 49, 48, 32, 56, 48, 32, 50, 48, 32, 56, 55, 84, 52, 50, 32, 49, 48, 48, 81, 54, 48, 32, 49, 49, 48, 32, 55, 52, 32, 49, 49, 49, 81, 57, 48, 32, 49, 49, 49, 32, 49, 48, 51, 32, 49, 48, 51, 76, 49, 49, 55, 32, 57, 52, 76, 49, 50, 57, 32, 56, 51, 76, 49, 53, 51, 32, 54, 51, 76, 49, 54, 55, 32, 53, 54, 76, 49, 56, 49, 32, 53, 52, 76, 49, 57, 49, 32, 53, 53, 81, 49, 57, 57, 32, 53, 56, 32, 50, 48, 49, 32, 54, 48, 76, 50, 49, 51, 32, 54, 54, 76, 50, 50, 51, 32, 55, 49, 81, 50, 51, 51, 32, 56, 48, 32, 50, 52, 51, 32, 56, 55, 84, 50, 54, 53, 32, 49, 48, 48, 81, 50, 56, 49, 10, 49, 49, 48, 32, 50, 57, 54, 32, 49, 49, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 85, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 85, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 54, 51, 34, 32, 100, 61, 34, 77, 45, 49, 51, 49, 32, 50, 48, 57, 72, 45, 57, 53, 76, 45, 49, 32, 45, 49, 48, 53, 76, 57, 53, 32, 50, 48, 57, 72, 49, 51, 49, 76, 45, 49, 32, 45, 50, 48, 57, 76, 45, 49, 51, 49, 32, 50, 48, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 86, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 86, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 51, 34, 32, 100, 61, 34, 77, 45, 49, 50, 49, 32, 49, 50, 57, 72, 45, 56, 52, 86, 45, 51, 49, 81, 45, 55, 57, 32, 45, 53, 53, 32, 45, 55, 50, 32, 45, 54, 54, 81, 45, 53, 48, 32, 45, 49, 48, 49, 32, 48, 32, 45, 49, 48, 49, 81, 52, 57, 32, 45, 49, 48, 49, 32, 55, 49, 32, 45, 54, 54, 81, 55, 56, 32, 45, 53, 53, 32, 56, 51, 32, 45, 51, 49, 86, 49, 50, 57, 72, 49, 50, 49, 86, 45, 50, 48, 81, 49, 49, 53, 32, 45, 53, 54, 32, 49, 48, 53, 32, 45, 55, 52, 81, 55, 52, 32, 45, 49, 50, 57, 32, 48, 32, 45, 49, 50, 57, 81, 45, 55, 52, 32, 45, 49, 50, 57, 32, 45, 49, 48, 53, 32, 45, 55, 53, 81, 45, 49, 49, 53, 32, 45, 53, 55, 32, 45, 49, 50, 49, 32, 45, 50, 48, 86, 49, 50, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 87, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 87, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 52, 34, 32, 100, 61, 34, 77, 45, 55, 32, 49, 48, 55, 86, 52, 55, 55, 72, 55, 86, 49, 48, 55, 76, 53, 51, 32, 49, 54, 48, 72, 55, 52, 76, 45, 49, 32, 48, 76, 45, 55, 52, 32, 49, 54, 48, 72, 45, 53, 51, 76, 45, 55, 32, 49, 48, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 88, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 88, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 53, 51, 56, 34, 32, 100, 61, 34, 77, 53, 51, 56, 32, 51, 53, 57, 81, 53, 49, 53, 32, 51, 53, 57, 32, 52, 56, 55, 32, 51, 53, 48, 84, 52, 51, 57, 32, 51, 50, 48, 76, 50, 56, 53, 32, 49, 54, 53, 76, 52, 52, 56, 32, 48, 72, 52, 50, 49, 76, 50, 54, 56, 32, 49, 52, 56, 76, 49, 49, 55, 32, 48, 72, 56, 57, 76, 50, 53, 49, 32, 49, 54, 53, 76, 56, 57, 32, 51, 50, 48, 81, 55, 48, 32, 51, 51, 56, 32, 53, 56, 32, 51, 52, 51, 84, 48, 32, 51, 53, 57, 86, 52, 50, 48, 72, 54, 49, 81, 55, 49, 32, 51, 56, 54, 32, 56, 49, 32, 51, 55, 49, 81, 56, 51, 32, 51, 54, 56, 32, 49, 48, 53, 32, 51, 52, 54, 76, 50, 54, 56, 32, 49, 56, 52, 76, 52, 50, 55, 32, 51, 52, 49, 81, 52, 52, 57, 32, 51, 53, 57, 32, 52, 53, 57, 32, 51, 55, 56, 84, 52, 55, 52, 32, 52, 50, 48, 72, 53, 51, 56, 86, 51, 53, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 89, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 89, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 52, 54, 34, 32, 100, 61, 34, 77, 49, 52, 57, 32, 49, 48, 53, 54, 81, 49, 51, 51, 32, 49, 48, 53, 54, 32, 49, 49, 57, 32, 49, 48, 54, 54, 76, 57, 51, 32, 49, 48, 57, 49, 76, 55, 48, 32, 49, 49, 49, 54, 81, 53, 56, 32, 49, 49, 50, 53, 32, 52, 49, 32, 49, 49, 50, 55, 76, 51, 49, 32, 49, 49, 50, 53, 76, 50, 49, 32, 49, 49, 50, 48, 76, 49, 48, 32, 49, 49, 49, 50, 76, 48, 32, 49, 49, 48, 53, 86, 49, 49, 50, 50, 81, 50, 49, 32, 49, 49, 52, 51, 32, 52, 48, 32, 49, 49, 53, 54, 84, 55, 51, 32, 49, 49, 55, 49, 81, 56, 55, 32, 49, 49, 55, 49, 32, 49, 48, 51, 32, 49, 49, 54, 49, 81, 49, 48, 57, 32, 49, 49, 53, 55, 32, 49, 50, 57, 32, 49, 49, 51, 54, 76, 49, 53, 50, 32, 49, 49, 49, 50, 81, 49, 54, 51, 32, 49, 49, 48, 50, 32, 49, 56, 48, 32, 49, 49, 48, 48, 76, 49, 57, 48, 10, 49, 49, 48, 50, 76, 50, 48, 49, 32, 49, 49, 48, 55, 76, 50, 49, 48, 32, 49, 49, 49, 52, 76, 50, 50, 50, 32, 49, 49, 50, 50, 76, 50, 52, 51, 32, 49, 49, 52, 50, 76, 50, 54, 52, 32, 49, 49, 53, 56, 81, 50, 56, 50, 32, 49, 49, 55, 48, 32, 50, 57, 54, 32, 49, 49, 55, 49, 81, 51, 49, 48, 32, 49, 49, 55, 49, 32, 51, 50, 54, 32, 49, 49, 54, 49, 81, 51, 51, 51, 32, 49, 49, 53, 55, 32, 51, 53, 49, 32, 49, 49, 51, 54, 76, 51, 55, 53, 32, 49, 49, 49, 50, 81, 51, 56, 55, 32, 49, 49, 48, 50, 32, 52, 48, 51, 32, 49, 49, 48, 48, 76, 52, 49, 51, 32, 49, 49, 48, 50, 76, 52, 50, 51, 32, 49, 49, 48, 55, 76, 52, 51, 50, 32, 49, 49, 49, 52, 76, 52, 52, 53, 32, 49, 49, 50, 50, 86, 49, 49, 48, 53, 81, 52, 51, 53, 32, 49, 48, 57, 53, 32, 52, 50, 51, 32, 49, 48, 56, 53, 81, 52, 49, 53, 32, 49, 48, 55, 56, 32, 52, 48, 51, 32, 49, 48, 55, 48, 81, 51, 57, 54, 32, 49, 48, 54, 53, 32, 51, 57, 48, 32, 49, 48, 54, 50, 84, 51, 55, 53, 32, 49, 48, 53, 54, 81, 51, 54, 55, 32, 49, 48, 53, 54, 10, 51, 53, 57, 32, 49, 48, 53, 56, 84, 51, 52, 50, 32, 49, 48, 54, 54, 76, 51, 50, 56, 32, 49, 48, 55, 55, 76, 51, 49, 54, 32, 49, 48, 57, 49, 76, 50, 57, 50, 32, 49, 49, 49, 54, 76, 50, 55, 56, 32, 49, 49, 50, 52, 76, 50, 54, 52, 32, 49, 49, 50, 55, 76, 50, 53, 52, 32, 49, 49, 50, 53, 81, 50, 52, 54, 32, 49, 49, 50, 50, 32, 50, 52, 52, 32, 49, 49, 50, 48, 76, 50, 51, 50, 32, 49, 49, 49, 50, 76, 50, 50, 50, 32, 49, 49, 48, 53, 81, 50, 49, 50, 32, 49, 48, 57, 53, 32, 50, 48, 48, 32, 49, 48, 56, 53, 81, 49, 57, 50, 32, 49, 48, 55, 56, 32, 49, 56, 48, 32, 49, 48, 55, 48, 81, 49, 55, 51, 32, 49, 48, 54, 53, 32, 49, 54, 54, 32, 49, 48, 54, 50, 84, 49, 52, 57, 32, 49, 48, 53, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 90, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 90, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 49, 49, 34, 32, 100, 61, 34, 77, 45, 53, 53, 32, 49, 50, 57, 81, 45, 53, 53, 32, 49, 53, 50, 32, 45, 52, 48, 32, 49, 54, 56, 84, 48, 32, 49, 56, 53, 81, 50, 52, 32, 49, 56, 53, 32, 52, 48, 32, 49, 54, 57, 84, 53, 54, 32, 49, 50, 57, 81, 53, 54, 32, 49, 48, 53, 32, 52, 48, 32, 56, 57, 84, 48, 32, 55, 51, 81, 45, 50, 51, 32, 55, 51, 32, 45, 51, 57, 32, 56, 57, 84, 45, 53, 53, 32, 49, 50, 57, 90, 77, 45, 53, 53, 32, 45, 49, 50, 56, 81, 45, 53, 53, 32, 45, 49, 48, 53, 32, 45, 51, 57, 32, 45, 56, 57, 84, 48, 32, 45, 55, 51, 81, 50, 52, 32, 45, 55, 51, 32, 52, 48, 32, 45, 56, 57, 84, 53, 54, 32, 45, 49, 50, 56, 81, 53, 54, 32, 45, 49, 53, 50, 32, 52, 48, 32, 45, 49, 54, 56, 84, 48, 32, 45, 49, 56, 52, 81, 45, 50, 51, 32, 45, 49, 56, 52, 32, 45, 51, 57, 32, 45, 49, 54, 56, 84, 45, 53, 53, 10, 45, 49, 50, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 91, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 114, 97, 99, 107, 101, 116, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 53, 34, 32, 100, 61, 34, 77, 48, 32, 54, 52, 48, 72, 52, 54, 53, 86, 54, 48, 50, 72, 51, 56, 86, 51, 56, 72, 52, 55, 52, 86, 48, 72, 48, 86, 54, 52, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 92, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 97, 99, 107, 115, 108, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 54, 57, 34, 32, 100, 61, 34, 77, 45, 49, 51, 48, 32, 56, 51, 81, 45, 49, 49, 52, 32, 49, 55, 32, 45, 57, 56, 32, 45, 55, 81, 45, 54, 53, 32, 45, 53, 56, 32, 48, 32, 45, 53, 56, 81, 54, 52, 32, 45, 53, 56, 32, 57, 55, 32, 45, 55, 81, 49, 49, 53, 32, 50, 48, 32, 49, 50, 57, 32, 56, 51, 81, 49, 51, 48, 32, 56, 51, 32, 49, 51, 49, 32, 56, 52, 81, 49, 51, 53, 32, 55, 55, 32, 49, 51, 53, 32, 54, 50, 81, 49, 51, 53, 32, 49, 49, 32, 49, 49, 49, 32, 45, 50, 55, 81, 55, 53, 32, 45, 56, 51, 32, 48, 32, 45, 56, 51, 81, 45, 55, 53, 32, 45, 56, 51, 32, 45, 49, 49, 48, 32, 45, 50, 55, 81, 45, 49, 51, 53, 32, 49, 51, 32, 45, 49, 51, 53, 32, 54, 52, 81, 45, 49, 51, 53, 32, 56, 48, 32, 45, 49, 51, 51, 32, 56, 52, 81, 45, 49, 51, 49, 32, 56, 51, 32, 45, 49, 51, 48, 32, 56, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 93, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 114, 97, 99, 107, 101, 116, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 53, 34, 32, 100, 61, 34, 77, 52, 54, 53, 32, 48, 72, 45, 57, 86, 51, 56, 72, 52, 50, 55, 86, 54, 48, 50, 72, 48, 86, 54, 52, 48, 72, 52, 54, 53, 86, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 94, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 115, 99, 105, 105, 99, 105, 114, 99, 117, 109, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 49, 49, 34, 32, 100, 61, 34, 77, 55, 49, 48, 32, 49, 51, 52, 76, 54, 48, 49, 32, 55, 81, 53, 57, 55, 32, 50, 32, 53, 57, 52, 32, 49, 84, 53, 56, 56, 32, 45, 49, 81, 53, 56, 48, 32, 50, 32, 53, 55, 56, 32, 52, 76, 52, 56, 57, 32, 56, 50, 81, 52, 56, 50, 32, 56, 57, 32, 52, 55, 50, 32, 57, 48, 81, 52, 54, 54, 32, 56, 56, 32, 52, 54, 52, 32, 56, 54, 76, 51, 57, 56, 32, 55, 81, 51, 57, 51, 32, 45, 49, 32, 51, 56, 53, 32, 45, 49, 76, 51, 55, 52, 32, 52, 76, 50, 56, 53, 32, 56, 50, 81, 50, 55, 54, 32, 56, 57, 32, 50, 54, 57, 32, 57, 48, 81, 50, 54, 51, 32, 56, 56, 32, 50, 54, 49, 32, 56, 54, 76, 49, 57, 52, 32, 55, 81, 49, 56, 54, 32, 45, 49, 32, 49, 56, 48, 32, 45, 49, 81, 49, 55, 55, 32, 45, 49, 32, 49, 55, 48, 32, 52, 76, 56, 50, 10, 56, 50, 81, 55, 52, 32, 56, 57, 32, 54, 53, 32, 57, 48, 81, 53, 56, 32, 56, 56, 32, 53, 55, 32, 56, 54, 76, 48, 32, 49, 56, 86, 54, 55, 76, 49, 48, 56, 32, 49, 57, 52, 76, 49, 49, 56, 32, 49, 57, 56, 81, 49, 49, 57, 32, 49, 57, 56, 32, 49, 50, 50, 32, 49, 57, 55, 84, 49, 51, 52, 32, 49, 57, 48, 76, 50, 50, 50, 32, 49, 49, 50, 76, 50, 51, 50, 32, 49, 48, 55, 81, 50, 51, 56, 32, 49, 48, 55, 32, 50, 52, 54, 32, 49, 49, 53, 76, 51, 49, 51, 32, 49, 57, 52, 81, 51, 49, 56, 32, 49, 57, 56, 32, 51, 50, 49, 32, 49, 57, 56, 81, 51, 50, 56, 32, 49, 57, 56, 32, 51, 51, 55, 32, 49, 57, 48, 76, 52, 50, 54, 32, 49, 49, 50, 76, 52, 51, 55, 32, 49, 48, 55, 76, 52, 52, 51, 32, 49, 48, 56, 76, 52, 53, 48, 32, 49, 49, 53, 76, 53, 49, 55, 32, 49, 57, 52, 81, 53, 50, 50, 32, 49, 57, 56, 32, 53, 50, 52, 32, 49, 57, 56, 81, 53, 51, 48, 32, 49, 57, 54, 32, 53, 51, 50, 32, 49, 57, 52, 76, 53, 51, 57, 32, 49, 56, 56, 76, 54, 50, 56, 32, 49, 49, 49, 81, 54, 51, 51, 32, 49, 48, 54, 10, 54, 51, 57, 32, 49, 48, 54, 81, 54, 52, 53, 32, 49, 48, 54, 32, 54, 53, 50, 32, 49, 49, 52, 76, 55, 49, 48, 32, 49, 56, 49, 86, 49, 51, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 95, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 117, 110, 100, 101, 114, 115, 99, 111, 114, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 45, 49, 54, 51, 32, 45, 49, 50, 52, 86, 45, 52, 49, 76, 49, 54, 51, 32, 49, 50, 53, 86, 51, 57, 76, 45, 49, 54, 51, 32, 45, 49, 50, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 96, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 48, 50, 34, 32, 100, 61, 34, 77, 48, 32, 51, 55, 53, 72, 49, 48, 50, 86, 49, 55, 57, 72, 55, 49, 86, 51, 52, 53, 72, 48, 86, 51, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 97, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 48, 34, 32, 100, 61, 34, 77, 49, 48, 55, 32, 50, 52, 56, 81, 57, 52, 32, 50, 49, 57, 32, 55, 57, 32, 50, 48, 54, 84, 52, 50, 32, 49, 57, 51, 81, 50, 49, 32, 49, 57, 51, 32, 49, 49, 32, 50, 48, 55, 84, 48, 32, 50, 52, 52, 81, 48, 32, 50, 54, 48, 32, 49, 32, 50, 54, 56, 84, 49, 48, 32, 50, 57, 52, 84, 51, 54, 32, 51, 51, 52, 81, 55, 52, 32, 51, 55, 57, 32, 49, 48, 55, 32, 51, 55, 57, 81, 49, 51, 48, 32, 51, 55, 57, 32, 49, 51, 57, 32, 51, 53, 51, 76, 49, 52, 49, 32, 51, 54, 51, 76, 49, 52, 52, 32, 51, 55, 51, 81, 49, 52, 55, 32, 51, 55, 54, 32, 49, 53, 50, 32, 51, 55, 54, 72, 49, 53, 57, 81, 49, 54, 53, 32, 51, 55, 54, 32, 49, 54, 53, 32, 51, 55, 48, 76, 49, 54, 52, 32, 51, 54, 50, 76, 49, 51, 49, 32, 50, 52, 53, 76, 49, 50, 56, 32, 50, 51, 49, 76, 49, 50, 54, 10, 50, 49, 56, 81, 49, 50, 54, 32, 50, 48, 53, 32, 49, 51, 52, 32, 50, 48, 53, 81, 49, 52, 48, 32, 50, 48, 53, 32, 49, 53, 50, 32, 50, 49, 56, 81, 49, 53, 57, 32, 50, 50, 56, 32, 49, 54, 51, 32, 50, 51, 55, 84, 49, 55, 52, 32, 50, 54, 51, 76, 49, 56, 48, 32, 50, 54, 48, 81, 49, 55, 53, 32, 50, 51, 57, 32, 49, 55, 51, 32, 50, 51, 53, 84, 49, 54, 54, 32, 50, 50, 51, 84, 49, 53, 54, 32, 50, 48, 57, 84, 49, 52, 54, 32, 50, 48, 48, 81, 49, 51, 56, 32, 49, 57, 51, 32, 49, 50, 53, 32, 49, 57, 51, 81, 49, 48, 51, 32, 49, 57, 51, 32, 49, 48, 51, 32, 50, 49, 56, 76, 49, 48, 52, 32, 50, 51, 48, 76, 49, 48, 55, 32, 50, 52, 56, 90, 77, 53, 49, 32, 50, 48, 50, 81, 54, 54, 32, 50, 48, 50, 32, 56, 48, 32, 50, 49, 55, 76, 57, 56, 32, 50, 52, 53, 76, 49, 49, 57, 32, 50, 57, 48, 76, 49, 50, 56, 32, 51, 50, 48, 81, 49, 51, 50, 32, 51, 51, 50, 32, 49, 51, 50, 32, 51, 52, 51, 81, 49, 51, 50, 32, 51, 53, 56, 32, 49, 50, 53, 32, 51, 54, 52, 81, 49, 50, 49, 32, 51, 55, 48, 10, 49, 49, 48, 32, 51, 55, 50, 81, 56, 49, 32, 51, 55, 50, 32, 52, 55, 32, 51, 48, 50, 76, 52, 48, 32, 50, 56, 52, 76, 51, 54, 32, 50, 55, 53, 76, 51, 51, 32, 50, 54, 54, 81, 51, 48, 32, 50, 53, 53, 32, 50, 56, 32, 50, 52, 55, 84, 50, 54, 32, 50, 51, 49, 81, 50, 54, 32, 50, 49, 57, 32, 51, 49, 32, 50, 49, 49, 84, 53, 49, 32, 50, 48, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 98, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 50, 34, 32, 100, 61, 34, 77, 52, 56, 32, 50, 48, 49, 76, 53, 53, 32, 50, 48, 48, 81, 56, 50, 32, 50, 48, 48, 32, 49, 48, 56, 32, 50, 53, 55, 81, 49, 50, 57, 32, 51, 48, 53, 32, 49, 50, 57, 32, 51, 52, 48, 81, 49, 50, 57, 32, 51, 54, 57, 32, 49, 48, 57, 32, 51, 54, 57, 81, 56, 54, 32, 51, 54, 57, 32, 53, 57, 32, 51, 50, 48, 81, 52, 55, 32, 50, 57, 54, 32, 51, 57, 32, 50, 55, 50, 81, 51, 50, 32, 50, 52, 54, 32, 51, 50, 32, 50, 50, 57, 81, 51, 50, 32, 50, 48, 54, 32, 52, 56, 32, 50, 48, 49, 90, 77, 49, 55, 32, 50, 56, 51, 76, 54, 50, 32, 52, 53, 50, 76, 54, 51, 32, 52, 53, 56, 76, 54, 49, 32, 52, 54, 55, 81, 53, 54, 32, 52, 55, 48, 32, 52, 56, 32, 52, 55, 48, 72, 51, 55, 76, 52, 48, 32, 52, 55, 57, 76, 49, 48, 49, 32, 52, 56, 55, 76, 53, 54, 32, 51, 51, 49, 81, 55, 50, 10, 51, 53, 55, 32, 56, 55, 32, 51, 54, 56, 84, 49, 49, 54, 32, 51, 56, 48, 81, 49, 51, 50, 32, 51, 56, 48, 32, 49, 52, 52, 32, 51, 54, 54, 84, 49, 53, 54, 32, 51, 50, 51, 81, 49, 53, 54, 32, 51, 49, 53, 32, 49, 53, 53, 32, 51, 48, 53, 84, 49, 52, 57, 32, 50, 56, 50, 81, 49, 52, 49, 32, 50, 53, 57, 32, 49, 50, 54, 32, 50, 52, 48, 81, 57, 51, 32, 49, 57, 51, 32, 52, 56, 32, 49, 57, 51, 76, 51, 53, 32, 49, 57, 53, 81, 50, 49, 32, 49, 57, 57, 32, 49, 54, 32, 50, 48, 55, 81, 57, 32, 50, 49, 53, 32, 57, 32, 50, 51, 53, 86, 50, 52, 54, 76, 49, 49, 32, 50, 53, 54, 81, 49, 50, 32, 50, 54, 53, 32, 49, 51, 32, 50, 54, 55, 76, 49, 55, 32, 50, 56, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 99, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 49, 56, 53, 34, 32, 100, 61, 34, 77, 49, 53, 54, 32, 55, 56, 76, 49, 54, 52, 32, 55, 51, 81, 49, 53, 49, 32, 52, 48, 32, 49, 51, 50, 32, 50, 51, 81, 49, 48, 53, 32, 45, 55, 32, 54, 55, 32, 45, 55, 81, 51, 49, 32, 45, 55, 32, 49, 52, 32, 49, 55, 81, 48, 32, 51, 52, 32, 48, 32, 54, 57, 81, 48, 32, 57, 57, 32, 49, 49, 32, 49, 50, 56, 84, 52, 53, 32, 49, 57, 48, 81, 57, 48, 32, 50, 53, 50, 32, 49, 52, 48, 32, 50, 53, 50, 81, 49, 53, 57, 32, 50, 53, 50, 32, 49, 55, 48, 32, 50, 52, 51, 84, 49, 56, 52, 32, 50, 50, 50, 76, 49, 56, 53, 32, 50, 49, 56, 81, 49, 56, 53, 32, 49, 57, 53, 32, 49, 54, 52, 32, 49, 57, 53, 81, 49, 53, 54, 32, 49, 57, 55, 32, 49, 53, 50, 32, 50, 48, 48, 81, 49, 52, 55, 32, 50, 48, 55, 32, 49, 52, 55, 32, 50, 49, 51, 81, 49, 52, 55, 32, 50, 49, 56, 10, 49, 53, 49, 32, 50, 50, 53, 76, 49, 53, 53, 32, 50, 51, 50, 81, 49, 53, 53, 32, 50, 51, 56, 32, 49, 52, 50, 32, 50, 51, 57, 81, 57, 53, 32, 50, 51, 57, 32, 54, 52, 32, 49, 53, 54, 81, 51, 57, 32, 57, 50, 32, 51, 57, 32, 53, 48, 81, 51, 57, 32, 54, 32, 55, 51, 32, 54, 81, 57, 53, 32, 54, 32, 49, 49, 48, 32, 49, 55, 81, 49, 51, 50, 32, 51, 51, 32, 49, 53, 54, 32, 55, 56, 90, 77, 51, 48, 55, 32, 49, 48, 50, 76, 50, 55, 50, 32, 48, 72, 50, 51, 50, 81, 50, 53, 50, 32, 53, 49, 32, 50, 54, 56, 32, 49, 48, 56, 76, 50, 56, 48, 32, 49, 53, 57, 81, 50, 56, 53, 32, 49, 56, 54, 32, 50, 56, 53, 32, 50, 48, 52, 81, 50, 56, 53, 32, 50, 49, 55, 32, 50, 56, 51, 32, 50, 50, 52, 84, 50, 55, 48, 32, 50, 51, 51, 81, 50, 53, 55, 32, 50, 51, 51, 32, 50, 51, 52, 32, 49, 57, 52, 76, 50, 49, 57, 32, 49, 54, 49, 76, 50, 48, 57, 32, 49, 54, 52, 81, 50, 49, 54, 32, 49, 56, 50, 32, 50, 50, 48, 32, 49, 57, 49, 81, 50, 50, 57, 32, 50, 49, 48, 32, 50, 52, 50, 32, 50, 50, 52, 81, 50, 54, 49, 10, 50, 53, 48, 32, 50, 56, 55, 32, 50, 53, 48, 81, 51, 48, 50, 32, 50, 53, 48, 32, 51, 49, 48, 32, 50, 51, 54, 81, 51, 49, 55, 32, 50, 50, 48, 32, 51, 49, 55, 32, 50, 48, 48, 76, 51, 49, 52, 32, 49, 54, 54, 76, 51, 49, 48, 32, 49, 52, 53, 76, 51, 51, 50, 32, 49, 57, 57, 81, 51, 54, 49, 32, 50, 53, 49, 32, 51, 57, 55, 32, 50, 53, 49, 81, 52, 48, 56, 32, 50, 53, 49, 32, 52, 49, 51, 32, 50, 52, 54, 81, 52, 50, 50, 32, 50, 52, 48, 32, 52, 50, 50, 32, 50, 50, 53, 81, 52, 50, 50, 32, 50, 49, 54, 32, 52, 49, 57, 32, 50, 49, 48, 84, 52, 48, 52, 32, 50, 48, 50, 76, 51, 57, 52, 32, 50, 48, 52, 81, 51, 57, 48, 32, 50, 48, 55, 32, 51, 56, 55, 32, 50, 50, 48, 81, 51, 56, 55, 32, 50, 50, 54, 32, 51, 56, 52, 32, 50, 51, 48, 81, 51, 56, 51, 32, 50, 51, 48, 32, 51, 56, 50, 32, 50, 51, 49, 81, 51, 52, 57, 32, 50, 51, 49, 32, 51, 48, 55, 32, 49, 48, 50, 90, 77, 54, 50, 49, 32, 51, 52, 81, 54, 50, 49, 32, 52, 51, 32, 54, 50, 53, 32, 53, 48, 76, 54, 51, 55, 32, 53, 54, 81, 54, 52, 54, 10, 53, 51, 32, 54, 52, 57, 32, 53, 48, 84, 54, 53, 52, 32, 51, 53, 76, 54, 53, 50, 32, 50, 48, 81, 54, 53, 50, 32, 49, 51, 32, 54, 53, 56, 32, 55, 81, 54, 54, 51, 32, 52, 32, 54, 56, 53, 32, 52, 81, 55, 48, 56, 32, 52, 32, 55, 50, 51, 32, 49, 52, 84, 55, 51, 56, 32, 52, 55, 81, 55, 51, 56, 32, 53, 54, 32, 55, 51, 54, 32, 53, 57, 81, 55, 51, 51, 32, 55, 51, 32, 55, 50, 49, 32, 57, 50, 76, 54, 56, 57, 32, 49, 51, 50, 76, 54, 55, 50, 32, 49, 53, 56, 81, 54, 54, 55, 32, 49, 55]).concat([50, 32, 54, 54, 55, 32, 49, 55, 55, 84, 54, 54, 55, 32, 49, 56, 53, 81, 54, 54, 55, 32, 50, 49, 49, 32, 54, 56, 55, 32, 50, 51, 48, 81, 54, 57, 57, 32, 50, 52, 48, 32, 55, 49, 49, 32, 50, 52, 53, 84, 55, 52, 48, 32, 50, 53, 49, 81, 55, 53, 56, 32, 50, 53, 49, 32, 55, 55, 53, 32, 50, 52, 49, 81, 55, 57, 49, 32, 50, 50, 57, 32, 55, 57, 49, 32, 50, 49, 53, 81, 55, 57, 49, 32, 50, 48, 49, 32, 55, 55, 53, 32, 50, 48, 49, 81, 55, 54, 53, 32, 50, 48, 49, 32, 55, 54, 52, 32, 50, 48, 53, 81, 55, 54, 52, 10, 50, 49, 55, 32, 55, 54, 49, 32, 50, 50, 53, 81, 55, 53, 56, 32, 50, 52, 49, 32, 55, 51, 56, 32, 50, 52, 49, 81, 55, 50, 51, 32, 50, 52, 49, 32, 55, 49, 50, 32, 50, 51, 51, 81, 54, 57, 55, 32, 50, 50, 49, 32, 54, 57, 55, 32, 50, 48, 52, 81, 54, 57, 55, 32, 49, 57, 54, 32, 55, 48, 49, 32, 49, 56, 55, 76, 55, 50, 52, 32, 49, 53, 51, 76, 55, 52, 57, 32, 49, 50, 50, 81, 55, 53, 56, 32, 49, 48, 54, 32, 55, 54, 51, 32, 57, 49, 84, 55, 54, 57, 32, 54, 54, 81, 55, 54, 57, 32, 51, 50, 32, 55, 52, 51, 32, 49, 50, 84, 54, 56, 49, 32, 45, 56, 81, 54, 54, 56, 32, 45, 56, 32, 54, 53, 56, 32, 45, 55, 84, 54, 51, 55, 32, 53, 81, 54, 50, 49, 32, 49, 55, 32, 54, 50, 49, 32, 51, 52, 90, 77, 57, 55, 53, 32, 55, 56, 76, 57, 56, 53, 32, 55, 51, 81, 57, 55, 49, 32, 52, 51, 32, 57, 53, 51, 32, 50, 51, 81, 57, 50, 51, 32, 45, 55, 32, 56, 56, 55, 32, 45, 55, 81, 56, 53, 49, 32, 45, 55, 32, 56, 51, 51, 32, 49, 55, 81, 56, 50, 48, 32, 51, 51, 32, 56, 50, 48, 32, 54, 57, 81, 56, 50, 48, 10, 49, 50, 56, 32, 56, 54, 54, 32, 49, 57, 48, 84, 57, 54, 48, 32, 50, 53, 50, 81, 57, 55, 57, 32, 50, 53, 50, 32, 57, 57, 48, 32, 50, 52, 51, 81, 49, 48, 48, 51, 32, 50, 51, 53, 32, 49, 48, 48, 52, 32, 50, 50, 50, 86, 50, 49, 56, 81, 49, 48, 48, 52, 32, 49, 57, 53, 32, 57, 56, 53, 32, 49, 57, 53, 81, 57, 55, 53, 32, 49, 57, 55, 32, 57, 55, 49, 32, 50, 48, 49, 84, 57, 54, 55, 32, 50, 49, 51, 81, 57, 54, 55, 32, 50, 49, 56, 32, 57, 55, 49, 32, 50, 50, 53, 76, 57, 55, 53, 32, 50, 51, 50, 81, 57, 55, 53, 32, 50, 51, 55, 32, 57, 54, 51, 32, 50, 51, 57, 81, 57, 49, 54, 32, 50, 51, 57, 32, 56, 56, 53, 32, 49, 53, 54, 81, 56, 55, 50, 32, 49, 50, 54, 32, 56, 54, 54, 32, 49, 48, 48, 84, 56, 53, 57, 32, 53, 48, 81, 56, 53, 57, 32, 54, 32, 56, 57, 52, 32, 54, 81, 57, 49, 51, 32, 54, 32, 57, 51, 48, 32, 49, 55, 81, 57, 53, 50, 32, 51, 50, 32, 57, 55, 53, 32, 55, 56, 90, 77, 49, 48, 57, 48, 32, 53, 49, 81, 49, 49, 48, 51, 32, 53, 49, 32, 49, 49, 49, 49, 32, 52, 52, 84, 49, 49, 50, 49, 10, 50, 52, 81, 49, 49, 50, 49, 32, 49, 51, 32, 49, 49, 49, 50, 32, 52, 84, 49, 48, 57, 48, 32, 45, 54, 81, 49, 48, 55, 56, 32, 45, 54, 32, 49, 48, 54, 57, 32, 50, 84, 49, 48, 53, 56, 32, 50, 52, 81, 49, 48, 53, 56, 32, 51, 53, 32, 49, 48, 54, 54, 32, 52, 51, 84, 49, 48, 57, 48, 32, 53, 49, 90, 77, 52, 55, 57, 32, 49, 48, 53, 81, 53, 48, 52, 32, 49, 49, 54, 32, 53, 49, 57, 32, 49, 50, 54, 84, 53, 53, 50, 32, 49, 53, 53, 81, 53, 56, 51, 32, 49, 56, 54, 32, 53, 56, 51, 32, 50, 49, 54, 81, 53, 56, 51, 32, 50, 50, 53, 32, 53, 55, 55, 32, 50, 51, 49, 81, 53, 55, 50, 32, 50, 51, 57, 32, 53, 54, 51, 32, 50, 51, 57, 81, 53, 51, 56, 32, 50, 51, 57, 32, 53, 49, 48, 32, 49, 57, 48, 81, 52, 56, 56, 32, 49, 53, 49, 32, 52, 55, 57, 32, 49, 48, 53, 90, 77, 53, 55, 55, 32, 55, 51, 76, 53, 56, 55, 32, 54, 56, 81, 53, 54, 50, 32, 50, 54, 32, 53, 51, 56, 32, 57, 84, 52, 56, 54, 32, 45, 57, 81, 52, 53, 52, 32, 45, 57, 32, 52, 52, 49, 32, 49, 48, 84, 52, 50, 55, 32, 54, 48, 81, 52, 50, 55, 10, 49, 50, 52, 32, 52, 55, 52, 32, 49, 56, 54, 84, 53, 55, 50, 32, 50, 52, 57, 81, 53, 56, 55, 32, 50, 52, 57, 32, 53, 57, 56, 32, 50, 51, 57, 84, 54, 49, 49, 32, 50, 48, 57, 81, 54, 49, 49, 32, 49, 54, 57, 32, 53, 54, 56, 32, 49, 51, 56, 81, 53, 52, 54, 32, 49, 50, 50, 32, 53, 50, 54, 32, 49, 49, 50, 84, 52, 55, 53, 32, 57, 50, 81, 52, 55, 49, 32, 55, 52, 32, 52, 54, 57, 32, 55, 49, 81, 52, 54, 53, 32, 53, 53, 32, 52, 54, 53, 32, 51, 57, 81, 52, 54, 53, 32, 50, 50, 32, 52, 55, 50, 32, 49, 53, 81, 52, 55, 56, 32, 53, 32, 52, 57, 55, 32, 53, 81, 53, 49, 56, 32, 53, 32, 53, 51, 56, 32, 50, 51, 84, 53, 55, 55, 32, 55, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 100, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 57, 55, 51, 34, 32, 100, 61, 34, 77, 54, 54, 32, 53, 81, 49, 48, 51, 32, 53, 32, 49, 51, 55, 32, 56, 53, 81, 49, 53, 51, 32, 49, 50, 48, 32, 49, 54, 48, 32, 49, 52, 56, 84, 49, 54, 55, 32, 49, 57, 55, 81, 49, 54, 55, 32, 50, 49, 56, 32, 49, 54, 50, 32, 50, 50, 52, 81, 49, 53, 54, 32, 50, 51, 56, 32, 49, 51, 55, 32, 50, 51, 56, 81, 49, 48, 52, 32, 50, 51, 56, 32, 54, 56, 32, 49, 55, 48, 84, 51, 50, 32, 52, 57, 81, 51, 50, 32, 53, 32, 54, 54, 32, 53, 90, 77, 50, 51, 55, 32, 56, 55, 76, 50, 52, 54, 32, 56, 49, 81, 50, 52, 48, 32, 53, 54, 32, 50, 50, 52, 32, 50, 57, 81, 50, 48, 50, 32, 45, 52, 32, 49, 55, 51, 32, 45, 55, 81, 49, 53, 53, 32, 45, 55, 32, 49, 52, 54, 32, 54, 81, 49, 52, 50, 32, 49, 50, 32, 49, 52, 48, 32, 49, 57, 84, 49, 51, 56, 32, 51, 55, 81, 49, 51, 56, 10, 53, 55, 32, 49, 52, 50, 32, 55, 51, 81, 49, 52, 51, 32, 55, 57, 32, 49, 52, 53, 32, 56, 49, 81, 49, 51, 51, 32, 53, 52, 32, 49, 50, 51, 32, 51, 56, 84, 49, 48, 52, 32, 49, 50, 81, 56, 52, 32, 45, 55, 32, 53, 51, 32, 45, 55, 81, 51, 48, 32, 45, 55, 32, 49, 52, 32, 57, 81, 52, 32, 49, 57, 32, 45, 49, 32, 51, 50, 84, 45, 54, 32, 54, 53, 81, 45, 54, 32, 49, 50, 57, 32, 52, 49, 32, 49, 57, 48, 84, 49, 51, 49, 32, 50, 53, 49, 81, 49, 54, 48, 32, 50, 53, 49, 32, 49, 55, 53, 32, 50, 49, 57, 76, 50, 48, 55, 32, 51, 53, 49, 76, 50, 48, 57, 32, 51, 54, 51, 81, 50, 48, 57, 32, 51, 55, 55, 32, 49, 56, 56, 32, 51, 55, 55, 76, 49, 55, 50, 32, 51, 55, 54, 76, 49, 55, 52, 32, 51, 56, 57, 76, 50, 54, 50, 32, 52, 48, 48, 76, 49, 57, 55, 32, 49, 53, 55, 76, 49, 56, 48, 32, 56, 52, 81, 49, 55, 51, 32, 53, 50, 32, 49, 55, 51, 32, 51, 49, 81, 49, 55, 51, 32, 49, 48, 32, 49, 56, 51, 32, 49, 48, 81, 49, 57, 49, 32, 49, 48, 32, 50, 48, 51, 32, 50, 53, 84, 50, 51, 55, 32, 56, 55, 90, 77, 51, 56, 49, 10, 51, 56, 53, 81, 51, 56, 57, 32, 51, 56, 53, 32, 51, 57, 56, 32, 51, 55, 57, 84, 52, 48, 55, 32, 51, 54, 48, 81, 52, 48, 55, 32, 51, 53, 50, 32, 52, 48, 49, 32, 51, 52, 54, 84, 51, 56, 52, 32, 51, 51, 55, 81, 51, 55, 53, 32, 51, 51, 55, 32, 51, 54, 55, 32, 51, 52, 51, 84, 51, 53, 57, 32, 51, 54, 51, 81, 51, 53, 57, 32, 51, 55, 48, 32, 51, 54, 54, 32, 51, 55, 55, 81, 51, 55, 48, 32, 51, 56, 51, 32, 51, 56, 49, 32, 51, 56, 53, 90, 77, 51, 49, 48, 32, 49, 48, 56, 76, 51, 51, 48, 32, 49, 54, 50, 81, 51, 51, 57, 32, 49, 56, 48, 32, 51, 52, 51, 32, 49, 57, 52, 84, 51, 52, 55, 32, 50, 50, 48, 81, 51, 52, 55, 32, 50, 51, 49, 32, 51, 52, 48, 32, 50, 51, 52, 81, 51, 50, 50, 32, 50, 51, 52, 32, 50, 57, 57, 32, 49, 57, 54, 81, 50, 57, 54, 32, 49, 57, 49, 32, 50, 57, 50, 32, 49, 56, 50, 84, 50, 56, 52, 32, 49, 54, 54, 76, 50, 55, 52, 32, 49, 55, 49, 76, 50, 57, 56, 32, 50, 49, 55, 81, 51, 49, 57, 32, 50, 53, 48, 32, 51, 52, 55, 32, 50, 53, 48, 81, 51, 54, 50, 10, 50, 53, 48, 32, 51, 55, 49, 32, 50, 52, 49, 84, 51, 56, 48, 32, 50, 48, 57, 81, 51, 56, 48, 32, 49, 56, 56, 32, 51, 55, 48, 32, 49, 53, 56, 81, 51, 54, 54, 32, 49, 51, 57, 32, 51, 54, 50, 32, 49, 51, 48, 84, 51, 52, 55, 32, 57, 54, 76, 51, 51, 48, 32, 53, 54, 81, 51, 50, 55, 32, 52, 55, 32, 51, 50, 53, 32, 51, 56, 84, 51, 50, 50, 32, 50, 52, 81, 51, 50, 50, 32, 49, 49, 32, 51, 51, 51, 32, 57, 81, 51, 52, 53, 32, 57, 32, 51, 54, 48, 32, 50, 52, 81, 51, 55, 51, 32, 52, 48, 32, 51, 57, 48, 32, 55, 51, 76, 51, 57, 53, 32, 56, 49, 76, 52, 48, 51, 32, 55, 55, 81, 51, 56, 56, 32, 52, 51, 32, 51, 55, 55, 32, 50, 55, 81, 51, 53, 49, 32, 45, 55, 32, 51, 49, 57, 32, 45, 55, 81, 50, 56, 57, 32, 45, 52, 32, 50, 56, 57, 32, 51, 48, 81, 50, 56, 57, 32, 52, 55, 32, 50, 57, 55, 32, 55, 50, 81, 50, 57, 57, 32, 55, 57, 32, 51, 49, 48, 32, 49, 48, 56, 90, 77, 53, 49, 52, 32, 57, 57, 76, 52, 56, 50, 32, 48, 72, 52, 52, 53, 76, 52, 55, 54, 32, 49, 48, 56, 76, 52, 56, 51, 10, 49, 51, 54, 76, 52, 57, 50, 32, 49, 55, 55, 81, 52, 57, 56, 32, 50, 48, 48, 32, 52, 57, 56, 32, 50, 49, 52, 81, 52, 57, 56, 32, 50, 50, 55, 32, 52, 57, 52, 32, 50, 51, 48, 76, 52, 56, 54, 32, 50, 51, 49, 81, 52, 55, 52, 32, 50, 51, 49, 32, 52, 54, 49, 32, 50, 49, 50, 84, 52, 51, 50, 32, 49, 53, 52, 76, 52, 50, 50, 32, 49, 53, 57, 81, 52, 52, 52, 32, 50, 49, 52, 32, 52, 54, 48, 32, 50, 51, 50, 84, 52, 57, 55, 32, 50, 53, 48, 76, 53, 48, 52, 32, 50, 52, 57, 81, 53, 51, 48, 32, 50, 52, 52, 32, 53, 51, 48, 32, 50, 48, 55, 81, 53, 51, 48, 32, 49, 56, 55, 32, 53, 50, 54, 32, 49, 55, 49, 76, 53, 50, 49, 32, 49, 52, 54, 81, 53, 52, 56, 32, 50, 48, 49, 32, 53, 54, 54, 32, 50, 50, 50, 81, 53, 57, 48, 32, 50, 53, 50, 32, 54, 49, 56, 32, 50, 53, 50, 76, 54, 50, 53, 32, 50, 53, 49, 81, 54, 53, 50, 32, 50, 52, 54, 32, 54, 53, 50, 32, 50, 49, 50, 81, 54, 53, 50, 32, 49, 57, 52, 32, 54, 52, 48, 32, 49, 53, 51, 81, 54, 55, 50, 32, 50, 49, 50, 32, 54, 57, 49, 32, 50, 51, 49, 84, 55, 51, 52, 10, 50, 53, 49, 76, 55, 52, 55, 32, 50, 52, 57, 81, 55, 55, 49, 32, 50, 51, 56, 32, 55, 55, 49, 32, 50, 48, 55, 76, 55, 55, 48, 32, 49, 57, 49, 76, 55, 54, 55, 32, 49, 55, 57, 76, 55, 53, 56, 32, 49, 52, 50, 76, 55, 50, 52, 32, 51, 57, 76, 55, 50, 49, 32, 51, 48, 76, 55, 50, 48, 32, 50, 52, 81, 55, 50, 48, 32, 49, 56, 32, 55, 50, 52, 32, 49, 52, 76, 55, 51, 53, 32, 49, 48, 81, 55, 52, 54, 32, 49, 51, 32, 55, 53, 56, 32, 50, 53, 81, 55, 55, 50, 32, 52, 52, 32, 55, 57, 49, 32, 56, 54, 76, 56, 48, 48, 32, 56, 50, 81, 55, 56, 55, 32, 53, 48, 32, 55, 55, 51, 32, 51, 48, 81, 55, 53, 50, 32, 48, 32, 55, 50, 52, 32, 45, 54, 72, 55, 49, 55, 81, 54, 56, 54, 32, 45, 54, 32, 54, 56, 54, 32, 51, 48, 81, 54, 56, 54, 32, 52, 51, 32, 54, 57, 52, 32, 55, 50, 76, 55, 50, 54, 32, 49, 54, 54, 81, 55, 51, 56, 32, 49, 57, 56, 32, 55, 51, 56, 32, 50, 49, 55, 81, 55, 51, 56, 32, 50, 51, 51, 32, 55, 50, 53, 32, 50, 51, 52, 76, 55, 50, 48, 32, 50, 51, 51, 81, 54, 57, 56, 32, 50, 50, 55, 10, 54, 54, 55, 32, 49, 56, 49, 81, 54, 52, 50, 32, 49, 51, 57, 32, 54, 50, 53, 32, 57, 52, 76, 53, 57, 55, 32, 48, 72, 53, 53, 57, 76, 54, 48, 56, 32, 49, 54, 51, 76, 54, 49, 50, 32, 49, 55, 52, 76, 54, 49, 56, 32, 49, 57, 55, 76, 54, 50, 49, 32, 50, 49, 54, 81, 54, 50, 49, 32, 50, 51, 52, 32, 54, 48, 51, 32, 50, 51, 52, 81, 53, 54, 57, 32, 50, 51, 48, 32, 53, 51, 56, 32, 49, 53, 51, 76, 53, 49, 52, 32, 57, 57, 90, 77, 56, 55, 56, 32, 53, 49, 81, 56, 57, 50, 32, 53, 49, 32, 56, 57, 57, 32, 52, 53, 84, 57, 48, 56, 32, 50, 52, 81, 57, 48, 56, 32, 49, 49, 32, 57, 48, 48, 32, 51, 84, 56, 55, 56, 32, 45, 54, 81, 56, 54, 53, 32, 45, 54, 32, 56, 53, 55, 32, 50, 84, 56, 52, 55, 32, 50, 52, 81, 56, 52, 55, 32, 51, 53, 32, 56, 53, 54, 32, 52, 51, 81, 56, 54, 51, 32, 53, 49, 32, 56, 55, 56, 32, 53, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 101, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 56, 56, 34, 32, 100, 61, 34, 77, 51, 56, 57, 32, 52, 53, 48, 76, 49, 48, 32, 49, 56, 54, 76, 48, 32, 50, 48, 52, 76, 51, 55, 57, 32, 52, 54, 56, 76, 51, 56, 57, 32, 52, 53, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 102, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 102, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 51, 50, 34, 32, 100, 61, 34, 77, 45, 51, 57, 54, 32, 45, 49, 55, 57, 81, 45, 51, 57, 57, 32, 45, 49, 56, 51, 32, 45, 51, 57, 56, 32, 45, 49, 56, 54, 84, 45, 51, 56, 55, 32, 45, 49, 57, 48, 81, 45, 51, 53, 57, 32, 45, 49, 57, 48, 32, 45, 51, 52, 48, 32, 45, 49, 52, 57, 81, 45, 51, 51, 48, 32, 45, 49, 50, 56, 32, 45, 51, 50, 48, 32, 45, 49, 48, 49, 84, 45, 51, 48, 53, 32, 45, 52, 57, 76, 45, 50, 57, 49, 32, 49, 50, 76, 45, 50, 52, 55, 32, 50, 50, 48, 72, 45, 51, 48, 53, 86, 50, 53, 56, 72, 45, 50, 51, 53, 81, 45, 50, 50, 52, 32, 50, 56, 57, 32, 45, 50, 49, 55, 32, 51, 48, 53, 81, 45, 50, 48, 54, 32, 51, 51, 50, 32, 45, 49, 57, 53, 32, 51, 52, 57, 81, 45, 49, 54, 52, 32, 51, 57, 52, 32, 45, 49, 51, 48, 32, 52, 49, 56, 84, 45, 53, 53, 32, 52, 52, 50, 81, 45, 52, 49, 10, 52, 52, 50, 32, 45, 51, 50, 32, 52, 51, 57, 84, 45, 49, 51, 32, 52, 50, 51, 81, 45, 54, 32, 52, 49, 51, 32, 45, 52, 32, 52, 48, 52, 76, 48, 32, 51, 56, 56, 81, 48, 32, 51, 54, 54, 32, 45, 50, 32, 51, 53, 54, 84, 45, 49, 51, 32, 51, 50, 56, 81, 45, 49, 55, 32, 51, 49, 57, 32, 45, 51, 49, 32, 51, 48, 55, 81, 45, 51, 55, 32, 51, 48, 50, 32, 45, 52, 52, 32, 51, 48, 49, 84, 45, 54, 49, 32, 51, 48, 49, 81, 45, 55, 48, 32, 51, 48, 51, 32, 45, 55, 52, 32, 51, 49, 50, 84, 45, 56, 48, 32, 51, 51, 50, 81, 45, 56, 48, 32, 51, 53, 48, 32, 45, 55, 51, 32, 51, 54, 52, 84, 45, 53, 49, 32, 51, 56, 56, 81, 45, 52, 52, 32, 51, 57, 51, 32, 45, 51, 55, 32, 51, 57, 56, 81, 45, 51, 55, 32, 52, 49, 49, 32, 45, 53, 53, 32, 52, 49, 52, 81, 45, 55, 53, 32, 52, 49, 54, 32, 45, 56, 57, 32, 52, 48, 54, 84, 45, 49, 49, 56, 32, 51, 54, 51, 81, 45, 49, 50, 53, 32, 51, 52, 53, 32, 45, 49, 51, 53, 32, 51, 49, 48, 84, 45, 49, 52, 57, 32, 50, 54, 48, 72, 45, 55, 50, 86, 50, 50, 48, 72, 45, 49, 53, 55, 81, 45, 49, 55, 53, 10, 49, 49, 55, 32, 45, 50, 48, 56, 32, 49, 52, 81, 45, 50, 51, 53, 32, 45, 54, 57, 32, 45, 50, 54, 48, 32, 45, 49, 49, 55, 81, 45, 50, 56, 48, 32, 45, 49, 53, 54, 32, 45, 51, 48, 49, 32, 45, 49, 56, 48, 81, 45, 51, 51, 56, 32, 45, 50, 50, 51, 32, 45, 51, 55, 55, 32, 45, 50, 50, 51, 81, 45, 52, 49, 52, 32, 45, 50, 50, 51, 32, 45, 52, 51, 51, 32, 45, 49, 57, 52, 81, 45, 52, 52, 56, 32, 45, 49, 55, 49, 32, 45, 52, 52, 56, 32, 45, 49, 52, 48, 81, 45, 52, 52, 56, 32, 45, 49, 49, 53, 32, 45, 52, 51, 54, 32, 45, 57, 50, 81, 45, 52, 50, 57, 32, 45, 56, 49, 32, 45, 52, 49, 57, 32, 45, 55, 53, 84, 45, 51, 57, 57, 32, 45, 54, 57, 81, 45, 51, 56, 54, 32, 45, 54, 57, 32, 45, 51, 55, 56, 32, 45, 56, 49, 84, 45, 51, 54, 55, 32, 45, 49, 48, 51, 84, 45, 51, 54, 52, 32, 45, 49, 50, 48, 81, 45, 51, 54, 52, 32, 45, 49, 51, 52, 32, 45, 51, 55, 49, 32, 45, 49, 52, 52, 84, 45, 51, 56, 53, 32, 45, 49, 54, 53, 84, 45, 51, 57, 54, 32, 45, 49, 55, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 103, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 50, 55, 55, 34, 32, 100, 61, 34, 77, 54, 54, 32, 53, 81, 49, 48, 51, 32, 53, 32, 49, 51, 55, 32, 56, 53, 81, 49, 53, 51, 32, 49, 50, 48, 32, 49, 54, 48, 32, 49, 52, 56, 84, 49, 54, 55, 32, 49, 57, 55, 81, 49, 54, 55, 32, 50, 49, 56, 32, 49, 54, 50, 32, 50, 50, 52, 81, 49, 53, 54, 32, 50, 51, 56, 32, 49, 51, 55, 32, 50, 51, 56, 81, 49, 48, 52, 32, 50, 51, 56, 32, 54, 56, 32, 49, 55, 48, 84, 51, 50, 32, 52, 57, 81, 51, 50, 32, 53, 32, 54, 54, 32, 53, 90, 77, 50, 51, 55, 32, 56, 55, 76, 50, 52, 54, 32, 56, 49, 81, 50, 52, 48, 32, 53, 54, 32, 50, 50, 52, 32, 50, 57, 81, 50, 48, 50, 32, 45, 52, 32, 49, 55, 51, 32, 45, 55, 81, 49, 53, 53, 32, 45, 55, 32, 49, 52, 54, 32, 54, 81, 49, 52, 50, 32, 49, 50, 32, 49, 52, 48, 32, 49, 57, 84, 49, 51, 56, 32, 51, 55, 81, 49, 51, 56, 10, 53, 55, 32, 49, 52, 50, 32, 55, 51, 81, 49, 52, 51, 32, 55, 57, 32, 49, 52, 53, 32, 56, 49, 81, 49, 51, 51, 32, 53, 52, 32, 49, 50, 51, 32, 51, 56, 84, 49, 48, 52, 32, 49, 50, 81, 56, 52, 32, 45, 55, 32, 53, 51, 32, 45, 55, 81, 51, 48, 32, 45, 55, 32, 49, 52, 32, 57, 81, 52, 32, 49, 57, 32, 45, 49, 32, 51, 50, 84, 45, 54, 32, 54, 53, 81, 45, 54, 32, 49, 50, 57, 32, 52, 49, 32, 49, 57, 48, 84, 49, 51, 49, 32, 50, 53, 49, 81, 49, 54, 48, 32, 50, 53, 49, 32, 49, 55, 53, 32, 50, 49, 57, 76, 50, 48, 55, 32, 51, 53, 49, 76, 50, 48, 57, 32, 51, 54, 51, 81, 50, 48, 57, 32, 51, 55, 55, 32, 49, 56, 56, 32, 51, 55, 55, 76, 49, 55, 50, 32, 51, 55, 54, 76, 49, 55, 52, 32, 51, 56, 57, 76, 50, 54, 50, 32, 52, 48, 48, 76, 49, 57, 55, 32, 49, 53, 55, 76, 49, 56, 48, 32, 56, 52, 81, 49, 55, 51, 32, 53, 50, 32, 49, 55, 51, 32, 51, 49, 81, 49, 55, 51, 32, 49, 48, 32, 49, 56, 51, 32, 49, 48, 81, 49, 57, 49, 32, 49, 48, 32, 50, 48, 51, 32, 50, 53, 84, 50, 51, 55, 32, 56, 55, 90, 77, 51, 56, 49, 10, 51, 56, 53, 81, 51, 56, 57, 32, 51, 56, 53, 32, 51, 57, 56, 32, 51, 55, 57, 84, 52, 48, 55, 32, 51, 54, 48, 81, 52, 48, 55, 32, 51, 53, 50, 32, 52, 48, 49, 32, 51, 52, 54, 84, 51, 56, 52, 32, 51, 51, 55, 81, 51, 55, 53, 32, 51, 51, 55, 32, 51, 54, 55, 32, 51, 52, 51, 84, 51, 53, 57, 32, 51, 54, 51, 81, 51, 53, 57, 32, 51, 55, 48, 32, 51, 54, 54, 32, 51, 55, 55, 81, 51, 55, 48, 32, 51, 56, 51, 32, 51, 56, 49, 32, 51, 56, 53, 90, 77, 51, 49, 48, 32, 49, 48, 56, 76, 51, 51, 48, 32, 49, 54, 50, 81, 51, 51, 57, 32, 49, 56, 48, 32, 51, 52, 51, 32, 49, 57, 52, 84, 51, 52, 55, 32, 50, 50, 48, 81, 51, 52, 55, 32, 50, 51, 49, 32, 51, 52, 48, 32, 50, 51, 52, 81, 51, 50, 50, 32, 50, 51, 52, 32, 50, 57, 57, 32, 49, 57, 54, 81, 50, 57, 54, 32, 49, 57, 49, 32, 50, 57, 50, 32, 49, 56, 50, 84, 50, 56, 52, 32, 49, 54, 54, 76, 50, 55, 52, 32, 49, 55, 49, 76, 50, 57, 56, 32, 50, 49, 55, 81, 51, 49, 57, 32, 50, 53, 48, 32, 51, 52, 55, 32, 50, 53, 48, 81, 51, 54, 50, 10, 50, 53, 48, 32, 51, 55, 49, 32, 50, 52, 49, 84, 51, 56, 48, 32, 50, 48, 57, 81, 51, 56, 48, 32, 49, 56, 56, 32, 51, 55, 48, 32, 49, 53, 56, 81, 51, 54, 54, 32, 49, 51, 57, 32, 51, 54, 50, 32, 49, 51, 48, 84, 51, 52, 55, 32, 57, 54, 76, 51, 51, 48, 32, 53, 54, 81, 51, 50, 55, 32, 52, 55, 32, 51, 50, 53, 32, 51, 56, 84, 51, 50, 50, 32, 50, 52, 81, 51, 50, 50, 32, 49, 49, 32, 51, 51, 51, 32, 57, 81, 51, 52, 53, 32, 57, 32, 51, 54, 48, 32, 50, 52, 81, 51, 55, 51, 32, 52, 48, 32, 51, 57, 48, 32, 55, 51, 76, 51, 57, 53, 32, 56, 49, 76, 52, 48, 51, 32, 55, 55, 81, 51, 56, 56, 32, 52, 51, 32, 51, 55, 55, 32, 50, 55, 81, 51, 53, 49, 32, 45, 55, 32, 51, 49, 57, 32, 45, 55, 81, 50, 56, 57, 32, 45, 52, 32, 50, 56, 57, 32, 51, 48, 81, 50, 56, 57, 32, 52, 55, 32, 50, 57, 55, 32, 55, 50, 81, 50, 57, 57, 32, 55, 57, 32, 51, 49, 48, 32, 49, 48, 56, 90, 77, 53, 49, 52, 32, 57, 57, 76, 52, 56, 50, 32, 48, 72, 52, 52, 53, 76, 52, 55, 54, 32, 49, 48, 56, 76, 52, 56, 51, 10, 49, 51, 54, 76, 52, 57, 50, 32, 49, 55, 55, 81, 52, 57, 56, 32, 50, 48, 48, 32, 52, 57, 56, 32, 50, 49, 52, 81, 52, 57, 56, 32, 50, 50, 55, 32, 52, 57, 52, 32, 50, 51, 48, 76, 52, 56, 54, 32, 50, 51, 49, 81, 52, 55, 52, 32, 50, 51, 49, 32, 52, 54, 49, 32, 50, 49, 50, 84, 52, 51, 50, 32, 49, 53, 52, 76, 52, 50, 50, 32, 49, 53, 57, 81, 52, 52, 52, 32, 50, 49, 52, 32, 52, 54, 48, 32, 50, 51, 50, 84, 52, 57, 55, 32, 50, 53, 48, 76, 53, 48, 52, 32, 50, 52, 57, 81, 53, 51, 48, 32, 50, 52, 52, 32, 53, 51, 48, 32, 50, 48, 55, 81, 53, 51, 48, 32, 49, 56, 55, 32, 53, 50, 54, 32, 49, 55, 49, 76, 53, 50, 49, 32, 49, 52, 54, 81, 53, 52, 56, 32, 50, 48, 49, 32, 53, 54, 54, 32, 50, 50, 50, 81, 53, 57, 48, 32, 50, 53, 50, 32, 54, 49, 56, 32, 50, 53, 50, 76, 54, 50, 53, 32, 50, 53, 49, 81, 54, 53, 50, 32, 50, 52, 54, 32, 54, 53, 50, 32, 50, 49, 50, 81, 54, 53, 50, 32, 49, 57, 52, 32, 54, 52, 48, 32, 49, 53, 51, 81, 54, 55, 50, 32, 50, 49, 50, 32, 54, 57, 49, 32, 50, 51, 49, 84, 55, 51, 52, 10, 50, 53, 49, 76, 55, 52, 55, 32, 50, 52, 57, 81, 55, 55, 49, 32, 50, 51, 56, 32, 55, 55, 49, 32, 50, 48, 55, 76, 55, 55, 48, 32, 49, 57, 49, 76, 55, 54, 55, 32, 49, 55, 57, 76, 55, 53, 56, 32, 49, 52, 50, 76, 55, 50, 52, 32, 51, 57, 76, 55, 50, 49, 32, 51, 48, 76, 55, 50, 48, 32, 50, 52, 81, 55, 50, 48, 32, 49, 56, 32, 55, 50, 52, 32, 49, 52, 76, 55, 51, 53, 32, 49, 48, 81, 55, 52, 54, 32, 49, 51, 32, 55, 53, 56, 32, 50, 53, 81, 55, 55, 50, 32, 52, 52, 32, 55, 57, 49, 32, 56, 54, 76, 56, 48, 48, 32, 56, 50, 81, 55, 56, 55, 32, 53, 48, 32, 55, 55, 51, 32, 51, 48, 81, 55, 53, 50, 32, 48, 32, 55, 50, 52, 32, 45, 54, 72, 55, 49, 55, 81, 54, 56, 54, 32, 45, 54, 32, 54, 56, 54, 32, 51, 48, 81, 54, 56, 54, 32, 52, 51, 32, 54, 57, 52, 32, 55, 50, 76, 55, 50, 54, 32, 49, 54, 54, 81, 55, 51, 56, 32, 49, 57, 56, 32, 55, 51, 56, 32, 50, 49, 55, 81, 55, 51, 56, 32, 50, 51, 51, 32, 55, 50, 53, 32, 50, 51, 52, 76, 55, 50, 48, 32, 50, 51, 51, 81, 54, 57, 56, 32, 50, 50, 55, 10, 54, 54, 55, 32, 49, 56, 49, 81, 54, 52, 50, 32, 49, 51, 57, 32, 54, 50, 53, 32, 57, 52, 76, 53, 57, 55, 32, 48, 72, 53, 53, 57, 76, 54, 48, 56, 32, 49, 54, 51, 76, 54, 49, 50, 32, 49, 55, 52, 76, 54, 49, 56, 32, 49, 57, 55, 76, 54, 50, 49, 32, 50, 49, 54, 81, 54, 50, 49, 32, 50, 51, 52, 32, 54, 48, 51, 32, 50, 51, 52, 81, 53, 54, 57, 32, 50, 51, 48, 32, 53, 51, 56, 32, 49, 53, 51, 76, 53, 49, 52, 32, 57, 57, 90, 77, 57, 50, 55, 32, 51, 56, 53, 81, 57, 51, 54, 32, 51, 56, 53, 32, 57, 52, 52, 32, 51, 55, 57, 84, 57, 53, 51, 32, 51, 54, 48, 81, 57, 53, 51, 32, 51, 53, 50, 32, 57, 52, 54, 32, 51, 52, 52, 81, 57, 51, 57, 32, 51, 51, 57, 32, 57, 51, 48, 32, 51, 51, 55, 81, 57, 50, 48, 32, 51, 51, 55, 32, 57, 49, 51, 32, 51, 52, 52, 81, 57, 48, 53, 32, 51, 52, 57, 32, 57, 48, 53, 32, 51, 54, 51, 81, 57, 48, 53, 32, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 55, 84, 57, 50, 55, 32, 51, 56, 53, 90, 77, 56, 53, 54, 32, 49, 48, 56, 76, 56, 55, 53, 32, 49, 54, 50, 81, 56, 57, 51, 10, 50, 48, 48, 32, 56, 57, 51, 32, 50, 50, 48, 81, 56, 57, 51, 32, 50, 51, 49, 32, 56, 56, 53, 32, 50, 51, 52, 81, 56, 54, 55, 32, 50, 51, 52, 32, 56, 52, 52, 32, 49, 57, 54, 76, 56, 50, 57, 32, 49, 54, 54, 76, 56, 49, 57, 32, 49, 55, 49, 76, 56, 52, 51, 32, 50, 49, 55, 81, 56, 54, 52, 32, 50, 53, 48, 32, 56, 57, 51, 32, 50, 53, 48, 81, 57, 48, 53, 32, 50, 53, 48, 32, 57, 49, 54, 32, 50, 52, 49, 81, 57, 50, 54, 32, 50, 50, 57, 32, 57, 50, 54, 32, 50, 48, 57, 81, 57, 50, 54, 32, 49, 56, 56, 32, 57, 49, 54, 32, 49, 53, 56, 81, 57, 49, 49, 32, 49, 52, 50, 32, 57, 48, 55, 32, 49, 50, 56, 84, 56, 57, 51, 32, 57, 54, 76, 56, 55, 53, 32, 53, 54, 76, 56, 54, 56, 32, 50, 52, 81, 56, 54, 56, 32, 49, 49, 32, 56, 55, 57, 32, 57, 81, 56, 57, 49, 32, 57, 32, 57, 48, 54, 32, 50, 52, 81, 57, 49, 57, 32, 52, 48, 32, 57, 51, 54, 32, 55, 51, 76, 57, 52, 49, 32, 56, 49, 76, 57, 52, 57, 32, 55, 55, 81, 57, 51, 52, 32, 52, 49, 32, 57, 50, 50, 32, 50, 55, 81, 56, 57, 55, 10, 45, 55, 32, 56, 54, 52, 32, 45, 55, 81, 56, 51, 53, 32, 45, 52, 32, 56, 51, 53, 32, 51, 48, 81, 56, 51, 53, 32, 53, 53, 32, 56, 53, 54, 32, 49, 48, 56, 90, 77, 49, 49, 54, 56, 32, 50, 56, 76, 49, 49, 54, 55, 32, 50, 48, 76, 49, 49, 54, 57, 32, 49, 48, 81, 49, 49, 55, 50, 32, 55, 32, 49, 49, 55, 56, 32, 55, 81, 49, 49, 57, 53, 32, 55, 32, 49, 50, 50, 50, 32, 52, 53, 76, 49, 50, 52, 49, 32, 56, 50, 76, 49, 50, 52, 57, 32, 55, 56, 81, 49, 50, 51, 55, 32, 53, 48, 32, 49, 50, 51, 51, 32, 52, 50, 81, 49, 50, 50, 54, 32, 50, 55, 32, 49, 50, 50, 48, 32, 50, 49, 81, 49, 50, 48, 49, 32, 45, 55, 32, 49, 49, 55, 48, 32, 45, 55, 72, 49, 49, 54, 51, 81, 49, 49, 51, 52, 32, 45, 55, 32, 49, 49, 51, 52, 32, 50, 57, 81, 49, 49, 51, 52, 32, 53, 49, 32, 49, 49, 52, 53, 32, 56, 49, 76, 49, 49, 55, 52, 32, 49, 55, 49, 76, 49, 49, 56, 48, 32, 49, 57, 49, 76, 49, 49, 56, 51, 32, 50, 49, 50, 81, 49, 49, 56, 51, 32, 50, 50, 51, 32, 49, 49, 55, 57, 32, 50, 50, 56, 84, 49, 49, 54, 51, 10, 50, 51, 52, 81, 49, 49, 52, 51, 32, 50, 51, 52, 32, 49, 49, 50, 49, 32, 50, 48, 57, 84, 49, 48, 55, 54, 32, 49, 51, 50, 76, 49, 48, 54, 52, 32, 49, 48, 51, 76, 49, 48, 51, 49, 32, 48, 72, 57, 57, 49, 76, 49, 48, 50, 49, 32, 49, 48, 48, 81, 49, 48, 50, 54, 32, 49, 49, 52, 32, 49, 48, 51, 48, 32, 49, 51, 48, 84, 49, 48, 51, 56, 32, 49, 54, 49, 84, 49, 48, 52, 51, 32, 49, 56, 55, 84, 49, 48, 52, 52, 32, 50, 48, 57, 81, 49, 48, 52, 52, 32, 50, 51, 50, 32, 49, 48, 51, 49, 32, 50, 51, 51, 81, 49, 48, 50, 48, 32, 50, 51, 51, 32, 49, 48, 48, 56, 32, 50, 49, 56, 76, 57, 55, 53, 32, 49, 53, 51, 76, 57, 54, 53, 32, 49, 53, 55, 81, 57, 56, 53, 32, 50, 49, 49, 32, 49, 48, 48, 52, 32, 50, 51, 49, 84, 49, 48, 53, 48, 32, 50, 53, 49, 81, 49, 48, 54, 51, 32, 50, 53, 49, 32, 49, 48, 55, 50, 32, 50, 51, 55, 81, 49, 48, 55, 55, 32, 50, 50, 56, 32, 49, 48, 55, 55, 32, 50, 48, 53, 76, 49, 48, 55, 53, 32, 49, 55, 49, 76, 49, 48, 54, 55, 32, 49, 52, 49, 81, 49, 49, 48, 48, 10, 50, 48, 57, 32, 49, 49, 51, 48, 32, 50, 51, 49, 81, 49, 49, 52, 49, 32, 50, 52, 48, 32, 49, 49, 53, 50, 32, 50, 52, 52, 84, 49, 49, 55, 53, 32, 50, 52, 57, 81, 49, 49, 57, 52, 32, 50, 52, 57, 32, 49, 50, 48, 53, 32, 50, 51, 53, 84, 49, 50, 49, 54, 32, 49, 57, 56, 81, 49, 50, 49, 54, 32, 49, 56, 48, 32, 49, 50, 49, 48, 32, 49, 53, 55, 76, 49, 49, 54, 56, 32, 50, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 104, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 51, 51, 57, 34, 32, 100, 61, 34, 77, 50, 49, 54, 32, 50, 52, 51, 72, 50, 53, 53, 76, 50, 50, 52, 32, 49, 52, 50, 76, 50, 48, 55, 32, 56, 51, 76, 50, 48, 48, 32, 51, 53, 81, 50, 48, 48, 32, 50, 50, 32, 50, 48, 52, 32, 49, 55, 81, 50, 48, 53, 32, 49, 48, 32, 50, 49, 52, 32, 49, 48, 81, 50, 51, 56, 32, 49, 48, 32, 50, 55, 48, 32, 56, 56, 76, 50, 56, 48, 32, 56, 53, 81, 50, 54, 50, 32, 51, 56, 32, 50, 53, 48, 32, 50, 50, 81, 50, 50, 55, 32, 45, 56, 32, 49, 57, 54, 32, 45, 56, 81, 49, 54, 57, 32, 45, 56, 32, 49, 54, 57, 32, 51, 50, 81, 49, 54, 57, 32, 53, 53, 32, 49, 55, 48, 32, 54, 53, 84, 49, 55, 56, 32, 49, 48, 49, 81, 49, 53, 55, 32, 53, 56, 32, 49, 51, 57, 32, 51, 53, 81, 49, 48, 55, 32, 45, 55, 32, 55, 48, 32, 45, 55, 81, 53, 51, 32, 45, 55, 32, 52, 49, 32, 55, 84, 50, 57, 10, 52, 53, 81, 50, 57, 32, 53, 55, 32, 51, 49, 32, 54, 51, 76, 51, 54, 32, 56, 53, 76, 55, 51, 32, 50, 48, 48, 76, 55, 54, 32, 50, 49, 48, 76, 55, 56, 32, 50, 50, 50, 81, 55, 56, 32, 50, 51, 53, 32, 54, 55, 32, 50, 51, 55, 81, 52, 56, 32, 50, 51, 55, 32, 50, 53, 32, 50, 48, 50, 76, 53, 32, 49, 54, 50, 76, 45, 52, 32, 49, 54, 55, 76, 49, 56, 32, 50, 49, 48, 81, 52, 53, 32, 50, 53, 50, 32, 55, 53, 32, 50, 53, 50, 76, 56, 50, 32, 50, 53, 49, 81, 57, 54, 32, 50, 53, 48, 32, 49, 48, 53, 32, 50, 52, 49, 81, 49, 49, 51, 32, 50, 51, 48, 32, 49, 49, 51, 32, 50, 49, 56, 81, 49, 49, 51, 32, 49, 57, 55, 32, 57, 53, 32, 49, 52, 49, 76, 55, 49, 32, 55, 51, 81, 55, 48, 32, 54, 52, 32, 54, 57, 32, 54, 48, 84, 54, 53, 32, 53, 48, 76, 54, 50, 32, 51, 48, 81, 54, 50, 32, 56, 32, 56, 50, 32, 56, 81, 49, 48, 52, 32, 49, 49, 32, 49, 50, 51, 32, 51, 50, 81, 49, 52, 51, 32, 53, 55, 32, 49, 55, 48, 32, 49, 49, 50, 81, 49, 55, 54, 32, 49, 50, 54, 32, 49, 56, 52, 32, 49, 52, 55, 84, 49, 57, 54, 10, 49, 56, 50, 84, 50, 48, 53, 32, 50, 49, 48, 84, 50, 49, 54, 32, 50, 52, 51, 90, 77, 51, 53, 55, 32, 49, 48, 54, 81, 51, 56, 50, 32, 49, 49, 55, 32, 51, 57, 55, 32, 49, 50, 55, 84, 52, 51, 48, 32, 49, 53, 54, 81, 52, 54, 50, 32, 49, 56, 56, 32, 52, 54, 50, 32, 50, 49, 55, 81, 52, 54, 50, 32, 50, 50, 54, 32, 52, 53, 53, 32, 50, 51, 50, 81, 52, 53, 50, 32, 50, 52, 48, 32, 52, 52, 50, 32, 50, 52, 48, 81, 52, 50, 56, 32, 50, 52, 48, 32, 52, 49, 54, 32, 50, 50, 57, 84, 51, 56, 55, 32, 49, 57, 49, 81, 51, 54, 54, 32, 49, 53, 48, 32, 51, 53, 55, 32, 49, 48, 54, 90, 77, 52, 53, 53, 32, 55, 51, 76, 52, 54, 52, 32, 54, 57, 81, 52, 53, 51, 32, 52, 56, 32, 52, 52, 48, 32, 51, 51, 84, 52, 49, 51, 32, 56, 81, 51, 57, 49, 32, 45, 56, 32, 51, 54, 52, 32, 45, 56, 81, 51, 51, 50, 32, 45, 56, 32, 51, 49, 57, 32, 49, 49, 84, 51, 48, 53, 32, 54, 49, 81, 51, 48, 53, 32, 57, 51, 32, 51, 49, 54, 32, 49, 50, 52, 84, 51, 53, 50, 32, 49, 56, 55, 81, 52, 48, 48, 32, 50, 53, 48, 10, 52, 53, 48, 32, 50, 53, 48, 81, 52, 54, 52, 32, 50, 53, 48, 32, 52, 55, 54, 32, 50, 51, 57, 84, 52, 56, 56, 32, 50, 49, 48, 81, 52, 56, 56, 32, 49, 54, 57, 32, 52, 52, 54, 32, 49, 51, 57, 81, 52, 50, 54, 32, 49, 50, 52, 32, 52, 48, 52, 32, 49, 49, 52, 84, 51, 53, 51, 32, 57, 51, 76, 51, 52, 56, 32, 55, 50, 81, 51, 52, 50, 32, 53, 52, 32, 51, 52, 50, 32, 52, 48, 81, 51, 52, 50, 32, 50, 54, 32, 51, 53, 48, 32, 49, 54, 81, 51, 53, 54, 32, 54, 32, 51, 55, 52, 32, 54, 81, 51, 57, 54, 32, 54, 32, 52, 49, 57, 32, 50, 54, 81, 52, 50, 56, 32, 51, 53, 32, 52, 51, 55, 32, 52, 54, 84, 52, 53, 53, 32, 55, 51, 90, 77, 55, 49, 50, 32, 50, 56, 76, 55, 49, 49, 32, 50, 48, 76, 55, 49, 50, 32, 49, 48, 81, 55, 49, 56, 32, 55, 32, 55, 50, 49, 32, 55, 81, 55, 51, 57, 32, 55, 32, 55, 54, 53, 32, 52, 53, 81, 55, 55, 48, 32, 53, 57, 32, 55, 55, 51, 32, 54, 52, 81, 55, 56, 49, 32, 55, 54, 32, 55, 56, 52, 32, 56, 50, 76, 55, 57, 50, 32, 55, 56, 81, 55, 55, 51, 32, 51, 52, 10, 55, 54, 51, 32, 50, 49, 81, 55, 52, 52, 32, 45, 55, 32, 55, 49, 51, 32, 45, 55, 72, 55, 48, 55, 81, 54, 55, 56, 32, 45, 55, 32, 54, 55, 56, 32, 50, 57, 81, 54, 55, 56, 32, 52, 49, 32, 54, 56, 48, 32, 53, 52, 84, 54, 56, 56, 32, 56, 49, 76, 55, 49, 54, 32, 49, 55, 49, 81, 55, 49, 57, 32, 49, 55, 53, 32, 55, 50, 51, 32, 49, 57, 49, 76, 55, 50, 54, 32, 50, 49, 50, 81, 55, 50, 54, 32, 50, 49, 57, 32, 55, 50, 50, 32, 50, 50, 57, 81, 55, 49, 55, 32, 50, 51, 52, 32, 55, 48, 55, 32, 50, 51, 52, 81, 54, 56, 55, 32, 50, 51, 52, 32, 54, 54, 52, 32, 50, 48, 57, 84, 54, 49, 57, 32, 49, 51, 50, 81, 54, 49, 53, 32, 49, 50, 50, 32, 54, 49, 50, 32, 49, 49, 54, 84, 54, 48, 56, 32, 49, 48, 51, 76, 53, 55, 52, 32, 48, 72, 53, 51, 52, 76, 53, 54, 52, 32, 49, 48, 48, 76, 53, 56, 49, 32, 49, 54, 52, 81, 53, 56, 55, 32, 49, 57, 48, 32, 53, 56, 55, 32, 50, 48, 57, 81, 53, 56, 55, 32, 50, 51, 49, 32, 53, 55, 53, 32, 50, 51, 51, 81, 53, 54, 51, 32, 50, 51, 51, 32, 53, 53, 51, 10, 50, 49, 57, 84, 53, 49, 57, 32, 49, 53, 51, 76, 53, 49, 48, 32, 49, 53, 55, 81, 53, 50, 53, 32, 50, 49, 48, 32, 53, 52, 57, 32, 50, 51, 50, 81, 53, 54, 53, 32, 50, 53, 49, 32, 53, 57, 51, 32, 50, 53, 49, 81, 54, 48, 55, 32, 50, 53, 49, 32, 54, 49, 52, 32, 50, 51, 57, 84, 54, 50, 49, 32, 50, 48, 53, 81, 54, 50, 49, 32, 49, 57, 55, 32, 54, 50, 49, 32, 49, 57, 48, 81, 54, 49, 56, 32, 49, 55, 56, 32, 54, 49, 55, 32, 49, 55, 49, 76, 54, 49, 48, 32, 49, 52, 49, 81, 54, 50, 55, 32, 49, 55, 53, 32, 54, 52, 50, 32, 49, 57, 55, 84, 54, 55, 51, 32, 50, 51, 49, 81, 54, 57, 54, 32, 50, 52, 57, 32, 55, 49, 56, 32, 50, 52, 57, 81, 55, 51, 55, 32, 50, 52, 57, 32, 55, 52, 56, 32, 50, 51, 54, 84, 55, 53, 57, 32, 49, 57, 56, 81, 55, 53, 57, 32, 49, 56, 48, 32, 55, 53, 51, 32, 49, 53, 55, 76, 55, 49, 50, 32, 50, 56, 90, 77, 56, 56, 53, 32, 53, 81, 57, 50, 49, 32, 53, 32, 57, 53, 55, 32, 56, 53, 81, 57, 56, 55, 32, 49, 53, 52, 32, 57, 56, 55, 32, 49, 57, 55, 81, 57, 56, 55, 10, 50, 49, 54, 32, 57, 56, 50, 32, 50, 50, 52, 81, 57, 55, 52, 32, 50, 51, 56, 32, 57, 53, 54, 32, 50, 51, 56, 81, 57, 50, 53, 32, 50, 51, 56, 32, 56, 56, 57, 32, 49, 55, 48, 84, 56, 53, 50, 32, 52, 57, 81, 56, 53, 50, 32, 53, 32, 56, 56, 53, 32, 53, 90, 77, 49, 48, 53, 55, 32, 56, 55, 76, 49, 48, 54, 54, 32, 56, 49, 81, 49, 48, 54, 50, 32, 54, 52, 32, 49, 48, 53, 53, 32, 52, 57, 81, 49, 48, 53, 52, 32, 52, 55, 32, 49, 48, 52, 52, 32, 50, 57, 81, 49, 48, 50, 48, 32, 45, 52, 32, 57, 57, 52, 32, 45, 55, 81, 57, 55, 52, 32, 45, 55, 32, 57, 54, 53, 32, 54, 81, 57, 54, 49, 32, 49, 50, 32, 57, 53, 57, 32, 49, 57, 84, 57, 53, 55, 32, 51, 55, 81, 57, 53, 55, 32, 52, 54, 32, 57, 53, 56, 32, 53, 54, 84, 57, 54, 49, 32, 55, 51, 76, 57, 54, 53, 32, 56, 49, 81, 57, 53, 50, 32, 53, 51, 32, 57, 52, 51, 32, 51, 56, 84, 57, 50, 51, 32, 49, 50, 81, 57, 48, 52, 32, 45, 55, 32, 56, 55, 51, 32, 45, 55, 81, 56, 53, 48, 32, 45, 55, 32, 56, 51, 52, 32, 57, 81, 56, 49, 51, 10, 51, 48, 32, 56, 49, 51, 32, 54, 53, 81, 56, 49, 51, 32, 49, 50, 57, 32, 56, 54, 49, 32, 49, 57, 48, 84, 57, 53, 49, 32, 50, 53, 49, 81, 57, 55, 56, 32, 50, 53, 49, 32, 57, 57, 54, 32, 50, 49, 57, 76, 49, 48, 50, 55, 32, 51, 53, 49, 76, 49, 48, 50, 56, 32, 51, 54, 51, 81, 49, 48, 50, 56, 32, 51, 55, 55, 32, 49, 48, 48, 55, 32, 51, 55, 55, 76, 57, 57, 51, 32, 51, 55, 54, 76, 57, 57, 53, 32, 51, 56, 57, 76, 49, 48, 56, 49, 32, 52, 48, 48, 76, 49, 48, 49, 55, 32, 49, 53, 55, 76, 49, 48, 48, 48, 32, 56, 52, 81, 57, 57, 51, 32, 53, 50, 32, 57, 57, 51, 32, 51, 49, 81, 57, 57, 51, 32, 49, 48, 32, 49, 48, 48, 50, 32, 49, 48, 81, 49, 48, 49, 48, 32, 49, 48, 32, 49, 48, 50, 50, 32, 50, 52, 81, 49, 48, 51, 57, 32, 52, 53, 32, 49, 48, 53, 55, 32, 56, 55, 90, 77, 49, 49, 55, 50, 32, 52, 76, 49, 49, 55, 56, 32, 51, 81, 49, 50, 48, 50, 32, 51, 32, 49, 50, 50, 48, 32, 50, 54, 84, 49, 50, 53, 52, 32, 49, 49, 53, 76, 49, 50, 54, 51, 32, 49, 53, 50, 76, 49, 50, 54, 54, 10, 49, 56, 54, 81, 49, 50, 54, 54, 32, 50, 48, 57, 32, 49, 50, 54, 48, 32, 50, 50, 50, 84, 49, 50, 51, 56, 32, 50, 51, 56, 76, 49, 50, 51, 48, 32, 50, 52, 48, 81, 49, 49, 57, 55, 32, 50, 52, 48, 32, 49, 49, 54, 57, 32, 49, 55, 53, 81, 49, 49, 53, 57, 32, 49, 53, 51, 32, 49, 49, 53, 51, 32, 49, 51, 49, 84, 49, 49, 52, 51, 32, 56, 53, 84, 49, 49, 51, 56, 32, 53, 51, 81, 49, 49, 51, 56, 32, 52, 52, 32, 49, 49, 51, 57, 32, 51, 54, 84, 49, 49, 52, 53, 32, 49, 57, 81, 49, 49, 53, 51, 32, 55, 32, 49, 49, 55, 50, 32, 52, 90, 77, 49, 49, 54, 55, 32, 45, 55, 81, 49, 49, 51, 53, 32, 45, 55, 32, 49, 49, 49, 55, 32, 50, 48, 81, 49, 49, 48, 50, 32, 51, 57, 32, 49, 49, 48, 50, 32, 55, 53, 81, 49, 49, 48, 50, 32, 49, 51, 54, 32, 49, 49, 51, 57, 32, 49, 57, 51, 84, 49, 50, 51, 49, 32, 50, 53, 49, 81, 49, 50, 54, 49, 32, 50, 53, 49, 32, 49, 50, 56, 51, 32, 50, 50, 54, 81, 49, 51, 48, 51, 32, 50, 48, 49, 32, 49, 51, 48, 51, 32, 49, 54, 50, 81, 49, 51, 48, 51, 32, 49, 51, 53, 10, 49, 50, 57, 52, 32, 49, 48, 51, 81, 49, 50, 56, 48, 32, 53, 56, 32, 49, 50, 53, 48, 32, 50, 54, 84, 49, 49, 55, 54, 32, 45, 55, 72, 49, 49, 54, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 105, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 105, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 52, 48, 56, 34, 32, 100, 61, 34, 77, 54, 54, 32, 53, 81, 49, 48, 51, 32, 53, 32, 49, 51, 55, 32, 56, 53, 81, 49, 53, 51, 32, 49, 50, 48, 32, 49, 54, 48, 32, 49, 52, 56, 84, 49, 54, 55, 32, 49, 57, 55, 81, 49, 54, 55, 32, 50, 49, 56, 32, 49, 54, 50, 32, 50, 50, 52, 81, 49, 53, 54, 32, 50, 51, 56, 32, 49, 51, 55, 32, 50, 51, 56, 81, 49, 48, 52, 32, 50, 51, 56, 32, 54, 56, 32, 49, 55, 48, 84, 51, 50, 32, 52, 57, 81, 51, 50, 32, 53, 32, 54, 54, 32, 53, 90, 77, 50, 51, 55, 32, 56, 55, 76, 50, 52, 54, 32, 56, 49, 81, 50, 52, 48, 32, 53, 54, 32, 50, 50, 52, 32, 50, 57, 81, 50, 48, 50, 32, 45, 52, 32, 49, 55, 51, 32, 45, 55, 81, 49, 53, 53, 32, 45, 55, 32, 49, 52, 54, 32, 54, 81, 49, 52, 50, 32, 49, 50, 32, 49, 52, 48, 32, 49, 57, 84, 49, 51, 56, 32, 51, 55, 81, 49, 51, 56, 10, 53, 55, 32, 49, 52, 50, 32, 55, 51, 81, 49, 52, 51, 32, 55, 57, 32, 49, 52, 53, 32, 56, 49, 81, 49, 51, 51, 32, 53, 52, 32, 49, 50, 51, 32, 51, 56, 84, 49, 48, 52, 32, 49, 50, 81, 56, 52, 32, 45, 55, 32, 53, 51, 32, 45, 55, 81, 51, 48, 32, 45, 55, 32, 49, 52, 32, 57, 81, 52, 32, 49, 57, 32, 45, 49, 32, 51, 50, 84, 45, 54, 32, 54, 53, 81, 45, 54, 32, 49, 50, 57, 32, 52, 49, 32, 49, 57, 48, 84, 49, 51, 49, 32, 50, 53, 49, 81, 49, 54, 48, 32, 50, 53, 49, 32, 49, 55, 53, 32, 50, 49, 57, 76, 50, 48, 55, 32, 51, 53, 49, 76, 50, 48, 57, 32, 51, 54, 51, 81, 50, 48, 57, 32, 51, 55, 55, 32, 49, 56, 56, 32, 51, 55, 55, 76, 49, 55, 50, 32, 51, 55, 54, 76, 49, 55, 52, 32, 51, 56, 57, 76, 50, 54, 50, 32, 52, 48, 48, 76, 49, 57, 55, 32, 49, 53, 55, 76, 49, 56, 48, 32, 56, 52, 81, 49, 55, 51, 32, 53, 50, 32, 49, 55, 51, 32, 51, 49, 81, 49, 55, 51, 32, 49, 48, 32, 49, 56, 51, 32, 49, 48, 81, 49, 57, 49, 32, 49, 48, 32, 50, 48, 51, 32, 50, 53, 84, 50, 51, 55, 32, 56, 55, 90, 77, 51, 56, 49, 10, 51, 56, 53, 81, 51, 56, 57, 32, 51, 56, 53, 32, 51, 57, 56, 32, 51, 55, 57, 84, 52, 48, 55, 32, 51, 54, 48, 81, 52, 48, 55, 32, 51, 53, 50, 32, 52, 48, 49, 32, 51, 52, 54, 84, 51, 56, 52, 32, 51, 51, 55, 81, 51, 55, 53, 32, 51, 51, 55, 32, 51, 54, 55, 32, 51, 52, 51, 84, 51, 53, 57, 32, 51, 54, 51, 81, 51, 53, 57, 32, 51, 55, 48, 32, 51, 54, 54, 32, 51, 55, 55, 81, 51, 55, 48, 32, 51, 56, 51, 32, 51, 56, 49, 32, 51, 56, 53, 90, 77, 51, 49, 48, 32, 49, 48, 56, 76, 51, 51, 48, 32, 49, 54, 50, 81, 51, 51, 57, 32, 49, 56, 48, 32, 51, 52, 51, 32, 49, 57, 52, 84, 51, 52, 55, 32, 50, 50, 48, 81, 51, 52, 55, 32, 50, 51, 49, 32, 51, 52, 48, 32, 50, 51, 52, 81, 51, 50, 50, 32, 50, 51, 52, 32, 50, 57, 57, 32, 49, 57, 54, 81, 50, 57, 54, 32, 49, 57, 49, 32, 50, 57, 50, 32, 49, 56, 50, 84, 50, 56, 52, 32, 49, 54, 54, 76, 50, 55, 52, 32, 49, 55, 49, 76, 50, 57, 56, 32, 50, 49, 55, 81, 51, 49, 57, 32, 50, 53, 48, 32, 51, 52, 55, 32, 50, 53, 48, 81, 51, 54, 50, 10, 50, 53, 48, 32, 51, 55, 49, 32, 50, 52, 49, 84, 51, 56, 48, 32, 50, 48, 57, 81, 51, 56, 48, 32, 49, 56, 56, 32, 51, 55, 48, 32, 49, 53, 56, 81, 51, 54, 54, 32, 49, 51, 57, 32, 51, 54, 50, 32, 49, 51, 48, 84, 51, 52, 55, 32, 57, 54, 76, 51, 51, 48, 32, 53, 54, 81, 51, 50, 55, 32, 52, 55, 32, 51, 50, 53, 32, 51, 56, 84, 51, 50, 50, 32, 50, 52, 81, 51, 50, 50, 32, 49, 49, 32, 51, 51, 51, 32, 57, 81, 51, 52, 53, 32, 57, 32, 51, 54, 48, 32, 50, 52, 81, 51, 55, 51, 32, 52, 48, 32, 51, 57, 48, 32, 55, 51, 76, 51, 57, 53, 32, 56, 49, 76, 52, 48, 51, 32, 55, 55, 81, 51, 56, 56, 32, 52, 51, 32, 51, 55, 55, 32, 50, 55, 81, 51, 53, 49, 32, 45, 55, 32, 51, 49, 57, 32, 45, 55, 81, 50, 56, 57, 32, 45, 52, 32, 50, 56, 57, 32, 51, 48, 81, 50, 56, 57, 32, 52, 55, 32, 50, 57, 55, 32, 55, 50, 81, 50, 57, 57, 32, 55, 57, 32, 51, 49, 48, 32, 49, 48, 56, 90, 77, 53, 49, 52, 32, 57, 57, 76, 52, 56, 50, 32, 48, 72, 52, 52, 53, 76, 52, 55, 54, 32, 49, 48, 56, 76, 52, 56, 51, 10, 49, 51, 54, 76, 52, 57, 50, 32, 49, 55, 55, 81, 52, 57, 56, 32, 50, 48, 48, 32, 52, 57, 56, 32, 50, 49, 52, 81, 52, 57, 56, 32, 50, 50, 55, 32, 52, 57, 52, 32, 50, 51, 48, 76, 52, 56, 54, 32, 50, 51, 49, 81, 52, 55, 52, 32, 50, 51, 49, 32, 52, 54, 49, 32, 50, 49, 50, 84, 52, 51, 50, 32, 49, 53, 52, 76, 52, 50, 50, 32, 49, 53, 57, 81, 52, 52, 52, 32, 50, 49, 52, 32, 52, 54, 48, 32, 50, 51, 50, 84, 52, 57, 55, 32, 50, 53, 48, 76, 53, 48, 52, 32, 50, 52, 57, 81, 53, 51, 48, 32, 50, 52, 52, 32, 53, 51, 48, 32, 50, 48, 55, 81, 53, 51, 48, 32, 49, 56, 55, 32, 53, 50, 54, 32, 49, 55, 49, 76, 53, 50, 49, 32, 49, 52, 54, 81, 53, 52, 56, 32, 50, 48, 49, 32, 53, 54, 54, 32, 50, 50, 50, 81, 53, 57, 48, 32, 50, 53, 50, 32, 54, 49, 56, 32, 50, 53, 50, 76, 54, 50, 53, 32, 50, 53, 49, 81, 54, 53, 50, 32, 50, 52, 54, 32, 54, 53, 50, 32, 50, 49, 50, 81, 54, 53, 50, 32, 49, 57, 52, 32, 54, 52, 48, 32, 49, 53, 51, 81, 54, 55, 50, 32, 50, 49, 50, 32, 54, 57, 49, 32, 50, 51, 49, 84, 55, 51, 52, 10, 50, 53, 49, 76, 55, 52, 55, 32, 50, 52, 57, 81, 55, 55, 49, 32, 50, 51, 56, 32, 55, 55, 49, 32, 50, 48, 55, 76, 55, 55, 48, 32, 49, 57, 49, 76, 55, 54, 55, 32, 49, 55, 57, 76, 55, 53, 56, 32, 49, 52, 50, 76, 55, 50, 52, 32, 51, 57, 76, 55, 50, 49, 32, 51, 48, 76, 55, 50, 48, 32, 50, 52, 81, 55, 50, 48, 32, 49, 56, 32, 55, 50, 52, 32, 49, 52, 76, 55, 51, 53, 32, 49, 48, 81, 55, 52, 54, 32, 49, 51, 32, 55, 53, 56, 32, 50, 53, 81, 55, 55, 50, 32, 52, 52, 32, 55, 57, 49, 32, 56, 54, 76, 56, 48, 48, 32, 56, 50, 81, 55, 56, 55, 32, 53, 48, 32, 55, 55, 51, 32, 51, 48, 81, 55, 53, 50, 32, 48, 32, 55, 50, 52, 32, 45, 54, 72, 55, 49, 55, 81, 54, 56, 54, 32, 45, 54, 32, 54, 56, 54, 32, 51, 48, 81, 54, 56, 54, 32, 52, 51, 32, 54, 57, 52, 32, 55, 50, 76, 55, 50, 54, 32, 49, 54, 54, 81, 55, 51, 56, 32, 49, 57, 56, 32, 55, 51, 56, 32, 50, 49, 55, 81, 55, 51, 56, 32, 50, 51, 51, 32, 55, 50, 53, 32, 50, 51, 52, 76, 55, 50, 48, 32, 50, 51, 51, 81, 54, 57, 56, 32, 50, 50, 55, 10, 54, 54, 55, 32, 49, 56, 49, 81, 54, 52, 50, 32, 49, 51, 57, 32, 54, 50, 53, 32, 57, 52, 76, 53, 57, 55, 32, 48, 72, 53, 53, 57, 76, 54, 48, 56, 32, 49, 54, 51, 76, 54, 49, 50, 32, 49, 55, 52, 76, 54, 49, 56, 32, 49, 57, 55, 76, 54, 50, 49, 32, 50, 49, 54, 81, 54, 50, 49, 32, 50, 51, 52, 32, 54, 48, 51, 32, 50, 51, 52, 81, 53, 54, 57, 32, 50, 51, 48, 32, 53, 51, 56, 32, 49, 53, 51, 76, 53, 49, 52, 32, 57, 57, 90, 77, 57, 50, 55, 32, 51, 56, 53, 81, 57, 51, 54, 32, 51, 56, 53, 32, 57, 52, 52, 32, 51, 55, 57, 84, 57, 53, 51, 32, 51, 54, 48, 81, 57, 53, 51, 32, 51, 53, 50, 32, 57, 52, 54, 32, 51, 52, 52, 81, 57, 51, 57, 32, 51, 51, 57, 32, 57, 51, 48, 32, 51, 51, 55, 81, 57, 50, 48, 32, 51, 51, 55, 32, 57, 49, 51, 32, 51, 52, 52, 81, 57, 48, 53, 32, 51, 52, 57, 32, 57, 48, 53, 32, 51, 54, 51, 81, 57, 48, 53, 32, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 55, 84, 57, 50, 55, 32, 51, 56, 53, 90, 77, 56, 53, 54, 32, 49, 48, 56, 76, 56, 55, 53, 32, 49, 54, 50, 81, 56, 57, 51, 10, 50, 48, 48, 32, 56, 57, 51, 32, 50, 50, 48, 81, 56, 57, 51, 32, 50, 51, 49, 32, 56, 56, 53, 32, 50, 51, 52, 81, 56, 54, 55, 32, 50, 51, 52, 32, 56, 52, 52, 32, 49, 57, 54, 76, 56, 50, 57, 32, 49, 54, 54, 76, 56, 49, 57, 32, 49, 55, 49, 76, 56, 52, 51, 32, 50, 49, 55, 81, 56, 54, 52, 32, 50, 53, 48, 32, 56, 57, 51, 32, 50, 53, 48, 81, 57, 48, 53, 32, 50, 53, 48, 32, 57, 49, 54, 32, 50, 52, 49, 81, 57, 50, 54, 32, 50, 50, 57, 32, 57, 50, 54, 32, 50, 48, 57, 81, 57, 50, 54, 32, 49, 56, 56, 32, 57, 49, 54, 32, 49, 53, 56, 81, 57, 49, 49, 32, 49, 52, 50, 32, 57, 48, 55, 32, 49, 50, 56, 84, 56, 57, 51, 32, 57, 54, 76, 56, 55, 53, 32, 53, 54, 76, 56, 54, 56, 32, 50, 52, 81, 56, 54, 56, 32, 49, 49, 32, 56, 55, 57, 32, 57, 81, 56, 57, 49, 32, 57, 32, 57, 48, 54, 32, 50, 52, 81, 57, 49, 57, 32, 52, 48, 32, 57, 51, 54, 32, 55, 51, 76, 57, 52, 49, 32, 56, 49, 76, 57, 52, 57, 32, 55, 55, 81, 57, 51, 52, 32, 52, 49, 32, 57, 50, 50, 32, 50, 55]).concat([81, 56, 57, 55, 10, 45, 55, 32, 56, 54, 52, 32, 45, 55, 81, 56, 51, 53, 32, 45, 52, 32, 56, 51, 53, 32, 51, 48, 81, 56, 51, 53, 32, 53, 53, 32, 56, 53, 54, 32, 49, 48, 56, 90, 77, 49, 49, 54, 56, 32, 50, 56, 76, 49, 49, 54, 55, 32, 50, 48, 76, 49, 49, 54, 57, 32, 49, 48, 81, 49, 49, 55, 50, 32, 55, 32, 49, 49, 55, 56, 32, 55, 81, 49, 49, 57, 53, 32, 55, 32, 49, 50, 50, 50, 32, 52, 53, 76, 49, 50, 52, 49, 32, 56, 50, 76, 49, 50, 52, 57, 32, 55, 56, 81, 49, 50, 51, 55, 32, 53, 48, 32, 49, 50, 51, 51, 32, 52, 50, 81, 49, 50, 50, 54, 32, 50, 55, 32, 49, 50, 50, 48, 32, 50, 49, 81, 49, 50, 48, 49, 32, 45, 55, 32, 49, 49, 55, 48, 32, 45, 55, 72, 49, 49, 54, 51, 81, 49, 49, 51, 52, 32, 45, 55, 32, 49, 49, 51, 52, 32, 50, 57, 81, 49, 49, 51, 52, 32, 53, 49, 32, 49, 49, 52, 53, 32, 56, 49, 76, 49, 49, 55, 52, 32, 49, 55, 49, 76, 49, 49, 56, 48, 32, 49, 57, 49, 76, 49, 49, 56, 51, 32, 50, 49, 50, 81, 49, 49, 56, 51, 32, 50, 50, 51, 32, 49, 49, 55, 57, 32, 50, 50, 56, 84, 49, 49, 54, 51, 10, 50, 51, 52, 81, 49, 49, 52, 51, 32, 50, 51, 52, 32, 49, 49, 50, 49, 32, 50, 48, 57, 84, 49, 48, 55, 54, 32, 49, 51, 50, 76, 49, 48, 54, 52, 32, 49, 48, 51, 76, 49, 48, 51, 49, 32, 48, 72, 57, 57, 49, 76, 49, 48, 50, 49, 32, 49, 48, 48, 81, 49, 48, 50, 54, 32, 49, 49, 52, 32, 49, 48, 51, 48, 32, 49, 51, 48, 84, 49, 48, 51, 56, 32, 49, 54, 49, 84, 49, 48, 52, 51, 32, 49, 56, 55, 84, 49, 48, 52, 52, 32, 50, 48, 57, 81, 49, 48, 52, 52, 32, 50, 51, 50, 32, 49, 48, 51, 49, 32, 50, 51, 51, 81, 49, 48, 50, 48, 32, 50, 51, 51, 32, 49, 48, 48, 56, 32, 50, 49, 56, 76, 57, 55, 53, 32, 49, 53, 51, 76, 57, 54, 53, 32, 49, 53, 55, 81, 57, 56, 53, 32, 50, 49, 49, 32, 49, 48, 48, 52, 32, 50, 51, 49, 84, 49, 48, 53, 48, 32, 50, 53, 49, 81, 49, 48, 54, 51, 32, 50, 53, 49, 32, 49, 48, 55, 50, 32, 50, 51, 55, 81, 49, 48, 55, 55, 32, 50, 50, 56, 32, 49, 48, 55, 55, 32, 50, 48, 53, 76, 49, 48, 55, 53, 32, 49, 55, 49, 76, 49, 48, 54, 55, 32, 49, 52, 49, 81, 49, 49, 48, 48, 10, 50, 48, 57, 32, 49, 49, 51, 48, 32, 50, 51, 49, 81, 49, 49, 52, 49, 32, 50, 52, 48, 32, 49, 49, 53, 50, 32, 50, 52, 52, 84, 49, 49, 55, 53, 32, 50, 52, 57, 81, 49, 49, 57, 52, 32, 50, 52, 57, 32, 49, 50, 48, 53, 32, 50, 51, 53, 84, 49, 50, 49, 54, 32, 49, 57, 56, 81, 49, 50, 49, 54, 32, 49, 56, 48, 32, 49, 50, 49, 48, 32, 49, 53, 55, 76, 49, 49, 54, 56, 32, 50, 56, 90, 77, 49, 51, 49, 48, 32, 53, 49, 81, 49, 51, 50, 51, 32, 53, 49, 32, 49, 51, 51, 49, 32, 52, 52, 84, 49, 51, 52, 49, 32, 50, 52, 81, 49, 51, 52, 49, 32, 49, 51, 32, 49, 51, 51, 50, 32, 52, 84, 49, 51, 49, 48, 32, 45, 54, 81, 49, 50, 57, 56, 32, 45, 54, 32, 49, 50, 56, 57, 32, 50, 84, 49, 50, 55, 56, 32, 50, 52, 81, 49, 50, 55, 56, 32, 51, 53, 32, 49, 50, 56, 54, 32, 52, 51, 84, 49, 51, 49, 48, 32, 53, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 106, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 106, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 52, 50, 34, 32, 100, 61, 34, 77, 51, 52, 50, 32, 51, 52, 51, 76, 48, 32, 48, 86, 50, 54, 76, 51, 52, 50, 32, 51, 54, 57, 86, 51, 52, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 107, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 107, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 56, 34, 32, 100, 61, 34, 77, 45, 49, 55, 57, 32, 49, 57, 72, 49, 55, 57, 86, 45, 49, 57, 72, 45, 49, 55, 57, 86, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 108, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 108, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 49, 54, 50, 32, 49, 48, 56, 76, 45, 49, 54, 50, 32, 45, 53, 54, 86, 50, 56, 76, 49, 54, 50, 32, 49, 57, 49, 86, 49, 48, 56, 90, 77, 49, 54, 50, 32, 45, 50, 55, 76, 45, 49, 54, 50, 32, 45, 49, 57, 49, 86, 45, 49, 48, 55, 76, 49, 54, 50, 32, 53, 55, 86, 45, 50, 55, 90, 77, 49, 54, 50, 32, 45, 49, 54, 50, 76, 45, 49, 54, 50, 32, 45, 51, 50, 53, 86, 45, 50, 52, 50, 76, 49, 54, 50, 32, 45, 55, 56, 86, 45, 49, 54, 50, 90, 77, 49, 54, 50, 32, 50, 52, 50, 76, 45, 49, 54, 50, 32, 55, 56, 86, 49, 54, 50, 76, 49, 54, 50, 32, 51, 50, 54, 86, 50, 52, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 109, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 109, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 53, 34, 32, 100, 61, 34, 77, 45, 52, 50, 56, 32, 48, 76, 45, 51, 53, 49, 32, 50, 49, 48, 86, 50, 49, 52, 81, 45, 51, 53, 49, 32, 50, 50, 49, 32, 45, 51, 53, 52, 32, 50, 50, 52, 84, 45, 51, 54, 51, 32, 50, 51, 48, 81, 45, 51, 56, 52, 32, 50, 51, 48, 32, 45, 52, 48, 55, 32, 49, 57, 52, 81, 45, 52, 49, 56, 32, 49, 55, 56, 32, 45, 52, 50, 57, 32, 49, 53, 55, 81, 45, 52, 51, 54, 32, 49, 52, 52, 32, 45, 52, 53, 48, 32, 49, 49, 53, 72, 45, 52, 55, 50, 81, 45, 52, 53, 55, 32, 49, 52, 54, 32, 45, 52, 52, 49, 32, 49, 55, 51, 84, 45, 52, 48, 56, 32, 50, 50, 50, 81, 45, 51, 55, 55, 32, 50, 54, 50, 32, 45, 51, 50, 57, 32, 50, 54, 50, 81, 45, 51, 49, 53, 32, 50, 54, 50, 32, 45, 51, 48, 55, 32, 50, 53, 49, 81, 45, 50, 57, 56, 32, 50, 52, 50, 32, 45, 50, 57, 53, 32, 50, 50, 49, 81, 45, 50, 54, 55, 10, 50, 52, 54, 32, 45, 50, 53, 48, 32, 50, 53, 51, 81, 45, 50, 51, 51, 32, 50, 54, 50, 32, 45, 50, 49, 49, 32, 50, 54, 50, 81, 45, 49, 57, 57, 32, 50, 54, 50, 32, 45, 49, 56, 57, 32, 50, 53, 50, 84, 45, 49, 55, 54, 32, 50, 50, 49, 81, 45, 49, 54, 55, 32, 50, 50, 56, 32, 45, 49, 53, 50, 32, 50, 51, 57, 84, 45, 49, 50, 57, 32, 50, 53, 51, 81, 45, 49, 49, 50, 32, 50, 54, 50, 32, 45, 57, 49, 32, 50, 54, 50, 81, 45, 55, 52, 32, 50, 54, 50, 32, 45, 54, 48, 32, 50, 53, 50, 81, 45, 52, 56, 32, 50, 52, 49, 32, 45, 52, 56, 32, 50, 50, 55, 86, 50, 50, 48, 76, 45, 49, 49, 49, 32, 51, 55, 81, 45, 49, 49, 49, 32, 49, 56, 32, 45, 57, 57, 32, 49, 54, 81, 45, 56, 55, 32, 49, 54, 32, 45, 55, 51, 32, 51, 49, 84, 45, 53, 55, 32, 52, 56, 81, 45, 53, 49, 32, 53, 57, 32, 45, 52, 56, 32, 54, 51, 76, 45, 50, 49, 32, 49, 48, 51, 72, 48, 76, 45, 51, 48, 32, 53, 51, 81, 45, 52, 56, 32, 50, 51, 32, 45, 54, 56, 32, 51, 84, 45, 49, 49, 52, 32, 45, 49, 56, 81, 45, 49, 52, 49, 32, 45, 49, 56, 10, 45, 49, 54, 51, 32, 45, 52, 76, 45, 49, 55, 57, 32, 49, 49, 81, 45, 49, 56, 52, 32, 50, 49, 32, 45, 49, 56, 52, 32, 50, 56, 76, 45, 49, 56, 48, 32, 52, 50, 76, 45, 49, 49, 57, 32, 50, 49, 52, 81, 45, 49, 49, 57, 32, 50, 50, 53, 32, 45, 49, 51, 52, 32, 50, 50, 55, 81, 45, 49, 53, 56, 32, 50, 50, 55, 32, 45, 49, 55, 56, 32, 49, 56, 50, 76, 45, 50, 52, 50, 32, 48, 72, 45, 51, 49, 51, 76, 45, 50, 51, 54, 32, 50, 49, 52, 81, 45, 50, 51, 54, 32, 50, 50, 55, 32, 45, 50, 53, 51, 32, 50, 50, 55, 81, 45, 50, 54, 55, 32, 50, 50, 55, 32, 45, 50, 55, 53, 32, 50, 49, 54, 84, 45, 50, 57, 53, 32, 49, 56, 50, 76, 45, 51, 53, 57, 32, 48, 72, 45, 52, 50, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 110, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 49, 54, 50, 32, 52, 49, 76, 45, 49, 54, 50, 32, 45, 49, 50, 51, 86, 45, 51, 57, 76, 49, 54, 50, 32, 49, 50, 52, 86, 52, 49, 90, 77, 49, 54, 50, 32, 45, 57, 52, 76, 45, 49, 54, 50, 32, 45, 50, 53, 56, 86, 45, 49, 55, 52, 76, 49, 54, 50, 32, 45, 49, 48, 86, 45, 57, 52, 90, 77, 49, 54, 50, 32, 45, 50, 50, 57, 76, 45, 49, 54, 50, 32, 45, 51, 57, 50, 86, 45, 51, 48, 57, 76, 49, 54, 50, 32, 45, 49, 52, 53, 86, 45, 50, 50, 57, 90, 77, 49, 54, 50, 32, 51, 49, 48, 76, 45, 49, 54, 50, 32, 49, 52, 54, 86, 50, 51, 48, 76, 49, 54, 50, 32, 51, 57, 51, 86, 51, 49, 48, 90, 77, 49, 54, 50, 32, 49, 55, 53, 76, 45, 49, 54, 50, 32, 49, 49, 86, 57, 53, 76, 49, 54, 50, 32, 50, 53, 57, 86, 49, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 111, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 57, 49, 34, 32, 100, 61, 34, 77, 57, 53, 32, 48, 81, 57, 53, 32, 45, 51, 55, 32, 54, 57, 32, 45, 54, 48, 84, 48, 32, 45, 56, 52, 81, 45, 52, 50, 32, 45, 56, 52, 32, 45, 54, 56, 32, 45, 54, 49, 84, 45, 57, 53, 32, 48, 81, 45, 57, 53, 32, 51, 55, 32, 45, 54, 57, 32, 54, 48, 84, 48, 32, 56, 52, 81, 52, 49, 32, 56, 52, 32, 54, 56, 32, 54, 49, 84, 57, 53, 32, 48, 90, 77, 53, 57, 32, 48, 81, 53, 57, 32, 50, 49, 32, 52, 51, 32, 51, 51, 84, 49, 32, 52, 54, 81, 45, 50, 51, 32, 52, 54, 32, 45, 52, 48, 32, 51, 52, 84, 45, 53, 56, 32, 48, 81, 45, 53, 56, 32, 45, 50, 48, 32, 45, 52, 49, 32, 45, 51, 51, 84, 49, 32, 45, 52, 54, 81, 50, 54, 32, 45, 52, 54, 32, 52, 50, 32, 45, 51, 52, 84, 53, 57, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 112, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 48, 54, 34, 32, 100, 61, 34, 77, 45, 51, 48, 54, 32, 49, 50, 52, 72, 45, 51, 50, 57, 81, 45, 50, 57, 54, 32, 49, 56, 56, 32, 45, 50, 54, 55, 32, 50, 50, 53, 84, 45, 49, 57, 49, 32, 50, 54, 51, 81, 45, 49, 56, 50, 32, 50, 54, 51, 32, 45, 49, 55, 51, 32, 50, 53, 48, 81, 45, 49, 54, 51, 32, 50, 52, 48, 32, 45, 49, 54, 51, 32, 50, 50, 51, 76, 45, 49, 51, 57, 32, 50, 51, 55, 76, 45, 49, 49, 52, 32, 50, 53, 48, 81, 45, 57, 54, 32, 50, 53, 55, 32, 45, 55, 55, 32, 50, 53, 55, 81, 45, 52, 49, 32, 50, 53, 55, 32, 45, 49, 57, 32, 50, 50, 57, 84, 52, 32, 49, 53, 50, 81, 52, 32, 49, 51, 49, 32, 49, 32, 49, 49, 52, 84, 45, 57, 32, 56, 53, 84, 45, 50, 56, 32, 53, 56, 81, 45, 52, 57, 32, 51, 49, 32, 45, 55, 53, 32, 49, 54, 84, 45, 49, 50, 57, 32, 49, 81, 45, 49, 52, 50, 32, 49, 10, 45, 49, 54, 50, 32, 49, 49, 81, 45, 49, 55, 48, 32, 49, 54, 32, 45, 49, 55, 55, 32, 50, 49, 84, 45, 49, 57, 48, 32, 51, 53, 76, 45, 50, 52, 54, 32, 45, 49, 50, 51, 76, 45, 50, 52, 57, 32, 45, 49, 50, 55, 81, 45, 50, 52, 53, 32, 45, 49, 51, 55, 32, 45, 50, 51, 55, 32, 45, 49, 51, 56, 72, 45, 50, 48, 53, 86, 45, 49, 54, 55, 72, 45, 51, 55, 56, 86, 45, 49, 51, 56, 72, 45, 51, 53, 55, 81, 45, 51, 53, 49, 32, 45, 49, 51, 56, 32, 45, 51, 52, 51, 32, 45, 49, 51, 51, 81, 45, 51, 51, 55, 32, 45, 49, 50, 55, 32, 45, 51, 51, 52, 32, 45, 49, 49, 57, 76, 45, 50, 49, 53, 32, 50, 49, 50, 86, 50, 49, 56, 76, 45, 50, 49, 56, 32, 50, 50, 56, 76, 45, 50, 50, 52, 32, 50, 51, 49, 81, 45, 50, 51, 55, 32, 50, 51, 49, 32, 45, 50, 52, 57, 32, 50, 49, 57, 84, 45, 50, 55, 50, 32, 49, 56, 56, 76, 45, 50, 56, 51, 32, 49, 55, 49, 76, 45, 50, 57, 51, 32, 49, 53, 49, 76, 45, 51, 48, 54, 32, 49, 50, 52, 90, 77, 45, 49, 51, 50, 32, 50, 48, 49, 81, 45, 49, 53, 48, 32, 49, 55, 48, 10, 45, 49, 54, 49, 32, 49, 50, 57, 81, 45, 49, 55, 49, 32, 56, 52, 32, 45, 49, 55, 49, 32, 54, 55, 81, 45, 49, 55, 49, 32, 51, 49, 32, 45, 49, 52, 57, 32, 51, 49, 81, 45, 49, 51, 48, 32, 51, 49, 32, 45, 49, 49, 56, 32, 51, 56, 84, 45, 57, 55, 32, 53, 56, 81, 45, 56, 50, 32, 56, 51, 32, 45, 56, 49, 32, 56, 54, 81, 45, 55, 52, 32, 49, 48, 51, 32, 45, 55, 49, 32, 49, 51, 48, 84, 45, 54, 55, 32, 49, 54, 57, 81, 45, 54, 55, 32, 49, 56, 48, 32, 45, 54, 57, 32, 49, 56, 55, 84, 45, 55, 53, 32, 50, 48, 49, 81, 45, 56, 51, 32, 50, 49, 53, 32, 45, 49, 48, 51, 32, 50, 49, 53, 81, 45, 49, 50, 52, 32, 50, 49, 53, 32, 45, 49, 51, 50, 32, 50, 48, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 113, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 48, 34, 32, 100, 61, 34, 77, 49, 52, 53, 32, 50, 54, 56, 76, 50, 56, 48, 32, 49, 51, 51, 76, 49, 51, 54, 32, 45, 49, 49, 76, 49, 32, 49, 50, 52, 76, 49, 52, 53, 32, 50, 54, 56, 90, 77, 49, 50, 49, 32, 50, 49, 50, 76, 53, 55, 32, 49, 52, 56, 76, 49, 54, 48, 32, 52, 54, 76, 50, 50, 51, 32, 49, 48, 57, 76, 49, 50, 49, 32, 50, 49, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 114, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 53, 34, 32, 100, 61, 34, 77, 49, 50, 48, 32, 49, 51, 53, 76, 56, 48, 32, 48, 72, 50, 48, 76, 55, 55, 32, 49, 57, 52, 86, 49, 57, 57, 81, 55, 55, 32, 50, 49, 53, 32, 54, 57, 32, 50, 49, 53, 81, 54, 50, 32, 50, 49, 53, 32, 53, 54, 32, 50, 49, 49, 84, 51, 57, 32, 49, 57, 52, 81, 50, 54, 32, 49, 55, 56, 32, 49, 52, 32, 49, 53, 56, 76, 48, 32, 49, 54, 54, 81, 51, 32, 49, 55, 52, 32, 49, 48, 32, 49, 56, 51, 84, 50, 56, 32, 50, 48, 52, 81, 52, 56, 32, 50, 50, 52, 32, 55, 48, 32, 50, 51, 56, 84, 49, 49, 49, 32, 50, 53, 50, 81, 49, 51, 51, 32, 50, 53, 50, 32, 49, 51, 51, 32, 50, 50, 52, 76, 49, 51, 50, 32, 50, 49, 51, 76, 49, 51, 49, 32, 50, 48, 51, 81, 49, 51, 55, 32, 50, 49, 50, 32, 49, 52, 52, 32, 50, 50, 49, 81, 49, 53, 54, 32, 50, 51, 53, 32, 49, 54, 54, 32, 50, 52, 52, 81, 49, 56, 52, 10, 50, 53, 57, 32, 50, 48, 53, 32, 50, 53, 57, 81, 50, 50, 49, 32, 50, 53, 57, 32, 50, 51, 51, 32, 50, 52, 55, 84, 50, 52, 53, 32, 50, 49, 57, 81, 50, 52, 53, 32, 49, 55, 52, 32, 50, 49, 52, 32, 49, 55, 52, 81, 50, 48, 52, 32, 49, 55, 52, 32, 49, 57, 56, 32, 49, 56, 50, 81, 49, 57, 49, 32, 49, 56, 56, 32, 49, 57, 49, 32, 50, 48, 51, 76, 49, 57, 50, 32, 50, 49, 52, 76, 49, 57, 53, 32, 50, 50, 54, 81, 49, 57, 53, 32, 50, 51, 51, 32, 49, 56, 55, 32, 50, 51, 51, 81, 49, 54, 55, 32, 50, 51, 51, 32, 49, 52, 57, 32, 50, 48, 50, 76, 49, 51, 51, 32, 49, 55, 48, 76, 49, 50, 48, 32, 49, 51, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 115, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 52, 34, 32, 100, 61, 34, 77, 48, 32, 49, 57, 53, 76, 45, 49, 32, 49, 56, 53, 76, 45, 55, 32, 49, 55, 53, 81, 45, 49, 49, 32, 49, 54, 55, 32, 45, 50, 52, 32, 49, 54, 53, 81, 45, 52, 57, 32, 49, 54, 53, 32, 45, 53, 51, 32, 49, 56, 57, 76, 45, 52, 57, 32, 50, 48, 56, 81, 45, 52, 57, 32, 50, 49, 52, 32, 45, 53, 54, 32, 50, 49, 57, 84, 45, 55, 51, 32, 50, 50, 54, 81, 45, 56, 53, 32, 50, 50, 56, 32, 45, 57, 55, 32, 50, 49, 54, 81, 45, 49, 48, 53, 32, 50, 48, 56, 32, 45, 49, 48, 56, 32, 49, 57, 48, 81, 45, 49, 48, 56, 32, 49, 55, 57, 32, 45, 57, 55, 32, 49, 54, 56, 76, 45, 56, 51, 32, 49, 53, 55, 76, 45, 55, 49, 32, 49, 52, 55, 81, 45, 50, 57, 32, 49, 49, 50, 32, 45, 50, 55, 32, 49, 48, 55, 81, 45, 49, 53, 32, 57, 50, 32, 45, 49, 53, 32, 54, 56, 86, 53, 56, 81, 45, 49, 53, 10, 50, 55, 32, 45, 52, 52, 32, 52, 81, 45, 53, 56, 32, 45, 53, 32, 45, 55, 52, 32, 45, 49, 48, 84, 45, 49, 48, 53, 32, 45, 49, 54, 81, 45, 49, 50, 53, 32, 45, 49, 54, 32, 45, 49, 51, 57, 32, 45, 49, 50, 84, 45, 49, 54, 53, 32, 49, 81, 45, 49, 57, 52, 32, 50, 49, 32, 45, 49, 57, 52, 32, 53, 49, 76, 45, 49, 57, 51, 32, 54, 54, 76, 45, 49, 56, 56, 32, 55, 57, 76, 45, 49, 55, 56, 32, 56, 56, 76, 45, 49, 54, 53, 32, 57, 50, 81, 45, 49, 52, 49, 32, 57, 50, 32, 45, 49, 52, 49, 32, 54, 49, 81, 45, 49, 52, 49, 32, 53, 50, 32, 45, 49, 52, 52, 32, 52, 55, 84, 45, 49, 52, 57, 32, 51, 51, 81, 45, 49, 52, 57, 32, 50, 53, 32, 45, 49, 51, 55, 32, 49, 57, 81, 45, 49, 51, 50, 32, 49, 55, 32, 45, 49, 50, 54, 32, 49, 55, 84, 45, 49, 49, 51, 32, 49, 55, 81, 45, 57, 57, 32, 49, 55, 32, 45, 56, 55, 32, 50, 54, 84, 45, 55, 51, 32, 53, 49, 81, 45, 55, 51, 32, 54, 50, 32, 45, 56, 49, 32, 55, 51, 81, 45, 56, 53, 32, 56, 49, 32, 45, 49, 48, 48, 32, 57, 49, 81, 45, 49, 51, 51, 10, 49, 49, 49, 32, 45, 49, 52, 55, 32, 49, 50, 57, 84, 45, 49, 54, 50, 32, 49, 55, 50, 81, 45, 49, 54, 50, 32, 49, 56, 57, 32, 45, 49, 53, 54, 32, 50, 48, 52, 84, 45, 49, 51, 55, 32, 50, 51, 49, 81, 45, 49, 49, 49, 32, 50, 53, 52, 32, 45, 55, 53, 32, 50, 53, 52, 76, 45, 52, 55, 32, 50, 53, 49, 81, 45, 51, 51, 32, 50, 52, 55, 32, 45, 50, 51, 32, 50, 51, 56, 81, 48, 32, 50, 50, 52, 32, 48, 32, 49, 57, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 116, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 45, 49, 49, 52, 32, 49, 49, 76, 45, 49, 48, 48, 32, 54, 54, 81, 45, 49, 50, 53, 32, 56, 56, 32, 45, 49, 53, 53, 32, 56, 56, 81, 45, 49, 55, 51, 32, 56, 56, 32, 45, 49, 56, 52, 32, 55, 55, 84, 45, 49, 57, 56, 32, 52, 55, 81, 45, 49, 57, 56, 32, 50, 53, 32, 45, 49, 56, 52, 32, 49, 49, 81, 45, 49, 55, 55, 32, 54, 32, 45, 49, 54, 57, 32, 51, 84, 45, 49, 53, 51, 32, 48, 76, 45, 49, 53, 48, 32, 45, 50, 76, 45, 49, 51, 55, 32, 50, 76, 45, 49, 49, 52, 32, 49, 49, 90, 77, 45, 53, 32, 45, 49, 52, 51, 76, 53, 51, 32, 55, 49, 81, 53, 51, 32, 55, 54, 32, 53, 49, 32, 55, 55, 84, 52, 56, 32, 56, 48, 81, 51, 55, 32, 56, 48, 32, 45, 51, 32, 53, 50, 76, 45, 52, 54, 32, 49, 57, 76, 45, 52, 49, 32, 50, 53, 81, 45, 57, 32, 45, 50, 56, 32, 45, 57, 10, 45, 55, 51, 81, 45, 57, 32, 45, 57, 49, 32, 45, 49, 51, 32, 45, 49, 48, 49, 84, 45, 49, 57, 32, 45, 49, 49, 54, 84, 45, 51, 49, 32, 45, 49, 51, 53, 81, 45, 53, 50, 32, 45, 49, 54, 49, 32, 45, 56, 48, 32, 45, 49, 54, 49, 81, 45, 49, 48, 51, 32, 45, 49, 54, 49, 32, 45, 49, 50, 53, 32, 45, 49, 52, 55, 81, 45, 49, 51, 53, 32, 45, 49, 52, 49, 32, 45, 49, 52, 49, 32, 45, 49, 51, 49, 84, 45, 49, 52, 55, 32, 45, 49, 48, 57, 81, 45, 49, 52, 54, 32, 45, 49, 48, 55, 32, 45, 49, 52, 52, 32, 45, 57, 52, 76, 45, 49, 50, 52, 32, 45, 49, 48, 81, 45, 49, 51, 55, 32, 45, 49, 56, 32, 45, 49, 54, 48, 32, 45, 49, 56, 81, 45, 49, 55, 51, 32, 45, 49, 56, 32, 45, 49, 56, 50, 32, 45, 49, 52, 84, 45, 50, 48, 48, 32, 49, 81, 45, 50, 49, 54, 32, 49, 56, 32, 45, 50, 49, 54, 32, 52, 56, 81, 45, 50, 49, 54, 32, 54, 52, 32, 45, 50, 49, 50, 32, 55, 52, 84, 45, 49, 57, 57, 32, 57, 51, 81, 45, 49, 56, 52, 32, 49, 49, 49, 32, 45, 49, 53, 51, 32, 49, 49, 49, 81, 45, 49, 50, 52, 32, 49, 49, 49, 10, 45, 57, 51, 32, 56, 54, 76, 45, 53, 57, 32, 50, 48, 51, 72, 52, 76, 45, 52, 50, 32, 52, 53, 76, 45, 52, 32, 55, 54, 76, 50, 56, 32, 57, 54, 81, 52, 53, 32, 49, 48, 52, 32, 53, 57, 32, 49, 48, 55, 84, 57, 48, 32, 49, 49, 49, 81, 49, 49, 52, 32, 49, 49, 49, 32, 49, 49, 52, 32, 57, 48, 76, 49, 49, 51, 32, 56, 48, 76, 49, 49, 48, 32, 54, 56, 76, 49, 48, 55, 32, 53, 54, 81, 49, 51, 56, 32, 49, 49, 49, 32, 49, 55, 55, 32, 49, 49, 49, 81, 49, 57, 52, 32, 49, 49, 49, 32, 50, 48, 53, 32, 57, 55, 84, 50, 49, 54, 32, 54, 52, 81, 50, 49, 54, 32, 52, 56, 32, 50, 48, 56, 32, 51, 56, 84, 49, 56, 53, 32, 50, 55, 81, 49, 55, 55, 32, 50, 55, 32, 49, 55, 49, 32, 51, 50, 84, 49, 54, 50, 32, 53, 50, 76, 49, 54, 53, 32, 54, 54, 76, 49, 54, 55, 32, 55, 55, 76, 49, 54, 56, 32, 56, 54, 76, 49, 54, 52, 32, 57, 48, 81, 49, 54, 50, 32, 56, 57, 32, 49, 54, 49, 32, 56, 57, 81, 49, 53, 50, 32, 56, 52, 32, 49, 52, 53, 32, 55, 57, 84, 49, 51, 51, 32, 54, 57, 81, 49, 50, 51, 32, 53, 56, 10, 49, 49, 52, 32, 52, 49, 76, 49, 48, 50, 32, 49, 52, 76, 57, 48, 32, 45, 50, 48, 76, 53, 53, 32, 45, 49, 52, 51, 72, 45, 53, 90, 77, 45, 53, 52, 32, 54, 76, 45, 57, 48, 32, 45, 49, 48, 57, 76, 45, 57, 49, 32, 45, 49, 49, 57, 81, 45, 57, 49, 32, 45, 49, 51, 52, 32, 45, 55, 53, 32, 45, 49, 51, 56, 81, 45, 50, 55, 32, 45, 49, 49, 49, 32, 45, 50, 55, 32, 45, 54, 51, 81, 45, 50, 55, 32, 45, 51, 51, 32, 45, 53, 52, 32, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 117, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 117, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 57, 50, 34, 32, 100, 61, 34, 77, 45, 49, 54, 49, 32, 49, 51, 52, 72, 49, 54, 49, 86, 45, 49, 51, 51, 72, 49, 48, 57, 86, 53, 56, 72, 45, 49, 48, 57, 86, 45, 49, 51, 51, 72, 45, 49, 54, 49, 86, 49, 51, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 118, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 118, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 57, 55, 34, 32, 100, 61, 34, 77, 55, 57, 32, 51, 53, 49, 81, 54, 51, 32, 51, 51, 56, 32, 52, 55, 32, 51, 51, 56, 76, 52, 49, 32, 51, 51, 57, 76, 51, 53, 32, 51, 52, 48, 76, 49, 56, 32, 51, 52, 52, 81, 49, 50, 32, 51, 52, 52, 32, 49, 50, 32, 51, 51, 51, 81, 49, 50, 32, 51, 50, 56, 32, 56, 32, 51, 50, 55, 76, 52, 32, 51, 51, 48, 76, 50, 32, 51, 51, 50, 76, 49, 32, 51, 52, 51, 76, 50, 32, 51, 53, 49, 76, 55, 32, 51, 53, 57, 81, 49, 50, 32, 51, 54, 56, 32, 50, 51, 32, 51, 54, 56, 72, 50, 57, 72, 51, 51, 76, 51, 55, 32, 51, 54, 55, 76, 52, 51, 32, 51, 54, 51, 76, 53, 51, 32, 51, 53, 56, 76, 54, 54, 32, 51, 53, 52, 81, 55, 51, 32, 51, 53, 52, 32, 55, 57, 32, 51, 53, 56, 76, 56, 48, 32, 51, 54, 49, 76, 56, 52, 32, 51, 55, 50, 81, 56, 56, 32, 51, 56, 51, 32, 57, 53, 10, 51, 56, 53, 81, 49, 48, 48, 32, 51, 56, 48, 32, 49, 48, 48, 32, 51, 55, 55, 76, 57, 56, 32, 51, 54, 56, 81, 57, 48, 32, 51, 53, 55, 32, 56, 54, 32, 51, 52, 56, 84, 55, 50, 32, 51, 49, 52, 76, 54, 51, 32, 50, 55, 56, 76, 54, 48, 32, 50, 52, 52, 76, 54, 49, 32, 50, 50, 57, 76, 54, 53, 32, 50, 49, 53, 81, 55, 51, 32, 50, 48, 48, 32, 56, 57, 32, 50, 48, 48, 81, 49, 48, 54, 32, 50, 48, 48, 32, 49, 50, 51, 32, 50, 49, 55, 84, 49, 53, 53, 32, 50, 55, 56, 76, 49, 53, 57, 32, 51, 48, 50, 76, 49, 54, 49, 32, 51, 50, 54, 76, 49, 53, 56, 32, 51, 52, 50, 76, 49, 53, 55, 32, 51, 54, 50, 76, 49, 53, 57, 32, 51, 55, 56, 81, 49, 54, 50, 32, 51, 56, 52, 32, 49, 55, 48, 32, 51, 56, 53, 81, 49, 55, 55, 32, 51, 56, 53, 32, 49, 56, 50, 32, 51, 55, 54, 81, 49, 56, 51, 32, 51, 55, 51, 32, 49, 56, 52, 32, 51, 54, 55, 84, 49, 56, 55, 32, 51, 53, 51, 76, 49, 56, 53, 32, 51, 50, 57, 76, 49, 56, 51, 32, 51, 49, 56, 76, 49, 56, 48, 32, 51, 48, 55, 81, 49, 55, 52, 32, 50, 56, 48, 10, 49, 54, 53, 32, 50, 54, 49, 84, 49, 51, 56, 32, 50, 50, 49, 81, 49, 50, 55, 32, 50, 48, 54, 32, 49, 49, 48, 32, 49, 57, 55, 84, 55, 52, 32, 49, 56, 56, 81, 53, 51, 32, 49, 56, 56, 32, 52, 49, 32, 50, 48, 48, 84, 50, 56, 32, 50, 51, 52, 81, 50, 56, 32, 50, 53, 48, 32, 52, 52, 32, 50, 56, 51, 76, 55, 57, 32, 51, 53, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 119, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 119, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 49, 50, 34, 32, 100, 61, 34, 77, 51, 51, 52, 32, 51, 57, 76, 50, 56, 53, 32, 56, 50, 81, 50, 55, 54, 32, 56, 57, 32, 50, 54, 57, 32, 57, 48, 81, 50, 54, 51, 32, 56, 56, 32, 50, 54, 49, 32, 56, 54, 76, 49, 57, 52, 32, 55, 81, 49, 56, 54, 32, 45, 49, 32, 49, 56, 48, 32, 45, 49, 81, 49, 55, 55, 32, 45, 49, 32, 49, 55, 48, 32, 52, 76, 56, 50, 32, 56, 50, 81, 55, 52, 32, 56, 57, 32, 54, 53, 32, 57, 48, 81, 53, 56, 32, 56, 56, 32, 53, 55, 32, 56, 54, 76, 48, 32, 49, 56, 86, 54, 55, 76, 49, 48, 56, 32, 49, 57, 52, 76, 49, 49, 56, 32, 49, 57, 56, 81, 49, 49, 57, 32, 49, 57, 56, 32, 49, 50, 50, 32, 49, 57, 55, 84, 49, 51, 52, 32, 49, 57, 48, 76, 50, 50, 50, 32, 49, 49, 50, 76, 50, 51, 50, 32, 49, 48, 55, 81, 50, 51, 56, 32, 49, 48, 55, 32, 50, 52, 54, 32, 49, 49, 53, 76, 51, 49, 51, 10, 49, 57, 52, 81, 51, 49, 56, 32, 49, 57, 56, 32, 51, 50, 49, 32, 49, 57, 56, 81, 51, 51, 49, 32, 49, 57, 53, 32, 51, 51, 52, 32, 49, 57, 50, 86, 50, 51, 56, 72, 51, 54, 55, 86, 49, 54, 52, 76, 52, 50, 54, 32, 49, 49, 50, 76, 52, 51, 55, 32, 49, 48, 55, 76, 52, 52, 51, 32, 49, 48, 56, 76, 52, 53, 48, 32, 49, 49, 53, 76, 53, 49, 55, 32, 49, 57, 52, 81, 53, 50, 50, 32, 49, 57, 56, 32, 53, 50, 52, 32, 49, 57, 56, 81, 53, 51, 48, 32, 49, 57, 54, 32, 53, 51, 50, 32, 49, 57, 52, 76, 53, 51, 57, 32, 49, 56, 56, 76, 54, 50, 56, 32, 49, 49, 49, 81, 54, 51, 51, 32, 49, 48, 54, 32, 54, 51, 57, 32, 49, 48, 54, 81, 54, 52, 53, 32, 49, 48, 54, 32, 54, 53, 50, 32, 49, 49, 52, 76, 55, 49, 48, 32, 49, 56, 49, 86, 49, 51, 52, 76, 54, 48, 49, 32, 55, 81, 53, 57, 55, 32, 50, 32, 53, 57, 52, 32, 49, 84, 53, 56, 56, 32, 45, 49, 81, 53, 56, 48, 32, 50, 32, 53, 55, 56, 32, 52, 76, 52, 56, 57, 32, 56, 50, 81, 52, 56, 50, 32, 56, 57, 32, 52, 55, 50, 32, 57, 48, 81, 52, 54, 54, 10, 56, 56, 32, 52, 54, 52, 32, 56, 54, 76, 51, 57, 56, 32, 55, 81, 51, 57, 51, 32, 45, 49, 32, 51, 56, 53, 32, 45, 49, 76, 51, 55, 52, 32, 52, 76, 51, 54, 55, 32, 49, 48, 86, 45, 53, 50, 72, 51, 51, 52, 86, 51, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 120, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 56, 56, 34, 32, 100, 61, 34, 77, 54, 54, 32, 53, 81, 49, 48, 51, 32, 53, 32, 49, 51, 55, 32, 56, 53, 81, 49, 53, 51, 32, 49, 50, 48, 32, 49, 54, 48, 32, 49, 52, 56, 84, 49, 54, 55, 32, 49, 57, 55, 81, 49, 54, 55, 32, 50, 49, 56, 32, 49, 54, 50, 32, 50, 50, 52, 81, 49, 53, 54, 32, 50, 51, 56, 32, 49, 51, 55, 32, 50, 51, 56, 81, 49, 48, 52, 32, 50, 51, 56, 32, 54, 56, 32, 49, 55, 48, 84, 51, 50, 32, 52, 57, 81, 51, 50, 32, 53, 32, 54, 54, 32, 53, 90, 77, 50, 51, 55, 32, 56, 55, 76, 50, 52, 54, 32, 56, 49, 81, 50, 52, 48, 32, 53, 54, 32, 50, 50, 52, 32, 50, 57, 81, 50, 48, 50, 32, 45, 52, 32, 49, 55, 51, 32, 45, 55, 81, 49, 53, 53, 32, 45, 55, 32, 49, 52, 54, 32, 54, 81, 49, 52, 50, 32, 49, 50, 32, 49, 52, 48, 32, 49, 57, 84, 49, 51, 56, 32, 51, 55, 81, 49, 51, 56, 10, 53, 55, 32, 49, 52, 50, 32, 55, 51, 81, 49, 52, 51, 32, 55, 57, 32, 49, 52, 53, 32, 56, 49, 81, 49, 51, 51, 32, 53, 52, 32, 49, 50, 51, 32, 51, 56, 84, 49, 48, 52, 32, 49, 50, 81, 56, 52, 32, 45, 55, 32, 53, 51, 32, 45, 55, 81, 51, 48, 32, 45, 55, 32, 49, 52, 32, 57, 81, 52, 32, 49, 57, 32, 45, 49, 32, 51, 50, 84, 45, 54, 32, 54, 53, 81, 45, 54, 32, 49, 50, 57, 32, 52, 49, 32, 49, 57, 48, 84, 49, 51, 49, 32, 50, 53, 49, 81, 49, 54, 48, 32, 50, 53, 49, 32, 49, 55, 53, 32, 50, 49, 57, 76, 50, 48, 55, 32, 51, 53, 49, 76, 50, 48, 57, 32, 51, 54, 51, 81, 50, 48, 57, 32, 51, 55, 55, 32, 49, 56, 56, 32, 51, 55, 55, 76, 49, 55, 50, 32, 51, 55, 54, 76, 49, 55, 52, 32, 51, 56, 57, 76, 50, 54, 50, 32, 52, 48, 48, 76, 49, 57, 55, 32, 49, 53, 55, 76, 49, 56, 48, 32, 56, 52, 81, 49, 55, 51, 32, 53, 50, 32, 49, 55, 51, 32, 51, 49, 81, 49, 55, 51, 32, 49, 48, 32, 49, 56, 51, 32, 49, 48, 81, 49, 57, 49, 32, 49, 48, 32, 50, 48, 51, 32, 50, 53, 84, 50, 51, 55, 32, 56, 55, 90, 77, 51, 50, 56, 10, 49, 48, 54, 81, 51, 53, 51, 32, 49, 49, 55, 32, 51, 54, 56, 32, 49, 50, 55, 84, 52, 48, 49, 32, 49, 53, 54, 81, 52, 51, 50, 32, 49, 56, 55, 32, 52, 51, 50, 32, 50, 49, 55, 81, 52, 51, 50, 32, 50, 50, 54, 32, 52, 50, 54, 32, 50, 51, 50, 81, 52, 50, 49, 32, 50, 52, 48, 32, 52, 49, 51, 32, 50, 52, 48, 81, 51, 56, 55, 32, 50, 52, 48, 32, 51, 53, 57, 32, 49, 57, 49, 81, 51, 51, 55, 32, 49, 53, 50, 32, 51, 50, 56, 32, 49, 48, 54, 90, 77, 52, 50, 54, 32, 55, 51, 76, 52, 51, 54, 32, 54, 57, 81, 52, 49, 49, 32, 50, 55, 32, 51, 56, 55, 32, 49, 48, 84, 51, 51, 53, 32, 45, 56, 81, 51, 48, 51, 32, 45, 56, 32, 50, 57, 48, 32, 49, 49, 84, 50, 55, 54, 32, 54, 49, 81, 50, 55, 54, 32, 49, 50, 53, 32, 51, 50, 51, 32, 49, 56, 55, 84, 52, 50, 49, 32, 50, 53, 48, 81, 52, 51, 54, 32, 50, 53, 48, 32, 52, 52, 55, 32, 50, 52, 48, 84, 52, 54, 48, 32, 50, 49, 48, 81, 52, 54, 48, 32, 49, 55, 48, 32, 52, 49, 55, 32, 49, 51, 57, 81, 51, 57, 53, 32, 49, 50, 51, 32, 51, 55, 53, 10, 49, 49, 51, 84, 51, 50, 52, 32, 57, 51, 81, 51, 50, 48, 32, 55, 53, 32, 51, 49, 56, 32, 55, 50, 81, 51, 49, 54, 32, 54, 51, 32, 51, 49, 53, 32, 53, 54, 84, 51, 49, 52, 32, 52, 48, 81, 51, 49, 52, 32, 50, 52, 32, 51, 50, 49, 32, 49, 54, 81, 51, 50, 55, 32, 54, 32, 51, 52, 54, 32, 54, 81, 51, 54, 55, 32, 54, 32, 51, 56, 57, 32, 50, 53, 84, 52, 50, 54, 32, 55, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 121, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 121, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 54, 49, 34, 32, 100, 61, 34, 77, 50, 50, 50, 32, 49, 49, 48, 55, 86, 49, 49, 50, 51, 81, 50, 52, 49, 32, 49, 49, 52, 52, 32, 50, 53, 56, 32, 49, 49, 53, 56, 84, 50, 57, 53, 32, 49, 49, 55, 50, 81, 51, 48, 57, 32, 49, 49, 55, 50, 32, 51, 50, 49, 32, 49, 49, 54, 51, 76, 51, 51, 52, 32, 49, 49, 53, 50, 76, 51, 52, 57, 32, 49, 49, 51, 55, 76, 51, 54, 52, 32, 49, 49, 50, 50, 76, 51, 55, 55, 32, 49, 49, 49, 48, 81, 51, 56, 57, 32, 49, 49, 48, 49, 32, 52, 48, 52, 32, 49, 49, 48, 49, 81, 52, 50, 48, 32, 49, 49, 48, 51, 32, 52, 51, 49, 32, 49, 49, 49, 49, 76, 52, 52, 52, 32, 49, 49, 50, 49, 76, 52, 54, 48, 32, 49, 49, 51, 54, 81, 52, 55, 53, 32, 49, 49, 53, 52, 32, 52, 57, 48, 32, 49, 49, 54, 51, 81, 53, 48, 50, 32, 49, 49, 55, 50, 32, 53, 49, 55, 32, 49, 49, 55, 50, 81, 53, 51, 51, 10, 49, 49, 55, 50, 32, 53, 52, 52, 32, 49, 49, 54, 52, 84, 53, 55, 52, 32, 49, 49, 51, 54, 81, 53, 56, 52, 32, 49, 49, 50, 53, 32, 53, 56, 56, 32, 49, 49, 50, 49, 84, 54, 48, 49, 32, 49, 49, 49, 49, 81, 54, 49, 51, 32, 49, 49, 48, 50, 32, 54, 50, 54, 32, 49, 49, 48, 50, 81, 54, 51, 52, 32, 49, 49, 48, 50, 32, 54, 54, 54, 32, 49, 49, 50, 51, 86, 49, 49, 48, 55, 81, 54, 52, 51, 32, 49, 48, 56, 50, 32, 54, 50, 56, 32, 49, 48, 55, 48, 84, 53, 57, 49, 32, 49, 48, 53, 56, 81, 53, 55, 54, 32, 49, 48, 53, 56, 32, 53, 54, 53, 32, 49, 48, 54, 54, 81, 53, 54, 50, 32, 49, 48, 54, 57, 32, 53, 53, 52, 32, 49, 48, 55, 55, 84, 53, 51, 55, 32, 49, 48, 57, 51, 81, 53, 50, 49, 32, 49, 49, 49, 49, 32, 53, 49, 48, 32, 49, 49, 49, 57, 84, 52, 56, 50, 32, 49, 49, 50, 56, 81, 52, 55, 52, 32, 49, 49, 50, 56, 32, 52, 54, 50, 32, 49, 49, 50, 48, 84, 52, 51, 53, 32, 49, 48, 57, 55, 76, 52, 49, 49, 32, 49, 48, 55, 55, 81, 51, 56, 49, 32, 49, 48, 53, 56, 32, 51, 55, 48, 32, 49, 48, 53, 56, 81, 51, 53, 51, 10, 49, 48, 53, 56, 32, 51, 51, 51, 32, 49, 48, 55, 53, 76, 50, 57, 55, 32, 49, 49, 49, 48, 76, 50, 55, 57, 32, 49, 49, 50, 51, 81, 50, 55, 49, 32, 49, 49, 50, 56, 32, 50, 54, 51, 32, 49, 49, 50, 56, 81, 50, 53, 52, 32, 49, 49, 50, 56, 32, 50, 52, 55, 32, 49, 49, 50, 52, 76, 50, 50, 50, 32, 49, 49, 48, 55, 90, 77, 48, 32, 49, 49, 48, 55, 86, 49, 49, 49, 57, 81, 49, 52, 32, 49, 49, 51, 52, 32, 50, 48, 32, 49, 49, 52, 49, 81, 51, 51, 32, 49, 49, 53, 53, 32, 51, 56, 32, 49, 49, 53, 57, 81, 53, 53, 32, 49, 49, 55, 50, 32, 55, 51, 32, 49, 49, 55, 50, 81, 56, 56, 32, 49, 49, 55, 50, 32, 49, 48, 48, 32, 49, 49, 54, 51, 76, 49, 49, 51, 32, 49, 49, 53, 50, 76, 49, 50, 56, 32, 49, 49, 51, 55, 76, 49, 52, 50, 32, 49, 49, 50, 50, 76, 49, 53, 54, 32, 49, 49, 49, 48, 81, 49, 54, 56, 32, 49, 49, 48, 49, 32, 49, 56, 51, 32, 49, 49, 48, 49, 81, 49, 57, 56, 32, 49, 49, 48, 50, 32, 50, 48, 57, 32, 49, 49, 49, 49, 76, 50, 50, 50, 32, 49, 49, 50, 49, 76, 50, 51, 56, 32, 49, 49, 51, 54, 81, 50, 53, 53, 10, 49, 49, 53, 52, 32, 50, 54, 55, 32, 49, 49, 54, 51, 84, 50, 57, 54, 32, 49, 49, 55, 50, 81, 51, 49, 50, 32, 49, 49, 55, 50, 32, 51, 50, 53, 32, 49, 49, 54, 51, 84, 51, 53, 51, 32, 49, 49, 51, 54, 81, 51, 53, 56, 32, 49, 49, 51, 48, 32, 51, 54, 51, 32, 49, 49, 50, 53, 81, 51, 55, 50, 32, 49, 49, 49, 54, 32, 51, 56, 48, 32, 49, 49, 49, 49, 81, 51, 57, 49, 32, 49, 49, 48, 50, 32, 52, 48, 53, 32, 49, 49, 48, 50, 81, 52, 49, 50, 32, 49, 49, 48, 50, 32, 52, 52, 53, 32, 49, 49, 50, 51, 86, 49, 49, 48, 55, 76, 52, 48, 53, 32, 49, 48, 54, 57, 81, 51, 57, 49, 32, 49, 48, 53, 56, 32, 51, 54, 57, 32, 49, 48, 53, 56, 81, 51, 53, 53, 32, 49, 48, 53, 56, 32, 51, 52, 52, 32, 49, 48, 54, 54, 81, 51, 52, 48, 32, 49, 48, 54, 56, 32, 51, 51, 50, 32, 49, 48, 55, 54, 84, 51, 49, 54, 32, 49, 48, 57, 51, 81, 51, 48, 48, 32, 49, 49, 49, 49, 32, 50, 56, 56, 32, 49, 49, 49, 57, 84, 50, 54, 48, 32, 49, 49, 50, 56, 81, 50, 53, 50, 32, 49, 49, 50, 56, 32, 50, 52, 49, 32, 49, 49, 49, 57, 81, 50, 50, 56, 10, 49, 49, 49, 49, 32, 50, 49, 52, 32, 49, 48, 57, 55, 76, 49, 57, 48, 32, 49, 48, 55, 55, 81, 49, 54, 48, 32, 49, 48, 53, 56, 32, 49, 52, 57, 32, 49, 48, 53, 56, 81, 49, 51, 49, 32, 49, 48, 53, 56, 32, 49, 49, 50, 32, 49, 48, 55, 53, 76, 55, 54, 32, 49, 49, 49, 48, 76, 53, 56, 32, 49, 49, 50, 51, 81, 52, 56, 32, 49, 49, 50, 56, 32, 52, 49, 32, 49, 49, 50, 56, 81, 51, 51, 32, 49, 49, 50, 56, 32, 50, 54, 32, 49, 49, 50, 52, 76, 48, 32, 49, 49, 48, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 122, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 122, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 57, 34, 32, 100, 61, 34, 77, 45, 50, 52, 57, 32, 50, 52, 57, 72, 45, 54, 48, 86, 50, 49, 55, 76, 45, 50, 55, 49, 32, 53, 52, 81, 45, 50, 53, 50, 32, 54, 51, 32, 45, 50, 51, 50, 32, 54, 51, 81, 45, 50, 49, 57, 32, 54, 51, 32, 45, 49, 57, 56, 32, 53, 52, 84, 45, 49, 54, 57, 32, 52, 51, 81, 45, 49, 53, 53, 32, 52, 53, 32, 45, 49, 53, 53, 32, 54, 50, 81, 45, 49, 55, 52, 32, 54, 50, 32, 45, 49, 55, 55, 32, 56, 53, 81, 45, 49, 55, 55, 32, 57, 56, 32, 45, 49, 54, 56, 32, 49, 48, 54, 81, 45, 49, 54, 48, 32, 49, 49, 53, 32, 45, 49, 52, 55, 32, 49, 49, 53, 81, 45, 49, 51, 51, 32, 49, 49, 53, 32, 45, 49, 50, 51, 32, 49, 48, 49, 81, 45, 49, 49, 51, 32, 57, 48, 32, 45, 49, 49, 51, 32, 54, 55, 81, 45, 49, 49, 51, 32, 51, 51, 32, 45, 49, 51, 55, 32, 57, 81, 45, 49, 53, 57, 10, 45, 49, 54, 32, 45, 50, 49, 48, 32, 45, 49, 54, 81, 45, 50, 50, 56, 32, 45, 49, 54, 32, 45, 50, 51, 55, 32, 45, 49, 50, 76, 45, 50, 52, 57, 32, 45, 54, 76, 45, 50, 54, 54, 32, 52, 81, 45, 50, 56, 56, 32, 49, 52, 32, 45, 50, 57, 53, 32, 49, 52, 81, 45, 51, 48, 56, 32, 49, 52, 32, 45, 51, 50, 53, 32, 48, 72, 45, 51, 53, 54, 86, 49, 54, 76, 45, 49, 52, 55, 32, 49, 57, 51, 76, 45, 50, 49, 49, 32, 49, 57, 50, 81, 45, 50, 50, 53, 32, 49, 57, 49, 32, 45, 50, 51, 53, 32, 49, 56, 52, 81, 45, 50, 51, 57, 32, 49, 56, 49, 32, 45, 50, 52, 52, 32, 49, 55, 53, 84, 45, 50, 53, 53, 32, 49, 54, 50, 72, 45, 50, 55, 57, 76, 45, 50, 52, 57, 32, 50, 52, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 123, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 114, 97, 99, 101, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 53, 53, 34, 32, 100, 61, 34, 77, 45, 55, 52, 32, 50, 50, 48, 72, 45, 49, 53, 55, 81, 45, 49, 55, 48, 32, 49, 51, 55, 32, 45, 49, 57, 56, 32, 52, 51, 84, 45, 50, 52, 57, 32, 45, 57, 56, 84, 45, 50, 57, 57, 32, 45, 49, 55, 56, 81, 45, 51, 50, 51, 32, 45, 50, 49, 48, 32, 45, 51, 54, 50, 32, 45, 50, 50, 49, 76, 45, 51, 56, 49, 32, 45, 50, 50, 51, 81, 45, 52, 49, 51, 32, 45, 50, 50, 51, 32, 45, 52, 50, 57, 32, 45, 49, 57, 55, 81, 45, 52, 51, 53, 32, 45, 49, 56, 57, 32, 45, 52, 51, 56, 32, 45, 49, 56, 50, 84, 45, 52, 52, 52, 32, 45, 49, 54, 53, 84, 45, 52, 52, 55, 32, 45, 49, 51, 54, 81, 45, 52, 52, 55, 32, 45, 49, 48, 56, 32, 45, 52, 51, 53, 32, 45, 57, 52, 84, 45, 52, 48, 51, 32, 45, 54, 57, 81, 45, 51, 57, 53, 32, 45, 54, 57, 32, 45, 51, 56, 57, 10, 45, 55, 50, 84, 45, 51, 55, 54, 32, 45, 56, 52, 81, 45, 51, 54, 53, 32, 45, 57, 56, 32, 45, 51, 54, 53, 32, 45, 49, 49, 56, 81, 45, 51, 54, 53, 32, 45, 49, 52, 48, 32, 45, 51, 57, 55, 32, 45, 49, 56, 51, 81, 45, 51, 57, 55, 32, 45, 49, 57, 48, 32, 45, 51, 56, 56, 32, 45, 49, 57, 48, 81, 45, 51, 51, 55, 32, 45, 49, 57, 48, 32, 45, 51, 48, 54, 32, 45, 53, 49, 76, 45, 50, 57, 57, 32, 45, 50, 50, 76, 45, 50, 56, 54, 32, 51, 56, 76, 45, 50, 54, 52, 32, 49, 52, 48, 76, 45, 50, 52, 55, 32, 50, 50, 48, 72, 45, 52, 48, 56, 81, 45, 52, 50, 48, 32, 49, 52, 48, 32, 45, 52, 53, 49, 32, 52, 48, 81, 45, 52, 54, 57, 32, 45, 49, 57, 32, 45, 52, 55, 55, 32, 45, 52, 48, 81, 45, 52, 56, 57, 32, 45, 55, 50, 32, 45, 53, 48, 50, 32, 45, 57, 56, 81, 45, 53, 53, 49, 32, 45, 50, 48, 54, 32, 45, 54, 49, 50, 32, 45, 50, 50, 49, 76, 45, 54, 51, 48, 32, 45, 50, 50, 51, 81, 45, 54, 54, 50, 32, 45, 50, 50, 51, 32, 45, 54, 55, 57, 32, 45, 49, 57, 55, 81, 45, 54, 56, 55, 32, 45, 49, 56, 56, 10, 45, 54, 57, 52, 32, 45, 49, 54, 57, 81, 45, 54, 57, 53, 32, 45, 49, 54, 49, 32, 45, 54, 57, 54, 32, 45, 49, 53, 52, 84, 45, 54, 57, 56, 32, 45, 49, 51, 54, 81, 45, 54, 57, 54, 32, 45, 49, 49, 57, 32, 45, 54, 57, 52, 32, 45, 49, 48, 57, 84, 45, 54, 56, 53, 32, 45, 57, 48, 81, 45, 54, 55, 53, 32, 45, 55, 55, 32, 45, 54, 53, 50, 32, 45, 54, 57, 81, 45, 54, 51, 54, 32, 45, 54, 57, 32, 45, 54, 50, 54, 32, 45, 56, 52, 84, 45, 54, 49, 53, 32, 45, 49, 49, 56, 81, 45, 54, 49, 53, 32, 45, 49, 50, 57, 32, 45, 54, 49, 55, 32, 45, 49, 51, 52, 84, 45, 54, 50, 48, 32, 45, 49, 52, 49, 76, 45, 54, 51, 52, 32, 45, 49, 54, 52, 76, 45, 54, 52, 57, 32, 45, 49, 56, 51, 81, 45, 54, 52, 57, 32, 45, 49, 57, 48, 32, 45, 54, 51, 57, 32, 45, 49, 57, 48, 81, 45, 54, 50, 50, 32, 45, 49, 57, 48, 32, 45, 54, 48, 56, 32, 45, 49, 55, 53, 81, 45, 54, 48, 51, 32, 45, 49, 55, 48, 32, 45, 53, 57, 55, 32, 45, 49, 54, 49, 84, 45, 53, 56, 53, 32, 45, 49, 52, 48, 76, 45, 53, 55, 49, 32, 45, 49, 48, 52, 76, 45, 53, 53, 54, 10, 45, 53, 49, 76, 45, 53, 51, 55, 32, 51, 53, 76, 45, 53, 49, 53, 32, 49, 52, 48, 76, 45, 52, 57, 56, 32, 50, 50, 48, 72, 45, 53, 53, 53, 86, 50, 53, 56, 72, 45, 52, 56, 53, 81, 45, 52, 55, 49, 32, 51, 48, 53, 32, 45, 52, 52, 55, 32, 51, 52, 54, 84, 45, 51, 56, 50, 32, 52, 49, 55, 81, 45, 51, 52, 53, 32, 52, 52, 50, 32, 45, 50, 57, 57, 32, 52, 52, 50, 81, 45, 50, 55, 54, 32, 52, 52, 50, 32, 45, 50, 54, 51, 32, 52, 50, 51, 84, 45, 50, 53, 48, 32, 51, 55, 54, 81, 45, 50, 53, 48, 32, 51, 52, 56, 32, 45, 50, 54, 51, 32, 51, 50, 54, 84, 45, 51, 48, 49, 32, 51, 48, 48, 81, 45, 51, 50, 54, 32, 51, 48, 48, 32, 45, 51, 50, 57, 32, 51, 51, 50, 81, 45, 51, 50, 57, 32, 51, 52, 57, 32, 45, 51, 49, 57, 32, 51, 54, 57, 81, 45, 51, 48, 57, 32, 51, 56, 54, 32, 45, 50, 57, 50, 32, 51, 57, 52, 81, 45, 50, 56, 55, 32, 51, 57, 56, 32, 45, 50, 56, 55, 32, 52, 48, 48, 81, 45, 50, 57, 50, 32, 52, 48, 55, 32, 45, 50, 57, 52, 32, 52, 48, 57, 81, 45, 51, 48, 49, 32, 52, 49, 52, 10, 45, 51, 49, 50, 32, 52, 49, 52, 81, 45, 51, 52, 53, 32, 52, 49, 52, 32, 45, 51, 54, 54, 32, 51, 54, 55, 84, 45, 51, 57, 57, 32, 50, 54, 48, 72, 45, 50, 51, 53, 81, 45, 50, 49, 53, 32, 51, 51, 52, 32, 45, 49, 54, 53, 32, 51, 56, 56, 84, 45, 52, 57, 32, 52, 52, 50, 81, 45, 51, 55, 32, 52, 52, 50, 32, 45, 50, 56, 32, 52, 51, 56, 84, 45, 49, 51, 32, 52, 50, 50, 81, 45, 57, 32, 52, 49, 55, 32, 45, 53, 32, 52, 48, 53, 84, 48, 32, 51, 55, 54, 81, 48, 32, 51, 52, 56, 32, 45, 49, 51, 32, 51, 50, 55, 84, 45, 53, 48, 32, 51, 48, 48, 81, 45, 55, 55, 32, 51, 48, 48, 32, 45, 56, 48, 32, 51, 51, 50, 81, 45, 56, 48, 32, 51, 52, 49, 32, 45, 55, 55, 32, 51, 53, 48, 84, 45, 54, 57, 32, 51, 54, 56, 84, 45, 53, 56, 32, 51, 56, 51, 84, 45, 52, 51, 32, 51, 57, 52, 81, 45, 51, 56, 32, 51, 57, 56, 32, 45, 51, 56, 32, 52, 48, 48, 76, 45, 52, 52, 32, 52, 48, 57, 81, 45, 53, 49, 32, 52, 49, 52, 32, 45, 54, 49, 32, 52, 49, 52, 81, 45, 49, 49, 55, 32, 52, 49, 52, 32, 45, 49, 52, 57, 10, 50, 53, 56, 72, 45, 55, 52, 86, 50, 50, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 124, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 97, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 56, 34, 32, 100, 61, 34, 77, 45, 52, 48, 55, 32, 50, 50, 48, 81, 45, 52, 50, 48, 32, 49, 51, 55, 32, 45, 52, 52, 56, 32, 52, 51, 84, 45, 53, 48, 48, 32, 45, 57, 56, 81, 45, 53, 49, 48, 32, 45, 49, 50, 48, 32, 45, 53, 50, 49, 32, 45, 49, 51, 57, 84, 45, 53, 52, 57, 32, 45, 49, 55, 56, 81, 45, 53, 55, 51, 32, 45, 50, 49, 48, 32, 45, 54, 49, 50, 32, 45, 50, 50, 49, 76, 45, 54, 51, 49, 32, 45, 50, 50, 51, 81, 45, 54, 54, 51, 32, 45, 50, 50, 51, 32, 45, 54, 55, 57, 32, 45, 49, 57, 55, 81, 45, 54, 56, 53, 32, 45, 49, 56, 56, 32, 45, 54, 56, 56, 32, 45, 49, 56, 49, 84, 45, 54, 57, 52, 32, 45, 49, 54, 53, 84, 45, 54, 57, 55, 32, 45, 49, 51, 54, 81, 45, 54, 57, 55, 32, 45, 49, 48, 56, 32, 45, 54, 56, 53, 32, 45, 57, 52, 84, 45, 54, 53, 51, 32, 45, 54, 57, 81, 45, 54, 52, 53, 10, 45, 54, 57, 32, 45, 54, 51, 57, 32, 45, 55, 50, 84, 45, 54, 50, 54, 32, 45, 56, 52, 81, 45, 54, 49, 53, 32, 45, 57, 56, 32, 45, 54, 49, 53, 32, 45, 49, 49, 56, 81, 45, 54, 49, 53, 32, 45, 49, 52, 48, 32, 45, 54, 52, 55, 32, 45, 49, 56, 51, 81, 45, 54, 52, 55, 32, 45, 49, 57, 48, 32, 45, 54, 51, 56, 32, 45, 49, 57, 48, 81, 45, 53, 56, 57, 32, 45, 49, 57, 48, 32, 45, 53, 53, 54, 32, 45, 53, 49, 76, 45, 53, 52, 57, 32, 45, 50, 50, 76, 45, 53, 51, 54, 32, 51, 56, 76, 45, 53, 49, 52, 32, 49, 52, 48, 76, 45, 52, 57, 55, 32, 50, 50, 48, 72, 45, 54, 53, 56, 81, 45, 54, 55, 48, 32, 49, 52, 48, 32, 45, 55, 48, 49, 32, 52, 48, 81, 45, 55, 49, 57, 32, 45, 49, 57, 32, 45, 55, 50, 55, 32, 45, 52, 48, 81, 45, 55, 51, 57, 32, 45, 55, 50, 32, 45, 55, 53, 50, 32, 45, 57, 56, 81, 45, 56, 48, 49, 32, 45, 50, 48, 54, 32, 45, 56, 54, 50, 32, 45, 50, 50, 49, 76, 45, 56, 56, 49, 32, 45, 50, 50, 51, 81, 45, 57, 49, 51, 32, 45, 50, 50, 51, 32, 45, 57, 50, 57, 32, 45, 49, 57, 55, 81, 45, 57, 51, 55, 10, 45, 49, 56, 56, 32, 45, 57, 52, 52, 32, 45, 49, 54, 57, 81, 45, 57, 52, 53, 32, 45, 49, 54, 49, 32, 45, 57, 52, 54, 32, 45, 49, 53, 52, 84, 45, 57, 52, 56, 32, 45, 49, 51, 54, 81, 45, 57, 52, 54, 32, 45, 49, 49, 57, 32, 45, 57, 52, 52, 32, 45, 49, 48, 57, 84, 45, 57, 51, 53, 32, 45, 57, 48, 81, 45, 57, 50, 53, 32, 45, 55, 55, 32, 45, 57, 48, 50, 32, 45, 54, 57, 81, 45, 56, 56, 55, 32, 45, 54, 57, 32, 45, 56, 55, 54, 32, 45, 56, 52, 84, 45, 56, 54, 53, 32, 45, 49, 49, 56, 81, 45, 56, 54, 53, 32, 45, 49, 51, 48, 32, 45, 56, 54, 57]).concat([32, 45, 49, 51, 56, 84, 45, 56, 55, 53, 32, 45, 49, 53, 48, 84, 45, 56, 56, 52, 32, 45, 49, 54, 52, 76, 45, 56, 57, 57, 32, 45, 49, 56, 51, 81, 45, 56, 57, 57, 32, 45, 49, 57, 48, 32, 45, 56, 56, 57, 32, 45, 49, 57, 48, 81, 45, 56, 55, 50, 32, 45, 49, 57, 48, 32, 45, 56, 53, 57, 32, 45, 49, 55, 55, 84, 45, 56, 51, 53, 32, 45, 49, 52, 48, 76, 45, 56, 50, 49, 32, 45, 49, 48, 52, 76, 45, 56, 48, 54, 32, 45, 53, 49, 76, 45, 55, 56, 55, 10, 51, 53, 76, 45, 55, 54, 54, 32, 49, 52, 48, 76, 45, 55, 52, 56, 32, 50, 50, 48, 72, 45, 56, 48, 53, 86, 50, 53, 56, 72, 45, 55, 51, 54, 81, 45, 55, 50, 48, 32, 51, 48, 55, 32, 45, 54, 57, 54, 32, 51, 52, 55, 84, 45, 54, 51, 50, 32, 52, 49, 55, 81, 45, 53, 57, 53, 32, 52, 52, 50, 32, 45, 53, 52, 57, 32, 52, 52, 50, 81, 45, 53, 50, 54, 32, 52, 52, 50, 32, 45, 53, 49, 51, 32, 52, 50, 51, 84, 45, 53, 48, 48, 32, 51, 55, 54, 81, 45, 53, 48, 48, 32, 51, 52, 56, 32, 45, 53, 49, 52, 32, 51, 50, 53, 81, 45, 53, 50, 57, 32, 51, 48, 52, 32, 45, 53, 53, 49, 32, 51, 48, 48, 81, 45, 53, 55, 57, 32, 51, 48, 48, 32, 45, 53, 55, 57, 32, 51, 51, 50, 81, 45, 53, 55, 57, 32, 51, 52, 57, 32, 45, 53, 54, 57, 32, 51, 54, 57, 81, 45, 53, 53, 56, 32, 51, 56, 55, 32, 45, 53, 52, 50, 32, 51, 57, 52, 81, 45, 53, 51, 55, 32, 51, 57, 56, 32, 45, 53, 51, 55, 32, 52, 48, 48, 81, 45, 53, 52, 50, 32, 52, 48, 55, 32, 45, 53, 52, 52, 32, 52, 48, 57, 81, 45, 53, 53, 49, 32, 52, 49, 52, 10, 45, 53, 54, 50, 32, 52, 49, 52, 81, 45, 53, 57, 53, 32, 52, 49, 52, 32, 45, 54, 49, 54, 32, 51, 54, 55, 84, 45, 54, 52, 57, 32, 50, 54, 48, 72, 45, 52, 56, 53, 81, 45, 52, 54, 53, 32, 51, 51, 52, 32, 45, 52, 49, 53, 32, 51, 56, 56, 84, 45, 50, 57, 57, 32, 52, 52, 50, 81, 45, 50, 56, 55, 32, 52, 52, 50, 32, 45, 50, 55, 56, 32, 52, 51, 56, 84, 45, 50, 54, 51, 32, 52, 50, 50, 81, 45, 50, 53, 57, 32, 52, 49, 55, 32, 45, 50, 53, 53, 32, 52, 48, 53, 84, 45, 50, 53, 48, 32, 51, 55, 54, 81, 45, 50, 53, 48, 32, 51, 52, 56, 32, 45, 50, 54, 51, 32, 51, 50, 55, 84, 45, 51, 48, 48, 32, 51, 48, 48, 81, 45, 51, 50, 55, 32, 51, 48, 48, 32, 45, 51, 51, 48, 32, 51, 51, 50, 81, 45, 51, 51, 48, 32, 51, 52, 49, 32, 45, 51, 50, 55, 32, 51, 53, 48, 84, 45, 51, 49, 57, 32, 51, 54, 57, 81, 45, 51, 48, 57, 32, 51, 56, 54, 32, 45, 50, 57, 51, 32, 51, 57, 52, 81, 45, 50, 56, 56, 32, 51, 57, 56, 32, 45, 50, 56, 56, 32, 52, 48, 48, 76, 45, 50, 57, 52, 32, 52, 48, 57, 81, 45, 51, 48, 50, 10, 52, 49, 52, 32, 45, 51, 49, 49, 32, 52, 49, 52, 81, 45, 51, 54, 57, 32, 52, 49, 52, 32, 45, 51, 57, 57, 32, 50, 53, 56, 72, 45, 50, 51, 53, 81, 45, 50, 49, 51, 32, 51, 51, 50, 32, 45, 49, 54, 51, 32, 51, 57, 48, 81, 45, 49, 49, 54, 32, 52, 52, 52, 32, 45, 52, 57, 32, 52, 52, 52, 81, 45, 51, 53, 32, 52, 52, 52, 32, 45, 50, 56, 32, 52, 51, 56, 81, 45, 50, 48, 32, 52, 51, 52, 32, 45, 49, 50, 32, 52, 50, 49, 81, 48, 32, 52, 48, 49, 32, 48, 32, 51, 55, 52, 81, 48, 32, 51, 52, 53, 32, 45, 49, 53, 32, 51, 50, 53, 81, 45, 50, 54, 32, 51, 48, 53, 32, 45, 53, 49, 32, 51, 48, 48, 81, 45, 55, 53, 32, 51, 48, 48, 32, 45, 55, 56, 32, 51, 51, 50, 81, 45, 55, 56, 32, 51, 52, 57, 32, 45, 54, 56, 32, 51, 54, 55, 84, 45, 52, 51, 32, 51, 57, 52, 81, 45, 51, 55, 32, 51, 57, 52, 32, 45, 51, 55, 32, 52, 48, 48, 81, 45, 52, 49, 32, 52, 48, 55, 32, 45, 52, 52, 32, 52, 48, 57, 81, 45, 53, 49, 32, 52, 49, 52, 32, 45, 54, 49, 32, 52, 49, 52, 81, 45, 49, 49, 55, 32, 52, 49, 52, 10, 45, 49, 52, 57, 32, 50, 53, 56, 72, 45, 55, 51, 86, 50, 50, 48, 72, 45, 49, 53, 56, 81, 45, 49, 54, 56, 32, 49, 53, 52, 32, 45, 49, 56, 52, 32, 57, 57, 81, 45, 50, 48, 48, 32, 51, 51, 32, 45, 50, 49, 55, 32, 45, 49, 54, 84, 45, 50, 53, 48, 32, 45, 57, 56, 81, 45, 50, 54, 50, 32, 45, 49, 50, 48, 32, 45, 50, 55, 52, 32, 45, 49, 52, 48, 84, 45, 51, 48, 48, 32, 45, 49, 55, 55, 81, 45, 51, 50, 52, 32, 45, 50, 48, 57, 32, 45, 51, 54, 49, 32, 45, 50, 50, 49, 76, 45, 51, 55, 57, 32, 45, 50, 50, 51, 81, 45, 52, 49, 50, 32, 45, 50, 50, 51, 32, 45, 52, 50, 56, 32, 45, 49, 57, 56, 81, 45, 52, 51, 54, 32, 45, 49, 56, 55, 32, 45, 52, 52, 49, 32, 45, 49, 54, 57, 81, 45, 52, 52, 55, 32, 45, 49, 53, 52, 32, 45, 52, 52, 55, 32, 45, 49, 51, 54, 81, 45, 52, 52, 52, 32, 45, 49, 48, 56, 32, 45, 52, 51, 52, 32, 45, 57, 50, 84, 45, 52, 48, 49, 32, 45, 54, 57, 81, 45, 51, 56, 54, 32, 45, 54, 57, 32, 45, 51, 55, 54, 32, 45, 56, 50, 84, 45, 51, 54, 53, 32, 45, 49, 49, 54, 81, 45, 51, 54, 53, 10, 45, 49, 50, 53, 32, 45, 51, 55, 48, 32, 45, 49, 52, 48, 76, 45, 51, 55, 52, 32, 45, 49, 52, 55, 76, 45, 51, 56, 52, 32, 45, 49, 54, 50, 81, 45, 51, 57, 48, 32, 45, 49, 55, 48, 32, 45, 51, 57, 50, 32, 45, 49, 55, 52, 84, 45, 51, 57, 55, 32, 45, 49, 56, 51, 81, 45, 51, 57, 55, 32, 45, 49, 57, 48, 32, 45, 51, 56, 55, 32, 45, 49, 57, 48, 81, 45, 51, 53, 57, 32, 45, 49, 57, 48, 32, 45, 51, 51, 57, 32, 45, 49, 52, 56, 81, 45, 51, 51, 48, 32, 45, 49, 50, 54, 32, 45, 51, 50, 50, 32, 45, 49, 48, 51, 84, 45, 51, 48, 54, 32, 45, 53, 49, 76, 45, 50, 56, 55, 32, 51, 53, 76, 45, 50, 54, 53, 32, 49, 51, 52, 76, 45, 50, 52, 55, 32, 50, 50, 48, 72, 45, 52, 48, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 125, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 114, 97, 99, 101, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 55, 51, 34, 32, 100, 61, 34, 77, 49, 48, 32, 48, 81, 52, 57, 32, 50, 52, 32, 56, 56, 32, 52, 56, 81, 49, 54, 51, 32, 56, 57, 32, 50, 52, 51, 32, 49, 51, 49, 84, 51, 50, 52, 32, 49, 55, 51, 81, 51, 51, 48, 32, 49, 55, 56, 32, 51, 51, 57, 32, 49, 55, 56, 81, 51, 53, 50, 32, 49, 55, 56, 32, 51, 54, 50, 32, 49, 54, 55, 84, 51, 55, 50, 32, 49, 52, 50, 81, 51, 55, 50, 32, 49, 51, 49, 32, 51, 54, 52, 32, 49, 50, 52, 81, 51, 49, 57, 32, 49, 48, 55, 32, 50, 55, 52, 32, 57, 48, 81, 49, 52, 53, 32, 52, 50, 32, 49, 48, 54, 32, 50, 56, 81, 49, 52, 32, 45, 52, 32, 49, 48, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 126, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 115, 99, 105, 105, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 48, 50, 34, 32, 100, 61, 34, 77, 49, 48, 50, 32, 51, 52, 53, 72, 48, 86, 51, 55, 53, 72, 55, 49, 86, 53, 52, 50, 72, 49, 48, 50, 86, 51, 52, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 127, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 68, 69, 76, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 56, 49, 34, 32, 100, 61, 34, 77, 49, 53, 56, 32, 49, 52, 57, 76, 49, 49, 54, 32, 49, 52, 51, 81, 49, 51, 48, 32, 49, 54, 50, 32, 49, 54, 52, 32, 49, 55, 56, 76, 49, 56, 48, 32, 49, 56, 57, 86, 49, 52, 56, 76, 49, 53, 56, 32, 49, 52, 57, 90, 77, 50, 49, 57, 32, 52, 52, 48, 81, 50, 51, 57, 32, 52, 49, 55, 32, 50, 51, 57, 32, 51, 55, 52, 81, 50, 51, 57, 32, 51, 52, 53, 32, 50, 50, 51, 32, 51, 48, 53, 76, 50, 48, 53, 32, 50, 55, 49, 86, 52, 53, 49, 76, 50, 49, 57, 32, 52, 52, 48, 90, 77, 49, 56, 48, 32, 53, 48, 53, 81, 49, 52, 48, 32, 53, 48, 53, 32, 49, 48, 50, 32, 52, 56, 56, 84, 51, 55, 32, 52, 51, 56, 84, 49, 48, 32, 51, 54, 57, 81, 49, 48, 32, 51, 50, 52, 32, 51, 49, 32, 51, 48, 48, 81, 53, 49, 32, 50, 55, 52, 32, 55, 55, 32, 50, 55, 52, 81, 57, 49, 10, 50, 55, 56, 32, 49, 48, 52, 32, 50, 56, 53, 84, 49, 50, 56, 32, 51, 48, 49, 81, 49, 52, 57, 32, 51, 49, 57, 32, 49, 52, 57, 32, 51, 53, 48, 81, 49, 52, 57, 32, 51, 54, 53, 32, 49, 52, 50, 32, 51, 55, 54, 76, 49, 49, 57, 32, 51, 57, 56, 76, 57, 53, 32, 52, 49, 54, 81, 56, 57, 32, 52, 50, 55, 32, 56, 55, 32, 52, 51, 52, 81, 57, 49, 32, 52, 53, 48, 32, 49, 48, 54, 32, 52, 53, 53, 84, 49, 51, 50, 32, 52, 54, 50, 84, 49, 53, 53, 32, 52, 54, 52, 81, 49, 55, 50, 32, 52, 54, 52, 32, 49, 56, 48, 32, 52, 54, 50, 86, 50, 52, 50, 76, 49, 53, 54, 32, 50, 50, 50, 76, 49, 49, 54, 32, 49, 57, 49, 81, 49, 48, 55, 32, 49, 56, 54, 32, 57, 55, 32, 49, 55, 56, 81, 56, 50, 32, 49, 54, 53, 32, 55, 52, 32, 49, 53, 57, 76, 52, 57, 32, 49, 51, 57, 81, 51, 57, 32, 49, 51, 48, 32, 51, 50, 32, 49, 50, 49, 84, 49, 53, 32, 57, 54, 81, 45, 54, 32, 54, 52, 32, 45, 51, 32, 51, 49, 76, 45, 49, 32, 50, 72, 51, 51, 81, 51, 56, 32, 51, 51, 32, 53, 51, 32, 52, 55, 81, 53, 56, 32, 53, 51, 10, 54, 56, 32, 53, 57, 84, 56, 57, 32, 54, 54, 81, 57, 54, 32, 54, 54, 32, 49, 48, 53, 32, 54, 52, 84, 49, 50, 56, 32, 53, 52, 76, 49, 54, 56, 32, 50, 53, 76, 49, 56, 48, 32, 49, 54, 86, 45, 54, 57, 72, 50, 48, 53, 86, 48, 76, 50, 49, 48, 32, 45, 50, 81, 50, 51, 49, 32, 45, 49, 49, 32, 50, 51, 54, 32, 45, 49, 50, 84, 50, 53, 50, 32, 45, 49, 52, 81, 50, 57, 54, 32, 45, 49, 52, 32, 51, 50, 55, 32, 51, 48, 81, 51, 52, 49, 32, 53, 48, 32, 51, 52, 56, 32, 56, 54, 84, 51, 53, 53, 32, 49, 54, 57, 72, 51, 50, 53, 81, 51, 49, 52, 32, 49, 48, 55, 32, 50, 56, 56, 32, 49, 48, 55, 81, 50, 56, 52, 32, 49, 48, 55, 32, 50, 55, 50, 32, 49, 49, 51, 84, 50, 53, 51, 32, 49, 50, 50, 81, 50, 50, 56, 32, 49, 51, 54, 32, 50, 48, 53, 32, 49, 52, 51, 86, 50, 48, 50, 76, 50, 52, 55, 32, 50, 50, 50, 81, 50, 55, 48, 32, 50, 51, 52, 32, 50, 56, 52, 32, 50, 52, 52, 84, 51, 49, 56, 32, 50, 55, 53, 81, 51, 52, 54, 32, 51, 48, 57, 32, 51, 52, 54, 32, 51, 53, 52, 81, 51, 52, 54, 32, 52, 50, 54, 10, 51, 48, 49, 32, 52, 54, 56, 81, 50, 54, 50, 32, 53, 48, 53, 32, 50, 48, 53, 32, 53, 48, 53, 86, 53, 54, 52, 72, 49, 56, 48, 86, 53, 48, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 56, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 50, 56, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 54, 48, 34, 32, 100, 61, 34, 77, 49, 57, 54, 32, 50, 48, 56, 81, 50, 48, 57, 32, 49, 57, 56, 32, 50, 49, 56, 32, 49, 55, 50, 84, 50, 50, 56, 32, 49, 49, 54, 81, 50, 50, 56, 32, 49, 48, 56, 32, 50, 50, 56, 32, 57, 56, 84, 50, 49, 57, 32, 55, 51, 84, 49, 57, 56, 32, 52, 57, 84, 49, 55, 52, 32, 51, 53, 86, 50, 50, 53, 81, 49, 56, 50, 32, 50, 50, 49, 32, 49, 56, 54, 32, 50, 49, 55, 84, 49, 57, 54, 32, 50, 48, 56, 90, 77, 49, 57, 56, 32, 52, 52, 51, 81, 50, 50, 50, 32, 52, 49, 54, 32, 50, 50, 50, 32, 51, 55, 55, 81, 50, 50, 50, 32, 51, 50, 50, 32, 49, 57, 51, 32, 50, 57, 57, 76, 49, 55, 52, 32, 50, 56, 55, 86, 52, 54, 49, 81, 49, 56, 56, 32, 52, 53, 53, 32, 49, 57, 56, 32, 52, 52, 51, 90, 77, 49, 52, 56, 32, 53, 48, 54, 81, 49, 48, 48, 10, 53, 48, 50, 32, 53, 55, 32, 52, 55, 51, 81, 57, 32, 52, 52, 48, 32, 57, 32, 51, 56, 54, 81, 57, 32, 51, 53, 49, 32, 50, 55, 32, 51, 51, 48, 81, 51, 53, 32, 51, 50, 49, 32, 52, 55, 32, 51, 49, 53, 84, 55, 49, 32, 51, 48, 56, 81, 56, 55, 32, 51, 49, 48, 32, 57, 54, 32, 51, 49, 52, 84, 49, 49, 54, 32, 51, 50, 55, 81, 49, 50, 55, 32, 51, 52, 48, 32, 49, 51, 48, 32, 51, 52, 55, 81, 49, 51, 55, 32, 51, 53, 56, 32, 49, 51, 55, 32, 51, 55, 50, 81, 49, 51, 55, 32, 51, 57, 57, 32, 49, 50, 57, 32, 52, 49, 48, 84, 49, 48, 57, 32, 52, 51, 49, 81, 49, 48, 52, 32, 52, 51, 52, 32, 57, 57, 32, 52, 52, 48, 81, 57, 56, 32, 52, 52, 49, 32, 57, 54, 32, 52, 52, 52, 81, 49, 48, 57, 32, 52, 54, 56, 32, 49, 52, 51, 32, 52, 54, 56, 72, 49, 52, 56, 86, 50, 55, 57, 81, 49, 51, 56, 32, 50, 55, 55, 32, 49, 50, 56, 32, 50, 55, 54, 84, 49, 48, 50, 32, 50, 55, 53, 86, 50, 51, 57, 81, 49, 50, 54, 32, 50, 51, 57, 32, 49, 52, 56, 32, 50, 51, 52, 86, 50, 57, 72, 49, 52, 51, 81, 49, 49, 56, 10, 50, 57, 32, 49, 49, 48, 32, 53, 53, 81, 49, 49, 48, 32, 54, 52, 32, 49, 50, 50, 32, 56, 50, 81, 49, 51, 49, 32, 57, 54, 32, 49, 51, 49, 32, 49, 49, 54, 81, 49, 51, 49, 32, 49, 52, 52, 32, 49, 49, 53, 32, 49, 54, 52, 84, 54, 54, 32, 49, 56, 53, 76, 54, 51, 32, 49, 56, 54, 76, 54, 49, 32, 49, 56, 57, 81, 51, 52, 32, 49, 56, 57, 32, 49, 56, 32, 49, 54, 51, 84, 49, 32, 49, 48, 51, 81, 49, 32, 56, 49, 32, 57, 32, 54, 55, 84, 50, 52, 32, 52, 52, 84, 52, 48, 32, 50, 56, 81, 53, 57, 32, 49, 50, 32, 56, 55, 32, 49, 81, 49, 49, 52, 32, 45, 56, 32, 49, 52, 55, 32, 45, 56, 76, 49, 52, 56, 32, 45, 54, 49, 72, 49, 55, 52, 86, 45, 55, 76, 49, 57, 51, 32, 45, 52, 76, 50, 51, 57, 32, 56, 81, 50, 56, 51, 32, 50, 54, 32, 51, 49, 48, 32, 53, 57, 84, 51, 51, 55, 32, 49, 51, 57, 81, 51, 51, 55, 32, 49, 55, 49, 32, 51, 50, 52, 32, 49, 57, 53, 84, 50, 56, 51, 32, 50, 51, 55, 81, 50, 54, 56, 32, 50, 52, 53, 32, 50, 53, 52, 32, 50, 53, 49, 84, 50, 50, 51, 32, 50, 53, 57, 81, 51, 51, 49, 10, 50, 55, 57, 32, 51, 51, 49, 32, 51, 56, 54, 81, 51, 51, 49, 32, 52, 49, 51, 32, 51, 49, 57, 32, 52, 51, 51, 84, 50, 56, 48, 32, 52, 55, 51, 81, 50, 53, 53, 32, 52, 56, 57, 32, 50, 51, 48, 32, 52, 57, 56, 84, 49, 55, 52, 32, 53, 48, 55, 86, 53, 55, 51, 72, 49, 52, 56, 86, 53, 48, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 56, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 50, 57, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 50, 54, 34, 32, 100, 61, 34, 77, 49, 57, 51, 32, 52, 54, 48, 81, 49, 50, 57, 32, 52, 50, 54, 32, 49, 50, 57, 32, 51, 49, 54, 86, 49, 57, 53, 81, 49, 50, 57, 32, 49, 51, 54, 32, 49, 52, 56, 32, 57, 57, 81, 49, 54, 53, 32, 54, 50, 32, 49, 57, 51, 32, 53, 48, 86, 52, 54, 48, 90, 77, 49, 57, 49, 32, 53, 56, 48, 72, 50, 50, 51, 86, 53, 49, 51, 81, 50, 55, 52, 32, 53, 49, 51, 32, 51, 50, 48, 32, 52, 57, 54, 84, 51, 57, 53, 32, 52, 52, 51, 84, 52, 50, 52, 32, 51, 53, 56, 81, 52, 50, 52, 32, 51, 51, 52, 32, 52, 49, 49, 32, 51, 49, 52, 81, 51, 57, 54, 32, 50, 57, 52, 32, 51, 55, 57, 32, 50, 56, 53, 76, 51, 53, 56, 32, 50, 55, 54, 76, 51, 51, 53, 32, 50, 55, 51, 81, 51, 48, 50, 32, 50, 55, 54, 32, 50, 55, 57, 32, 50, 57, 53, 81, 50, 53, 57, 10, 51, 49, 54, 32, 50, 53, 50, 32, 51, 52, 55, 81, 50, 53, 50, 32, 51, 55, 54, 32, 50, 55, 57, 32, 52, 48, 48, 84, 51, 51, 51, 32, 52, 50, 56, 81, 51, 53, 50, 32, 52, 50, 56, 32, 51, 53, 50, 32, 52, 51, 57, 81, 51, 53, 50, 32, 52, 52, 56, 32, 51, 51, 55, 32, 52, 53, 55, 81, 51, 50, 50, 32, 52, 54, 56, 32, 51, 48, 49, 32, 52, 55, 53, 84, 50, 53, 54, 32, 52, 56, 50, 81, 50, 52, 49, 32, 52, 56, 50, 32, 50, 50, 51, 32, 52, 55, 54, 86, 51, 55, 81, 50, 51, 51, 32, 51, 53, 32, 50, 51, 55, 32, 51, 52, 84, 50, 53, 52, 32, 51, 51, 81, 50, 57, 49, 32, 51, 51, 32, 51, 50, 52, 32, 54, 48, 84, 51, 55, 55, 32, 49, 50, 55, 76, 51, 57, 53, 32, 49, 54, 55, 81, 52, 48, 48, 32, 49, 56, 55, 32, 52, 48, 48, 32, 50, 48, 51, 72, 52, 50, 54, 81, 52, 49, 55, 32, 57, 54, 32, 51, 53, 57, 32, 52, 56, 84, 50, 50, 51, 32, 48, 86, 45, 54, 57, 72, 49, 57, 51, 86, 52, 81, 49, 50, 48, 32, 49, 55, 32, 54, 50, 32, 56, 49, 81, 52, 55, 32, 57, 55, 32, 51, 55, 32, 49, 49, 53, 84, 49, 55, 10, 49, 53, 56, 81, 49, 32, 50, 48, 51, 32, 49, 32, 50, 53, 54, 81, 49, 32, 51, 52, 55, 32, 53, 50, 32, 52, 49, 54, 84, 49, 57, 49, 32, 53, 48, 55, 86, 53, 56, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 56, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 52, 49, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 50, 50, 34, 32, 100, 61, 34, 77, 52, 50, 50, 32, 50, 52, 51, 81, 52, 50, 50, 32, 49, 56, 53, 32, 51, 56, 57, 32, 49, 50, 54, 81, 51, 55, 51, 32, 57, 55, 32, 51, 53, 50, 32, 55, 53, 84, 51, 48, 51, 32, 51, 53, 81, 50, 52, 56, 32, 48, 32, 49, 56, 55, 32, 48, 81, 49, 53, 48, 32, 48, 32, 49, 48, 50, 32, 50, 48, 81, 56, 48, 32, 50, 57, 32, 54, 51, 32, 52, 49, 84, 50, 56, 32, 55, 50, 81, 48, 32, 49, 48, 56, 32, 48, 32, 49, 53, 49, 81, 48, 32, 49, 57, 48, 32, 50, 53, 32, 50, 49, 54, 81, 52, 48, 32, 50, 50, 56, 32, 53, 52, 32, 50, 51, 52, 84, 56, 57, 32, 50, 52, 49, 81, 49, 49, 56, 32, 50, 52, 49, 32, 49, 52, 49, 32, 50, 50, 51, 81, 49, 54, 49, 32, 50, 48, 53, 32, 49, 54, 55, 32, 49, 55, 49, 81, 49, 54, 55, 32, 49, 53, 52, 32, 49, 54, 51, 10, 49, 52, 51, 84, 49, 52, 54, 32, 49, 49, 57, 81, 49, 50, 55, 32, 57, 54, 32, 57, 54, 32, 56, 56, 76, 56, 54, 32, 56, 54, 81, 55, 56, 32, 56, 52, 32, 55, 53, 32, 56, 49, 84, 55, 50, 32, 55, 53, 81, 55, 57, 32, 53, 54, 32, 49, 48, 56, 32, 52, 52, 84, 49, 54, 51, 32, 51, 50, 81, 49, 57, 53, 32, 51, 50, 32, 50, 50, 50, 32, 52, 57, 84, 50, 54, 54, 32, 57, 50, 81, 50, 57, 50, 32, 49, 51, 54, 32, 50, 57, 50, 32, 50, 52, 55, 81, 50, 57, 50, 32, 51, 52, 56, 32, 50, 56, 52, 32, 51, 56, 54, 81, 50, 55, 55, 32, 52, 49, 48, 32, 50, 54, 56, 32, 52, 50, 54, 84, 50, 52, 51, 32, 52, 53, 53, 81, 50, 49, 50, 32, 52, 56, 49, 32, 49, 55, 48, 32, 52, 56, 49, 81, 49, 51, 54, 32, 52, 56, 49, 32, 49, 48, 53, 32, 52, 54, 49, 84, 53, 50, 32, 52, 48, 51, 84, 50, 51, 32, 51, 49, 51, 72, 45, 53, 81, 45, 53, 32, 51, 53, 53, 32, 49, 48, 32, 51, 57, 48, 84, 53, 53, 32, 52, 53, 56, 81, 49, 49, 48, 32, 53, 49, 54, 32, 49, 57, 57, 32, 53, 49, 54, 81, 50, 54, 56, 32, 53, 49, 54, 32, 51, 49, 56, 10, 52, 55, 54, 81, 51, 52, 52, 32, 52, 53, 54, 32, 51, 54, 51, 32, 52, 51, 49, 84, 51, 57, 53, 32, 51, 55, 50, 81, 52, 50, 50, 32, 51, 48, 57, 32, 52, 50, 50, 32, 50, 52, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 56, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 52, 50, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 49, 34, 32, 100, 61, 34, 77, 49, 56, 49, 32, 45, 49, 54, 57, 76, 49, 48, 54, 32, 45, 49, 48, 51, 81, 57, 49, 32, 45, 56, 57, 32, 55, 54, 32, 45, 55, 54, 81, 53, 52, 32, 45, 53, 53, 32, 52, 55, 32, 45, 52, 55, 81, 54, 32, 45, 50, 32, 54, 32, 51, 56, 76, 49, 48, 32, 54, 50, 81, 49, 55, 32, 56, 55, 32, 51, 52, 32, 57, 56, 81, 52, 48, 32, 49, 48, 51, 32, 53, 48, 32, 49, 48, 54, 84, 55, 49, 32, 49, 48, 57, 81, 57, 56, 32, 49, 48, 57, 32, 49, 51, 55, 32, 57, 50, 76, 49, 54, 56, 32, 55, 54, 86, 52, 50, 48, 72, 49, 56, 49, 86, 45, 49, 54, 57, 90, 77, 49, 54, 56, 32, 45, 49, 50, 51, 86, 53, 52, 81, 49, 52, 57, 32, 55, 48, 32, 49, 51, 51, 32, 55, 53, 81, 49, 49, 56, 32, 56, 50, 32, 49, 48, 52, 32, 56, 50, 76, 57, 49, 32, 56, 48, 76, 56, 51, 10, 55, 54, 81, 54, 53, 32, 53, 53, 32, 54, 53, 32, 50, 57, 81, 54, 53, 32, 45, 56, 32, 49, 48, 48, 32, 45, 53, 52, 81, 49, 50, 55, 32, 45, 57, 48, 32, 49, 54, 56, 32, 45, 49, 50, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 56, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 52, 51, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 55, 55, 34, 32, 100, 61, 34, 77, 49, 56, 55, 32, 53, 57, 56, 76, 50, 53, 51, 32, 53, 54, 48, 86, 55, 48, 54, 76, 49, 56, 55, 32, 55, 52, 51, 86, 53, 57, 56, 90, 77, 50, 56, 50, 32, 55, 48, 48, 86, 53, 53, 50, 76, 51, 50, 48, 32, 53, 50, 55, 81, 51, 52, 52, 32, 53, 51, 52, 32, 51, 54, 50, 32, 53, 53, 52, 84, 51, 56, 48, 32, 53, 57, 57, 81, 51, 56, 48, 32, 54, 49, 57, 32, 51, 55, 48, 32, 54, 51, 55, 84, 51, 52, 54, 32, 54, 54, 50, 76, 50, 56, 50, 32, 55, 48, 48, 90, 77, 49, 53, 57, 32, 51, 51, 54, 86, 52, 56, 53, 76, 49, 50, 50, 32, 53, 48, 55, 81, 49, 49, 49, 32, 53, 48, 55, 32, 49, 48, 50, 32, 53, 48, 51, 84, 56, 51, 32, 52, 56, 56, 81, 54, 49, 32, 52, 54, 56, 32, 54, 49, 32, 52, 53, 49, 81, 54, 49, 32, 52, 50, 53, 32, 55, 50, 10, 52, 48, 53, 84, 49, 48, 48, 32, 51, 55, 51, 76, 49, 53, 57, 32, 51, 51, 54, 90, 77, 49, 56, 55, 32, 51, 51, 48, 76, 50, 53, 51, 32, 50, 57, 52, 86, 52, 51, 56, 76, 49, 56, 55, 32, 52, 55, 53, 86, 51, 51, 48, 90, 77, 50, 56, 50, 32, 52, 51, 49, 86, 50, 56, 53, 76, 51, 50, 48, 32, 50, 54, 48, 81, 51, 52, 54, 32, 50, 54, 52, 32, 51, 54, 51, 32, 50, 56, 51, 84, 51, 56, 48, 32, 51, 50, 56, 81, 51, 56, 48, 32, 51, 55, 49, 32, 51, 52, 52, 32, 51, 57, 53, 76, 50, 56, 50, 32, 52, 51, 49, 90, 77, 49, 53, 57, 32, 56, 55, 57, 86, 57, 49, 55, 72, 49, 56, 55, 86, 56, 54, 52, 76, 50, 53, 51, 32, 56, 50, 57, 86, 57, 49, 55, 72, 50, 56, 50, 86, 56, 49, 56, 81, 51, 51, 50, 32, 55, 57, 55, 32, 51, 54, 48, 32, 55, 55, 55, 81, 51, 57, 51, 32, 55, 53, 55, 32, 52, 49, 54, 32, 55, 50, 53, 81, 52, 50, 55, 32, 55, 49, 49, 32, 52, 51, 52, 32, 54, 57, 51, 84, 52, 52, 50, 32, 54, 53, 49, 81, 52, 52, 50, 32, 54, 51, 54, 32, 52, 51, 55, 32, 54, 50, 50, 76, 52, 51, 49, 32, 54, 48, 54, 81, 52, 50, 52, 10, 53, 56, 54, 32, 52, 49, 51, 32, 53, 55, 50, 81, 52, 48, 57, 32, 53, 54, 53, 32, 52, 48, 50, 32, 53, 53, 55, 84, 51, 56, 55, 32, 53, 52, 48, 76, 51, 53, 54, 32, 53, 48, 56, 81, 51, 56, 57, 32, 52, 57, 48, 32, 52, 48, 55, 32, 52, 54, 57, 81, 52, 50, 54, 32, 52, 53, 48, 32, 52, 51, 50, 32, 52, 50, 55, 81, 52, 52, 50, 32, 52, 48, 55, 32, 52, 52, 50, 32, 51, 55, 49, 81, 52, 52, 50, 32, 50, 56, 55, 32, 51, 53, 54, 32, 50, 52, 48, 81, 51, 57, 55, 32, 50, 49, 50, 32, 52, 50, 51, 32, 49, 56, 49, 84, 52, 53, 48, 32, 49, 48, 55, 81, 52, 53, 48, 32, 56, 48, 32, 52, 52, 51, 32, 53, 55, 84, 52, 50, 48, 32, 49, 50, 81, 51, 57, 49, 32, 45, 51, 49, 32, 51, 52, 51, 32, 45, 53, 53, 81, 51, 49, 56, 32, 45, 54, 54, 32, 50, 57, 51, 32, 45, 55, 50, 84, 50, 52, 52, 32, 45, 55, 57, 81, 50, 49, 57, 32, 45, 55, 57, 32, 50, 48, 48, 32, 45, 55, 54, 84, 49, 52, 57, 32, 45, 54, 51, 81, 49, 48, 51, 32, 45, 53, 48, 32, 55, 52, 32, 45, 50, 52, 84, 52, 52, 32, 51, 51, 76, 52, 54, 10, 52, 54, 81, 53, 52, 32, 56, 51, 32, 56, 56, 32, 56, 51, 72, 49, 48, 49, 81, 49, 50, 51, 32, 56, 48, 32, 49, 53, 53, 32, 51, 57, 81, 49, 56, 52, 32, 50, 32, 50, 48, 53, 32, 45, 49, 56, 81, 50, 49, 48, 32, 45, 50, 50, 32, 50, 49, 54, 32, 45, 50, 54, 84, 50, 51, 51, 32, 45, 51, 51, 84, 50, 53, 48, 32, 45, 51, 56, 84, 50, 54, 54, 32, 45, 51, 57, 81, 50, 57, 55, 32, 45, 51, 57, 32, 51, 50, 48, 32, 45, 50, 54, 84, 51, 53, 55, 32, 54, 81, 51, 54, 57, 32, 50, 54, 32, 51, 54, 57, 32, 52, 54, 76, 51, 54, 54, 32, 54, 56, 81, 51, 54, 53, 32, 56, 48, 32, 51, 53, 55, 32, 57, 49, 81, 51, 52, 52, 32, 49, 49, 52, 32, 51, 50, 52, 32, 49, 51, 48, 81, 51, 49, 55, 32, 49, 51, 54, 32, 51, 48, 53, 32, 49, 52, 51, 84, 50, 56, 50, 32, 49, 53, 54, 86, 49, 49, 57, 72, 50, 53, 51, 86, 49, 55, 50, 76, 49, 56, 55, 32, 50, 48, 52, 86, 49, 49, 57, 72, 49, 53, 57, 86, 50, 49, 55, 76, 49, 48, 57, 32, 50, 52, 51, 81, 57, 57, 32, 50, 52, 57, 32, 56, 50, 32, 50, 54, 48, 84, 53, 52, 10, 50, 56, 49, 81, 51, 49, 32, 50, 57, 57, 32, 49, 55, 32, 51, 50, 53, 76, 53, 32, 51, 53, 52, 81, 50, 32, 51, 54, 54, 32, 50, 32, 51, 55, 48, 84, 49, 32, 51, 56, 53, 76, 51, 32, 52, 48, 53, 81, 54, 32, 52, 49, 56, 32, 49, 51, 32, 52, 51, 52, 84, 50, 57, 32, 52, 54, 51, 81, 51, 52, 32, 52, 55, 48, 32, 51, 57, 32, 52, 55, 54, 84, 53, 54, 32, 52, 57, 53, 76, 56, 56, 32, 53, 50, 55, 81, 52, 48, 32, 53, 53, 54, 32, 50, 48, 32, 53, 56, 53, 81, 49, 32, 54, 49, 54, 32, 49, 32, 54, 54, 51, 81, 49, 32, 55, 49, 50, 32, 50, 52, 32, 55, 52, 49, 84, 57, 48, 32, 55, 57, 55, 81, 52, 57, 32, 56, 50, 51, 32, 50, 53, 32, 56, 53, 55, 84, 48, 32, 57, 52, 55, 81, 48, 32, 57, 57, 56, 32, 50, 57, 32, 49, 48, 51, 51, 81, 53, 57, 32, 49, 48, 55, 50, 32, 49, 48, 52, 32, 49, 48, 57, 50, 84, 50, 48, 49, 32, 49, 49, 49, 51, 81, 50, 53, 48, 32, 49, 49, 49, 51, 32, 50, 57, 53, 32, 49, 48, 57, 57, 84, 51, 55, 48, 32, 49, 48, 53, 56, 84, 52, 48, 48, 32, 49, 48, 48, 52, 76, 51, 57, 56, 10, 57, 56, 57, 81, 51, 56, 56, 32, 57, 52, 53, 32, 51, 53, 50, 32, 57, 52, 53, 81, 51, 50, 57, 32, 57, 52, 53, 32, 51, 49, 56, 32, 57, 53, 54, 84, 50, 56, 53, 32, 57, 57, 57, 81, 50, 55, 52, 32, 49, 48, 49, 52, 32, 50, 54, 52, 32, 49, 48, 50, 53, 84, 50, 51, 57, 32, 49, 48, 52, 56, 81, 50, 49, 51, 32, 49, 48, 54, 53, 32, 49, 55, 52, 32, 49, 48, 54, 57, 81, 49, 50, 55, 32, 49, 48, 54, 57, 32, 49, 48, 49, 32, 49, 48, 52, 54, 81, 56, 56, 32, 49, 48, 51, 51, 32, 56, 48, 32, 49, 48, 50, 48, 84, 55, 49, 32, 57, 56, 57, 76, 55, 50, 32, 57, 56, 52, 81, 55, 50, 32, 57, 53, 51, 32, 49, 48, 49, 32, 57, 50, 50, 81, 49, 50, 54, 32, 56, 57, 52, 32, 49, 53, 57, 32, 56, 55, 57, 90, 77, 49, 54, 49, 32, 54, 48, 52, 86, 55, 53, 50, 76, 49, 50, 52, 32, 55, 55, 53, 81, 49, 48, 52, 32, 55, 55, 50, 32, 57, 52, 32, 55, 54, 50, 81, 56, 57, 32, 55, 53, 53, 32, 56, 54, 32, 55, 52, 57, 84, 55, 57, 32, 55, 51, 52, 76, 54, 56, 32, 55, 48, 52, 81, 54, 56, 32, 54, 56, 56, 32, 54, 57, 10, 54, 56, 49, 84, 55, 55, 32, 54, 54, 52, 81, 56, 56, 32, 54, 52, 55, 32, 49, 48, 48, 32, 54, 51, 57, 76, 49, 54, 49, 32, 54, 48, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 57, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 52, 52, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 57, 56, 49, 34, 32, 100, 61, 34, 77, 53, 49, 32, 54, 52, 76, 49, 51, 48, 32, 51, 52, 57, 76, 49, 51, 50, 32, 51, 53, 56, 76, 49, 51, 51, 32, 51, 54, 51, 81, 49, 51, 51, 32, 51, 55, 53, 32, 49, 50, 53, 32, 51, 56, 50, 84, 56, 53, 32, 51, 57, 53, 86, 52, 48, 52, 72, 50, 51, 55, 81, 52, 51, 56, 32, 52, 48, 52, 32, 52, 51, 56, 32, 50, 51, 56, 81, 52, 51, 56, 32, 49, 54, 54, 32, 51, 57, 57, 32, 49, 49, 48, 81, 51, 56, 48, 32, 56, 52, 32, 51, 53, 51, 32, 54, 51, 84, 50, 57, 51, 32, 50, 56, 81, 50, 50, 56, 32, 48, 32, 49, 53, 53, 32, 48, 72, 48, 86, 49, 48, 81, 50, 50, 32, 49, 48, 32, 51, 53, 32, 50, 52, 81, 52, 50, 32, 51, 49, 32, 52, 54, 32, 52, 49, 84, 53, 49, 32, 54, 52, 90, 77, 50, 48, 48, 32, 51, 55, 52, 76, 49, 49, 48, 32, 53, 49, 76, 49, 48, 56, 10, 52, 48, 81, 49, 49, 49, 32, 49, 55, 32, 49, 53, 51, 32, 49, 55, 81, 50, 49, 51, 32, 49, 55, 32, 50, 54, 51, 32, 53, 49, 81, 50, 56, 56, 32, 54, 54, 32, 51, 48, 55, 32, 56, 54, 84, 51, 51, 57, 32, 49, 51, 51, 81, 51, 53, 51, 32, 49, 53, 54, 32, 51, 53, 57, 32, 49, 56, 53, 84, 51, 54, 54, 32, 50, 52, 57, 81, 51, 54, 54, 32, 51, 49, 55, 32, 51, 51, 53, 32, 51, 53, 49, 84, 50, 51, 56, 32, 51, 56, 53, 81, 50, 50, 52, 32, 51, 56, 53, 32, 50, 49, 52, 32, 51, 56, 51, 84, 50, 48, 48, 32, 51, 55, 52, 90, 77, 56, 57, 48, 32, 52, 48, 52, 76, 56, 54, 56, 32, 50, 55, 57, 72, 56, 53, 55, 81, 56, 53, 55, 32, 51, 48, 51, 32, 56, 53, 49, 32, 51, 50, 51, 84, 56, 51, 50, 32, 51, 53, 56, 81, 56, 48, 52, 32, 51, 56, 52, 32, 55, 54, 49, 32, 51, 56, 52, 81, 55, 51, 51, 32, 51, 56, 52, 32, 55, 48, 57, 32, 51, 55, 53, 84, 54, 54, 52, 32, 51, 52, 53, 81, 54, 50, 49, 32, 51, 48, 56, 32, 54, 48, 48, 32, 50, 53, 48, 81, 53, 56, 55, 32, 50, 50, 48, 32, 53, 56, 50, 32, 49, 57, 54, 84, 53, 55, 54, 10, 49, 52, 49, 81, 53, 55, 54, 32, 49, 49, 49, 32, 53, 56, 49, 32, 56, 57, 84, 54, 48, 49, 32, 52, 55, 81, 54, 50, 54, 32, 49, 48, 32, 54, 55, 55, 32, 49, 48, 81, 55, 49, 57, 32, 49, 48, 32, 55, 53, 53, 32, 50, 55, 84, 56, 50, 54, 32, 56, 52, 76, 56, 51, 52, 32, 55, 52, 81, 55, 54, 52, 32, 45, 50, 50, 32, 54, 54, 51, 32, 45, 50, 50, 81, 54, 49, 56, 32, 45, 50, 50, 32, 53, 56, 48, 32, 49, 81, 53, 54, 53, 32, 49, 50, 32, 53, 53, 49, 32, 50, 56, 84, 53, 50, 53, 32, 54, 52, 81, 53, 48, 54, 32, 49, 48, 51, 32, 53, 48, 54, 32, 49, 52, 57, 81, 53, 48, 54, 32, 50, 49, 51, 32, 53, 52, 48, 32, 50, 55, 51, 81, 53, 55, 54, 32, 51, 51, 49, 32, 54, 51, 52, 32, 51, 55, 49, 81, 54, 57, 52, 32, 52, 48, 54, 32, 55, 53, 56, 32, 52, 48, 54, 72, 55, 55, 54, 81, 55, 56, 55, 32, 52, 48, 54, 32, 55, 57, 49, 32, 52, 48, 52, 76, 56, 50, 55, 32, 51, 57, 55, 76, 56, 53, 53, 32, 51, 56, 57, 76, 56, 56, 48, 32, 52, 48, 52, 72, 56, 57, 48, 90, 77, 51, 57, 56, 32, 51, 51, 81, 51, 57, 56, 10, 53, 48, 32, 52, 48, 54, 32, 53, 53, 81, 52, 49, 56, 32, 54, 55, 32, 52, 51, 48, 32, 54, 55, 81, 52, 52, 50, 32, 54, 55, 32, 52, 53, 49, 32, 53, 53, 81, 52, 54, 49, 32, 52, 57, 32, 52, 54, 49, 32, 51, 51, 81, 52, 54, 49, 32, 50, 48, 32, 52, 53, 49, 32, 49, 48, 81, 52, 52, 52, 32, 48, 32, 52, 51, 48, 32, 48, 81, 52, 49, 54, 32, 48, 32, 52, 48, 55, 32, 56, 84, 51, 57, 56, 32, 51, 51, 90, 77, 56, 55, 49, 32, 50, 56, 81, 56, 55, 49, 32, 52, 53, 32, 56, 56, 49, 32, 53, 49, 81, 56, 57, 48, 32, 54, 49, 32, 57, 48, 52, 32, 54, 49, 81, 57, 49, 54, 32, 54, 49, 32, 57, 50, 56, 32, 53, 50, 81, 57, 51, 53, 32, 52, 51, 32, 57, 51, 53, 32, 50, 56, 81, 57, 51, 53, 32, 49, 54, 32, 57, 50, 54, 32, 56, 81, 57, 49, 56, 32, 45, 49, 32, 57, 48, 52, 32, 45, 49, 81, 56, 56, 57, 32, 45, 49, 32, 56, 56, 50, 32, 56, 81, 56, 55, 51, 32, 49, 53, 32, 56, 55, 49, 32, 50, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 57, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 53, 55, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 53, 34, 32, 100, 61, 34, 77, 50, 48, 57, 32, 53, 53, 50, 86, 54, 55, 76, 49, 57, 55, 32, 55, 55, 81, 49, 56, 54, 32, 56, 54, 32, 49, 55, 48, 32, 57, 48, 84, 49, 52, 48, 32, 57, 53, 81, 55, 54, 32, 57, 53, 32, 51, 53, 32, 52, 57, 81, 48, 32, 49, 48, 32, 48, 32, 45, 50, 57, 81, 48, 32, 45, 57, 55, 32, 54, 55, 32, 45, 57, 55, 81, 49, 48, 55, 32, 45, 57, 55, 32, 49, 52, 53, 32, 45, 55, 56, 84, 50, 48, 51, 32, 45, 50, 57, 81, 50, 49, 53, 32, 45, 49, 50, 32, 50, 49, 57, 32, 51, 84, 50, 50, 49, 32, 51, 51, 86, 53, 53, 50, 72, 50, 48, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 57, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 49, 53, 56, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 53, 55, 34, 32, 100, 61, 34, 77, 51, 53, 54, 32, 49, 51, 53, 76, 51, 54, 48, 32, 49, 51, 51, 81, 51, 54, 56, 32, 49, 51, 53, 32, 51, 55, 48, 32, 49, 51, 55, 81, 51, 57, 49, 32, 49, 54, 51, 32, 52, 48, 49, 32, 49, 57, 52, 81, 52, 49, 56, 32, 50, 51, 55, 32, 52, 49, 56, 32, 50, 55, 54, 81, 52, 49, 56, 32, 51, 51, 53, 32, 51, 55, 54, 32, 51, 56, 57, 81, 51, 53, 56, 32, 52, 49, 54, 32, 51, 51, 49, 32, 52, 52, 52, 81, 50, 54, 57, 32, 53, 48, 52, 32, 50, 50, 50, 32, 53, 52, 48, 86, 53, 53, 48, 72, 50, 48, 57, 86, 54, 56, 76, 49, 57, 56, 32, 55, 56, 81, 49, 56, 55, 32, 56, 56, 32, 49, 55, 50, 32, 57, 50, 84, 49, 52, 50, 32, 57, 54, 81, 55, 55, 32, 57, 54, 32, 51, 53, 32, 53, 48, 81, 48, 32, 49, 49, 32, 48, 32, 45, 50, 56, 81, 48, 32, 45, 57, 54, 10, 54, 55, 32, 45, 57, 54, 81, 49, 48, 57, 32, 45, 57, 54, 32, 49, 52, 54, 32, 45, 55, 56, 84, 50, 48, 52, 32, 45, 50, 55, 84, 50, 50, 50, 32, 51, 52, 86, 52, 49, 54, 81, 51, 49, 50, 32, 52, 49, 54, 32, 51, 54, 49, 32, 51, 54, 55, 81, 52, 48, 50, 32, 51, 50, 54, 32, 52, 48, 50, 32, 50, 54, 56, 81, 52, 48, 49, 32, 50, 53, 57, 32, 52, 48, 49, 32, 50, 53, 53, 81, 51, 57, 57, 32, 50, 51, 49, 32, 51, 57, 56, 32, 50, 50, 51, 84, 51, 57, 49, 32, 49, 57, 56, 81, 51, 56, 48, 32, 49, 54, 56, 32, 51, 54, 57, 32, 49, 53, 52, 81, 51, 54, 55, 32, 49, 53, 50, 32, 51, 54, 48, 32, 49, 52, 49, 81, 51, 53, 57, 32, 49, 51, 57, 32, 51, 53, 54, 32, 49, 51, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 110, 98, 115, 112, 97, 99, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 53, 56, 34, 32, 100, 61, 34, 77, 50, 50, 51, 32, 56, 50, 55, 72, 50, 48, 57, 86, 54, 56, 76, 49, 57, 57, 32, 55, 57, 81, 49, 56, 53, 32, 56, 57, 32, 49, 55, 51, 32, 57, 50, 84, 49, 52, 50, 32, 57, 54, 81, 55, 55, 32, 57, 54, 32, 51, 53, 32, 53, 48, 81, 48, 32, 49, 50, 32, 48, 32, 45, 50, 55, 81, 48, 32, 45, 57, 54, 32, 54, 56, 32, 45, 57, 54, 81, 49, 48, 56, 32, 45, 57, 54, 32, 49, 52, 55, 32, 45, 55, 54, 84, 50, 48, 54, 32, 45, 50, 54, 84, 50, 50, 51, 32, 51, 53, 86, 51, 54, 57, 76, 50, 56, 51, 32, 51, 53, 53, 81, 50, 57, 57, 32, 51, 53, 49, 32, 51, 48, 52, 32, 51, 52, 57, 84, 51, 50, 54, 32, 51, 51, 56, 81, 51, 51, 57, 32, 51, 50, 57, 32, 51, 52, 49, 32, 51, 50, 55, 81, 51, 53, 50, 32, 51, 49, 55, 32, 51, 54, 51, 10, 51, 48, 55, 76, 51, 56, 49, 32, 50, 56, 55, 76, 51, 54, 57, 32, 50, 54, 55, 81, 51, 54, 51, 32, 50, 54, 48, 32, 51, 54, 49, 32, 50, 53, 55, 84, 51, 53, 55, 32, 50, 52, 57, 81, 51, 53, 55, 32, 50, 52, 55, 32, 51, 54, 49, 32, 50, 52, 53, 81, 51, 54, 56, 32, 50, 52, 56, 32, 51, 55, 48, 32, 50, 53, 48, 81, 51, 55, 54, 32, 50, 53, 54, 32, 51, 56, 48, 32, 50, 54, 50, 81, 51, 56, 49, 32, 50, 54, 52, 32, 51, 56, 56, 32, 50, 55, 54, 76, 51, 57, 52, 32, 50, 54, 55, 81, 51, 57, 56, 32, 50, 53, 57, 32, 52, 48, 48, 32, 50, 52, 49, 84, 52, 48, 50, 32, 50, 48, 53, 81, 52, 48, 50, 32, 49, 55, 57, 32, 51, 57, 49, 32, 49, 52, 56, 81, 51, 56, 55, 32, 49, 51, 56, 32, 51, 56, 53, 32, 49, 51, 51, 84, 51, 54, 57, 32, 49, 48, 52, 81, 51, 54, 52, 32, 57, 57, 32, 51, 54, 50, 32, 57, 53, 84, 51, 53, 55, 32, 56, 54, 76, 51, 54, 49, 32, 56, 51, 76, 51, 55, 48, 32, 56, 55, 81, 51, 55, 57, 32, 57, 56, 32, 51, 56, 55, 32, 49, 49, 51, 84, 52, 48, 50, 32, 49, 52, 52, 81, 52, 49, 54, 10, 49, 56, 51, 32, 52, 49, 54, 32, 50, 49, 56, 76, 52, 49, 52, 32, 50, 53, 56, 76, 52, 48, 55, 32, 50, 57, 50, 76, 52, 48, 49, 32, 51, 48, 52, 76, 52, 48, 50, 32, 51, 48, 55, 81, 52, 49, 54, 32, 51, 52, 52, 32, 52, 49, 54, 32, 51, 56, 48, 76, 52, 49, 52, 32, 52, 50, 49, 76, 52, 48, 55, 32, 52, 53, 52, 76, 52, 48, 49, 32, 52, 54, 54, 76, 52, 48, 50, 32, 52, 54, 57, 81, 52, 49, 54, 32, 53, 48, 56, 32, 52, 49, 54, 32, 53, 52, 50, 76, 52, 49, 52, 32, 53, 56, 50, 76, 52, 48, 55, 32, 54, 49, 54, 81, 51, 57, 54, 32, 54, 51, 55, 32, 51, 57, 52, 32, 54, 52, 48, 81, 51, 56, 55, 32, 54, 53, 50, 32, 51, 55, 56, 32, 54, 54, 52, 84, 51, 53, 54, 32, 54, 57, 49, 81, 51, 52, 49, 32, 55, 48, 57, 32, 51, 51, 49, 32, 55, 49, 57, 81, 50, 55, 48, 32, 55, 56, 48, 32, 50, 50, 51, 32, 56, 49, 55, 86, 56, 50, 55, 90, 77, 51, 55, 55, 32, 53, 48, 51, 81, 51, 54, 55, 32, 53, 49, 55, 32, 51, 54, 50, 32, 53, 50, 51, 81, 51, 52, 56, 32, 53, 52, 49, 32, 51, 51, 49, 32, 53, 53, 56, 81, 50, 57, 56, 10, 53, 57, 48, 32, 50, 55, 53, 32, 54, 49, 49, 81, 50, 52, 54, 32, 54, 51, 55, 32, 50, 50, 51, 32, 54, 53, 52, 86, 54, 57, 50, 81, 50, 52, 55, 32, 54, 56, 57, 32, 50, 53, 55, 32, 54, 56, 55, 84, 50, 56, 49, 32, 54, 56, 48, 84, 51, 48, 53, 32, 54, 55, 50, 84, 51, 50, 54, 32, 54, 54, 50, 76, 51, 54, 51, 32, 54, 51, 49, 81, 51, 56, 50, 32, 54, 49, 52, 32, 51, 57, 52, 32, 53, 57, 49, 81, 52, 48, 50, 32, 53, 55, 50, 32, 52, 48, 50, 32, 53, 50, 57, 81, 52, 48, 50, 32, 53, 48, 53, 32, 51, 57, 51, 32, 52, 55, 56, 76, 51, 55, 55, 32, 53, 48, 51, 90, 77, 51, 53, 55, 32, 52, 49, 49, 81, 51, 53, 55, 32, 52, 48, 57, 32, 51, 54, 49, 32, 52, 48, 54, 81, 51, 54, 51, 32, 52, 48, 55, 32, 51, 54, 53, 32, 52, 48, 56, 84, 51, 55, 48, 32, 52, 49, 50, 81, 51, 55, 54, 32, 52, 49, 56, 32, 51, 56, 48, 32, 52, 50, 52, 81, 51, 56, 49, 32, 52, 50, 54, 32, 51, 56, 56, 32, 52, 51, 56, 76, 51, 57, 52, 32, 52, 50, 57, 81, 51, 57, 56, 32, 52, 50, 49, 32, 52, 48, 48, 32, 52, 48, 52, 84, 52, 48, 50, 10, 51, 54, 56, 81, 52, 48, 50, 32, 51, 53, 51, 32, 52, 48, 49, 32, 51, 52, 53, 84, 51, 57, 51, 32, 51, 49, 55, 76, 51, 55, 55, 32, 51, 52, 49, 81, 51, 54, 56, 32, 51, 53, 50, 32, 51, 53, 54, 32, 51, 54, 55, 81, 51, 52, 49, 32, 51, 56, 53, 32, 51, 51, 49, 32, 51, 57, 53, 81, 50, 55, 48, 32, 52, 53, 54, 32, 50, 50, 51, 32, 52, 57, 51, 86, 53, 51, 48, 81, 50, 52, 52, 32, 53, 50, 54, 32, 50, 54, 48, 32, 53, 50, 51, 84, 50, 56, 55, 32, 53, 49, 54, 84, 51, 48, 52, 32, 53, 49, 49, 84, 51, 50, 54, 32, 53, 48, 48, 76, 51, 54, 51, 32, 52, 54, 57, 76, 51, 56, 49, 32, 52, 53, 48, 76, 51, 54, 57, 32, 52, 50, 57, 81, 51, 54, 52, 32, 52, 50, 52, 32, 51, 54, 50, 32, 52, 50, 48, 84, 51, 53, 55, 32, 52, 49, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 120, 99, 108, 97, 109, 100, 111, 119, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 54, 34, 32, 100, 61, 34, 77, 51, 53, 55, 32, 52, 49, 48, 76, 51, 54, 50, 32, 52, 48, 54, 76, 51, 55, 49, 32, 52, 49, 48, 76, 51, 57, 48, 32, 52, 51, 55, 76, 51, 57, 52, 32, 52, 50, 55, 81, 51, 57, 56, 32, 52, 49, 57, 32, 52, 48, 48, 32, 52, 48, 49, 84, 52, 48, 50, 32, 51, 54, 53, 81, 52, 48, 50, 32, 51, 53, 52, 32, 52, 48, 49, 32, 51, 52, 54, 84, 51, 57, 51, 32, 51, 49, 53, 81, 51, 57, 48, 32, 51, 50, 51, 32, 51, 56, 53, 32, 51, 51, 48, 84, 51, 55, 56, 32, 51, 52, 48, 76, 51, 51, 50, 32, 51, 57, 51, 81, 50, 55, 48, 32, 52, 53, 53, 32, 50, 50, 51, 32, 52, 57, 49, 86, 53, 50, 57, 81, 50, 51, 55, 32, 53, 50, 54, 32, 50, 53, 49, 32, 53, 50, 52, 84, 50, 56, 52, 32, 53, 49, 53, 81, 51, 49, 48, 32, 53, 48, 57, 10, 51, 50, 55, 32, 52, 57, 57, 81, 51, 52, 53, 32, 52, 56, 53, 32, 51, 52, 54, 32, 52, 56, 52, 81, 51, 53, 54, 32, 52, 55, 54, 32, 51, 54, 51, 32, 52, 54, 56, 81, 51, 54, 57, 32, 52, 54, 51, 32, 51, 55, 51, 32, 52, 53, 56, 81, 51, 55, 52, 32, 52, 53, 55, 32, 51, 56, 49, 32, 52, 52, 55, 76, 51, 55, 48, 32, 52, 50, 55, 76, 51, 53, 55, 32, 52, 49, 48, 90, 77, 50, 50, 51, 32, 57, 56, 56, 72, 50, 49, 48, 86, 54, 54, 81, 50, 48, 51, 32, 55, 53, 32, 49, 57, 56, 32, 55, 56, 81, 49, 56, 54, 32, 56, 56, 32, 49, 55, 51, 32, 57, 49, 84, 49, 52, 51, 32, 57, 53, 81, 55, 57, 32, 57, 53, 32, 51, 54, 32, 52, 57, 81, 48, 32, 49, 48, 32, 48, 32, 45, 50, 57, 81, 48, 32, 45, 54, 50, 32, 49, 56, 32, 45, 55, 57, 84, 54, 57, 32, 45, 57, 54, 81, 49, 48, 57, 32, 45, 57, 54, 32, 49, 52, 55, 32, 45, 55, 55, 84, 50, 48, 53, 32, 45, 50, 57, 81, 50, 49, 54, 32, 45, 49, 50, 32, 50, 50, 48, 32, 51, 84, 50, 50, 51, 32, 51, 51, 86, 51, 54, 55, 81, 50, 51, 55, 32, 51, 54, 52, 32, 50, 53, 49, 10, 51, 54, 50, 84, 50, 56, 52, 32, 51, 53, 52, 84, 51, 49, 48, 32, 51, 52, 53, 84, 51, 50, 55, 32, 51, 51, 55, 76, 51, 54, 51, 32, 51, 48, 55, 76, 51, 56, 49, 32, 50, 56, 55, 81, 51, 55, 51, 32, 50, 55, 50, 32, 51, 55, 48, 32, 50, 54, 53, 76, 51, 53, 55, 32, 50, 52, 55, 76, 51, 54, 50, 32, 50, 52, 51, 76, 51, 55, 49, 32, 50, 52, 56, 76, 51, 57, 48, 32, 50, 55, 53, 76, 51, 57, 52, 32, 50, 54, 53, 81, 51, 57, 56, 32, 50, 53, 55, 32, 52, 48, 48, 32, 50, 52, 48, 84, 52, 48, 50, 32, 50, 48, 52, 81, 52, 48, 50, 32, 49, 55, 55, 32, 51, 57, 49, 32, 49, 52, 55, 81, 51, 56, 55, 32, 49, 51, 52, 32, 51, 56, 50, 32, 49, 50, 52, 81, 51, 55, 52, 32, 49, 49, 48, 32, 51, 55, 48, 32, 49, 48, 51, 81, 51, 54, 55, 32, 49, 48, 48, 32, 51, 54, 49, 32, 57, 49, 81, 51, 54, 48, 32, 56, 57, 32, 51, 53, 55, 32, 56, 53, 76, 51, 54, 50, 32, 56, 50, 76, 51, 55, 49, 32, 56, 54, 81, 51, 56, 57, 32, 49, 48, 56, 32, 52, 48, 50, 32, 49, 52, 51, 81, 52, 48, 57, 32, 49, 54, 49, 32, 52, 49, 50, 10, 49, 55, 56, 84, 52, 49, 54, 32, 50, 49, 54, 76, 52, 49, 53, 32, 50, 53, 54, 76, 52, 48, 55, 32, 50, 57, 50, 76, 52, 48, 49, 32, 51, 48, 51, 81, 52, 48, 56, 32, 51, 50, 48, 32, 52, 49, 50, 32, 51, 52, 49, 84, 52, 49, 54, 32, 51, 55, 57, 76, 52, 49, 53, 32, 52, 49, 56, 76, 52, 48, 55, 32, 52, 53, 51, 76, 52, 48, 49, 32, 52, 54, 51, 76, 52, 48, 50, 32, 52, 54, 55, 81, 52, 49, 54, 32, 53, 48, 50, 32, 52, 49, 54, 32, 53, 52, 49, 76, 52, 49, 53, 32, 53, 56, 48, 76, 52, 48, 55, 32, 54, 49, 52, 76, 52, 48, 49, 32, 54, 50, 53, 76, 52, 48, 50, 32, 54, 50, 57, 81, 52, 49, 54, 32, 54, 54, 51, 32, 52, 49, 54, 32, 55, 48, 52, 76, 52, 49, 53, 32, 55, 52, 50, 76, 52, 48, 55, 32, 55, 55, 55, 76, 51, 55, 56, 32, 56, 50, 53, 76, 51, 51, 50, 32, 56, 55, 57, 81, 51, 48, 52, 32, 57, 48, 55, 32, 50, 55, 55, 32, 57, 51, 49, 84, 50, 50, 51, 32, 57, 55, 55, 86, 57, 56, 56, 90, 77, 51, 55, 56, 32, 54, 54, 52, 81, 51, 53, 57, 32, 54, 56, 56, 32, 51, 51, 50, 32, 55, 49, 55, 81, 50, 55, 48, 10, 55, 55, 57, 32, 50, 50, 51, 32, 56, 49, 53, 86, 56, 53, 50, 76, 50, 56, 52, 32, 56, 51, 57, 81, 51, 48, 52, 32, 56, 51, 51, 32, 51, 48, 57, 32, 56, 51, 49, 84, 51, 50, 53, 32, 56, 50, 51, 84, 51, 52, 53, 32, 56, 48, 56, 84, 51, 54, 51, 32, 55, 57, 50, 81, 51, 55, 54, 32, 55, 55, 57, 32, 51, 56, 50, 32, 55, 55, 49, 84, 51, 57, 51, 32, 55, 53, 52, 84, 52, 48, 48, 32, 55, 50, 55, 84, 52, 48, 50, 32, 54, 57, 48, 81, 52, 48, 50, 32, 54, 54, 53, 32, 51, 57, 51, 32, 54, 51, 57, 81, 51, 57, 48, 32, 54, 52, 55, 32, 51, 56, 53, 32, 54, 53, 52, 84, 51, 55, 56, 32, 54, 54, 52, 90, 77, 51, 53, 55, 32, 53, 55, 48, 76, 51, 54, 50, 32, 53, 54, 56, 76, 51, 55, 49, 32, 53, 55, 49, 76, 51, 57, 48, 32, 53, 57, 57, 76, 51, 57, 52, 32, 53, 57, 48, 81, 51, 57, 56, 32, 53, 56, 48, 32, 52, 48, 48, 32, 53, 54, 52, 84, 52, 48, 50, 32, 53, 50, 55, 81, 52, 48, 50, 32, 53, 48, 52, 32, 51, 57, 51, 32, 52, 55, 55, 81, 51, 57, 48, 32, 52, 56, 52, 32, 51, 56, 55, 32, 52, 56, 57, 81, 51, 56, 49, 10, 52, 57, 55, 32, 51, 55, 56, 32, 53, 48, 49, 81, 51, 54, 55, 32, 53, 49, 52, 32, 51, 53, 55, 32, 53, 50, 55, 84, 51, 51, 50, 32, 53, 53, 53, 81, 51, 48, 55, 32, 53, 56, 48, 32, 50, 55, 54, 32, 54, 48, 56, 84, 50, 50, 51, 32, 54, 53, 50, 86, 54, 57, 49, 81, 50, 51, 55, 32, 54, 56, 56, 32, 50, 53, 49, 32, 54, 56, 54, 84, 50, 56, 52, 32, 54, 55, 55, 84, 51, 48, 57, 32, 54, 54, 57, 84, 51, 50, 55, 32, 54, 54, 48, 81, 51, 52, 52, 32, 54, 52, 54, 32, 51, 53, 48, 32, 54, 52, 50, 84, 51, 54, 51, 32, 54, 51, 48, 76, 51, 56, 49, 32, 54, 49, 48, 76, 51, 55, 48, 32, 53, 57, 48, 81, 51, 54, 56, 32, 53, 56, 56, 32, 51, 54, 49, 32, 53, 55, 54, 81, 51, 54, 48, 32, 53, 55, 52, 32, 51, 53, 55, 32, 53, 55, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 101, 110, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 48, 32, 52, 57, 72, 50, 49, 54, 86, 50, 53, 72, 48, 86, 52, 57, 90, 77, 48, 32, 45, 50, 53, 72, 50, 49, 54, 86, 45, 52, 57, 72, 48, 86, 45, 50, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109]).concat([101, 61, 34, 115, 116, 101, 114, 108, 105, 110, 103, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 45, 56, 48, 72, 48, 86, 56, 49, 72, 50, 52, 48, 86, 45, 56, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 117, 114, 114, 101, 110, 99, 121, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 45, 56, 48, 72, 48, 86, 56, 49, 72, 50, 52, 48, 86, 45, 56, 48, 90, 77, 50, 52, 48, 32, 45, 50, 57, 48, 72, 50, 49, 50, 86, 45, 56, 48, 72, 50, 52, 48, 86, 45, 50, 57, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 121, 101, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 56, 48, 72, 50, 49, 50, 86, 50, 57, 48, 72, 50, 52, 48, 86, 56, 48, 90, 77, 50, 52, 48, 32, 45, 56, 49, 72, 48, 86, 56, 48, 72, 50, 52, 48, 86, 45, 56, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 114, 111, 107, 101, 110, 98, 97, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 45, 56, 48, 72, 48, 86, 56, 49, 72, 50, 52, 48, 86, 45, 56, 48, 90, 77, 50, 56, 32, 45, 50, 57, 48, 72, 48, 86, 45, 56, 48, 72, 50, 56, 86, 45, 50, 57, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 55, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 101, 99, 116, 105, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 56, 32, 56, 48, 72, 48, 86, 50, 57, 48, 72, 50, 56, 86, 56, 48, 90, 77, 50, 52, 48, 32, 45, 56, 49, 72, 48, 86, 56, 48, 72, 50, 52, 48, 86, 45, 56, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 51, 57, 34, 32, 100, 61, 34, 77, 48, 32, 45, 49, 55, 51, 86, 49, 55, 51, 72, 51, 54, 86, 45, 49, 55, 51, 72, 48, 90, 77, 49, 48, 53, 32, 49, 55, 51, 86, 45, 49, 55, 51, 72, 54, 54, 86, 49, 55, 51, 72, 49, 48, 53, 90, 77, 53, 51, 53, 32, 45, 49, 55, 51, 86, 49, 55, 51, 72, 53, 55, 48, 86, 45, 49, 55, 51, 72, 53, 51, 53, 90, 77, 54, 48, 51, 32, 45, 49, 55, 51, 86, 49, 55, 51, 72, 54, 51, 57, 86, 45, 49, 55, 51, 72, 54, 48, 51, 90, 77, 50, 51, 53, 32, 50, 49, 81, 50, 51, 53, 32, 45, 54, 32, 50, 52, 52, 32, 45, 51, 48, 81, 50, 52, 57, 32, 45, 52, 50, 32, 50, 53, 52, 32, 45, 53, 49, 84, 50, 55, 48, 32, 45, 55, 52, 81, 51, 48, 48, 32, 45, 49, 49, 49, 32, 51, 52, 52, 32, 45, 49, 49, 49, 81, 51, 55, 52, 32, 45, 49, 49, 49, 10, 51, 56, 57, 32, 45, 57, 48, 84, 52, 48, 52, 32, 45, 50, 52, 81, 52, 48, 52, 32, 53, 32, 51, 57, 54, 32, 50, 56, 84, 51, 54, 57, 32, 55, 51, 81, 51, 51, 57, 32, 49, 49, 48, 32, 50, 57, 52, 32, 49, 49, 48, 81, 50, 54, 48, 32, 49, 48, 52, 32, 50, 52, 56, 32, 56, 53, 81, 50, 51, 53, 32, 54, 57, 32, 50, 51, 53, 32, 50, 49, 90, 77, 49, 48, 53, 32, 48, 81, 49, 48, 53, 32, 52, 55, 32, 49, 51, 57, 32, 55, 53, 81, 49, 53, 54, 32, 56, 57, 32, 49, 55, 55, 32, 49, 48, 48, 84, 50, 50, 52, 32, 49, 49, 56, 81, 50, 55, 50, 32, 49, 51, 48, 32, 51, 49, 54, 32, 49, 51, 48, 81, 51, 50, 56, 32, 49, 51, 48, 32, 51, 51, 57, 32, 49, 51, 48, 84, 51, 54, 51, 32, 49, 50, 56, 76, 52, 49, 49, 32, 49, 49, 57, 81, 52, 54, 49, 32, 49, 48, 53, 32, 52, 57, 56, 32, 55, 54, 81, 53, 49, 54, 32, 54, 51, 32, 53, 50, 53, 32, 52, 51, 81, 53, 51, 49, 32, 51, 52, 32, 53, 51, 51, 32, 50, 52, 84, 53, 51, 53, 32, 48, 81, 53, 51, 53, 32, 45, 53, 48, 32, 53, 48, 48, 32, 45, 55, 54, 81, 52, 56, 49, 10, 45, 57, 50, 32, 52, 54, 49, 32, 45, 49, 48, 50, 84, 52, 49, 53, 32, 45, 49, 50, 48, 81, 51, 54, 51, 32, 45, 49, 51, 51, 32, 51, 50, 51, 32, 45, 49, 51, 51, 81, 50, 55, 54, 32, 45, 49, 51, 51, 32, 50, 50, 56, 32, 45, 49, 50, 49, 81, 50, 48, 51, 32, 45, 49, 49, 53, 32, 49, 56, 50, 32, 45, 49, 48, 53, 84, 49, 52, 50, 32, 45, 55, 57, 84, 49, 49, 52, 32, 45, 52, 51, 84, 49, 48, 53, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 111, 112, 121, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 51, 34, 32, 100, 61, 34, 77, 48, 32, 49, 53, 51, 72, 51, 49, 51, 86, 45, 49, 53, 53, 72, 48, 86, 49, 53, 51, 90, 77, 51, 55, 32, 49, 49, 57, 86, 45, 49, 50, 50, 72, 50, 55, 56, 86, 49, 49, 57, 72, 51, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 114, 100, 102, 101, 109, 105, 110, 105, 110, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 51, 34, 32, 100, 61, 34, 77, 48, 32, 49, 53, 51, 72, 51, 49, 51, 86, 45, 49, 53, 53, 72, 48, 86, 49, 53, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 117, 105, 108, 108, 101, 109, 111, 116, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 49, 54, 52, 76, 51, 49, 53, 32, 45, 49, 50, 52, 72, 48, 76, 49, 53, 57, 32, 49, 54, 52, 90, 77, 49, 53, 57, 32, 57, 49, 76, 54, 51, 32, 45, 56, 54, 72, 50, 53, 50, 76, 49, 53, 57, 32, 57, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 108, 111, 103, 105, 99, 97, 108, 110, 111, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 49, 54, 52, 76, 51, 49, 53, 32, 45, 49, 50, 52, 72, 48, 76, 49, 53, 57, 32, 49, 54, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 109, 105, 110, 117, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 45, 49, 54, 52, 76, 51, 49, 53, 32, 49, 50, 52, 72, 48, 76, 49, 53, 57, 32, 45, 49, 54, 52, 90, 77, 49, 53, 57, 32, 45, 57, 49, 76, 54, 51, 32, 56, 54, 72, 50, 53, 50, 76, 49, 53, 57, 32, 45, 57, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 114, 101, 103, 105, 115, 116, 101, 114, 101, 100, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 49, 53, 57, 32, 45, 49, 54, 52, 76, 51, 49, 53, 32, 49, 50, 52, 72, 48, 76, 49, 53, 57, 32, 45, 49, 54, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 97, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 118, 101, 114, 115, 99, 111, 114, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 51, 49, 52, 32, 45, 57, 54, 76, 48, 32, 48, 76, 51, 49, 52, 32, 57, 52, 86, 45, 57, 54, 90, 77, 50, 55, 55, 32, 45, 54, 50, 86, 54, 48, 76, 55, 53, 32, 48, 76, 50, 55, 55, 32, 45, 54, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 101, 103, 114, 101, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 51, 49, 52, 32, 45, 57, 54, 76, 48, 32, 48, 76, 51, 49, 52, 32, 57, 52, 86, 45, 57, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 108, 117, 115, 109, 105, 110, 117, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 51, 49, 52, 32, 48, 76, 48, 32, 45, 57, 54, 86, 57, 52, 76, 51, 49, 52, 32, 48, 90, 77, 50, 51, 57, 32, 48, 76, 51, 55, 32, 54, 48, 86, 45, 54, 50, 76, 50, 51, 57, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 119, 111, 115, 117, 112, 101, 114, 105, 111, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 52, 34, 32, 100, 61, 34, 77, 51, 49, 52, 32, 48, 76, 48, 32, 45, 57, 54, 86, 57, 52, 76, 51, 49, 52, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 104, 114, 101, 101, 115, 117, 112, 101, 114, 105, 111, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 49, 53, 55, 32, 45, 49, 51, 49, 72, 48, 86, 49, 51, 49, 72, 49, 53, 55, 86, 45, 49, 51, 49, 90, 77, 49, 51, 54, 32, 45, 57, 52, 86, 57, 52, 72, 50, 49, 86, 45, 57, 52, 72, 49, 51, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 48, 32, 49, 51, 49, 72, 49, 53, 55, 86, 45, 49, 51, 49, 72, 48, 86, 49, 51, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 109, 117, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 51, 34, 32, 100, 61, 34, 77, 48, 32, 45, 56, 53, 76, 51, 49, 51, 32, 49, 52, 54, 86, 56, 52, 76, 48, 32, 45, 49, 52, 54, 86, 45, 56, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 97, 114, 97, 103, 114, 97, 112, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 51, 34, 32, 100, 61, 34, 77, 51, 49, 52, 32, 56, 81, 51, 49, 52, 32, 45, 53, 56, 32, 50, 55, 48, 32, 45, 49, 48, 53, 84, 49, 54, 49, 32, 45, 49, 53, 51, 81, 57, 53, 32, 45, 49, 53, 51, 32, 52, 56, 32, 45, 49, 48, 57, 84, 48, 32, 48, 81, 48, 32, 54, 54, 32, 52, 52, 32, 49, 49, 51, 84, 49, 53, 51, 32, 49, 54, 49, 81, 50, 49, 57, 32, 49, 54, 49, 32, 50, 54, 54, 32, 49, 49, 55, 84, 51, 49, 52, 32, 56, 90, 77, 50, 57, 56, 32, 56, 81, 50, 57, 56, 32, 54, 54, 32, 50, 53, 54, 32, 49, 48, 53, 84, 49, 53, 51, 32, 49, 52, 53, 81, 57, 53, 32, 49, 52, 53, 32, 53, 54, 32, 49, 48, 51, 84, 49, 54, 32, 48, 81, 49, 54, 32, 45, 53, 56, 32, 53, 56, 32, 45, 57, 55, 84, 49, 54, 49, 32, 45, 49, 51, 55, 81, 50, 49, 57, 32, 45, 49, 51, 55, 10, 50, 53, 56, 32, 45, 57, 53, 84, 50, 57, 56, 32, 56, 90, 77, 49, 55, 48, 32, 52, 76, 50, 53, 55, 32, 45, 56, 50, 76, 50, 52, 57, 32, 45, 57, 50, 76, 49, 54, 48, 32, 45, 54, 76, 55, 51, 32, 45, 57, 50, 76, 54, 52, 32, 45, 56, 50, 76, 49, 53, 48, 32, 51, 76, 53, 56, 32, 57, 50, 76, 54, 57, 32, 49, 48, 51, 76, 49, 54, 48, 32, 49, 51, 76, 50, 52, 57, 32, 49, 48, 49, 76, 50, 53, 57, 32, 57, 50, 76, 50, 48, 57, 32, 52, 51, 76, 49, 55, 48, 32, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 101, 100, 105, 108, 108, 97, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 56, 50, 34, 32, 100, 61, 34, 77, 52, 51, 32, 48, 72, 51, 50, 76, 50, 32, 50, 53, 55, 81, 51, 32, 50, 54, 54, 32, 50, 32, 50, 55, 49, 84, 48, 32, 50, 56, 49, 81, 48, 32, 50, 57, 56, 32, 49, 50, 32, 51, 49, 50, 84, 51, 56, 32, 51, 50, 52, 81, 53, 52, 32, 51, 50, 52, 32, 54, 51, 32, 51, 49, 50, 81, 55, 51, 32, 51, 48, 50, 32, 55, 51, 32, 50, 55, 54, 76, 55, 50, 32, 50, 53, 55, 76, 52, 51, 32, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 110, 101, 115, 117, 112, 101, 114, 105, 111, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 56, 50, 34, 32, 100, 61, 34, 77, 55, 51, 32, 52, 56, 81, 55, 51, 32, 50, 50, 32, 54, 51, 32, 49, 50, 81, 53, 52, 32, 48, 32, 51, 56, 32, 48, 81, 50, 52, 32, 45, 51, 32, 49, 50, 32, 49, 49, 84, 48, 32, 52, 51, 81, 49, 32, 53, 53, 32, 50, 32, 54, 55, 76, 51, 50, 32, 51, 50, 52, 72, 52, 51, 76, 55, 50, 32, 54, 55, 76, 55, 51, 32, 52, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 114, 100, 109, 97, 115, 99, 117, 108, 105, 110, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 52, 51, 34, 32, 100, 61, 34, 77, 49, 52, 51, 32, 51, 48, 56, 81, 49, 52, 51, 32, 50, 53, 53, 32, 49, 48, 57, 32, 50, 49, 51, 81, 55, 51, 32, 49, 55, 51, 32, 49, 57, 32, 49, 54, 53, 72, 45, 50, 48, 81, 45, 55, 50, 32, 49, 55, 49, 32, 45, 49, 48, 57, 32, 50, 49, 51, 81, 45, 49, 50, 54, 32, 50, 51, 52, 32, 45, 49, 51, 53, 32, 50, 53, 55, 84, 45, 49, 52, 53, 32, 51, 48, 56, 81, 45, 49, 52, 53, 32, 51, 54, 54, 32, 45, 49, 48, 52, 32, 52, 48, 56, 84, 48, 32, 52, 53, 49, 81, 54, 50, 32, 52, 53, 49, 32, 49, 48, 50, 32, 52, 48, 57, 84, 49, 52, 51, 32, 51, 48, 56, 90, 77, 49, 57, 32, 48, 72, 45, 50, 48, 86, 50, 56, 54, 72, 49, 57, 86, 48, 90, 77, 49, 48, 53, 32, 51, 48, 56, 81, 49, 48, 53, 32, 51, 53, 48, 10, 55, 53, 32, 51, 56, 51, 81, 52, 51, 32, 52, 49, 51, 32, 48, 32, 52, 49, 51, 81, 45, 52, 53, 32, 52, 49, 51, 32, 45, 55, 53, 32, 51, 56, 51, 84, 45, 49, 48, 54, 32, 51, 48, 56, 81, 45, 49, 48, 54, 32, 50, 54, 51, 32, 45, 55, 53, 32, 50, 51, 51, 81, 45, 52, 54, 32, 50, 48, 51, 32, 48, 32, 50, 48, 51, 81, 52, 53, 32, 50, 48, 51, 32, 55, 53, 32, 50, 51, 52, 84, 49, 48, 53, 32, 51, 48, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 117, 105, 108, 108, 101, 109, 111, 116, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 49, 55, 49, 34, 32, 100, 61, 34, 77, 49, 52, 56, 32, 45, 50, 55, 50, 76, 45, 52, 32, 48, 76, 49, 51, 54, 32, 50, 53, 55, 76, 45, 52, 32, 53, 49, 52, 76, 49, 53, 54, 32, 55, 55, 50, 76, 50, 50, 32, 49, 48, 50, 57, 72, 55, 53, 76, 50, 48, 57, 32, 55, 55, 50, 76, 52, 57, 32, 53, 49, 52, 76, 49, 56, 57, 32, 50, 53, 55, 76, 52, 57, 32, 48, 76, 50, 48, 49, 32, 45, 50, 55, 50, 72, 49, 52, 56, 90, 77, 49, 55, 32, 57, 50, 54, 76, 50, 32, 49, 49, 48, 51, 76, 49, 52, 53, 32, 49, 48, 48, 48, 76, 49, 50, 55, 32, 57, 56, 57, 76, 54, 48, 32, 49, 48, 49, 50, 76, 53, 49, 32, 49, 48, 48, 54, 76, 51, 53, 32, 57, 51, 55, 76, 49, 55, 32, 57, 50, 54, 90, 77, 50, 48, 49, 32, 45, 49, 55, 48, 76, 50, 49, 55, 32, 45, 51, 52, 55, 76, 55, 52, 10, 45, 50, 52, 52, 76, 57, 49, 32, 45, 50, 51, 50, 76, 49, 53, 56, 32, 45, 50, 53, 54, 76, 49, 54, 56, 32, 45, 50, 52, 57, 76, 49, 56, 51, 32, 45, 49, 56, 48, 76, 50, 48, 49, 32, 45, 49, 55, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 110, 101, 113, 117, 97, 114, 116, 101, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 54, 55, 34, 32, 100, 61, 34, 77, 45, 51, 32, 55, 72, 51, 54, 55, 86, 45, 55, 72, 45, 51, 86, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 110, 101, 104, 97, 108, 102, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 45, 51, 50, 54, 32, 45, 49, 50, 52, 86, 45, 52, 49, 76, 48, 32, 49, 50, 53, 86, 51, 57, 76, 45, 51, 50, 54, 32, 45, 49, 50, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 104, 114, 101, 101, 113, 117, 97, 114, 116, 101, 114, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 45, 51, 50, 54, 32, 45, 49, 57, 51, 86, 45, 49, 49, 48, 76, 48, 32, 53, 54, 86, 45, 51, 48, 76, 45, 51, 50, 54, 32, 45, 49, 57, 51, 90, 77, 45, 51, 50, 54, 32, 45, 53, 55, 86, 50, 55, 76, 48, 32, 49, 57, 51, 86, 49, 49, 48, 76, 45, 51, 50, 54, 32, 45, 53, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 98, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 101, 115, 116, 105, 111, 110, 100, 111, 119, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 48, 32, 49, 55, 53, 76, 45, 51, 50, 52, 32, 49, 49, 86, 57, 53, 76, 48, 32, 50, 53, 56, 86, 49, 55, 53, 90, 77, 48, 32, 52, 48, 76, 45, 51, 50, 52, 32, 45, 49, 50, 52, 86, 45, 52, 48, 76, 48, 32, 49, 50, 52, 86, 52, 48, 90, 77, 48, 32, 45, 57, 53, 76, 45, 51, 50, 52, 32, 45, 50, 53, 56, 86, 45, 49, 55, 53, 76, 48, 32, 45, 49, 49, 86, 45, 57, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 49, 32, 45, 49, 50, 52, 86, 45, 52, 49, 76, 51, 50, 55, 32, 49, 50, 53, 86, 51, 57, 76, 49, 32, 45, 49, 50, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 54, 34, 32, 100, 61, 34, 77, 48, 32, 45, 49, 57, 51, 86, 45, 49, 49, 48, 76, 51, 50, 54, 32, 53, 54, 86, 45, 51, 48, 76, 48, 32, 45, 49, 57, 51, 90, 77, 48, 32, 45, 53, 55, 86, 50, 55, 76, 51, 50, 54, 32, 49, 57, 51, 86, 49, 49, 48, 76, 48, 32, 45, 53, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 51, 50, 52, 32, 49, 55, 53, 76, 48, 32, 49, 49, 86, 57, 53, 76, 51, 50, 52, 32, 50, 53, 56, 86, 49, 55, 53, 90, 77, 51, 50, 52, 32, 52, 48, 76, 48, 32, 45, 49, 50, 52, 86, 45, 52, 48, 76, 51, 50, 52, 32, 49, 50, 52, 86, 52, 48, 90, 77, 51, 50, 52, 32, 45, 57, 53, 76, 48, 32, 45, 50, 53, 56, 86, 45, 49, 55, 53, 76, 51, 50, 52, 32, 45, 49, 49, 86, 45, 57, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 48, 34, 32, 100, 61, 34, 77, 45, 52, 53, 52, 32, 50, 48, 48, 86, 51, 56, 50, 72, 45, 52, 51, 55, 86, 50, 48, 53, 76, 45, 51, 57, 51, 32, 50, 50, 48, 86, 49, 50, 51, 76, 45, 52, 51, 55, 32, 49, 48, 56, 86, 45, 55, 48, 76, 45, 51, 57, 51, 32, 45, 53, 55, 86, 45, 49, 53, 53, 76, 45, 52, 51, 55, 32, 45, 49, 54, 57, 86, 45, 51, 51, 54, 72, 45, 52, 53, 52, 86, 45, 49, 55, 52, 76, 45, 53, 51, 48, 32, 45, 49, 57, 56, 86, 45, 51, 54, 52, 72, 45, 53, 52, 55, 86, 45, 50, 48, 52, 76, 45, 53, 57, 48, 32, 45, 50, 49, 56, 86, 45, 49, 50, 49, 76, 45, 53, 52, 55, 32, 45, 49, 48, 54, 86, 55, 51, 76, 45, 53, 57, 48, 32, 53, 56, 86, 49, 53, 55, 76, 45, 53, 52, 55, 32, 49, 55, 49, 86, 51, 53, 51, 72, 45, 53, 51, 48, 86, 49, 55, 55, 76, 45, 52, 53, 52, 10, 50, 48, 48, 90, 77, 45, 53, 51, 48, 32, 55, 56, 86, 45, 49, 48, 49, 76, 45, 52, 53, 52, 32, 45, 55, 55, 86, 49, 48, 51, 76, 45, 53, 51, 48, 32, 55, 56, 90, 77, 45, 54, 48, 48, 32, 45, 50, 57, 49, 76, 45, 54, 48, 54, 32, 45, 51, 48, 49, 81, 45, 54, 52, 55, 32, 45, 50, 55, 55, 32, 45, 54, 55, 51, 32, 45, 50, 53, 48, 81, 45, 55, 48, 51, 32, 45, 50, 50, 50, 32, 45, 55, 50, 53, 32, 45, 49, 56, 54, 81, 45, 55, 55, 48, 32, 45, 49, 49, 50, 32, 45, 55, 55, 48, 32, 45, 51, 48, 81, 45, 55, 55, 48, 32, 45, 57, 32, 45, 55, 54, 55, 32, 49, 52, 84, 45, 55, 53, 57, 32, 54, 48, 81, 45, 55, 52, 52, 32, 49, 48, 57, 32, 45, 55, 50, 54, 32, 49, 52, 51, 81, 45, 54, 55, 50, 32, 50, 51, 52, 32, 45, 54, 48, 56, 32, 50, 54, 52, 76, 45, 54, 48, 48, 32, 50, 53, 53, 81, 45, 54, 55, 49, 32, 50, 48, 53, 32, 45, 55, 48, 48, 32, 49, 50, 55, 81, 45, 55, 50, 53, 32, 53, 57, 32, 45, 55, 50, 53, 32, 45, 51, 50, 81, 45, 55, 50, 53, 32, 45, 49, 49, 49, 32, 45, 54, 57, 52, 32, 45, 49, 56, 48, 84, 45, 54, 48, 48, 10, 45, 50, 57, 49, 90, 77, 45, 50, 49, 57, 32, 45, 50, 52, 81, 45, 50, 49, 57, 32, 45, 49, 48, 54, 32, 45, 50, 54, 52, 32, 45, 49, 56, 48, 81, 45, 50, 56, 54, 32, 45, 50, 49, 54, 32, 45, 51, 49, 53, 32, 45, 50, 52, 52, 84, 45, 51, 56, 51, 32, 45, 50, 57, 53, 76, 45, 51, 56, 57, 32, 45, 50, 56, 53, 81, 45, 51, 50, 54, 32, 45, 50, 52, 51, 32, 45, 50, 57, 53, 32, 45, 49, 55, 52, 84, 45, 50, 54, 52, 32, 45, 50, 54, 81, 45, 50, 54, 52, 32, 54, 53, 32, 45, 50, 56, 57, 32, 49, 51, 51, 81, 45, 51, 49, 56, 32, 50, 49, 49, 32, 45, 51, 56, 57, 32, 50, 54, 49, 76, 45, 51, 56, 49, 32, 50, 55, 48, 81, 45, 51, 49, 55, 32, 50, 52, 48, 32, 45, 50, 54, 51, 32, 49, 52, 57, 81, 45, 50, 53, 52, 32, 49, 51, 51, 32, 45, 50, 52, 54, 32, 49, 49, 49, 84, 45, 50, 51, 49, 32, 54, 54, 81, 45, 50, 49, 57, 32, 50, 50, 32, 45, 50, 49, 57, 32, 45, 50, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 45, 53, 55, 48, 32, 45, 50, 48, 50, 86, 51, 55, 55, 72, 45, 53, 53, 50, 86, 49, 55, 50, 76, 45, 52, 49, 51, 32, 49, 57, 54, 86, 45, 51, 55, 55, 72, 45, 52, 51, 48, 86, 45, 49, 55, 55, 76, 45, 53, 55, 48, 32, 45, 50, 48, 50, 90, 77, 45, 53, 53, 50, 32, 45, 49, 48, 56, 76, 45, 52, 51, 48, 32, 45, 56, 57, 86, 49, 48, 48, 76, 45, 53, 53, 50, 32, 56, 48, 86, 45, 49, 48, 56, 90, 77, 45, 54, 48, 48, 32, 45, 50, 55, 51, 76, 45, 54, 48, 54, 32, 45, 50, 56, 51, 81, 45, 54, 52, 55, 32, 45, 50, 53, 57, 32, 45, 54, 55, 51, 32, 45, 50, 51, 50, 81, 45, 55, 48, 51, 32, 45, 50, 48, 52, 32, 45, 55, 50, 53, 32, 45, 49, 54, 56, 81, 45, 55, 55, 48, 32, 45, 57, 52, 32, 45, 55, 55, 48, 32, 45, 49, 50, 81, 45, 55, 55, 48, 10, 57, 32, 45, 55, 54, 55, 32, 51, 50, 84, 45, 55, 53, 57, 32, 55, 56, 81, 45, 55, 52, 52, 32, 49, 50, 55, 32, 45, 55, 50, 54, 32, 49, 54, 49, 81, 45, 54, 55, 50, 32, 50, 53, 50, 32, 45, 54, 48, 56, 32, 50, 56, 50, 76, 45, 54, 48, 48, 32, 50, 55, 51, 81, 45, 54, 55, 49, 32, 50, 50, 51, 32, 45, 55, 48, 48, 32, 49, 52, 53, 81, 45, 55, 50, 53, 32, 55, 55, 32, 45, 55, 50, 53, 32, 45, 49, 52, 81, 45, 55, 50, 53, 32, 45, 57, 51, 32, 45, 54, 57, 52, 32, 45, 49, 54, 50, 84, 45, 54, 48, 48, 32, 45, 50, 55, 51, 90, 77, 45, 50, 49, 50, 32, 45, 49, 50, 81, 45, 50, 49, 50, 32, 45, 57, 52, 32, 45, 50, 53, 55, 32, 45, 49, 54, 56, 81, 45, 50, 55, 57, 32, 45, 50, 48, 52, 32, 45, 51, 48, 56, 32, 45, 50, 51, 50, 84, 45, 51, 55, 54, 32, 45, 50, 56, 51, 76, 45, 51, 56, 50, 32, 45, 50, 55, 51, 81, 45, 51, 49, 57, 32, 45, 50, 51, 49, 32, 45, 50, 56, 56, 32, 45, 49, 54, 50, 84, 45, 50, 53, 55, 32, 45, 49, 52, 81, 45, 50, 53, 55, 32, 55, 55, 32, 45, 50, 56, 50, 32, 49, 52, 53, 81, 45, 51, 49, 49, 10, 50, 50, 51, 32, 45, 51, 56, 50, 32, 50, 55, 51, 76, 45, 51, 55, 52, 32, 50, 56, 50, 81, 45, 51, 49, 48, 32, 50, 53, 50, 32, 45, 50, 53, 54, 32, 49, 54, 49, 81, 45, 50, 52, 55, 32, 49, 52, 53, 32, 45, 50, 51, 57, 32, 49, 50, 51, 84, 45, 50, 50, 52, 32, 55, 56, 81, 45, 50, 49, 50, 32, 51, 52, 32, 45, 50, 49, 50, 32, 45, 49, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 114, 105, 110, 103, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 48, 48, 34, 32, 100, 61, 34, 77, 45, 53, 53, 56, 32, 52, 57, 52, 72, 45, 53, 51, 56, 86, 49, 49, 54, 81, 45, 53, 48, 56, 32, 49, 51, 50, 32, 45, 52, 56, 55, 32, 49, 51, 56, 84, 45, 52, 52, 53, 32, 49, 52, 52, 81, 45, 52, 50, 56, 32, 49, 52, 52, 32, 45, 52, 49, 55, 32, 49, 52, 49, 84, 45, 51, 57, 49, 32, 49, 51, 48, 81, 45, 51, 55, 50, 32, 49, 49, 56, 32, 45, 51, 54, 52, 32, 57, 48, 76, 45, 51, 54, 48, 32, 54, 52, 81, 45, 51, 54, 48, 32, 49, 57, 32, 45, 52, 48, 53, 32, 45, 51, 48, 81, 45, 52, 50, 48, 32, 45, 52, 57, 32, 45, 52, 51, 53, 32, 45, 54, 54, 84, 45, 52, 55, 48, 32, 45, 49, 48, 49, 76, 45, 53, 53, 56, 32, 45, 49, 56, 52, 86, 52, 57, 52, 90, 77, 45, 52, 52, 53, 32, 49, 48, 54, 76, 45, 52, 53, 51, 32, 49, 49, 48, 76, 45, 52, 54, 56, 10, 49, 49, 50, 81, 45, 52, 56, 53, 32, 49, 49, 50, 32, 45, 53, 48, 49, 32, 49, 48, 54, 84, 45, 53, 51, 56, 32, 56, 49, 86, 45, 49, 50, 51, 81, 45, 52, 57, 50, 32, 45, 55, 52, 32, 45, 52, 54, 55, 32, 45, 51, 53, 81, 45, 52, 51, 53, 32, 49, 53, 32, 45, 52, 51, 53, 32, 53, 52, 81, 45, 52, 51, 52, 32, 54, 56, 32, 45, 52, 51, 52, 32, 55, 53, 81, 45, 52, 51, 52, 32, 56, 52, 32, 45, 52, 51, 54, 32, 57, 49, 84, 45, 52, 52, 53, 32, 49, 48, 54, 90, 77, 45, 54, 48, 54, 32, 45, 50, 54, 51, 76, 45, 54, 49, 50, 32, 45, 50, 55, 51, 81, 45, 54, 53, 51, 32, 45, 50, 52, 57, 32, 45, 54, 55, 57, 32, 45, 50, 50, 50, 81, 45, 55, 48, 57, 32, 45, 49, 57, 52, 32, 45, 55, 51, 49, 32, 45, 49, 53, 56, 81, 45, 55, 55, 54, 32, 45, 56, 52, 32, 45, 55, 55, 54, 32, 45, 50, 81, 45, 55, 55, 54, 32, 49, 57, 32, 45, 55, 55, 51, 32, 52, 50, 84, 45, 55, 54, 53, 32, 56, 56, 81, 45, 55, 53, 48, 32, 49, 51, 55, 32, 45, 55, 51, 50, 32, 49, 55, 49, 81, 45, 54, 55, 56, 32, 50, 54, 50, 32, 45, 54, 49, 52, 10, 50, 57, 50, 76, 45, 54, 48, 54, 32, 50, 56, 51, 81, 45, 54, 55, 55, 32, 50, 51, 51, 32, 45, 55, 48, 54, 32, 49, 53, 53, 81, 45, 55, 51, 49, 32, 56, 55, 32, 45, 55, 51, 49, 32, 45, 52, 81, 45, 55, 51, 49, 32, 45, 56, 51, 32, 45, 55, 48, 48, 32, 45, 49, 53, 50, 84, 45, 54, 48, 54, 32, 45, 50, 54, 51, 90, 77, 45, 50, 49, 51, 32, 45, 50, 81, 45, 50, 49, 51, 32, 45, 56, 52, 32, 45, 50, 53, 56, 32, 45, 49, 53, 56, 81, 45, 50, 56, 48, 32, 45, 49, 57, 52, 32, 45, 51, 48, 57, 32, 45, 50, 50, 50, 84, 45, 51, 55, 55, 32, 45, 50, 55, 51, 76, 45, 51, 56, 51, 32, 45, 50, 54, 51, 81, 45, 51, 50, 48, 32, 45, 50, 50, 49, 32, 45, 50, 56, 57, 32, 45, 49, 53, 50, 84, 45, 50, 53, 56, 32, 45, 52, 81, 45, 50, 53, 56, 32, 56, 55, 32, 45, 50, 56, 51, 32, 49, 53, 53, 81, 45, 51, 49, 50, 32, 50, 51, 51, 32, 45, 51, 56, 51, 32, 50, 56, 51, 76, 45, 51, 55, 53, 32, 50, 57, 50, 81, 45, 51, 49, 49, 32, 50, 54, 50, 32, 45, 50, 53, 55, 32, 49, 55, 49, 81, 45, 50, 52, 56, 32, 49, 53, 53, 10, 45, 50, 52, 48, 32, 49, 51, 51, 84, 45, 50, 50, 53, 32, 56, 56, 81, 45, 50, 49, 51, 32, 52, 52, 32, 45, 50, 49, 51, 32, 45, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 65, 69, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 48, 52, 34, 32, 100, 61, 34, 77, 51, 55, 49, 32, 56, 55, 53, 81, 51, 55, 49, 32, 57, 49, 51, 32, 52, 52, 49, 32, 49, 48, 49, 50, 81, 53, 49, 56, 32, 49, 49, 50, 49, 32, 53, 56, 51, 32, 49, 49, 53, 52, 81, 54, 49, 54, 32, 49, 49, 50, 56, 32, 54, 51, 54, 32, 49, 48, 52, 56, 84, 54, 53, 54, 32, 56, 57, 49, 86, 56, 55, 49, 81, 54, 53, 53, 32, 56, 54, 51, 32, 54, 53, 53, 32, 56, 54, 48, 81, 54, 52, 56, 32, 55, 56, 55, 32, 53, 57, 55, 32, 55, 48, 55, 81, 53, 54, 48, 32, 54, 52, 57, 32, 52, 56, 51, 32, 53, 54, 54, 81, 52, 50, 51, 32, 53, 48, 52, 32, 51, 54, 51, 32, 52, 52, 51, 81, 50, 57, 54, 32, 51, 55, 53, 32, 50, 51, 51, 32, 51, 48, 56, 84, 49, 52, 49, 32, 49, 57, 48, 81, 49, 48, 56, 32, 49, 50, 57, 32, 57, 57, 32, 53, 51, 81, 57, 57, 32, 45, 50, 50, 10, 49, 49, 49, 32, 45, 55, 49, 84, 49, 54, 49, 32, 45, 49, 53, 54, 84, 50, 53, 49, 32, 45, 50, 49, 52, 84, 51, 54, 55, 32, 45, 50, 51, 53, 81, 52, 53, 51, 32, 45, 50, 51, 53, 32, 53, 50, 48, 32, 45, 49, 55, 55, 81, 53, 57, 49, 32, 45, 49, 49, 54, 32, 53, 57, 49, 32, 45, 50, 57, 81, 53, 57, 49, 32, 53, 57, 32, 53, 52, 52, 32, 49, 49, 49, 81, 52, 57, 50, 32, 49, 54, 57, 32, 51, 57, 50, 32, 49, 54, 57, 81, 50, 55, 55, 32, 49, 54, 57, 32, 50, 51, 52, 32, 56, 54, 81, 50, 48, 54, 32, 51, 50, 32, 50, 48, 54, 32, 45, 55, 48, 81, 50, 49, 48, 32, 45, 55, 56, 32, 50, 48, 51, 32, 45, 56, 48, 84, 49, 57, 53, 32, 45, 55, 55, 81, 49, 55, 56, 32, 45, 52, 53, 32, 49, 55, 56, 32, 56, 81, 49, 55, 56, 32, 49, 48, 56, 32, 50, 51, 50, 32, 49, 55, 57, 81, 50, 57, 57, 32, 50, 54, 56, 32, 52, 50, 53, 32, 50, 54, 56, 81, 53, 50, 53, 32, 50, 54, 56, 32, 53, 57, 55, 32, 50, 48, 51, 81, 54, 55, 57, 32, 49, 50, 57, 32, 54, 55, 57, 32, 49, 81, 54, 55, 57, 32, 45, 49, 52, 49, 32, 53, 53, 53, 10, 45, 50, 49, 53, 81, 52, 54, 55, 32, 45, 50, 54, 55, 32, 51, 56, 48, 32, 45, 50, 54, 55, 81, 50, 50, 53, 32, 45, 50, 54, 55, 32, 49, 51, 50, 32, 45, 50, 48, 54, 81, 53, 55, 32, 45, 49, 53, 55, 32, 50, 52, 32, 45, 55, 49, 81, 48, 32, 45, 57, 32, 48, 32, 54, 48, 81, 48, 32, 49, 57, 57, 32, 57, 51, 32, 51, 51, 53, 81, 49, 53, 53, 32, 52, 50, 53, 32, 50, 54, 57, 32, 53, 50, 54, 81, 51, 54, 57, 32, 54, 49, 52, 32, 51, 55, 49, 32, 54, 50, 50, 86, 56, 55, 53, 90, 77, 53, 56, 51, 32, 49, 48, 54, 51, 81, 53, 49, 56, 32, 49, 48, 49, 55, 32, 52, 54, 57, 32, 57, 51, 50, 84, 51, 57, 52, 32, 55, 51, 55, 86, 54, 52, 51, 81, 52, 54, 55, 32, 54, 57, 54, 32, 53, 51, 54, 32, 55, 55, 52, 81, 54, 49, 53, 32, 56, 54, 51, 32, 54, 49, 53, 32, 57, 48, 56, 81, 54, 49, 53, 32, 57, 54, 55, 32, 54, 48, 57, 32, 49, 48, 48, 48, 84, 53, 56, 51, 32, 49, 48, 54, 51, 90, 77, 51, 55, 49, 32, 54, 50, 50, 76, 51, 57, 52, 32, 54, 52, 51, 86, 45, 52, 57, 48, 81, 51, 57, 52, 32, 45, 53, 54, 51, 10, 51, 51, 55, 32, 45, 54, 49, 48, 81, 50, 56, 52, 32, 45, 54, 53, 52, 32, 50, 49, 49, 32, 45, 54, 53, 52, 81, 49, 53, 53, 32, 45, 54, 53, 52, 32, 49, 49, 52, 32, 45, 54, 50, 57, 81, 54, 56, 32, 45, 54, 48, 49, 32, 52, 54, 32, 45, 53, 52, 54, 81, 52, 49, 32, 45, 53, 51, 53, 32, 51, 57, 32, 45, 53, 49, 52, 84, 51, 55, 32, 45, 52, 55, 50, 81, 51, 55, 32, 45, 52, 48, 54, 32, 54, 54, 32, 45, 51, 54, 54, 84, 49, 53, 55, 32, 45, 51, 50, 54, 81, 50, 49, 54, 32, 45, 51, 50, 54, 32, 50, 52, 53, 32, 45, 51, 54, 51, 81, 50, 54, 57, 32, 45, 51, 57, 52, 32, 50, 54, 57, 32, 45, 52, 52, 53, 81, 50, 54, 57, 32, 45, 52, 57, 51, 32, 50, 52, 49, 32, 45, 53, 50, 57, 84, 49, 54, 54, 32, 45, 53, 54, 54, 81, 49, 49, 56, 32, 45, 53, 54, 54, 32, 54, 53, 32, 45, 53, 50, 52, 81, 56, 54, 32, 45, 53, 55, 57, 32, 49, 50, 52, 32, 45, 54, 48, 54, 81, 49, 53, 56, 32, 45, 54, 51, 48, 32, 50, 48, 52, 32, 45, 54, 51, 48, 81, 50, 54, 54, 32, 45, 54, 51, 48, 32, 51, 49, 56, 32, 45, 53, 57, 48, 84, 51, 55, 49, 10, 45, 53, 48, 49, 86, 54, 50, 50, 90, 77, 53, 53, 54, 32, 45, 53, 51, 50, 81, 53, 57, 49, 32, 45, 53, 51, 50, 32, 54, 49, 55, 32, 45, 53, 53, 54, 84, 54, 52, 51, 32, 45, 54, 49, 53, 81, 54, 52, 51, 32, 45, 54, 52, 48, 32, 54, 51, 52, 32, 45, 54, 53, 54, 84, 54, 48, 50, 32, 45, 54, 57, 53, 81, 54, 50, 57, 32, 45, 55, 51, 49, 32, 54, 50, 57, 32, 45, 55, 55, 48, 81, 54, 50, 57, 32, 45, 56, 48, 50, 32, 54, 48, 56, 32, 45, 56, 50, 51, 84, 53, 52, 53, 32, 45, 56, 52, 52, 81, 52, 53, 55, 32, 45, 56, 52, 52, 32, 52, 53, 55, 32, 45, 55, 52, 57, 81, 52, 54, 55, 32, 45, 55, 48, 54, 32, 53, 48, 48, 32, 45, 54, 56, 50, 81, 52, 56, 54, 32, 45, 54, 54, 56, 32, 52, 55, 53, 32, 45, 54, 52, 55, 84, 52, 54, 52, 32, 45, 54, 49, 48, 81, 52, 54, 52, 32, 45, 53, 55, 53, 32, 52, 57, 49, 32, 45, 53, 53, 52, 84, 53, 53, 54, 32, 45, 53, 51, 50, 90, 77, 53, 54, 51, 32, 45, 53, 53, 53, 81, 53, 52, 53, 32, 45, 53, 53, 53, 32, 53, 51, 51, 32, 45, 53, 54, 54, 84, 53, 50, 48, 32, 45, 53, 57, 53, 81, 53, 50, 48, 10, 45, 54, 49, 48, 32, 53, 51, 50, 32, 45, 54, 50, 56, 81, 53, 51, 55, 32, 45, 54, 51, 53, 32, 53, 54, 50, 32, 45, 54, 53, 51, 81, 53, 54, 54, 32, 45, 54, 53, 54, 32, 53, 55, 51, 32, 45, 54, 54, 49, 81, 53, 56, 56, 32, 45, 54, 54, 51, 32, 54, 48, 56, 32, 45, 54, 52, 56, 84, 54, 50, 56, 32, 45, 54, 49, 52, 81, 54, 50, 56, 32, 45, 53, 57, 51, 32, 54, 49, 48, 32, 45, 53, 55, 54, 84, 53, 54, 51, 32, 45, 53, 53, 53, 90, 77, 53, 49, 56, 32, 45, 55, 49, 57, 81, 52, 57, 50, 32, 45, 55, 49, 57, 32, 52, 56, 50, 32, 45, 55, 51, 52, 81, 52, 55, 57, 32, 45, 55, 51, 57, 32, 52, 55, 49, 32, 45, 55, 54, 51, 81, 52, 55, 53, 32, 45, 55, 57, 51, 32, 52, 57, 50, 32, 45, 56, 49, 51, 81, 52, 57, 55, 32, 45, 56, 49, 56, 32, 53, 48, 53, 32, 45, 56, 50, 50, 81, 53, 50, 50, 32, 45, 56, 51, 49, 32, 53, 51, 56, 32, 45, 56, 51, 49, 81, 53, 53, 52, 32, 45, 56, 51, 49, 32, 53, 54, 54, 32, 45, 56, 50, 50, 84, 53, 56, 51, 32, 45, 55, 56, 57, 81, 53, 55, 51, 32, 45, 55, 54, 48, 32, 53, 54, 55, 10, 45, 55, 53, 50, 81, 53, 53, 51, 32, 45, 55, 51, 51, 32, 53, 49, 56, 32, 45, 55, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 55, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 67, 99, 101, 100, 105, 108, 108, 97, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 49, 55, 34, 32, 100, 61, 34, 77, 52, 49, 55, 32, 48, 72, 51, 57, 50, 86, 57, 51, 72, 50, 53, 86, 48, 72, 48, 86, 52, 49, 55, 72, 50, 53, 86, 51, 51, 49, 72, 51, 57, 50, 86, 52, 49, 55, 72, 52, 49, 55, 86, 48, 90, 77, 51, 57, 50, 32, 49, 53, 56, 86, 50, 54, 54, 72, 50, 53, 86, 49, 53, 56, 72, 51, 57, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 49, 55, 34, 32, 100, 61, 34, 77, 52, 49, 55, 32, 48, 72, 51, 57, 50, 86, 57, 51, 72, 50, 53, 86, 48, 72, 48, 86, 52, 49, 55, 72, 50, 53, 86, 51, 51, 49, 72, 51, 57, 50, 86, 52, 49, 55, 72, 52, 49, 55, 86, 48, 90, 77, 51, 57, 50, 32, 49, 53, 56, 86, 50, 54, 54, 72, 50, 53, 86, 49, 53, 56, 72, 51, 57, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 48, 53, 34, 32, 100, 61, 34, 77, 52, 48, 53, 32, 48, 81, 52, 48, 53, 32, 45, 54, 57, 32, 51, 51, 54, 32, 45, 49, 48, 52, 81, 50, 56, 49, 32, 45, 49, 51, 51, 32, 49, 57, 56, 32, 45, 49, 51, 51, 81, 49, 50, 49, 32, 45, 49, 51, 51, 32, 54, 53, 32, 45, 49, 48, 49, 81, 48, 32, 45, 54, 53, 32, 48, 32, 48, 81, 48, 32, 54, 53, 32, 54, 52, 32, 49, 48, 50, 81, 49, 50, 48, 32, 49, 51, 51, 32, 49, 57, 56, 32, 49, 51, 51, 81, 50, 55, 55, 32, 49, 51, 51, 32, 51, 51, 54, 32, 49, 48, 49, 81, 52, 48, 53, 32, 54, 53, 32, 52, 48, 53, 32, 48, 90, 77, 50, 57, 51, 32, 45, 50, 49, 81, 50, 57, 51, 32, 48, 32, 50, 56, 53, 32, 50, 51, 81, 50, 55, 52, 32, 53, 51, 32, 50, 53, 50, 32, 55, 55, 81, 50, 50, 50, 32, 49, 48, 56, 32, 49, 56, 52, 32, 49, 48, 56, 76, 49, 54, 52, 10, 49, 48, 54, 81, 49, 52, 49, 32, 57, 57, 32, 49, 50, 56, 32, 55, 56, 81, 49, 50, 50, 32, 54, 52, 32, 49, 50, 48, 32, 53, 52, 84, 49, 49, 55, 32, 50, 55, 81, 49, 49, 55, 32, 52, 32, 49, 50, 54, 32, 45, 51, 48, 84, 49, 54, 48, 32, 45, 56, 53, 81, 49, 56, 51, 32, 45, 49, 48, 56, 32, 50, 50, 50, 32, 45, 49, 48, 56, 81, 50, 50, 56, 32, 45, 49, 48, 56, 32, 50, 52, 48, 32, 45, 49, 48, 54, 81, 50, 54, 56, 32, 45, 57, 56, 32, 50, 56, 48, 32, 45, 55, 54, 84, 50, 57, 51, 32, 45, 50, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 48, 53, 34, 32, 100, 61, 34, 77, 49, 57, 56, 32, 45, 49, 51, 51, 81, 49, 50, 49, 32, 45, 49, 51, 51, 32, 54, 53, 32, 45, 49, 48, 49, 81, 48, 32, 45, 54, 53, 32, 48, 32, 48, 81, 48, 32, 54, 53, 32, 54, 52, 32, 49, 48, 50, 81, 49, 50, 48, 32, 49, 51, 51, 32, 49, 57, 56, 32, 49, 51, 51, 81, 50, 55, 55, 32, 49, 51, 51, 32, 51, 51, 54, 32, 49, 48, 49, 81, 52, 48, 53, 32, 54, 53, 32, 52, 48, 53, 32, 48, 81, 52, 48, 53, 32, 45, 54, 57, 32, 51, 51, 54, 32, 45, 49, 48, 52, 81, 50, 56, 49, 32, 45, 49, 51, 51, 32, 49, 57, 56, 32, 45, 49, 51, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 48, 34, 32, 100, 61, 34, 77, 49, 52, 32, 45, 54, 54, 81, 49, 56, 32, 45, 56, 52, 32, 50, 55, 32, 45, 57, 49, 84, 54, 51, 32, 45, 57, 56, 81, 49, 49, 51, 32, 45, 57, 48, 32, 49, 55, 56, 32, 45, 52, 53, 84, 50, 53, 54, 32, 51, 53, 81, 50, 54, 51, 32, 52, 56, 32, 50, 54, 51, 32, 54, 49, 81, 50, 54, 51, 32, 55, 55, 32, 50, 53, 50, 32, 56, 56, 84, 50, 50, 48, 32, 49, 48, 48, 81, 50, 48, 50, 32, 49, 48, 48, 32, 49, 55, 57, 32, 57, 48, 81, 56, 54, 32, 52, 51, 32, 52, 55, 32, 51, 81, 49, 52, 32, 45, 51, 49, 32, 49, 52, 32, 45, 54, 54, 90, 77, 49, 56, 53, 32, 49, 51, 53, 81, 50, 48, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 51, 48, 84, 50, 54, 51, 32, 49, 49, 49, 84, 50, 56, 57, 32, 56, 48, 84, 50, 57, 57, 32, 51, 56, 81, 50, 57, 57, 10, 49, 32, 50, 55, 50, 32, 45, 51, 57, 84, 49, 57, 49, 32, 45, 49, 48, 55, 84, 56, 49, 32, 45, 49, 51, 53, 81, 45, 49, 53, 32, 45, 49, 51, 53, 32, 45, 49, 53, 32, 45, 51, 57, 81, 45, 49, 53, 32, 49, 53, 32, 51, 52, 32, 54, 57, 81, 57, 52, 32, 49, 51, 53, 32, 49, 56, 53, 32, 49, 51, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 73, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 48, 34, 32, 100, 61, 34, 77, 49, 56, 53, 32, 49, 51, 53, 81, 50, 48, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 51, 48, 84, 50, 54, 51, 32, 49, 49, 49, 84, 50, 56, 57, 32, 56, 48, 84, 50, 57, 57, 32, 51, 56, 81, 50, 57, 57, 32, 49, 32, 50, 55, 50, 32, 45, 51, 57, 84, 49, 57, 49, 32, 45, 49, 48, 55, 84, 56, 49, 32, 45, 49, 51, 53, 81, 45, 49, 53, 32, 45, 49, 51, 53, 32, 45, 49, 53, 32, 45, 51, 57, 81, 45, 49, 53, 32, 49, 53, 32, 51, 52, 32, 54, 57, 81, 57, 52, 32, 49, 51, 53, 32, 49, 56, 53, 32, 49, 51, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 73, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 52, 34, 32, 100, 61, 34, 77, 50, 48, 54, 32, 45, 53, 54, 54, 81, 50, 50, 52, 32, 45, 53, 52, 49, 32, 50, 51, 57, 32, 45, 53, 48, 48, 84, 50, 53, 53, 32, 45, 52, 49, 52, 81, 50, 53, 53, 32, 45, 51, 51, 55, 32, 50, 48, 49, 32, 45, 50, 56, 49, 81, 49, 53, 54, 32, 45, 50, 51, 53, 32, 56, 55, 32, 45, 50, 49, 52, 81, 54, 48, 32, 45, 50, 48, 55, 32, 48, 32, 45, 49, 57, 54, 86, 45, 50, 48, 81, 50, 52, 32, 45, 51, 57, 32, 53, 51, 32, 45, 54, 53, 81, 53, 57, 32, 45, 55, 48, 32, 49, 53, 52, 32, 45, 49, 53, 57, 81, 50, 48, 57, 32, 45, 50, 49, 49, 32, 50, 52, 48, 32, 45, 50, 54, 55, 81, 50, 55, 54, 32, 45, 51, 51, 51, 32, 50, 55, 54, 32, 45, 52, 48, 48, 81, 50, 55, 54, 32, 45, 52, 53, 53, 32, 50, 53, 51, 32, 45, 53, 49, 49, 81, 50, 52, 50, 10, 45, 53, 51, 56, 32, 50, 51, 51, 32, 45, 53, 53, 53, 84, 50, 48, 57, 32, 45, 53, 57, 48, 81, 50, 48, 48, 32, 45, 53, 57, 55, 32, 49, 57, 54, 32, 45, 53, 57, 55, 81, 49, 57, 49, 32, 45, 53, 57, 55, 32, 49, 57, 49, 32, 45, 53, 57, 50, 81, 49, 57, 51, 32, 45, 53, 56, 55, 32, 49, 57, 53, 32, 45, 53, 56, 50, 84, 50, 48, 54, 32, 45, 53, 54, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 73, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 52, 34, 32, 100, 61, 34, 77, 52, 49, 55, 32, 53, 49, 49, 81, 52, 52, 48, 32, 52, 53, 53, 32, 52, 52, 48, 32, 52, 48, 48, 81, 52, 52, 48, 32, 51, 51, 50, 32, 52, 48, 53, 32, 50, 54, 56, 81, 51, 55, 53, 32, 50, 49, 50, 32, 51, 49, 56, 32, 49, 53, 57, 81, 50, 55, 55, 32, 49, 50, 48, 32, 50, 51, 55, 32, 56, 51, 84, 49, 54, 52, 32, 50, 48, 86, 49, 57, 54, 81, 50, 50, 52, 32, 50, 48, 55, 32, 50, 53, 49, 32, 50, 49, 52, 81, 51, 50, 48, 32, 50, 51, 53, 32, 51, 54, 53, 32, 50, 56, 49, 81, 52, 49, 57, 32, 51, 51, 55, 32, 52, 49, 57, 32, 52, 49, 52, 81, 52, 49, 57, 32, 52, 53, 56, 32, 52, 48, 52, 32, 52, 57]).concat([57, 84, 51, 55, 48, 32, 53, 54, 54, 81, 51, 54, 51, 32, 53, 55, 53, 32, 51, 53, 55, 32, 53, 56, 55, 81, 51, 53, 54, 10, 53, 56, 57, 32, 51, 53, 53, 32, 53, 57, 50, 81, 51, 53, 53, 32, 53, 57, 55, 32, 51, 54, 48, 32, 53, 57, 55, 81, 51, 54, 52, 32, 53, 57, 55, 32, 51, 55, 51, 32, 53, 57, 48, 81, 51, 56, 50, 32, 53, 55, 57, 32, 51, 57, 50, 32, 53, 54, 50, 84, 52, 49, 55, 32, 53, 49, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 99, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 73, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 52, 54, 34, 32, 100, 61, 34, 77, 54, 49, 52, 32, 57, 48, 54, 81, 54, 49, 52, 32, 56, 54, 49, 32, 53, 51, 54, 32, 55, 55, 50, 81, 52, 54, 56, 32, 54, 57, 53, 32, 51, 57, 52, 32, 54, 52, 49, 86, 55, 51, 53, 81, 52, 49, 57, 32, 56, 52, 51, 32, 52, 54, 57, 32, 57, 51, 48, 84, 53, 56, 51, 32, 49, 48, 54, 51, 81, 54, 48, 49, 32, 49, 48, 51, 54, 32, 54, 48, 55, 32, 57, 57, 56, 84, 54, 49, 52, 32, 57, 48, 54, 90, 77, 51, 54, 55, 32, 45, 50, 51, 54, 81, 51, 48, 49, 32, 45, 50, 51, 54, 32, 50, 53, 49, 32, 45, 50, 49, 54, 84, 49, 54, 50, 32, 45, 49, 53, 56, 81, 57, 56, 32, 45, 57, 53, 32, 57, 56, 32, 49, 52, 81, 57, 56, 32, 50, 51, 32, 57, 56, 32, 51, 50, 81, 49, 48, 48, 32, 52, 53, 32, 49, 48, 48, 32, 53, 49, 81, 49, 48, 48, 10, 49, 50, 53, 32, 49, 51, 52, 32, 49, 56, 56, 81, 49, 54, 50, 32, 50, 51, 57, 32, 50, 50, 56, 32, 51, 48, 54, 84, 51, 54, 51, 32, 52, 52, 49, 76, 51, 55, 49, 32, 52, 52, 57, 86, 50, 54, 50, 81, 50, 55, 51, 32, 50, 52, 51, 32, 50, 50, 49, 32, 49, 54, 49, 81, 49, 55, 56, 32, 57, 51, 32, 49, 55, 56, 32, 54, 81, 49, 55, 56, 32, 45, 52, 55, 32, 49, 57, 53, 32, 45, 55, 56, 81, 49, 57, 53, 32, 45, 56, 51, 32, 50, 48, 51, 32, 45, 56, 49, 84, 50, 48, 55, 32, 45, 55, 49, 81, 50, 48, 55, 32, 50, 57, 32, 50, 51, 49, 32, 56, 50, 81, 50, 54, 57, 32, 49, 54, 54, 32, 51, 55, 49, 32, 49, 54, 54, 86, 45, 50, 51, 55, 76, 51, 54, 55, 32, 45, 50, 51, 54, 90, 77, 53, 57, 49, 32, 45, 51, 48, 81, 53, 57, 49, 32, 45, 49, 49, 48, 32, 53, 51, 50, 32, 45, 49, 54, 57, 84, 51, 57, 52, 32, 45, 50, 51, 54, 86, 49, 54, 55, 81, 52, 57, 48, 32, 49, 54, 55, 32, 53, 52, 51, 32, 49, 48, 57, 81, 53, 57, 49, 32, 53, 54, 32, 53, 57, 49, 32, 45, 51, 48, 90, 77, 54, 53, 53, 32, 56, 53, 56, 81, 54, 53, 54, 10, 56, 54, 54, 32, 54, 53, 54, 32, 56, 55, 53, 84, 54, 53, 54, 32, 56, 57, 48, 81, 54, 53, 54, 32, 57, 54, 55, 32, 54, 51, 54, 32, 49, 48, 52, 55, 84, 53, 56, 51, 32, 49, 49, 53, 52, 81, 53, 49, 55, 32, 49, 49, 50, 48, 32, 52, 52, 49, 32, 49, 48, 49, 49, 81, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 49, 32, 56, 55, 50, 86, 54, 50, 48, 81, 51, 54, 57, 32, 54, 49, 48, 32, 50, 55, 48, 32, 53, 50, 52, 81, 49, 53, 54, 32, 52, 50, 52, 32, 57, 52, 32, 51, 51, 52, 81, 48, 32, 49, 57, 55, 32, 48, 32, 53, 57, 81, 48, 32, 45, 49, 52, 32, 50, 50, 32, 45, 55, 50, 81, 53, 52, 32, 45, 49, 53, 54, 32, 49, 50, 56, 32, 45, 50, 48, 54, 81, 50, 50, 48, 32, 45, 50, 54, 56, 32, 51, 55, 49, 32, 45, 50, 54, 56, 86, 45, 53, 48, 51, 81, 51, 55, 49, 32, 45, 53, 53, 48, 32, 51, 49, 57, 32, 45, 53, 57, 48, 84, 50, 48, 52, 32, 45, 54, 51, 49, 81, 49, 53, 57, 32, 45, 54, 51, 49, 32, 49, 50, 54, 32, 45, 54, 48, 56, 81, 56, 55, 32, 45, 53, 56, 49, 32, 54, 54, 32, 45, 53, 50, 53, 81, 57, 51, 10, 45, 53, 52, 54, 32, 49, 49, 56, 32, 45, 53, 53, 54, 84, 49, 54, 54, 32, 45, 53, 54, 55, 81, 50, 49, 49, 32, 45, 53, 54, 55, 32, 50, 52, 48, 32, 45, 53, 51, 48, 84, 50, 54, 57, 32, 45, 52, 52, 54, 81, 50, 54, 57, 32, 45, 51, 57, 54, 32, 50, 52, 54, 32, 45, 51, 54, 53, 81, 50, 49, 55, 32, 45, 51, 50, 55, 32, 49, 53, 55, 32, 45, 51, 50, 55, 81, 57, 54, 32, 45, 51, 50, 55, 32, 54, 55, 32, 45, 51, 54, 55, 84, 51, 55, 32, 45, 52, 55, 51, 81, 51, 55, 32, 45, 52, 57, 52, 32, 51, 57, 32, 45, 53, 49, 52, 84, 52, 55, 32, 45, 53, 52, 56, 81, 54, 56, 32, 45, 54, 48, 49, 32, 49, 49, 51, 32, 45, 54, 50, 56, 84, 50, 49, 49, 32, 45, 54, 53, 53, 81, 50, 56, 52, 32, 45, 54, 53, 53, 32, 51, 51, 55, 32, 45, 54, 49, 50, 81, 51, 57, 52, 32, 45, 53, 54, 53, 32, 51, 57, 52, 32, 45, 52, 57, 49, 86, 45, 50, 54, 55, 81, 52, 56, 51, 32, 45, 50, 54, 55, 32, 53, 54, 54, 32, 45, 50, 49, 50, 81, 54, 55, 57, 32, 45, 49, 51, 55, 32, 54, 55, 57, 32, 45, 49, 81, 54, 55, 57, 32, 49, 50, 55, 10, 53, 57, 55, 32, 50, 48, 49, 81, 53, 50, 53, 32, 50, 54, 54, 32, 52, 50, 53, 32, 50, 54, 54, 76, 51, 57, 52, 32, 50, 54, 53, 86, 52, 55, 51, 81, 52, 55, 50, 32, 53, 53, 49, 32, 53, 48, 54, 32, 53, 56, 56, 81, 53, 55, 48, 32, 54, 53, 57, 32, 54, 48, 53, 32, 55, 49, 56, 81, 54, 52, 56, 32, 55, 57, 49, 32, 54, 53, 53, 32, 56, 53, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 69, 116, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 57, 56, 34, 32, 100, 61, 34, 77, 49, 53, 56, 32, 49, 49, 49, 81, 49, 56, 54, 32, 49, 49, 49, 32, 50, 48, 48, 32, 49, 48, 53, 81, 50, 48, 56, 32, 49, 48, 50, 32, 50, 49, 53, 32, 57, 56, 84, 50, 50, 57, 32, 56, 55, 84, 50, 52, 54, 32, 54, 50, 76, 50, 54, 50, 32, 50, 51, 81, 50, 54, 50, 32, 45, 50, 32, 50, 53, 53, 32, 45, 49, 55, 81, 50, 53, 49, 32, 45, 51, 52, 32, 50, 51, 54, 32, 45, 52, 56, 81, 50, 50, 57, 32, 45, 53, 54, 32, 50, 50, 50, 32, 45, 54, 49, 81, 50, 49, 57, 32, 45, 54, 51, 32, 50, 48, 51, 32, 45, 55, 51, 81, 49, 57, 51, 32, 45, 55, 57, 32, 49, 55, 57, 32, 45, 56, 52, 84, 49, 53, 50, 32, 45, 57, 49, 81, 49, 50, 50, 32, 45, 57, 49, 32, 57, 53, 32, 45, 56, 51, 81, 55, 50, 32, 45, 55, 52, 32, 52, 48, 32, 45, 52, 55, 81, 53, 10, 45, 49, 53, 32, 53, 32, 53, 51, 81, 53, 32, 56, 52, 32, 49, 51, 32, 49, 49, 52, 81, 50, 50, 32, 49, 52, 49, 32, 51, 55, 32, 49, 54, 53, 81, 54, 48, 32, 50, 48, 54, 32, 57, 56, 32, 50, 50, 54, 84, 49, 56, 51, 32, 50, 53, 54, 76, 50, 50, 48, 32, 50, 54, 50, 76, 50, 51, 54, 32, 50, 54, 54, 81, 50, 55, 55, 32, 50, 54, 54, 32, 51, 49, 48, 32, 50, 54, 49, 84, 51, 55, 51, 32, 50, 52, 51, 81, 52, 50, 56, 32, 50, 49, 57, 32, 52, 54, 48, 32, 49, 55, 54, 81, 52, 57, 51, 32, 49, 51, 56, 32, 53, 49, 48, 32, 56, 52, 81, 53, 50, 56, 32, 51, 54, 32, 53, 50, 56, 32, 45, 50, 51, 81, 53, 50, 56, 32, 45, 57, 50, 32, 53, 49, 49, 32, 45, 49, 53, 52, 84, 52, 54, 48, 32, 45, 50, 55, 51, 81, 51, 57, 51, 32, 45, 51, 56, 49, 32, 50, 56, 55, 32, 45, 52, 53, 48, 81, 50, 54, 55, 32, 45, 52, 54, 51, 32, 50, 51, 50, 32, 45, 52, 56, 50, 81, 50, 48, 52, 32, 45, 52, 57, 56, 32, 49, 55, 52, 32, 45, 53, 49, 50, 81, 49, 49, 54, 32, 45, 53, 51, 57, 32, 52, 56, 32, 45, 53, 54, 49, 76, 49, 56, 10, 45, 53, 54, 54, 81, 52, 32, 45, 53, 54, 54, 32, 52, 32, 45, 53, 53, 56, 81, 54, 32, 45, 53, 53, 48, 32, 56, 32, 45, 53, 52, 56, 76, 49, 52, 32, 45, 53, 52, 50, 81, 52, 53, 32, 45, 53, 50, 57, 32, 54, 52, 32, 45, 53, 50, 48, 81, 57, 52, 32, 45, 53, 48, 54, 32, 49, 49, 48, 32, 45, 52, 57, 56, 76, 49, 56, 56, 32, 45, 52, 53, 53, 81, 50, 50, 51, 32, 45, 52, 51, 52, 32, 50, 52, 57, 32, 45, 52, 49, 50, 84, 51, 48, 49, 32, 45, 51, 54, 48, 81, 51, 52, 54, 32, 45, 51, 48, 56, 32, 51, 55, 53, 32, 45, 50, 51, 48, 81, 51, 55, 57, 32, 45, 50, 49, 56, 32, 51, 56, 53, 32, 45, 49, 57, 55, 84, 51, 57, 55, 32, 45, 49, 53, 51, 84, 52, 48, 55, 32, 45, 57, 55, 84, 52, 49, 51, 32, 45, 53, 56, 81, 52, 48, 50, 32, 52, 53, 32, 51, 57, 48, 32, 56, 50, 81, 51, 56, 54, 32, 49, 48, 48, 32, 51, 56, 52, 32, 49, 48, 53, 84, 51, 55, 52, 32, 49, 50, 50, 81, 51, 54, 50, 32, 49, 52, 48, 32, 51, 52, 51, 32, 49, 53, 54, 81, 51, 48, 56, 32, 49, 56, 56, 32, 50, 50, 53, 32, 50, 48, 48, 81, 49, 57, 49, 10, 50, 48, 48, 32, 49, 54, 51, 32, 49, 57, 52, 84, 49, 49, 50, 32, 49, 55, 50, 81, 55, 48, 32, 49, 52, 51, 32, 55, 48, 32, 57, 57, 81, 55, 48, 32, 57, 49, 32, 55, 48, 32, 56, 51, 81, 55, 51, 32, 55, 53, 32, 55, 52, 32, 55, 50, 81, 49, 49, 48, 32, 49, 48, 53, 32, 49, 53, 56, 32, 49, 49, 49, 90, 77, 54, 52, 50, 32, 45, 54, 48, 81, 54, 53, 52, 32, 45, 54, 48, 32, 54, 54, 53, 32, 45, 54, 52, 84, 54, 56, 50, 32, 45, 55, 56, 84, 54, 57, 50, 32, 45, 57, 53, 84, 54, 57, 56, 32, 45, 49, 49, 56, 81, 54, 57, 56, 32, 45, 49, 51, 49, 32, 54, 57, 51, 32, 45, 49, 51, 57, 81, 54, 57, 48, 32, 45, 49, 52, 56, 32, 54, 56, 48, 32, 45, 49, 54, 48, 81, 54, 54, 53, 32, 45, 49, 55, 54, 32, 54, 52, 50, 32, 45, 49, 55, 54, 81, 54, 49, 53, 32, 45, 49, 55, 54, 32, 54, 48, 49, 32, 45, 49, 53, 57, 81, 53, 56, 53, 32, 45, 49, 52, 50, 32, 53, 56, 53, 32, 45, 49, 49, 56, 81, 53, 56, 53, 32, 45, 57, 52, 32, 54, 48, 49, 32, 45, 55, 55, 81, 54, 49, 53, 32, 45, 54, 48, 32, 54, 52, 50, 10, 45, 54, 48, 90, 77, 54, 52, 50, 32, 49, 55, 55, 81, 54, 54, 53, 32, 49, 55, 55, 32, 54, 56, 49, 32, 49, 54, 48, 84, 54, 57, 56, 32, 49, 49, 57, 81, 54, 57, 56, 32, 57, 55, 32, 54, 56, 50, 32, 55, 57, 84, 54, 52, 50, 32, 54, 49, 76, 54, 49, 57, 32, 54, 52, 81, 54, 49, 49, 32, 54, 55, 32, 54, 48, 49, 32, 55, 55, 81, 53, 56, 53, 32, 57, 53, 32, 53, 56, 53, 32, 49, 49, 57, 76, 53, 56, 56, 32, 49, 52, 50, 81, 53, 57, 51, 32, 49, 53, 51, 32, 54, 48, 49, 32, 49, 54, 48, 81, 54, 49, 54, 32, 49, 55, 55, 32, 54, 52, 50, 32, 49, 55, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 78, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 53, 54, 34, 32, 100, 61, 34, 77, 48, 32, 53, 52, 54, 72, 49, 50, 56, 86, 45, 53, 51, 54, 72, 48, 86, 53, 52, 54, 90, 77, 49, 57, 48, 32, 53, 52, 54, 72, 50, 51, 55, 86, 53, 48, 81, 50, 52, 54, 32, 53, 53, 32, 50, 53, 54, 32, 54, 51, 84, 50, 55, 55, 32, 56, 49, 81, 50, 57, 52, 32, 49, 48, 48, 32, 51, 48, 54, 32, 49, 50, 51, 81, 51, 49, 54, 32, 49, 52, 54, 32, 51, 50, 50, 32, 49, 55, 54, 81, 51, 50, 55, 32, 50, 48, 57, 32, 51, 50, 55, 32, 50, 52, 52, 81, 51, 51, 57, 32, 49, 56, 55, 32, 52, 48, 54, 32, 49, 55, 56, 81, 52, 54, 56, 32, 49, 57, 51, 32, 52, 57, 49, 32, 50, 51, 53, 84, 53, 49, 53, 32, 51, 53, 56, 81, 53, 49, 53, 32, 51, 57, 51, 32, 53, 48, 55, 32, 52, 50, 48, 84, 52, 56, 49, 32, 52, 54, 54, 81, 52, 53, 49, 32, 53, 48, 52, 10, 52, 48, 54, 32, 53, 48, 52, 81, 51, 55, 54, 32, 53, 48, 52, 32, 51, 53, 54, 32, 52, 56, 49, 84, 51, 51, 53, 32, 52, 49, 51, 81, 51, 52, 48, 32, 52, 50, 51, 32, 51, 52, 57, 32, 52, 50, 56, 84, 51, 55, 55, 32, 52, 51, 57, 81, 51, 56, 54, 32, 52, 51, 57, 32, 51, 57, 53, 32, 52, 51, 53, 76, 52, 49, 51, 32, 52, 50, 52, 76, 52, 50, 52, 32, 52, 48, 57, 76, 52, 51, 49, 32, 51, 56, 57, 81, 52, 50, 52, 32, 51, 51, 55, 32, 51, 55, 49, 32, 51, 51, 55, 81, 51, 50, 57, 32, 51, 51, 55, 32, 51, 48, 56, 32, 51, 54, 52, 84, 50, 56, 55, 32, 52, 52, 51, 81, 50, 57, 52, 32, 52, 54, 56, 32, 51, 48, 49, 32, 52, 56, 51, 84, 51, 50, 48, 32, 53, 49, 48, 81, 51, 51, 49, 32, 53, 50, 50, 32, 51, 52, 53, 32, 53, 50, 56, 81, 51, 52, 55, 32, 53, 51, 48, 32, 51, 53, 55, 32, 53, 51, 52, 84, 51, 55, 52, 32, 53, 52, 48, 76, 52, 49, 49, 32, 53, 52, 52, 76, 52, 52, 57, 32, 53, 52, 54, 81, 53, 53, 49, 32, 53, 52, 54, 32, 54, 48, 51, 32, 52, 57, 53, 84, 54, 53, 53, 32, 51, 53, 50, 76, 54, 53, 57, 10, 51, 49, 54, 81, 54, 53, 57, 32, 50, 51, 49, 32, 53, 57, 51, 32, 49, 55, 49, 81, 53, 54, 48, 32, 49, 52, 52, 32, 53, 49, 51, 32, 49, 50, 56, 81, 52, 54, 51, 32, 49, 49, 52, 32, 52, 48, 51, 32, 49, 49, 52, 76, 51, 48, 50, 32, 49, 57, 86, 45, 49, 55, 76, 52, 48, 51, 32, 45, 49, 48, 55, 81, 52, 53, 49, 32, 45, 49, 48, 55, 32, 52, 56, 51, 32, 45, 49, 49, 52, 84, 53, 53, 50, 32, 45, 49, 51, 55, 81, 54, 48, 57, 32, 45, 49, 54, 54, 32, 54, 50, 56, 32, 45, 50, 49, 48, 81, 54, 51, 52, 32, 45, 50, 50, 50, 32, 54, 51, 57, 32, 45, 50, 51, 52, 84, 54, 52, 55, 32, 45, 50, 54, 50, 81, 54, 53, 53, 32, 45, 50, 57, 50, 32, 54, 53, 53, 32, 45, 51, 50, 51, 81, 54, 53, 53, 32, 45, 51, 55, 54, 32, 54, 51, 57, 32, 45, 52, 49, 52, 84, 53, 57, 49, 32, 45, 52, 56, 49, 81, 53, 53, 54, 32, 45, 53, 48, 55, 32, 53, 49, 53, 32, 45, 53, 50, 48, 84, 52, 50, 49, 32, 45, 53, 51, 52, 81, 51, 57, 53, 32, 45, 53, 51, 52, 32, 51, 55, 51, 32, 45, 53, 50, 57, 84, 51, 51, 48, 32, 45, 53, 49, 49, 84, 50, 57, 55, 10, 45, 52, 56, 48, 81, 50, 56, 53, 32, 45, 52, 53, 57, 32, 50, 56, 53, 32, 45, 52, 51, 56, 81, 50, 57, 55, 32, 45, 51, 51, 56, 32, 51, 54, 57, 32, 45, 51, 50, 57, 81, 51, 57, 51, 32, 45, 51, 50, 57, 32, 52, 49, 51, 32, 45, 51, 52, 56, 84, 52, 51, 52, 32, 45, 51, 56, 55, 81, 52, 50, 53, 32, 45, 52, 50, 53, 32, 51, 55, 49, 32, 45, 52, 51, 49, 81, 51, 53, 54, 32, 45, 52, 51, 49, 32, 51, 51, 57, 32, 45, 52, 49, 52, 81, 51, 51, 57, 32, 45, 52, 50, 56, 32, 51, 52, 49, 32, 45, 52, 51, 53, 84, 51, 52, 51, 32, 45, 52, 52, 53, 76, 51, 53, 52, 32, 45, 52, 54, 57, 81, 51, 54, 57, 32, 45, 52, 56, 54, 32, 52, 49, 49, 32, 45, 52, 57, 51, 81, 52, 52, 50, 32, 45, 52, 56, 54, 32, 52, 54, 51, 32, 45, 52, 55, 51, 84, 52, 57, 51, 32, 45, 52, 52, 48, 84, 53, 48, 54, 32, 45, 51, 57, 48, 84, 53, 49, 48, 32, 45, 51, 49, 51, 81, 53, 49, 48, 32, 45, 50, 52, 53, 32, 52, 56, 49, 32, 45, 50, 48, 54, 81, 52, 54, 54, 32, 45, 49, 56, 56, 32, 52, 52, 56, 32, 45, 49, 55, 54, 81, 52, 50, 57, 10, 45, 49, 54, 56, 32, 52, 48, 56, 32, 45, 49, 54, 56, 76, 51, 56, 48, 32, 45, 49, 55, 56, 81, 51, 54, 56, 32, 45, 49, 56, 51, 32, 51, 54, 49, 32, 45, 49, 56, 57, 81, 51, 52, 51, 32, 45, 50, 48, 52, 32, 51, 50, 52, 32, 45, 50, 52, 49, 81, 51, 50, 52, 32, 45, 49, 54, 56, 32, 51, 48, 57, 32, 45, 49, 50, 49, 81, 51, 48, 49, 32, 45, 57, 55, 32, 50, 56, 53, 32, 45, 56, 48, 84, 50, 51, 55, 32, 45, 53, 48, 86, 45, 53, 51, 54, 72, 49, 57, 48, 86, 53, 52, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 52, 54, 34, 32, 100, 61, 34, 77, 54, 49, 52, 32, 57, 48, 54, 81, 54, 49, 52, 32, 56, 54, 49, 32, 53, 51, 54, 32, 55, 55, 50, 81, 52, 54, 56, 32, 54, 57, 53, 32, 51, 57, 52, 32, 54, 52, 49, 86, 55, 51, 53, 81, 52, 49, 57, 32, 56, 52, 51, 32, 52, 54, 57, 32, 57, 51, 48, 84, 53, 56, 51, 32, 49, 48, 54, 51, 81, 54, 48, 49, 32, 49, 48, 51, 54, 32, 54, 48, 55, 32, 57, 57, 56, 84, 54, 49, 52, 32, 57, 48, 54, 90, 77, 51, 54, 55, 32, 45, 50, 51, 54, 81, 51, 48, 49, 32, 45, 50, 51, 54, 32, 50, 53, 49, 32, 45, 50, 49, 54, 84, 49, 54, 50, 32, 45, 49, 53, 56, 81, 57, 56, 32, 45, 57, 53, 32, 57, 56, 32, 49, 52, 81, 57, 56, 32, 50, 51, 32, 57, 56, 32, 51, 50, 81, 49, 48, 48, 32, 52, 53, 32, 49, 48, 48, 32, 53, 49, 81, 49, 48, 48, 32, 49, 50, 53, 10, 49, 51, 52, 32, 49, 56, 56, 81, 49, 54, 50, 32, 50, 51, 57, 32, 50, 50, 56, 32, 51, 48, 54, 84, 51, 54, 51, 32, 52, 52, 49, 76, 51, 55, 49, 32, 52, 52, 57, 86, 50, 54, 50, 81, 50, 55, 51, 32, 50, 52, 51, 32, 50, 50, 49, 32, 49, 54, 49, 81, 49, 55, 56, 32, 57, 51, 32, 49, 55, 56, 32, 54, 81, 49, 55, 56, 32, 45, 52, 55, 32, 49, 57, 53, 32, 45, 55, 56, 81, 49, 57, 53, 32, 45, 56, 51, 32, 50, 48, 51, 32, 45, 56, 49, 84, 50, 48, 55, 32, 45, 55, 49, 81, 50, 48, 55, 32, 50, 57, 32, 50, 51, 49, 32, 56, 50, 81, 50, 54, 57, 32, 49, 54, 54, 32, 51, 55, 49, 32, 49, 54, 54, 86, 45, 50, 51, 55, 76, 51, 54, 55, 32, 45, 50, 51, 54, 90, 77, 53, 57, 49, 32, 45, 51, 48, 81, 53, 57, 49, 32, 45, 49, 49, 48, 32, 53, 51, 50, 32, 45, 49, 54, 57, 84, 51, 57, 52, 32, 45, 50, 51, 54, 86, 49, 54, 55, 81, 52, 57, 48, 32, 49, 54, 55, 32, 53, 52, 51, 32, 49, 48, 57, 81, 53, 57, 49, 32, 53, 54, 32, 53, 57, 49, 32, 45, 51, 48, 90, 77, 54, 53, 53, 32, 56, 53, 56, 81, 54, 53, 54, 10, 56, 54, 54, 32, 54, 53, 54, 32, 56, 55, 53, 84, 54, 53, 54, 32, 56, 57, 48, 81, 54, 53, 54, 32, 57, 54, 55, 32, 54, 51, 54, 32, 49, 48, 52, 55, 84, 53, 56, 51, 32, 49, 49, 53, 52, 81, 53, 49, 55, 32, 49, 49, 50, 48, 32, 52, 52, 49, 32, 49, 48, 49, 49, 81, 51, 55, 49, 32, 57, 49, 49, 32, 51, 55, 49, 32, 56, 55, 50, 86, 54, 50, 48, 81, 51, 54, 57, 32, 54, 49, 48, 32, 50, 55, 48, 32, 53, 50, 52, 81, 49, 53, 54, 32, 52, 50, 52, 32, 57, 52, 32, 51, 51, 52, 81, 48, 32, 49, 57, 55, 32, 48, 32, 53, 57, 81, 48, 32, 45, 49, 52, 32, 50, 50, 32, 45, 55, 50, 81, 53, 52, 32, 45, 49, 53, 54, 32, 49, 50, 56, 32, 45, 50, 48, 54, 81, 50, 50, 48, 32, 45, 50, 54, 56, 32, 51, 55, 49, 32, 45, 50, 54, 56, 86, 45, 53, 48, 51, 81, 51, 55, 49, 32, 45, 53, 53, 48, 32, 51, 49, 57, 32, 45, 53, 57, 48, 84, 50, 48, 52, 32, 45, 54, 51, 49, 81, 49, 53, 57, 32, 45, 54, 51, 49, 32, 49, 50, 54, 32, 45, 54, 48, 56, 81, 56, 55, 32, 45, 53, 56, 49, 32, 54, 54, 32, 45, 53, 50, 53, 81, 57, 51, 10, 45, 53, 52, 54, 32, 49, 49, 56, 32, 45, 53, 53, 54, 84, 49, 54, 54, 32, 45, 53, 54, 55, 81, 50, 49, 49, 32, 45, 53, 54, 55, 32, 50, 52, 48, 32, 45, 53, 51, 48, 84, 50, 54, 57, 32, 45, 52, 52, 54, 81, 50, 54, 57, 32, 45, 51, 57, 54, 32, 50, 52, 54, 32, 45, 51, 54, 53, 81, 50, 49, 55, 32, 45, 51, 50, 55, 32, 49, 53, 55, 32, 45, 51, 50, 55, 81, 57, 54, 32, 45, 51, 50, 55, 32, 54, 55, 32, 45, 51, 54, 55, 84, 51, 55, 32, 45, 52, 55, 51, 81, 51, 55, 32, 45, 52, 57, 52, 32, 51, 57, 32, 45, 53, 49, 52, 84, 52, 55, 32, 45, 53, 52, 56, 81, 54, 56, 32, 45, 54, 48, 49, 32, 49, 49, 51, 32, 45, 54, 50, 56, 84, 50, 49, 49, 32, 45, 54, 53, 53, 81, 50, 56, 52, 32, 45, 54, 53, 53, 32, 51, 51, 55, 32, 45, 54, 49, 50, 81, 51, 57, 52, 32, 45, 53, 54, 53, 32, 51, 57, 52, 32, 45, 52, 57, 49, 86, 45, 50, 54, 55, 81, 52, 56, 51, 32, 45, 50, 54, 55, 32, 53, 54, 54, 32, 45, 50, 49, 50, 81, 54, 55, 57, 32, 45, 49, 51, 55, 32, 54, 55, 57, 32, 45, 49, 81, 54, 55, 57, 32, 49, 50, 55, 10, 53, 57, 55, 32, 50, 48, 49, 81, 53, 50, 53, 32, 50, 54, 54, 32, 52, 50, 53, 32, 50, 54, 54, 76, 51, 57, 52, 32, 50, 54, 53, 86, 52, 55, 51, 81, 52, 55, 50, 32, 53, 53, 49, 32, 53, 48, 54, 32, 53, 56, 56, 81, 53, 55, 48, 32, 54, 53, 57, 32, 54, 48, 53, 32, 55, 49, 56, 81, 54, 52, 56, 32, 55, 57, 49, 32, 54, 53, 53, 32, 56, 53, 56, 90, 77, 53, 53, 54, 32, 45, 53, 51, 50, 81, 53, 57, 49, 32, 45, 53, 51, 50, 32, 54, 49, 55, 32, 45, 53, 53, 54, 84, 54, 52, 51, 32, 45, 54, 49, 53, 81, 54, 52, 51, 32, 45, 54, 52, 48, 32, 54, 51, 52, 32, 45, 54, 53, 54, 84, 54, 48, 50, 32, 45, 54, 57, 53, 81, 54, 50, 57, 32, 45, 55, 51, 49, 32, 54, 50, 57, 32, 45, 55, 55, 48, 81, 54, 50, 57, 32, 45, 56, 48, 50, 32, 54, 48, 56, 32, 45, 56, 50, 51, 84, 53, 52, 53, 32, 45, 56, 52, 52, 81, 52, 53, 55, 32, 45, 56, 52, 52, 32, 52, 53, 55, 32, 45, 55, 52, 57, 81, 52, 54, 55, 32, 45, 55, 48, 54, 32, 53, 48, 48, 32, 45, 54, 56, 50, 81, 52, 56, 54, 32, 45, 54, 54, 56, 32, 52, 55, 53, 10, 45, 54, 52, 55, 84, 52, 54, 52, 32, 45, 54, 49, 48, 81, 52, 54, 52, 32, 45, 53, 55, 53, 32, 52, 57, 49, 32, 45, 53, 53, 52, 84, 53, 53, 54, 32, 45, 53, 51, 50, 90, 77, 53, 54, 51, 32, 45, 53, 53, 53, 81, 53, 52, 53, 32, 45, 53, 53, 53, 32, 53, 51, 51, 32, 45, 53, 54, 54, 84, 53, 50, 48, 32, 45, 53, 57, 53, 81, 53, 50, 48, 32, 45, 54, 49, 48, 32, 53, 51, 50, 32, 45, 54, 50, 56, 81, 53, 51, 55, 32, 45, 54, 51, 53, 32, 53, 54, 50, 32, 45, 54, 53, 51, 81, 53, 54, 54, 32, 45, 54, 53, 54, 32, 53, 55, 51, 32, 45, 54, 54, 49, 81, 53, 56, 56, 32, 45, 54, 54, 51, 32, 54, 48, 56, 32, 45, 54, 52, 56, 84, 54, 50, 56, 32, 45, 54, 49, 52, 81, 54, 50, 56, 32, 45, 53, 57, 51, 32, 54, 49, 48, 32, 45, 53, 55, 54, 84, 53, 54, 51, 32, 45, 53, 53, 53, 90, 77, 53, 49, 56, 32, 45, 55, 49, 57, 81, 52, 57, 50, 32, 45, 55, 49, 57, 32, 52, 56, 50, 32, 45, 55, 51, 52, 81, 52, 55, 57, 32, 45, 55, 51, 57, 32, 52, 55, 49, 32, 45, 55, 54, 51, 81, 52, 55, 53, 32, 45, 55, 57, 51, 10, 52, 57, 50, 32, 45, 56, 49, 51, 81, 52, 57, 55, 32, 45, 56, 49, 56, 32, 53, 48, 53, 32, 45, 56, 50, 50, 81, 53, 50, 50, 32, 45, 56, 51, 49, 32, 53, 51, 56, 32, 45, 56, 51, 49, 81, 53, 53, 52, 32, 45, 56, 51, 49, 32, 53, 54, 54, 32, 45, 56, 50, 50, 84, 53, 56, 51, 32, 45, 55, 56, 57, 81, 53, 55, 51, 32, 45, 55, 54, 48, 32, 53, 54, 55, 32, 45, 55, 53, 50, 81, 53, 53, 51, 32, 45, 55, 51, 51, 32, 53, 49, 56, 32, 45, 55, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 48, 34, 32, 100, 61, 34, 77, 49, 51, 54, 32, 50, 48, 48, 86, 51, 56, 50, 72, 49, 53, 51, 86, 50, 48, 53, 76, 49, 57, 55, 32, 50, 50, 48, 86, 49, 50, 51, 76, 49, 53, 51, 32, 49, 48, 56, 86, 45, 55, 48, 76, 49, 57, 55, 32, 45, 53, 55, 86, 45, 49, 53, 53, 76, 49, 53, 51, 32, 45, 49, 54, 57, 86, 45, 51, 51, 54, 72, 49, 51, 54, 86, 45, 49, 55, 52, 76, 54, 48, 32, 45, 49, 57, 56, 86, 45, 51, 54, 52, 72, 52, 51, 86, 45, 50, 48, 52, 76, 48, 32, 45, 50, 49, 56, 86, 45, 49, 50, 49, 76, 52, 51, 32, 45, 49, 48, 54, 86, 55, 51, 76, 48, 32, 53, 56, 86, 49, 53, 55, 76, 52, 51, 32, 49, 55, 49, 86, 51, 53, 51, 72, 54, 48, 86, 49, 55, 55, 76, 49, 51, 54, 32, 50, 48, 48, 90, 77, 54, 48, 32, 55, 56, 86, 45, 49, 48, 49, 76, 49, 51, 54, 10, 45, 55, 55, 86, 49, 48, 51, 76, 54, 48, 32, 55, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 50, 48, 32, 45, 50, 48, 50, 86, 51, 55, 55, 72, 51, 56, 86, 49, 55, 50, 76, 49, 55, 55, 32, 49, 57, 54, 86, 45, 51, 55, 55, 72, 49, 54, 48, 86, 45, 49, 55, 55, 76, 50, 48, 32, 45, 50, 48, 50, 90, 77, 51, 56, 32, 45, 49, 48, 56, 76, 49, 54, 48, 32, 45, 56, 57, 86, 49, 48, 48, 76, 51, 56, 32, 56, 48, 86, 45, 49, 48, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 48, 48, 34, 32, 100, 61, 34, 77, 50, 50, 32, 52, 57, 52, 72, 52, 50, 86, 49, 49, 54, 81, 55, 50, 32, 49, 51, 50, 32, 57, 51, 32, 49, 51, 56, 84, 49, 51, 53, 32, 49, 52, 52, 81, 49, 53, 50, 32, 49, 52, 52, 32, 49, 54, 51, 32, 49, 52, 49, 84, 49, 56, 57, 32, 49, 51, 48, 81, 50, 48, 56, 32, 49, 49, 56, 32, 50, 49, 54, 32, 57, 48, 76, 50, 50, 48, 32, 54, 52, 81, 50, 50, 48, 32, 49, 57, 32, 49, 55, 53, 32, 45, 51, 48, 81, 49, 53, 57, 32, 45, 52, 57, 32, 49, 52, 53, 32, 45, 54, 54, 84, 49, 49, 48, 32, 45, 49, 48, 49, 76, 50, 50, 32, 45, 49, 56, 52, 86, 52, 57, 52, 90, 77, 49, 51, 53, 32, 49, 48, 54, 76, 49, 50, 55, 32, 49, 49, 48, 76, 49, 49, 50, 32, 49, 49, 50, 81, 57, 53, 32, 49, 49, 50, 32, 55, 57, 32, 49, 48, 54, 84, 52, 50, 10, 56, 49, 86, 45, 49, 50, 51, 81, 56, 56, 32, 45, 55, 52, 32, 49, 49, 51, 32, 45, 51, 53, 81, 49, 52, 53, 32, 49, 53, 32, 49, 52, 53, 32, 53, 52, 81, 49, 52, 54, 32, 54, 56, 32, 49, 52, 54, 32, 55, 53, 81, 49, 52, 54, 32, 56, 52, 32, 49, 52, 52, 32, 57, 49, 84, 49, 51, 53, 32, 49, 48, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 48, 34, 32, 100, 61, 34, 77, 45, 50, 48, 32, 49, 49, 52, 72, 53, 56, 86, 54, 51, 76, 55, 52, 32, 52, 55, 72, 49, 53, 55, 76, 49, 55, 51, 32, 54, 50, 86, 49, 49, 52, 72, 50, 53, 49, 86, 52, 54, 72, 49, 56, 56, 76, 49, 54, 50, 32, 49, 57, 86, 45, 49, 55, 76, 49, 56, 56, 32, 45, 52, 56, 72, 50, 53, 49, 86, 45, 49, 49, 52, 72, 49, 55, 50, 86, 45, 54, 50, 76, 49, 53, 55, 32, 45, 52, 56, 72, 55, 51, 76, 53, 56, 32, 45, 54, 50, 86, 45, 49, 49, 52, 72, 45, 50, 48, 86, 45, 52, 54, 72, 52, 51, 76, 55, 48, 32, 45, 49, 55, 86, 49, 57, 76, 52, 49, 32, 52, 55, 72, 45, 50, 48, 86, 49, 49, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 55, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 109, 117, 108, 116, 105, 112, 108, 121, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 52, 34, 32, 100, 61, 34, 77, 54, 49, 32, 54, 53, 48, 81, 54, 48, 32, 54, 53, 49, 32, 53, 57, 32, 54, 53, 50, 84, 53, 56, 32, 54, 53, 53, 76, 53, 54, 32, 54, 53, 56, 81, 54, 48, 32, 54, 54, 50, 32, 54, 51, 32, 54, 54, 50, 81, 56, 50, 32, 54, 54, 50, 32, 49, 48, 53, 32, 54, 52, 49, 84, 50, 48, 48, 32, 53, 53, 52, 81, 50, 50, 54, 32, 53, 51, 48, 32, 50, 51, 52, 32, 53, 50, 49, 84, 50, 52, 57, 32, 53, 48, 53, 84, 50, 53, 57, 32, 52, 57, 48, 81, 50, 54, 56, 32, 52, 55, 56, 32, 50, 54, 56, 32, 52, 54, 49, 81, 50, 54, 56, 32, 52, 51, 48, 32, 50, 51, 48, 32, 51, 57, 54, 81, 50, 49, 49, 32, 51, 56, 48, 32, 49, 57, 56, 32, 51, 54, 56, 84, 49, 55, 56, 32, 51, 52, 54, 84, 49, 54, 53, 32, 51, 49, 57, 84, 49, 53, 52, 32, 50, 54, 53, 81, 49, 55, 53, 10, 49, 57, 55, 32, 50, 49, 55, 32, 49, 51, 55, 81, 50, 51, 52, 32, 49, 49, 48, 32, 50, 53, 57, 32, 55, 57, 84, 51, 50, 52, 32, 48, 81, 51, 49, 49, 32, 48, 32, 50, 54, 55, 32, 50, 49, 76, 50, 48, 49, 32, 53, 50, 76, 49, 55, 57, 32, 53, 56, 76, 49, 53, 52, 32, 53, 57, 81, 49, 49, 52, 32, 53, 57, 32, 57, 48, 32, 50, 55, 76, 56, 54, 32, 49, 51, 76, 56, 53, 32, 48, 81, 56, 53, 32, 45, 51, 49, 32, 49, 48, 54, 32, 45, 53, 56, 81, 49, 49, 52, 32, 45, 54, 56, 32, 49, 50, 55, 32, 45, 56, 51, 84, 49, 53, 52, 32, 45, 49, 49, 49, 81, 49, 56, 50, 32, 45, 49, 51, 52, 32, 49, 56, 52, 32, 45, 49, 52, 51, 76, 49, 56, 49, 32, 45, 49, 52, 54, 81, 49, 54, 51, 32, 45, 49, 51, 56, 32, 49, 53, 52, 32, 45, 49, 51, 48, 81, 49, 52, 56, 32, 45, 49, 50, 56, 32, 49, 51, 50, 32, 45, 49, 49, 56, 84, 49, 48, 54, 32, 45, 49, 48, 50, 81, 54, 55, 32, 45, 56, 48, 32, 51, 57, 32, 45, 52, 56, 81, 55, 32, 45, 49, 54, 32, 48, 32, 50, 55, 81, 48, 32, 49, 50, 56, 32, 56, 53, 32, 49, 50, 56, 81, 49, 53, 48, 10, 49, 50, 56, 32, 50, 51, 48, 32, 55, 51, 81, 50, 48, 48, 32, 49, 49, 52, 32, 49, 55, 49, 32, 49, 52, 51, 76, 49, 51, 55, 32, 49, 55, 53, 76, 57, 52, 32, 50, 49, 50, 81, 53, 48, 32, 50, 52, 56, 32, 51, 50, 32, 50, 54, 57, 84, 49, 51, 32, 51, 49, 48, 81, 49, 51, 51, 32, 52, 49, 50, 32, 49, 51, 51, 32, 53, 48, 53, 81, 49, 51, 51, 32, 53, 50, 50, 32, 49, 50, 57, 32, 53, 52, 48, 84, 49, 49, 52, 32, 53, 55, 55, 81, 57, 54, 32, 54, 49, 53, 32, 54, 49, 32, 54, 53, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 115, 108, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 57, 48, 34, 32, 100, 61, 34, 77, 48, 32, 51, 57, 50, 81, 54, 32, 52, 50, 48, 32, 50, 53, 32, 52, 51, 53, 81, 52, 52, 32, 52, 53, 50, 32, 55, 51, 32, 52, 53, 53, 81, 49, 48, 51, 32, 52, 53, 50, 32, 49, 49, 55, 32, 52, 52, 49, 81, 49, 50, 50, 32, 52, 51, 55, 32, 49, 50, 56, 32, 52, 50, 53, 84, 49, 51, 57, 32, 52, 48, 50, 81, 49, 51, 57, 32, 51, 56, 55, 32, 49, 51, 56, 32, 51, 56, 50, 84, 49, 51, 52, 32, 51, 55, 51, 84, 49, 50, 55, 32, 51, 54, 53, 81, 49, 49, 57, 32, 51, 53, 51, 32, 56, 53, 32, 51, 52, 52, 76, 57, 56, 32, 51, 52, 49, 76, 49, 49, 52, 32, 51, 52, 48, 81, 49, 53, 57, 32, 51, 52, 48, 32, 50, 48, 53, 32, 51, 54, 56, 81, 50, 50, 55, 32, 51, 56, 49, 32, 50, 52, 50, 32, 51, 57, 57, 84, 50, 54, 55, 32, 52, 52, 51, 76, 50, 55, 53, 10, 52, 52, 52, 76, 50, 57, 48, 32, 52, 52, 54, 76, 49, 52, 51, 32, 48, 72, 49, 48, 53, 76, 50, 50, 50, 32, 51, 52, 55, 81, 50, 48, 54, 32, 51, 51, 56, 32, 49, 54, 54, 32, 51, 51, 48, 76, 49, 49, 50, 32, 51, 50, 50, 72, 49, 48, 49, 76, 56, 48, 32, 51, 50, 51, 81, 55, 56, 32, 51, 50, 51, 32, 53, 56, 32, 51, 50, 57, 81, 48, 32, 51, 52, 50, 32, 48, 32, 51, 57, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 85, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 55, 54, 34, 32, 100, 61, 34, 77, 49, 48, 57, 32, 51, 50, 57, 81, 49, 50, 48, 32, 51, 50, 49, 32, 49, 53, 55, 32, 51, 50, 49, 81, 49, 56, 56, 32, 51, 50, 49, 32, 50, 49, 53, 32, 51, 50, 54, 84, 50, 55, 52, 32, 51, 52, 55, 76, 50, 48, 53, 32, 49, 52, 48, 81, 49, 56, 53, 32, 49, 49, 56, 32, 49, 54, 49, 32, 49, 48, 52, 84, 49, 49, 48, 32, 57, 48, 81, 57, 57, 32, 57, 48, 32, 56, 52, 32, 57, 53, 81, 49, 49, 49, 32, 57, 57, 32, 49, 50, 53, 32, 49, 49, 52, 84, 49, 51, 57, 32, 49, 53, 51, 81, 49, 50, 54, 32, 49, 56, 52, 32, 49, 49, 52, 32, 49, 57, 50, 84, 55, 49, 32, 50, 48, 54, 81, 49, 50, 32, 49, 57, 57, 32, 48, 32, 49, 52, 51, 81, 48, 32, 57, 50, 32, 53, 56, 32, 56, 50, 81, 55, 48, 32, 55, 50, 32, 49, 48, 51, 32, 55, 50, 81, 49, 50, 54, 10, 55, 50, 32, 49, 52, 57, 32, 55, 55, 84, 49, 56, 57, 32, 57, 51, 76, 55, 53, 32, 45, 50, 52, 57, 72, 49, 49, 52, 76, 50, 53, 56, 32, 49, 57, 49, 76, 51, 52, 49, 32, 52, 52, 53, 72, 51, 51, 54, 76, 51, 50, 54, 32, 52, 52, 51, 76, 51, 49, 57, 32, 52, 52, 50, 81, 51, 48, 56, 32, 52, 49, 54, 32, 50, 57, 53, 32, 51, 57, 57, 84, 50, 53, 54, 32, 51, 54, 55, 84, 50, 48, 54, 32, 51, 52, 53, 84, 49, 54, 52, 32, 51, 51, 55, 81, 49, 52, 54, 32, 51, 51, 55, 32, 49, 51, 55, 32, 51, 52, 51, 81, 49, 54, 53, 32, 51, 52, 54, 32, 49, 55, 57, 32, 51, 54, 52, 84, 49, 57, 48, 32, 52, 48, 50, 81, 49, 55, 57, 32, 52, 50, 55, 32, 49, 55, 52, 32, 52, 51, 51, 81, 49, 54, 50, 32, 52, 52, 56, 32, 49, 50, 51, 32, 52, 53, 51, 81, 54, 51, 32, 52, 52, 54, 32, 53, 49, 32, 51, 57, 49, 81, 53, 49, 32, 51, 52, 48, 32, 49, 48, 57, 32, 51, 50, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 85, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 54, 54, 34, 32, 100, 61, 34, 77, 52, 49, 53, 32, 54, 56, 57, 76, 51, 57, 54, 32, 54, 56, 55, 81, 51, 57, 51, 32, 54, 55, 53, 32, 51, 56, 55, 32, 54, 54, 52, 84, 51, 55, 51, 32, 54, 52, 51, 81, 51, 53, 57, 32, 54, 50, 52, 32, 51, 51, 55, 32, 54, 49, 49, 84, 50, 57, 48, 32, 53, 57, 48, 84, 50, 52, 51, 32, 53, 56, 50, 81, 50, 50, 54, 32, 53, 56, 50, 32, 50, 49, 56, 32, 53, 56, 56, 81, 50, 52, 57, 32, 53, 57, 53, 32, 50, 54, 48, 32, 54, 48, 56, 84, 50, 55, 49, 32, 54, 52, 54, 81, 50, 54, 52, 32, 54, 55, 49, 32, 50, 52, 55, 32, 54, 56, 52, 84, 50, 48, 55, 32, 54, 57, 56, 81, 49, 55, 56, 32, 54, 57, 56, 32, 49, 53, 54, 32, 54, 55, 57, 81, 49, 52, 55, 32, 54, 55, 50, 32, 49, 52, 49, 32, 54, 54, 49, 84, 49, 51, 49, 32, 54, 51, 54, 81, 49, 51, 49, 10, 53, 56, 52, 32, 49, 57, 48, 32, 53, 55, 51, 81, 49, 57, 57, 32, 53, 54, 56, 32, 50, 49, 52, 32, 53, 54, 55, 84, 50, 52, 52, 32, 53, 54, 53, 81, 50, 53, 49, 32, 53, 54, 53, 32, 50, 54, 48, 32, 53, 54, 53, 84, 50, 57, 55, 32, 53, 55, 51, 81, 51, 49, 56, 32, 53, 55, 54, 32, 51, 51, 50, 32, 53, 56, 48, 84, 51, 53, 52, 32, 53, 57, 49, 76, 50, 56, 53, 32, 51, 56, 51, 81, 50, 54, 57, 32, 51, 54, 52, 32, 50, 52, 51, 32, 51, 53, 48, 84, 49, 57, 50, 32, 51, 51, 54, 81, 49, 56, 48, 32, 51, 51, 54, 32, 49, 54, 55, 32, 51, 52, 49, 81, 50, 48, 51, 32, 51, 53, 49, 32, 50, 48, 56, 32, 51, 54, 48, 81, 50, 49, 57, 32, 51, 55, 52, 32, 50, 49, 57, 32, 51, 57, 49, 81, 50, 49, 57, 32, 52, 49, 53, 32, 50, 48, 48, 32, 52, 51, 51, 84, 49, 53, 50, 32, 52, 53, 49, 81, 49, 50, 51, 32, 52, 52, 55, 32, 49, 48, 53, 32, 52, 51, 50, 84, 56, 49, 32, 51, 57, 48, 81, 56, 49, 32, 51, 52, 48, 32, 49, 51, 56, 32, 51, 50, 54, 81, 49, 52, 56, 32, 51, 50, 49, 32, 49, 54, 48, 32, 51, 49, 57, 84, 49, 56, 54, 10, 51, 49, 55, 81, 50, 49, 49, 32, 51, 49, 55, 32, 50, 51, 50, 32, 51, 50, 51, 84, 50, 55, 49, 32, 51, 51, 57, 76, 50, 48, 55, 32, 49, 52, 50, 81, 50, 48, 51, 32, 49, 51, 51, 32, 49, 55, 53, 32, 49, 49, 52, 81, 49, 52, 48, 32, 57, 49, 32, 49, 49, 49, 32, 57, 49, 81, 57, 53, 32, 57, 49, 32, 56, 53, 32, 57, 54, 81, 49, 50, 51, 32, 49, 48, 53, 32, 49, 51, 52, 32, 49, 50, 51, 81, 49, 51, 57, 32, 49, 51, 49, 32, 49, 51, 57, 32, 49, 53, 51, 81, 49, 50, 56, 32, 49, 56, 53, 32, 49, 49, 50, 32, 49, 57, 53, 81, 49, 48, 52, 32, 50, 48, 48, 32, 55, 50, 32, 50, 48, 54, 81, 49, 52, 32, 50, 48, 48, 32, 49, 32, 49, 52, 53, 81, 49, 32, 49, 50, 48, 32, 49, 52, 32, 49, 48, 52, 84, 53, 57, 32, 56, 49, 81, 55, 56, 32, 55, 49, 32, 49, 49, 51, 32, 55, 49, 81, 49, 54, 49, 32, 55, 49, 32, 49, 56, 56, 32, 56, 57, 76, 50, 48, 55, 32, 49, 52, 50, 76, 55, 56, 32, 45, 50, 52, 56, 72, 49, 49, 55, 76, 52, 50, 48, 32, 54, 56, 56, 76, 52, 49, 53, 32, 54, 56, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 85, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 53, 53, 51, 34, 32, 100, 61, 34, 77, 49, 57, 53, 32, 45, 52, 76, 50, 54, 48, 32, 49, 57, 48, 76, 49, 57, 53, 32, 45, 52, 90, 77, 50, 54, 57, 32, 56, 49, 57, 81, 50, 55, 55, 32, 56, 49, 52, 32, 50, 56, 57, 32, 56, 49, 50, 84, 51, 49, 54, 32, 56, 49, 48, 81, 51, 52, 54, 32, 56, 49, 48, 32, 51, 56, 51, 32, 56, 49, 57, 84, 52, 51, 52, 32, 56, 51, 53, 76, 51, 54, 57, 32, 54, 51, 52, 81, 51, 52, 56, 32, 54, 49, 50, 32, 51, 51, 48, 32, 54, 48, 48, 81, 51, 48, 51, 32, 53, 56, 50, 32, 50, 55, 51, 32, 53, 56, 50, 81, 50, 54, 49, 32, 53, 56, 50, 32, 50, 52, 57, 32, 53, 56, 53, 81, 50, 56, 51, 32, 53, 57, 54, 32, 50, 57, 51, 32, 54, 49, 49, 81, 51, 48, 48, 32, 54, 50, 50, 32, 51, 48, 48, 32, 54, 52, 51, 81, 50, 57, 48, 10, 54, 55, 51, 32, 50, 55, 56, 32, 54, 56, 50, 84, 50, 51, 50, 32, 54, 57, 53, 81, 49, 55, 53, 32, 54, 56, 57, 32, 49, 54, 48, 32, 54, 51, 52, 81, 49, 54, 48, 32, 53, 56, 49, 32, 50, 49, 57, 32, 53, 55, 48, 81, 50, 51, 51, 32, 53, 54, 51, 32, 50, 54, 50, 32, 53, 54, 51, 81, 51, 48, 54, 32, 53, 54, 51, 32, 51, 53, 48, 32, 53, 56, 50, 76, 50, 56, 54, 32, 51, 56, 53, 81, 50, 54, 50, 32, 51, 54, 49, 32, 50, 51, 57, 32, 51, 52, 57, 84, 49, 57, 50, 32, 51, 51, 54, 81, 49, 55, 56, 32, 51, 51, 54, 32, 49, 54, 54, 32, 51, 52, 48, 81, 50, 48, 51, 32, 51, 53, 50, 32, 50, 49, 51, 32, 51, 54, 54, 81, 50, 49, 57, 32, 51, 55, 52, 32, 50, 49, 57, 32, 51, 57, 56, 81, 50, 49, 48, 32, 52, 50, 55, 32, 49, 57, 55, 32, 52, 51, 54, 84, 49, 53, 50, 32, 52, 53, 49, 81, 57, 48, 32, 52, 52, 51, 32, 56, 49, 32, 51, 56, 56, 81, 56, 49, 32, 51, 51, 57, 32, 49, 51, 54, 32, 51, 50, 55, 81, 49, 52, 55, 32, 51, 50, 51, 32, 49, 53, 57, 32, 51, 50, 48, 84, 49, 56, 56, 32, 51, 49, 55, 81, 50, 49, 48, 10, 51, 49, 55, 32, 50, 50, 56, 32, 51, 50, 49, 84, 50, 55, 48, 32, 51, 51, 56, 76, 50, 48, 52, 32, 49, 51, 57, 81, 49, 53, 55, 32, 57, 48, 32, 49, 48, 57, 32, 57, 48, 81, 57, 56, 32, 57, 48, 32, 56, 53, 32, 57, 53, 81, 49, 49, 51, 32, 49, 48, 52, 32, 49, 49, 57, 32, 49, 48, 56, 81, 49, 51, 57, 32, 49, 50, 50, 32, 49, 51, 57, 32, 49, 53, 52, 81, 49, 50, 57, 32, 49, 56, 50, 32, 49, 49, 54, 32, 49, 57, 49, 84, 55, 49, 32, 50, 48, 54, 81, 49, 48, 32, 49, 57, 57, 32, 48, 32, 49, 52, 50, 81, 48, 32, 49, 49, 56, 32, 49, 53, 32, 49, 48, 50, 84, 53, 55, 32, 56, 49, 81, 55, 49, 32, 55, 51, 32, 49, 48, 51, 32, 55, 51, 81, 49, 50, 56, 32, 55, 51, 32, 49, 52, 56, 32, 55, 55, 84, 49, 57, 49, 32, 57, 51, 76, 49, 53, 55, 32, 45, 52, 76, 55, 56, 32, 45, 50, 52, 56, 72, 49, 49, 51, 76, 49, 57, 53, 32, 45, 52, 76, 50, 54, 48, 32, 49, 57, 48, 76, 52, 50, 48, 32, 54, 56, 51, 76, 53, 48, 51, 32, 57, 51, 53, 76, 52, 57, 53, 32, 57, 51, 54, 76, 52, 56, 56, 32, 57, 51, 50, 72, 52, 56, 50, 81, 52, 54, 48, 10, 56, 56, 49, 32, 52, 49, 53, 32, 56, 53, 53, 84, 51, 50, 54, 32, 56, 50, 56, 76, 51, 49, 49, 32, 56, 50, 57, 81, 51, 48, 56, 32, 56, 51, 49, 32, 51, 48, 53, 32, 56, 51, 49, 84, 50, 57, 55, 32, 56, 51, 51, 81, 51, 50, 57, 32, 56, 52, 48, 32, 51, 51, 57, 32, 56, 53, 51, 84, 51, 53, 48, 32, 56, 57, 51, 81, 51, 52, 51, 32, 57, 49, 55, 32, 51, 51, 49, 32, 57, 50, 56, 81, 51, 49, 53, 32, 57, 52, 51, 32, 50, 56, 50, 32, 57, 52, 51, 81, 50, 53, 54, 32, 57, 52, 48, 32, 50, 51, 54, 32, 57, 50, 52, 84, 50, 49, 50, 32, 56, 56, 50, 81, 50, 49, 50, 32, 56, 51, 49, 32, 50, 54, 57, 32, 56, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 85, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 54, 51, 34, 32, 100, 61, 34, 77, 51, 54, 48, 32, 56, 52, 53, 81, 51, 54, 52, 32, 56, 52, 51, 32, 51, 55, 49, 32, 56, 52, 49, 84, 51, 56, 51, 32, 56, 51, 56, 84, 52, 48, 54, 32, 56, 51, 55, 81, 52, 51, 53, 32, 56, 51, 55, 32, 52, 55, 50, 32, 56, 52, 53, 84, 53, 51, 50, 32, 56, 54, 51, 76, 52, 54, 51, 32, 54, 53, 52, 81, 52, 52, 48, 32, 54, 50, 56, 32, 52, 50, 49, 32, 54, 49, 54, 81, 51, 57, 53, 32, 53, 57, 57, 32, 51, 54, 55, 32, 53, 57, 57, 81, 51, 53, 51, 32, 53, 57, 57, 32, 51, 51, 54, 32, 54, 48, 53, 81, 51, 55, 49, 32, 54, 49, 50, 32, 51, 56, 50, 32, 54, 50, 53, 84, 51, 57, 51, 32, 54, 54, 53, 81, 51, 56, 51, 32, 54, 57, 52, 32, 51, 54, 56, 32, 55, 48, 52, 84, 51, 50, 51, 32, 55, 50, 48, 81, 50, 54, 49, 10, 55, 48, 57, 32, 50, 52, 57, 32, 54, 53, 53, 81, 50, 52, 57, 32, 54, 48, 52, 32, 51, 48, 57, 32, 53, 57, 48, 76, 51, 50, 56, 32, 53, 56, 51, 81, 51, 51, 54, 32, 53, 56, 49, 32, 51, 54, 50, 32, 53, 56, 49, 81, 51, 57, 51, 32, 53, 56, 49, 32, 52, 49, 49, 32, 53, 56, 54, 84, 52, 52, 53, 32, 54, 48, 51, 76, 51, 55, 56, 32, 51, 57, 56, 81, 51, 54, 51, 32, 51, 55, 57, 32, 51, 51, 53, 32, 51, 54, 51, 84, 50, 55, 57, 32, 51, 52, 54, 81, 50, 54, 54, 32, 51, 52, 54, 32, 50, 53, 51, 32, 51, 53, 49, 81, 50, 56, 57, 32, 51, 53, 56, 32, 51, 48, 49, 32, 51, 55, 55, 81, 51, 48, 57, 32, 51, 56, 57, 32, 51, 48, 57, 32, 52, 49, 50, 81, 50, 57, 57, 32, 52, 52, 50, 32, 50, 56, 54, 32, 52, 53, 49, 84, 50, 52, 48, 32, 52, 54, 54, 81, 50, 48, 56, 32, 52, 54, 50, 32, 49, 57, 49, 32, 52, 52, 54, 84, 49, 54, 53, 32, 52, 48, 49, 81, 49, 54, 53, 32, 51, 53, 48, 32, 50, 50, 53, 32, 51, 51, 54, 81, 50, 51, 49, 32, 51, 51, 51, 32, 50, 52, 55, 32, 51, 51, 49, 84, 50, 55, 55, 32, 51, 50, 56, 81, 51, 48, 50, 10, 51, 50, 56, 32, 51, 50, 49, 32, 51, 51, 50, 84, 51, 54, 48, 32, 51, 53, 48, 76, 50, 57, 53, 32, 49, 52, 51, 81, 50, 54, 54, 32, 49, 49, 53, 32, 50, 52, 50, 32, 49, 48, 52, 84, 49, 57, 55, 32, 57, 50, 81, 49, 57, 48, 32, 57, 50, 32, 49, 56, 51, 32, 57, 52, 84, 49, 55, 48, 32, 57, 56, 81, 50, 48, 54, 32, 49, 48, 55, 32, 50, 49, 56, 32, 49, 50, 52, 81, 50, 50, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 53, 56, 81, 50, 49, 52, 32, 49, 56, 57, 32, 50, 48, 50, 32, 49, 57, 57, 84, 49, 53, 54, 32, 50, 49, 51, 81, 49, 50, 54, 32, 50, 48, 57, 32, 49, 48, 56, 32, 49, 57, 50, 84, 56, 52, 32, 49, 52, 55, 81, 56, 52, 32, 57, 54, 32, 49, 52, 49, 32, 56, 52, 81, 49, 52, 56, 32, 56, 48, 32, 49, 54, 49, 32, 55, 55, 84, 49, 57, 54, 32, 55, 52, 81, 50, 49, 55, 32, 55, 52, 32, 50, 51, 56, 32, 55, 57, 84, 50, 55, 56, 32, 57, 55, 76, 50, 49, 48, 32, 45, 49, 48, 57, 81, 49, 56, 54, 32, 45, 49, 51, 53, 32, 49, 54, 50, 32, 45, 49, 52, 55, 84, 49, 49, 52, 32, 45, 49, 54, 48, 81, 57, 57, 10, 45, 49, 54, 48, 32, 56, 56, 32, 45, 49, 53, 54, 81, 49, 50, 50, 32, 45, 49, 52, 53, 32, 49, 51, 50, 32, 45, 49, 51, 51, 84, 49, 52, 51, 32, 45, 57, 54, 81, 49, 51, 53, 32, 45, 54, 54, 32, 49, 50, 48, 32, 45, 53, 54, 84, 55, 51, 32, 45, 52, 49, 81, 49, 49, 32, 45, 53, 48, 32, 45, 49, 32, 45, 49, 48, 54, 81, 45, 49, 32, 45, 49, 53, 56, 32, 54, 48, 32, 45, 49, 55, 49, 76, 55, 56, 32, 45, 49, 55, 55, 81, 56, 49, 32, 45, 49, 55, 56, 32, 57, 55, 32, 45, 49, 55, 56, 81, 49, 50, 49, 32, 45, 49, 55, 56, 32, 49, 52, 56, 32, 45, 49, 55, 52, 84, 49, 57, 53, 32, 45, 49, 53, 56, 76, 49, 54, 50, 32, 45, 50, 53, 56, 76, 56, 48, 32, 45, 53, 49, 48, 72, 49, 49, 55, 76, 51, 53, 48, 32, 49, 57, 56, 76, 53, 49, 53, 32, 55, 48, 52, 76, 54, 48, 49, 32, 57, 54, 52, 72, 53, 57, 53, 76, 53, 56, 54, 32, 57, 54, 49, 72, 53, 55, 55, 81, 53, 55, 52, 32, 57, 52, 57, 32, 53, 54, 56, 32, 57, 51, 56, 84, 53, 53, 52, 32, 57, 49, 54, 81, 53, 52, 54, 32, 57, 48, 55, 32, 53, 51, 54, 10, 56, 57, 57, 84, 53, 49, 51, 32, 56, 56, 52, 81, 52, 54, 52, 32, 56, 53, 52, 32, 52, 49, 57, 32, 56, 53, 52, 81, 52, 49, 51, 32, 56, 53, 52, 32, 52, 48, 56, 32, 56, 53, 53, 84, 51, 57, 49, 32, 56, 53, 57, 81, 52, 49, 50, 32, 56, 54, 51, 32, 52, 50, 54, 32, 56, 55, 52, 81, 52, 52, 53, 32, 56, 56, 57, 32, 52, 52, 53, 32, 57, 49, 54, 81, 52, 52, 53, 32, 57, 52, 50, 32, 52, 50, 54, 32, 57, 53, 55, 84, 51, 55, 54, 32, 57, 55, 53, 81, 51, 49, 52, 32, 57, 54, 54, 32, 51, 48, 49, 32, 57, 48, 57, 81, 51, 48, 49, 32, 56, 53, 57, 32, 51, 54, 48, 32, 56, 52, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 89, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 53, 57, 34, 32, 100, 61, 34, 77, 49, 55, 56, 32, 50, 51, 52, 76, 51, 53, 57, 32, 49, 49, 76, 49, 55, 56, 32, 45, 50, 49, 49, 76, 48, 32, 49, 49, 76, 49, 55, 56, 32, 50, 51, 52, 90, 77, 49, 52, 52, 32, 49, 51, 57, 76, 55, 56, 32, 53, 53, 76, 50, 49, 57, 32, 45, 49, 49, 55, 76, 50, 56, 52, 32, 45, 51, 53, 76, 49, 52, 52, 32, 49, 51, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 84, 104, 111, 114, 110, 34, 32, 104, 111, 114, 105, 122, 45]).concat([97, 100, 118, 45, 120, 61, 34, 51, 53, 57, 34, 32, 100, 61, 34, 77, 49, 55, 56, 32, 50, 51, 52, 76, 51, 53, 57, 32, 49, 49, 76, 49, 55, 56, 32, 45, 50, 49, 49, 76, 48, 32, 49, 49, 76, 49, 55, 56, 32, 50, 51, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 100, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 101, 114, 109, 97, 110, 100, 98, 108, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 54, 34, 32, 100, 61, 34, 77, 49, 52, 54, 32, 50, 51, 52, 76, 51, 50, 52, 32, 49, 49, 76, 49, 52, 54, 32, 45, 50, 49, 49, 76, 45, 51, 52, 32, 49, 49, 76, 49, 52, 54, 32, 50, 51, 52, 90, 77, 49, 49, 50, 32, 49, 51, 57, 76, 52, 53, 32, 53, 53, 76, 49, 56, 53, 32, 45, 49, 49, 55, 76, 50, 53, 48, 32, 45, 51, 53, 76, 49, 49, 50, 32, 49, 51, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 54, 34, 32, 100, 61, 34, 77, 49, 52, 54, 32, 50, 51, 52, 76, 51, 50, 52, 32, 49, 49, 76, 49, 52, 54, 32, 45, 50, 49, 49, 76, 45, 51, 52, 32, 49, 49, 76, 49, 52, 54, 32, 50, 51, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 48, 32, 48, 76, 49, 54, 50, 32, 45, 49, 49, 49, 86, 45, 50, 51, 55, 76, 48, 32, 45, 49, 50, 53, 86, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 49, 54, 52, 32, 54, 76, 50, 32, 49, 49, 55, 86, 50, 52, 51, 76, 49, 54, 52, 32, 49, 51, 50, 86, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 57, 56, 34, 32, 100, 61, 34, 77, 51, 52, 49, 32, 55, 52, 51, 81, 51, 54, 49, 32, 55, 53, 52, 32, 51, 56, 52, 32, 55, 53, 53, 84, 52, 50, 55, 32, 55, 52, 57, 84, 52, 54, 48, 32, 55, 50, 53, 84, 52, 55, 55, 32, 54, 56, 56, 81, 52, 56, 49, 32, 54, 54, 52, 32, 52, 54, 52, 32, 54, 50, 56, 84, 52, 50, 51, 32, 53, 55, 52, 81, 52, 49, 48, 32, 53, 54, 52, 32, 52, 48, 53, 32, 53, 53, 54, 84, 51, 57, 57, 32, 53, 51, 54, 81, 51, 57, 57, 32, 53, 50, 56, 32, 52, 48, 50, 32, 53, 50, 50, 84, 52, 48, 57, 32, 53, 49, 52, 84, 52, 50, 52, 32, 53, 48, 48, 84, 52, 52, 54, 32, 52, 55, 51, 81, 52, 54, 54, 32, 52, 52, 56, 32, 52, 55, 48, 32, 52, 51, 53, 84, 52, 55, 56, 32, 51, 56, 55, 81, 52, 56, 49, 32, 51, 52, 49, 32, 52, 55, 54, 32, 51, 50, 50, 84, 52, 52, 56, 10, 50, 55, 56, 81, 52, 51, 53, 32, 50, 54, 51, 32, 52, 51, 49, 32, 50, 53, 51, 84, 52, 50, 55, 32, 50, 51, 51, 81, 52, 50, 57, 32, 50, 49, 52, 32, 52, 52, 56, 32, 50, 48, 54, 84, 53, 49, 52, 32, 49, 57, 56, 81, 53, 52, 55, 32, 49, 57, 56, 32, 53, 54, 48, 32, 50, 48, 49, 81, 53, 55, 51, 32, 50, 48, 51, 32, 53, 56, 55, 32, 50, 49, 50, 76, 54, 48, 55, 32, 50, 50, 54, 76, 53, 57, 53, 32, 50, 48, 57, 81, 53, 56, 51, 32, 49, 57, 50, 32, 53, 56, 55, 32, 49, 55, 53, 76, 53, 57, 48, 32, 49, 53, 56, 72, 52, 53, 52, 81, 52, 48, 53, 32, 49, 53, 56, 32, 51, 55, 57, 32, 49, 53, 55, 84, 51, 51, 48, 32, 49, 53, 53, 84, 50, 57, 52, 32, 49, 52, 56, 84, 50, 55, 49, 32, 49, 51, 54, 84, 50, 52, 56, 32, 49, 49, 54, 81, 50, 49, 54, 32, 56, 54, 32, 50, 48, 54, 32, 51, 57, 84, 50, 48, 57, 32, 45, 53, 54, 81, 50, 49, 54, 32, 45, 56, 50, 32, 50, 51, 53, 32, 45, 49, 48, 52, 84, 50, 55, 57, 32, 45, 49, 52, 48, 84, 51, 51, 52, 32, 45, 49, 54, 51, 84, 51, 57, 53, 32, 45, 49, 54, 57, 84, 52, 53, 52, 10, 45, 49, 53, 53, 81, 52, 56, 53, 32, 45, 49, 52, 50, 32, 52, 57, 56, 32, 45, 49, 50, 51, 84, 53, 49, 54, 32, 45, 54, 53, 81, 53, 49, 57, 32, 45, 51, 56, 32, 53, 49, 55, 32, 45, 50, 53, 84, 53, 48, 54, 32, 56, 81, 52, 57, 52, 32, 51, 50, 32, 52, 55, 55, 32, 52, 54, 84, 52, 52, 56, 32, 53, 54, 81, 52, 52, 50, 32, 53, 51, 32, 52, 52, 49, 32, 52, 54, 84, 52, 52, 49, 32, 50, 51, 81, 52, 52, 53, 32, 45, 51, 32, 52, 51, 52, 32, 45, 51, 49, 84, 52, 48, 52, 32, 45, 55, 50, 84, 51, 54, 52, 32, 45, 56, 53, 81, 51, 52, 54, 32, 45, 56, 53, 32, 51, 49, 56, 32, 45, 55, 48, 84, 50, 55, 57, 32, 45, 51, 52, 81, 50, 54, 49, 32, 50, 32, 50, 55, 55, 32, 51, 55, 84, 51, 51, 54, 32, 57, 50, 81, 51, 54, 48, 32, 49, 48, 52, 32, 51, 56, 52, 32, 49, 48, 52, 84, 52, 53, 50, 32, 57, 52, 81, 52, 57, 50, 32, 56, 53, 32, 53, 49, 51, 32, 54, 55, 84, 53, 52, 57, 32, 56, 81, 53, 53, 55, 32, 45, 49, 50, 32, 53, 53, 56, 32, 45, 50, 52, 84, 53, 53, 52, 32, 45, 54, 51, 81, 53, 52, 57, 10, 45, 56, 57, 32, 53, 52, 51, 32, 45, 49, 48, 49, 84, 53, 50, 49, 32, 45, 49, 50, 54, 81, 52, 57, 54, 32, 45, 49, 52, 56, 32, 52, 54, 49, 32, 45, 49, 54, 53, 81, 52, 51, 55, 32, 45, 49, 55, 55, 32, 52, 50, 50, 32, 45, 49, 55, 57, 84, 51, 54, 56, 32, 45, 49, 56, 48, 81, 50, 57, 49, 32, 45, 49, 55, 54, 32, 50, 52, 50, 32, 45, 49, 52, 57, 84, 49, 54, 52, 32, 45, 54, 53, 81, 49, 52, 55, 32, 45, 51, 49, 32, 49, 52, 54, 32, 45, 50, 84, 49, 54, 48, 32, 54, 55, 81, 49, 56, 48, 32, 49, 50, 48, 32, 50, 48, 56, 32, 49, 52, 55, 84, 50, 57, 48, 32, 49, 57, 49, 81, 51, 49, 53, 32, 49, 57, 57, 32, 51, 52, 51, 32, 50, 49, 53, 84, 51, 56, 51, 32, 50, 52, 54, 81, 51, 57, 56, 32, 50, 54, 50, 32, 52, 49, 57, 32, 50, 57, 56, 81, 52, 51, 52, 32, 51, 50, 51, 32, 52, 51, 55, 32, 51, 51, 53, 84, 52, 51, 56, 32, 51, 56, 49, 81, 52, 51, 53, 32, 52, 50, 55, 32, 52, 49, 57, 32, 52, 53, 49, 81, 52, 48, 53, 32, 52, 55, 50, 32, 51, 56, 50, 32, 52, 56, 56, 84, 51, 52, 49, 32, 53, 48, 52, 81, 51, 50, 52, 10, 53, 48, 52, 32, 50, 57, 57, 32, 52, 55, 54, 84, 50, 54, 54, 32, 52, 49, 57, 81, 50, 54, 48, 32, 51, 57, 55, 32, 50, 54, 50, 32, 51, 56, 48, 81, 50, 54, 52, 32, 51, 53, 55, 32, 50, 55, 55, 32, 51, 50, 52, 81, 50, 55, 56, 32, 51, 50, 48, 32, 50, 55, 53, 32, 51, 49, 50, 84, 50, 54, 55, 32, 50, 57, 55, 81, 50, 53, 52, 32, 50, 56, 50, 32, 50, 52, 51, 32, 50, 56, 55, 84, 50, 49, 53, 32, 51, 50, 50, 81, 49, 57, 48, 32, 51, 54, 53, 32, 50, 48, 55, 32, 52, 48, 57, 81, 50, 49, 51, 32, 52, 50, 52, 32, 50, 52, 51, 32, 52, 53, 51, 84, 50, 57, 53, 32, 52, 57, 52, 81, 51, 48, 53, 32, 53, 48, 48, 32, 51, 48, 57, 32, 53, 48, 55, 84, 51, 49, 51, 32, 53, 50, 55, 81, 51, 49, 51, 32, 53, 52, 57, 32, 51, 48, 55, 32, 53, 53, 51, 81, 50, 57, 56, 32, 53, 53, 56, 32, 50, 56, 54, 32, 53, 57, 48, 84, 50, 55, 51, 32, 54, 52, 48, 81, 50, 55, 51, 32, 54, 55, 52, 32, 50, 56, 57, 32, 54, 57, 57, 84, 51, 52, 49, 32, 55, 52, 51, 90, 77, 52, 51, 53, 32, 55, 49, 49, 81, 52, 50, 50, 10, 55, 50, 52, 32, 51, 57, 54, 32, 55, 50, 54, 84, 51, 52, 56, 32, 55, 50, 49, 81, 51, 51, 49, 32, 55, 49, 51, 32, 51, 50, 48, 32, 54, 57, 55, 84, 51, 48, 56, 32, 54, 54, 51, 84, 51, 49, 48, 32, 54, 50, 55, 84, 51, 50, 54, 32, 53, 57, 54, 84, 51, 53, 55, 32, 53, 56, 48, 81, 51, 56, 51, 32, 53, 55, 53, 32, 52, 48, 48, 32, 53, 56, 50, 84, 52, 51, 51, 32, 54, 49, 50, 81, 52, 52, 54, 32, 54, 51, 48, 32, 52, 52, 57, 32, 54, 52, 48, 84, 52, 53, 48, 32, 54, 54, 57, 81, 52, 52, 57, 32, 54, 56, 50, 32, 52, 52, 53, 32, 54, 57, 52, 84, 52, 51, 53, 32, 55, 49, 49, 90, 77, 51, 57, 49, 32, 53, 53, 81, 51, 56, 48, 32, 54, 51, 32, 51, 53, 54, 32, 54, 52, 84, 51, 50, 50, 32, 54, 48, 81, 51, 49, 50, 32, 53, 51, 32, 51, 48, 54, 32, 51, 54, 84, 51, 48, 48, 32, 45, 50, 81, 51, 48, 48, 32, 45, 49, 57, 32, 51, 48, 52, 32, 45, 50, 56, 81, 51, 48, 53, 32, 45, 51, 50, 32, 51, 50, 48, 32, 45, 52, 57, 81, 51, 51, 51, 32, 45, 54, 52, 32, 51, 53, 54, 32, 45, 54, 56, 81, 51, 55, 53, 10, 45, 55, 49, 32, 51, 57, 48, 32, 45, 54, 49, 84, 52, 49, 48, 32, 45, 51, 49, 81, 52, 49, 53, 32, 45, 49, 48, 32, 52, 48, 57, 32, 49, 56, 84, 51, 57, 49, 32, 53, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 51, 56, 34, 32, 100, 61, 34, 77, 50, 51, 54, 32, 45, 50, 54, 48, 76, 50, 54, 54, 32, 45, 50, 53, 48, 86, 45, 55, 53, 51, 72, 50, 51, 54, 86, 45, 50, 54, 48, 90, 77, 50, 53, 51, 32, 51, 53, 53, 76, 51, 57, 53, 32, 49, 55, 55, 76, 50, 53, 51, 32, 45, 49, 76, 49, 48, 57, 32, 49, 55, 55, 76, 50, 53, 51, 32, 51, 53, 53, 90, 77, 50, 50, 54, 32, 50, 55, 57, 76, 49, 55, 50, 32, 50, 49, 50, 76, 50, 56, 52, 32, 55, 52, 76, 51, 51, 54, 32, 49, 52, 48, 76, 50, 50, 54, 32, 50, 55, 57, 90, 77, 50, 53, 51, 32, 54, 55, 76, 51, 57, 53, 32, 45, 49, 49, 49, 76, 50, 53, 51, 32, 45, 50, 56, 57, 76, 49, 48, 57, 32, 45, 49, 49, 49, 76, 50, 53, 51, 32, 54, 55, 90, 77, 50, 50, 54, 32, 45, 57, 76, 49, 55, 50, 32, 45, 55, 54, 76, 50, 56, 52, 10, 45, 50, 49, 52, 76, 51, 51, 54, 32, 45, 49, 52, 56, 76, 50, 50, 54, 32, 45, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 114, 105, 110, 103, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 52, 57, 34, 32, 100, 61, 34, 77, 48, 32, 53, 57, 53, 72, 50, 56, 86, 51, 53, 51, 72, 51, 50, 48, 86, 53, 57, 53, 72, 51, 52, 57, 86, 54, 52, 72, 50, 56, 86, 45, 54, 52, 72, 51, 52, 57, 86, 45, 54, 48, 50, 72, 51, 50, 48, 86, 45, 51, 53, 53, 72, 50, 56, 86, 45, 54, 48, 50, 72, 48, 86, 53, 57, 53, 90, 77, 51, 50, 48, 32, 50, 53, 53, 72, 50, 56, 86, 49, 54, 52, 72, 51, 50, 48, 86, 50, 53, 53, 90, 77, 51, 50, 48, 32, 45, 49, 55, 50, 72, 50, 56, 86, 45, 50, 54, 51, 72, 51, 50, 48, 86, 45, 49, 55, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 97, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 54, 51, 50, 34, 32, 100, 61, 34, 77, 53, 49, 54, 32, 54, 57, 51, 81, 53, 49, 54, 32, 54, 56, 53, 32, 53, 49, 53, 32, 54, 56, 48, 84, 53, 49, 51, 32, 54, 55, 51, 81, 53, 48, 55, 32, 54, 54, 56, 32, 53, 48, 51, 32, 54, 54, 56, 81, 52, 52, 50, 32, 55, 48, 48, 32, 51, 54, 49, 32, 55, 48, 48, 81, 51, 49, 48, 32, 54, 56, 57, 32, 50, 56, 52, 32, 54, 55, 54, 84, 50, 51, 57, 32, 54, 51, 50, 81, 50, 51, 48, 32, 54, 49, 51, 32, 50, 50, 53, 32, 53, 57, 52, 84, 50, 49, 57, 32, 53, 52, 54, 81, 50, 49, 57, 32, 53, 51, 53, 32, 50, 50, 48, 32, 53, 50, 52, 84, 50, 50, 52, 32, 53, 48, 51, 76, 50, 51, 57, 32, 52, 54, 53, 81, 50, 53, 51, 32, 52, 51, 55, 32, 50, 57, 53, 32, 51, 57, 56, 76, 51, 52, 49, 32, 51, 53, 50, 76, 52, 50, 49, 32, 51, 52, 55, 76, 53, 49, 54, 10, 51, 52, 53, 81, 53, 51, 52, 32, 51, 52, 53, 32, 53, 51, 52, 32, 51, 51, 50, 81, 53, 51, 52, 32, 51, 50, 51, 32, 53, 48, 57, 32, 51, 49, 51, 76, 52, 51, 56, 32, 51, 48, 53, 81, 52, 50, 48, 32, 51, 48, 51, 32, 52, 48, 52, 32, 51, 48, 49, 84, 51, 55, 52, 32, 50, 57, 54, 84, 51, 52, 55, 32, 50, 56, 57, 84, 51, 49, 53, 32, 50, 55, 53, 81, 50, 50, 57, 32, 50, 50, 57, 32, 49, 56, 55, 32, 49, 55, 54, 84, 49, 51, 51, 32, 55, 53, 76, 49, 50, 53, 32, 50, 54, 76, 49, 50, 50, 32, 45, 50, 56, 81, 49, 51, 57, 32, 45, 50, 48, 50, 32, 50, 56, 57, 32, 45, 50, 48, 50, 81, 51, 51, 55, 32, 45, 50, 48, 50, 32, 51, 57, 51, 32, 45, 49, 56, 48, 84, 52, 55, 55, 32, 45, 49, 50, 52, 81, 53, 54, 49, 32, 45, 53, 55, 32, 53, 54, 49, 32, 49, 48, 81, 53, 54, 49, 32, 54, 48, 32, 53, 48, 51, 32, 57, 52, 81, 52, 53, 49, 32, 57, 52, 32, 51, 57, 50, 32, 49, 48, 55, 81, 51, 51, 56, 32, 49, 48, 55, 32, 50, 55, 54, 32, 53, 55, 81, 50, 53, 57, 32, 53, 55, 32, 50, 53, 57, 32, 54, 57, 81, 50, 57, 51, 10, 49, 49, 52, 32, 51, 49, 48, 32, 49, 50, 56, 81, 51, 50, 55, 32, 49, 52, 52, 32, 51, 54, 55, 32, 49, 53, 52, 84, 52, 55, 55, 32, 49, 54, 52, 81, 53, 52, 56, 32, 49, 52, 52, 32, 53, 54, 55, 32, 49, 51, 51, 81, 53, 56, 53, 32, 49, 50, 53, 32, 54, 48, 50, 32, 57, 55, 84, 54, 51, 50, 32, 52, 81, 54, 49, 49, 32, 45, 49, 48, 57, 32, 53, 51, 53, 32, 45, 49, 55, 55, 84, 51, 48, 50, 32, 45, 50, 55, 51, 81, 50, 49, 57, 32, 45, 50, 55, 51, 32, 49, 53, 56, 32, 45, 50, 52, 55, 84, 54, 48, 32, 45, 49, 54, 57, 84, 49, 51, 32, 45, 51, 52, 81, 49, 51, 32, 53, 55, 32, 53, 48, 32, 49, 51, 49, 81, 54, 53, 32, 49, 54, 57, 32, 57, 48, 32, 49, 57, 56, 81, 49, 48, 49, 32, 50, 49, 52, 32, 49, 49, 52, 32, 50, 50, 55, 84, 49, 52, 52, 32, 50, 53, 53, 81, 49, 55, 49, 32, 50, 55, 57, 32, 50, 48, 50, 32, 50, 57, 55, 84, 50, 55, 49, 32, 51, 51, 50, 81, 49, 52, 53, 32, 52, 48, 56, 32, 49, 51, 53, 32, 53, 48, 55, 81, 49, 51, 53, 32, 53, 54, 55, 32, 49, 52, 52, 32, 54, 48, 53, 81, 49, 53, 50, 10, 54, 51, 49, 32, 49, 53, 54, 32, 54, 52, 48, 84, 49, 54, 57, 32, 54, 54, 48, 76, 49, 56, 57, 32, 54, 56, 51, 76, 50, 49, 57, 32, 55, 49, 51, 81, 50, 57, 51, 32, 55, 53, 56, 32, 51, 56, 48, 32, 55, 53, 56, 81, 52, 54, 57, 32, 55, 53, 56, 32, 53, 49, 54, 32, 54, 57, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 55, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 99, 101, 100, 105, 108, 108, 97, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 54, 53, 34, 32, 100, 61, 34, 77, 49, 51, 56, 32, 48, 76, 49, 49, 57, 32, 45, 50, 52, 76, 49, 48, 49, 32, 48, 76, 49, 49, 57, 32, 50, 52, 76, 49, 51, 56, 32, 48, 90, 77, 49, 56, 48, 32, 49, 51, 48, 76, 49, 49, 57, 32, 53, 48, 76, 53, 55, 32, 49, 51, 48, 72, 51, 54, 76, 49, 48, 56, 32, 51, 56, 76, 57, 48, 32, 49, 52, 76, 48, 32, 49, 50, 57, 86, 49, 48, 51, 76, 56, 48, 32, 48, 76, 48, 32, 45, 49, 48, 52, 86, 45, 49, 51, 48, 76, 57, 48, 32, 45, 49, 51, 76, 49, 48, 56, 32, 45, 51, 56, 76, 51, 54, 32, 45, 49, 51, 48, 72, 53, 55, 76, 49, 49, 57, 32, 45, 53, 49, 76, 49, 56, 48, 32, 45, 49, 51, 48, 72, 50, 48, 51, 76, 49, 51, 48, 32, 45, 51, 55, 76, 49, 52, 56, 32, 45, 49, 51, 76, 50, 52, 48, 32, 45, 49, 51, 48, 86, 45, 49, 48, 52, 76, 49, 53, 57, 10, 48, 76, 50, 52, 48, 32, 49, 48, 51, 86, 49, 50, 57, 76, 49, 52, 56, 32, 49, 51, 76, 49, 51, 48, 32, 51, 55, 76, 50, 48, 51, 32, 49, 51, 48, 72, 49, 56, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 51, 52, 34, 32, 100, 61, 34, 77, 51, 48, 32, 45, 49, 52, 51, 86, 51, 55, 57, 72, 52, 50, 86, 49, 52, 52, 72, 49, 54, 52, 86, 45, 51, 51, 52, 72, 49, 53, 50, 86, 45, 49, 52, 51, 72, 51, 48, 90, 77, 52, 50, 32, 45, 53, 56, 72, 49, 53, 50, 86, 55, 49, 72, 52, 50, 86, 45, 53, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 55, 34, 32, 100, 61, 34, 77, 49, 53, 54, 32, 49, 48, 81, 49, 53, 54, 32, 51, 54, 32, 49, 51, 49, 32, 53, 53, 81, 49, 48, 49, 32, 55, 56, 32, 52, 50, 32, 55, 56, 86, 45, 55, 51, 81, 49, 48, 49, 32, 45, 55, 51, 32, 49, 51, 51, 32, 45, 52, 51, 81, 49, 53, 54, 32, 45, 50, 48, 32, 49, 53, 54, 32, 49, 48, 90, 77, 51, 48, 32, 45, 49, 49, 50, 86, 53, 50, 57, 72, 52, 50, 86, 49, 48, 50, 76, 53, 52, 32, 49, 48, 51, 76, 54, 56, 32, 49, 48, 52, 81, 49, 49, 56, 32, 49, 48, 52, 32, 49, 53, 53, 32, 56, 55, 81, 50, 48, 55, 32, 53, 57, 32, 50, 48, 55, 32, 48, 81, 50, 48, 55, 32, 45, 53, 54, 32, 49, 53, 50, 32, 45, 56, 54, 81, 49, 48, 51, 32, 45, 49, 49, 50, 32, 51, 48, 32, 45, 49, 49, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 49, 34, 32, 100, 61, 34, 77, 48, 32, 49, 49, 52, 72, 55, 56, 86, 54, 52, 76, 57, 52, 32, 52, 55, 72, 49, 55, 55, 76, 49, 57, 51, 32, 54, 50, 86, 49, 49, 52, 72, 50, 55, 49, 86, 52, 54, 72, 50, 48, 56, 76, 49, 56, 50, 32, 49, 57, 86, 45, 49, 55, 76, 50, 48, 56, 32, 45, 52, 55, 72, 50, 55, 49, 86, 45, 49, 49, 52, 72, 49, 57, 50, 86, 45, 54, 49, 76, 49, 55, 55, 32, 45, 52, 55, 72, 57, 51, 76, 55, 56, 32, 45, 54, 49, 86, 45, 49, 49, 52, 72, 48, 86, 45, 52, 52, 72, 54, 51, 76, 57, 48, 32, 45, 49, 55, 86, 49, 57, 76, 54, 49, 32, 52, 55, 72, 48, 86, 49, 49, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 48, 34, 32, 100, 61, 34, 77, 56, 48, 32, 48, 86, 49, 55, 48, 72, 50, 53, 48, 86, 57, 49, 72, 49, 51, 57, 86, 48, 72, 56, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 105, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 48, 34, 32, 100, 61, 34, 77, 50, 53, 48, 32, 48, 72, 49, 57, 49, 86, 57, 49, 72, 56, 48, 86, 49, 55, 48, 72, 50, 53, 48, 86, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 105, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 105, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 55, 72, 56, 48, 86, 51, 54, 50, 72, 50, 52, 50, 86, 49, 56, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 101, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 105, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 55, 72, 56, 48, 86, 51, 54, 50, 72, 50, 52, 50, 86, 49, 56, 54, 90, 77, 50, 52, 50, 32, 50, 56, 54, 72, 49, 56, 54, 86, 51, 56, 55, 72, 56, 48, 86, 52, 54, 49, 72, 50, 52, 50, 86, 50, 56, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 116, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 54, 50, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 51, 72, 56, 48, 86, 51, 53, 56, 72, 50, 52, 50, 86, 49, 56, 54, 90, 77, 50, 52, 50, 32, 50, 56, 50, 72, 49, 56, 54, 86, 51, 56, 51, 72, 56, 48, 86, 52, 53, 55, 72, 50, 52, 50, 86, 50, 56, 50, 90, 77, 50, 52, 50, 32, 51, 56, 51, 72, 49, 56, 54, 86, 52, 56, 51, 72, 56, 48, 86, 53, 53, 56, 72, 50, 52, 50, 86, 51, 56, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 110, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 55, 52, 50, 34, 32, 100, 61, 34, 77, 53, 50, 52, 32, 57, 54, 54, 81, 53, 53, 50, 32, 57, 54, 54, 32, 53, 53, 50, 32, 57, 53, 51, 81, 53, 53, 50, 32, 57, 52, 53, 32, 53, 50, 56, 32, 57, 50, 52, 81, 52, 57, 55, 32, 56, 55, 52, 32, 52, 54, 52, 32, 56, 51, 55, 81, 52, 51, 51, 32, 56, 48, 48, 32, 51, 57, 53, 32, 55, 54, 56, 76, 51, 49, 55, 32, 55, 48, 53, 76, 50, 50, 51, 32, 54, 51, 56, 81, 49, 51, 54, 32, 53, 56, 51, 32, 57, 48, 32, 53, 48, 48, 84, 52, 52, 32, 51, 51, 55, 81, 52, 52, 32, 50, 54, 56, 32, 55, 51, 32, 50, 49, 51, 81, 56, 53, 32, 49, 56, 54, 32, 49, 48, 53, 32, 49, 54, 49, 84, 49, 53, 49, 32, 49, 49, 54, 81, 49, 57, 56, 32, 56, 49, 32, 50, 53, 49, 32, 56, 49, 81, 52, 48, 48, 32, 56, 49, 32, 53, 48, 51, 32, 49, 50, 50, 81, 53, 53, 53, 10, 49, 52, 51, 32, 53, 57, 49, 32, 49, 54, 56, 81, 54, 50, 52, 32, 49, 56, 56, 32, 54, 53, 51, 32, 50, 50, 49, 81, 54, 55, 55, 32, 50, 53, 50, 32, 54, 57, 48, 32, 50, 55, 55, 84, 55, 48, 56, 32, 51, 51, 48, 81, 55, 48, 56, 32, 51, 55, 49, 32, 54, 57, 52, 32, 52, 48, 48, 84, 54, 53, 52, 32, 52, 53, 50, 81, 54, 48, 49, 32, 52, 57, 53, 32, 53, 50, 56, 32, 52, 57, 53, 81, 53, 48, 49, 32, 52, 57, 53, 32, 52, 56, 54, 32, 52, 57, 50, 81, 52, 54, 57, 32, 52, 56, 55, 32, 52, 54, 49, 32, 52, 56, 53, 81, 52, 51, 51, 32, 52, 55, 54, 32, 52, 48, 48, 32, 52, 53, 50, 81, 51, 56, 55, 32, 52, 52, 53, 32, 51, 55, 51, 32, 52, 50, 56, 76, 51, 52, 52, 32, 51, 56, 52, 81, 51, 51, 49, 32, 51, 54, 48, 32, 51, 49, 51, 32, 51, 51, 54, 81, 51, 48, 48, 32, 51, 49, 53, 32, 50, 56, 53, 32, 51, 48, 50, 81, 50, 53, 49, 32, 50, 55, 49, 32, 50, 50, 54, 32, 50, 53, 56, 84, 49, 54, 54, 32, 50, 52, 53, 81, 49, 52, 54, 32, 50, 52, 53, 32, 49, 52, 54, 32, 50, 54, 51, 81, 49, 52, 54, 32, 50, 55, 50, 10, 49, 53, 50, 32, 50, 55, 51, 81, 49, 56, 57, 32, 50, 55, 51, 32, 50, 49, 57, 32, 50, 56, 57, 84, 50, 56, 53, 32, 51, 52, 52, 76, 51, 49, 52, 32, 51, 56, 57, 76, 51, 51, 51, 32, 52, 50, 48, 76, 51, 52, 57, 32, 52, 52, 55, 76, 51, 55, 48, 32, 52, 56, 49, 81, 52, 52, 48, 32, 53, 51, 48, 32, 53, 51, 55, 32, 53, 51, 48, 81, 54, 54, 51, 32, 53, 51, 48, 32, 55, 50, 51, 32, 52, 52, 53, 81, 55, 52, 50, 32, 52, 48, 54, 32, 55, 52, 50, 32, 51, 53, 51, 81, 55, 52, 50, 32, 50, 55, 50, 32, 54, 56, 49, 32, 50, 48, 49, 84, 53, 48, 54, 32, 56, 56, 84, 50, 52, 52, 32, 52, 53, 81, 49, 55, 53, 32, 52, 53, 32, 49, 49, 53, 32, 56, 53, 81, 56, 55, 32, 49, 48, 53, 32, 54, 55, 32, 49, 51, 50, 84, 51, 48, 32, 49, 57, 53, 81, 50, 51, 32, 50, 49, 49, 32, 49, 56, 32, 50, 50, 54, 84, 55, 32, 50, 54, 52, 81, 52, 32, 50, 56, 50, 32, 50, 32, 50, 57, 57, 84, 48, 32, 51, 51, 55, 81, 48, 32, 51, 56, 53, 32, 49, 49, 32, 52, 50, 55, 84, 52, 52, 32, 53, 49, 50, 81, 56, 57, 32, 53, 57, 52, 10, 49, 56, 50, 32, 54, 53, 50, 81, 50, 54, 53, 32, 54, 57, 54, 32, 51, 51, 50, 32, 55, 53, 49, 84, 52, 50, 54, 32, 56, 51, 57, 76, 52, 54, 53, 32, 56, 56, 57, 76, 53, 50, 52, 32, 57, 54, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 103, 114, 97, 118, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 50, 48, 34, 32, 100, 61, 34, 77, 48, 32, 52, 56, 53, 81, 49, 50, 55, 32, 53, 53, 48, 32, 50, 53, 48, 32, 53, 53, 48, 81, 51, 56, 49, 32, 53, 53, 48, 32, 52, 51, 57, 32, 52, 55, 53, 84, 52, 57, 55, 32, 51, 49, 48, 76, 52, 55, 55, 32, 50, 50, 54, 81, 52, 55, 49, 32, 50, 48, 55, 32, 52, 54, 54, 32, 49, 57, 49, 84, 52, 53, 49, 32, 49, 53, 53, 81, 52, 52, 54, 32, 49, 52, 48, 32, 52, 51, 56, 32, 49, 50, 51, 81, 52, 51, 52, 32, 49, 49, 51, 32, 52, 50, 51, 32, 57, 51, 84, 52, 48, 54, 32, 54, 51, 84, 51, 56, 56, 32, 51, 57, 76, 51, 52, 53, 32, 45, 49, 54, 76, 50, 57, 48, 32, 45, 55, 53, 81, 50, 53, 52, 32, 45, 49, 48, 50, 32, 50, 49, 55, 32, 45, 49, 51, 53, 84, 49, 52, 53, 32, 45, 50, 48, 52, 81, 55, 49, 32, 45, 50, 55, 56, 32, 52, 49, 10, 45, 51, 51, 56, 81, 49, 56, 32, 45, 51, 51, 56, 32, 57, 32, 45, 51, 51, 48, 84, 48, 32, 45, 50, 57, 49, 81, 49, 48, 32, 45, 50, 55, 52, 32, 50, 48, 32, 45, 50, 53, 57, 84, 52, 52, 32, 45, 50, 50, 55, 84, 55, 50, 32, 45, 49, 57, 50, 81, 55, 56, 32, 45, 49, 56, 53, 32, 57, 48, 32, 45, 49, 55, 51, 81, 49, 48, 51, 32, 45, 49, 53, 55, 32, 49, 49, 50, 32, 45, 49, 52, 56, 81, 49, 50, 56, 32, 45, 49, 51, 50, 32, 49, 51, 53, 32, 45, 49, 50, 53, 76, 49, 56, 52, 32, 45, 56, 49, 76, 50, 56, 50, 32, 52, 81, 51, 51, 49, 32, 53, 51, 32, 51, 53, 54, 32, 57, 54, 84, 51, 57, 52, 32, 49, 55, 57, 76, 52, 48, 51, 32, 50, 49, 52, 76, 52, 50, 55, 32, 51, 49, 48, 81, 52, 50, 55, 32, 52, 56, 53, 32, 50, 51, 53, 32, 52, 56, 53, 81, 49, 54, 55, 32, 52, 56, 53, 32, 49, 54, 32, 52, 53, 51, 81, 48, 32, 52, 53, 51, 32, 48, 32, 52, 56, 53, 90, 77, 53, 56, 53, 32, 50, 51, 56, 81, 53, 57, 55, 32, 50, 51, 56, 32, 54, 48, 56, 32, 50, 51, 52, 84, 54, 50, 53, 32, 50, 50, 48, 84, 54, 51, 53, 10, 50, 48, 51, 84, 54, 52, 49, 32, 49, 56, 48, 81, 54, 52, 49, 32, 49, 54, 55, 32, 54, 51, 54, 32, 49, 53, 57, 81, 54, 51, 51, 32, 49, 53, 48, 32, 54, 50, 51, 32, 49, 51, 56, 81, 54, 48, 56, 32, 49, 50, 50, 32, 53, 56, 53, 32, 49, 50, 50, 81, 53, 53, 56, 32, 49, 50, 50, 32, 53, 52, 52, 32, 49, 51, 57, 81, 53, 50, 56, 32, 49, 53, 54, 32, 53, 50, 56, 32, 49, 56, 48, 81, 53, 50, 56, 32, 50, 48, 52, 32, 53, 52, 52, 32, 50, 50, 49, 81, 53, 53, 56, 32, 50, 51, 56, 32, 53, 56, 53, 32, 50, 51, 56, 90, 77, 53, 56, 53, 32, 52, 55, 53, 81, 54, 48, 56, 32, 52, 55, 53, 32, 54, 50, 52, 32, 52, 53, 56, 84, 54, 52, 49, 32, 52, 49, 55, 81, 54, 52, 49, 32, 51, 57, 53, 32, 54, 50, 53, 32, 51, 55, 55, 84, 53, 56, 53, 32, 51, 53, 57, 76, 53, 54, 50, 32, 51, 54, 50, 81, 53, 53, 52, 32, 51, 54, 53, 32, 53, 52, 52, 32, 51, 55, 53, 81, 53, 50, 56, 32, 51, 57, 51, 32, 53, 50, 56, 32, 52, 49, 55, 76, 53, 51, 49, 32, 52, 52, 48, 81, 53, 51, 54, 32, 52, 53, 49, 32, 53, 52, 52, 10, 52, 53, 56, 81, 53, 53, 57, 32, 52, 55, 53, 32, 53, 56, 53, 32, 52, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 49, 56, 34, 32, 100, 61, 34, 77, 48, 32, 49, 48, 49, 53, 86, 45, 52, 50, 51, 72, 51, 52, 86, 57, 48, 72, 52, 49, 56, 86, 50, 49, 56, 72, 51, 52, 86, 51, 55, 52, 72, 52, 49, 56, 86, 53, 48, 50, 72, 51, 52, 86, 49, 48, 49, 53, 72, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 48, 34, 32, 100, 61, 34, 77, 49, 51, 54, 32, 50, 48, 48, 86, 51, 56, 50, 72, 49, 53, 51, 86, 50, 48, 53, 76, 49, 57, 55, 32, 50, 50, 48, 86, 49, 50, 51, 76, 49, 53, 51, 32, 49, 48, 56, 86, 45, 55, 48, 76, 49, 57, 55, 32, 45, 53, 55, 86, 45, 49, 53, 53, 76, 49, 53, 51, 32, 45, 49, 54, 57, 86, 45, 51, 51, 54, 72, 49, 51, 54, 86, 45, 49, 55, 52, 76, 54, 48, 32, 45, 49, 57, 56, 86, 45, 51, 54, 52, 72, 52, 51, 86, 45, 50, 48, 52, 76, 48, 32, 45, 50, 49, 56, 86, 45, 49, 50, 49, 76, 52, 51, 32, 45, 49, 48, 54, 86, 55, 51, 76, 48, 32, 53, 56, 86, 49, 53, 55, 76, 52, 51, 32, 49, 55, 49, 86, 51, 53, 51, 72, 54, 48, 86, 49, 55, 55, 76, 49, 51, 54, 32, 50, 48, 48, 90, 77, 54, 48, 32, 55, 56, 86, 45, 49, 48, 49, 76, 49, 51, 54, 10, 45, 55, 55, 86, 49, 48, 51, 76, 54, 48, 32, 55, 56, 90, 77, 45, 50, 52, 32, 51, 48, 48, 76, 53, 49, 32, 52, 54, 49, 76, 49, 50, 52, 32, 51, 48, 48, 72, 49, 48, 51, 76, 53, 56, 32, 51, 53, 51, 72, 52, 53, 76, 45, 51, 32, 51, 48, 48, 72, 45, 50, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 53, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 50, 48, 32, 45, 50, 48, 50, 86, 51, 55, 55, 72, 51, 56, 86, 49, 55, 50, 76, 49, 55, 55, 32, 49, 57, 54, 86, 45, 51, 55, 55, 72, 49, 54, 48, 86, 45, 49, 55, 55, 76, 50, 48, 32, 45, 50, 48, 50, 90, 77, 51, 56, 32, 45, 49, 48, 56, 76, 49, 54, 48, 32, 45, 56, 57, 86, 49, 48, 48, 76, 51, 56, 32, 56, 48, 86, 45, 49, 48, 56, 90, 77, 45, 52, 54, 32, 51, 50, 52, 76, 50, 57, 32, 52, 56, 53, 76, 49, 48, 50, 32, 51, 50, 52, 72, 56, 49, 76, 51, 54, 32, 51, 55, 55, 72, 50, 51, 76, 45, 50, 53, 32, 51, 50, 52, 72, 45, 52, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 49, 34, 32, 100, 61, 34, 77, 45, 52, 51, 32, 52, 52, 49, 76, 51, 50, 32, 54, 48, 50, 76, 49, 48, 53, 32, 52, 52, 49, 72, 56, 52, 76, 51, 57, 32, 52, 57, 52, 72, 50, 54, 76, 45, 50, 50, 32, 52, 52, 49, 72, 45, 52, 51, 90, 77, 50, 50, 32, 52, 57, 52, 72, 52, 50, 86, 49, 49, 54, 81, 55, 50, 32, 49, 51, 50, 32, 57, 51, 32, 49, 51, 56, 84, 49, 51, 53, 32, 49, 52, 52, 81, 49, 53, 50, 32, 49, 52, 52, 32, 49, 54, 51, 32, 49, 52, 49, 84, 49, 56, 57, 32, 49, 51, 48, 81, 50, 48, 56, 32, 49, 49, 56, 32, 50, 49, 54, 32, 57, 48, 76, 50, 50, 48, 32, 54, 52, 81, 50, 50, 48, 32, 49, 57, 32, 49, 55, 53, 32, 45, 51, 48, 81, 49, 53, 57, 32, 45, 52, 57, 32, 49, 52, 53, 32, 45, 54, 54, 84, 49, 49, 48, 32, 45, 49, 48, 49, 76, 50, 50, 10, 45, 49, 56, 52, 86, 52, 57, 52, 90, 77, 49, 51, 53, 32, 49, 48, 54, 76, 49, 50, 55, 32, 49, 49, 48, 76, 49, 49, 50, 32, 49, 49, 50, 81, 57, 53, 32, 49, 49, 50, 32, 55, 57, 32, 49, 48, 54, 84, 52, 50, 32, 56, 49, 86, 45, 49, 50, 51, 81, 56, 56, 32, 45, 55, 52, 32, 49, 49, 51, 32, 45, 51, 53, 81, 49, 52, 53, 32, 49, 53, 32, 49, 52, 53, 32, 53, 52, 81, 49, 52, 54, 32, 54, 56, 32, 49, 52, 54, 32, 55, 53, 81, 49, 52, 54, 32, 56, 52, 32, 49, 52, 52, 32, 57, 49, 84, 49, 51, 53, 32, 49, 48, 54, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 55, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 105, 118, 105, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 51, 54, 34, 32, 100, 61, 34, 77, 51, 57, 55, 32, 45, 49, 48, 48, 81, 51, 57, 55, 32, 45, 49, 50, 50, 32, 51, 56, 51, 32, 45, 49, 51, 52, 84, 51, 53, 48, 32, 45, 49, 52, 55, 81, 51, 51, 48, 32, 45, 49, 52, 55, 32, 51, 49, 54, 32, 45, 49, 51, 53, 84, 51, 48, 50, 32, 45, 49, 48, 48, 86, 50, 52, 53, 81, 51, 48, 50, 32, 50, 54, 55, 32, 51, 49, 54, 32, 50, 55, 57, 84, 51, 53, 48, 32, 50, 57, 50, 81, 51, 54, 56, 32, 50, 57, 50, 32, 51, 56, 50, 32, 50, 56, 48, 84, 51, 57, 55, 32, 50, 52, 53, 86, 45, 49, 48, 48, 90, 77, 51, 52, 57, 32, 49, 57, 55, 72, 45, 51, 52, 52, 81, 45, 51, 54, 53, 32, 49, 57, 55, 32, 45, 51, 55, 56, 32, 50, 49, 49, 84, 45, 51, 57, 49, 32, 50, 52, 52, 81, 45, 51, 57, 49, 32, 50, 54, 51, 32, 45, 51, 55, 57, 10, 50, 55, 55, 84, 45, 51, 52, 52, 32, 50, 57, 50, 72, 51, 52, 57, 81, 51, 55, 49, 32, 50, 57, 50, 32, 51, 56, 51, 32, 50, 55, 56, 84, 51, 57, 54, 32, 50, 52, 52, 81, 51, 57, 54, 32, 50, 50, 53, 32, 51, 56, 52, 32, 50, 49, 49, 84, 51, 52, 57, 32, 49, 57, 55, 90, 77, 54, 52, 32, 49, 81, 54, 52, 32, 45, 50, 51, 32, 52, 54, 32, 45, 52, 48, 84, 45, 49, 32, 45, 53, 55, 81, 45, 50, 53, 32, 45, 53, 55, 32, 45, 52, 51, 32, 45, 52, 48, 84, 45, 54, 50, 32, 49, 81, 45, 54, 50, 32, 50, 50, 32, 45, 52, 53, 32, 51, 57, 84, 45, 49, 32, 53, 55, 81, 50, 57, 32, 53, 55, 32, 52, 54, 32, 52, 48, 84, 54, 52, 32, 49, 90, 77, 45, 50, 57, 54, 32, 45, 49, 48, 48, 81, 45, 50, 57, 54, 32, 45, 49, 50, 50, 32, 45, 51, 49, 48, 32, 45, 49, 51, 52, 84, 45, 51, 52, 51, 32, 45, 49, 52, 55, 81, 45, 51, 54, 51, 32, 45, 49, 52, 55, 32, 45, 51, 55, 55, 32, 45, 49, 51, 53, 84, 45, 51, 57, 49, 32, 45, 49, 48, 48, 86, 50, 52, 53, 81, 45, 51, 57, 49, 32, 50, 54, 55, 32, 45, 51, 55, 55, 32, 50, 55, 57, 84, 45, 51, 52, 51, 10, 50, 57, 50, 81, 45, 51, 50, 53, 32, 50, 57, 50, 32, 45, 51, 49, 49, 32, 50, 56, 48, 84, 45, 50, 57, 54, 32, 50, 52, 53, 86, 45, 49, 48, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 115, 108, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 53, 55, 34, 32, 100, 61, 34, 77, 49, 55, 55, 32, 45, 51, 55, 55, 72, 49, 54, 48, 86, 45, 49, 55, 55, 76, 50, 48, 32, 45, 50, 48, 50, 86, 51, 55, 55, 72, 51, 56, 86, 49, 55, 50, 76, 49, 55, 55, 32, 49, 57, 54, 86, 45, 51, 55, 55, 90, 77, 50, 52, 49, 32, 45, 51, 50, 52, 76, 49, 54, 56, 32, 45, 52, 56, 53, 76, 57, 51, 32, 45, 51, 50, 52, 72, 49, 49, 52, 76, 49, 54, 50, 32, 45, 51, 55, 55, 72, 49, 55, 53, 76, 50, 50, 48, 32, 45, 51, 50, 52, 72, 50, 52, 49, 90, 77, 49, 54, 48, 32, 45, 56, 57, 86, 49, 48, 48, 76, 51, 56, 32, 56, 48, 86, 45, 49, 48, 56, 76, 49, 54, 48, 32, 45, 56, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 117, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 49, 34, 32, 100, 61, 34, 77, 49, 52, 49, 32, 49, 52, 48, 76, 50, 56, 48, 32, 49, 76, 49, 52, 48, 32, 45, 49, 52, 48, 76, 48, 32, 48, 76, 49, 52, 49, 32, 49, 52, 48, 90, 77, 49, 49, 57, 32, 57, 53, 76, 53, 48, 32, 50, 50, 76, 49, 54, 54, 32, 45, 57, 53, 76, 50, 51, 55, 32, 45, 50, 51, 76, 49, 49, 57, 32, 57, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 98, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 117, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 48, 34, 32, 100, 61, 34, 77, 49, 52, 49, 32, 49, 52, 48, 76, 50, 56, 48, 32, 49, 76, 49, 52, 48, 32, 45, 49, 52, 48, 76, 48, 32, 48, 76, 49, 52, 49, 32, 49, 52, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 117, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 56, 52, 34, 32, 100, 61, 34, 77, 50, 49, 32, 49, 52, 51, 76, 50, 56, 55, 32, 45, 49, 50, 55, 76, 50, 55, 48, 32, 45, 49, 52, 54, 76, 49, 32, 49, 50, 51, 76, 50, 49, 32, 49, 52, 51, 90, 77, 45, 53, 32, 45, 49, 49, 57, 76, 50, 54, 53, 32, 49, 52, 56, 76, 50, 56, 52, 32, 49, 50, 56, 76, 49, 53, 32, 45, 49, 52, 48, 76, 45, 53, 32, 45, 49, 49, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 121, 97, 99, 117, 116, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 49, 34, 32, 100, 61, 34, 77, 49, 50, 57, 32, 49, 52, 81, 49, 50, 57, 32, 51, 54, 32, 49, 49, 57, 32, 54, 52, 81, 49, 49, 52, 32, 55, 56, 32, 49, 49, 49, 32, 57, 51, 84, 49, 48, 54, 32, 49, 49, 52, 81, 49, 48, 54, 32, 49, 51, 51, 32, 49, 49, 53, 32, 49, 52, 51, 84, 49, 51, 56, 32, 49, 53, 52, 81, 49, 52, 56, 32, 49, 53, 52, 32, 49, 53, 56, 32, 49, 52, 52, 81, 49, 54, 54, 32, 49, 51, 51, 32, 49, 54, 54, 32, 49, 49, 53, 81, 49, 54, 54, 32, 57, 55, 32, 49, 53, 55, 32, 54, 57, 84, 49, 52, 52, 32, 49, 52, 81, 49, 53, 49, 32, 49, 56, 32, 49, 54, 50, 32, 50, 55, 84, 49, 56, 49, 32, 52, 53, 81, 50, 48, 55, 32, 55, 52, 32, 50, 49, 56, 32, 56, 49, 84, 50, 52, 51, 32, 56, 56, 81, 50, 53, 54, 32, 56, 56, 32, 50, 54, 51, 32, 56, 48, 81, 50, 55, 50, 10, 55, 50, 32, 50, 55, 50, 32, 54, 48, 81, 50, 55, 50, 32, 52, 55, 32, 50, 54, 49, 32, 51, 55, 84, 49, 57, 57, 32, 49, 52, 81, 49, 56, 50, 32, 49, 48, 32, 49, 55, 50, 32, 56, 84, 49, 53, 49, 32, 48, 81, 49, 54, 55, 32, 45, 56, 32, 49, 57, 56, 32, 45, 49, 53, 81, 50, 52, 50, 32, 45, 50, 50, 32, 50, 53, 55, 32, 45, 51, 54, 81, 50, 54, 57, 32, 45, 52, 55, 32, 50, 55, 49, 32, 45, 54, 50, 81, 50, 55, 49, 32, 45, 55, 51, 32, 50, 54, 50, 32, 45, 56, 49, 81, 50, 53, 54, 32, 45, 56, 56, 32, 50, 52, 51, 32, 45, 57, 48, 81, 50, 51, 52, 32, 45, 57, 48, 32, 50, 49, 56, 32, 45, 56, 50, 81, 50, 49, 49, 32, 45, 55, 56, 32, 50, 48, 49, 32, 45, 54, 55, 84, 49, 56, 50, 32, 45, 52, 55, 81, 49, 54, 57, 32, 45, 51, 49, 32, 49, 52, 52, 32, 45, 49, 51, 81, 49, 52, 52, 32, 45, 51, 51, 32, 49, 53, 51, 32, 45, 53, 57, 81, 49, 54, 54, 32, 45, 49, 48, 49, 32, 49, 54, 54, 32, 45, 49, 49, 56, 81, 49, 54, 54, 32, 45, 49, 51, 50, 32, 49, 53, 55, 32, 45, 49, 52, 52, 81, 49, 52, 55, 10, 45, 49, 53, 52, 32, 49, 51, 56, 32, 45, 49, 53, 52, 81, 49, 50, 53, 32, 45, 49, 53, 52, 32, 49, 49, 54, 32, 45, 49, 52, 53, 84, 49, 48, 54, 32, 45, 49, 49, 56, 81, 49, 48, 54, 32, 45, 57, 56, 32, 49, 49, 52, 32, 45, 55, 53, 76, 49, 50, 53, 32, 45, 52, 49, 76, 49, 50, 57, 32, 45, 49, 51, 81, 49, 50, 50, 32, 45, 49, 56, 32, 49, 49, 50, 32, 45, 50, 53, 84, 57, 49, 32, 45, 52, 53, 81, 54, 51, 32, 45, 55, 54, 32, 53, 48, 32, 45, 56, 52, 76, 51, 48, 32, 45, 57, 48, 81, 49, 56, 32, 45, 57, 48, 32, 57, 32, 45, 56, 49, 84, 48, 32, 45, 54, 50, 81, 48, 32, 45, 53, 51, 32, 55, 32, 45, 52, 51, 84, 51, 48, 32, 45, 50, 54, 76, 55, 54, 32, 45, 49, 52, 81, 57, 49, 32, 45, 49, 49, 32, 57, 57, 32, 45, 57, 84, 49, 50, 49, 32, 48, 81, 49, 48, 50, 32, 49, 48, 32, 55, 51, 32, 49, 54, 81, 50, 54, 32, 50, 53, 32, 49, 55, 32, 51, 51, 81, 48, 32, 52, 53, 32, 48, 32, 54, 51, 81, 48, 32, 55, 49, 32, 56, 32, 56, 49, 81, 49, 51, 32, 56, 53, 32, 49, 55, 32, 56, 55, 84, 50, 56, 10, 56, 57, 81, 52, 49, 32, 56, 57, 32, 53, 52, 32, 56, 50, 84, 56, 56, 32, 53, 48, 81, 57, 54, 32, 52, 48, 32, 49, 48, 56, 32, 51, 48, 84, 49, 50, 57, 32, 49, 52, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 104, 111, 114, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 57, 57, 56, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 102, 102, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 121, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 48, 48, 34, 32, 100, 61, 34, 77, 48, 32, 49, 50, 51, 72, 51, 48, 48, 86, 45, 49, 50, 53, 72, 48, 86, 49, 50, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 52, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 76, 115, 108, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 51, 54, 54, 34, 32, 100, 61, 34, 77, 45, 51, 32, 45, 51, 48, 48, 76, 53, 54, 48, 32, 49, 49, 54, 54, 72, 55, 54, 57, 76, 49, 51, 54, 57, 32, 45, 51, 48, 48, 72, 49, 49, 52, 56, 76, 57, 55, 55, 32, 49, 52, 52, 72, 51, 54, 52, 76, 50, 48, 51, 32, 45, 51, 48, 48, 72, 45, 51, 90, 77, 52, 50, 48, 32, 51, 48, 50, 72, 57, 49, 55, 76, 55, 54, 52, 32, 55, 48, 56, 81, 54, 57, 57, 32, 56, 56, 49, 32, 54, 54, 48, 32, 49, 48, 49, 50, 81, 54, 51, 51, 32, 56, 54, 57, 32, 53, 56, 49, 32, 55, 51, 50, 76, 52, 50, 48, 32, 51, 48, 50, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 53, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 79, 69, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 50, 50, 34, 32, 100, 61, 34, 77, 48, 32, 50, 55, 51, 81, 48, 32, 51, 51, 49, 32, 51, 51, 32, 51, 57, 48, 81, 52, 57, 32, 52, 49, 57, 32, 55, 48, 32, 52, 52, 49, 84, 49, 49, 57, 32, 52, 56, 49, 81, 49, 55, 52, 32, 53, 49, 54, 32, 50, 51, 53, 32, 53, 49, 54, 81, 50, 55, 50, 32, 53, 49, 54, 32, 51, 50, 48, 32, 52, 57, 54, 81, 51, 52, 51, 32, 52, 56, 55, 32, 51, 54, 48, 32, 52, 55, 53, 84, 51, 57, 52, 32, 52, 52, 52, 81, 52, 50, 50, 32, 52, 48, 56, 32, 52, 50, 50, 32, 51, 54, 53, 81, 52, 50, 50, 32, 51, 50, 54, 32, 51, 57, 55, 32, 51, 48, 48, 81, 51, 56, 50, 32, 50, 56, 56, 32, 51, 54, 56, 32, 50, 56, 50, 84, 51, 51, 51, 32, 50, 55, 53, 81, 51, 48, 52, 32, 50, 55, 53, 32, 50, 56, 49, 32, 50, 57, 51, 81, 50, 54, 49, 32, 51, 49, 49, 32, 50, 53, 53, 10, 51, 52, 53, 81, 50, 53, 53, 32, 51, 54, 50, 32, 50, 53, 57, 32, 51, 55, 51, 84, 50, 55, 54, 32, 51, 57, 55, 81, 50, 57, 53, 32, 52, 50, 48, 32, 51, 50, 54, 32, 52, 50, 56, 76, 51, 51, 54, 32, 52, 51, 48, 81, 51, 52, 52, 32, 52, 51, 50, 32, 51, 52, 53, 32, 52, 51, 52, 81, 51, 53, 48, 32, 52, 51, 57, 32, 51, 53, 48, 32, 52, 52, 49, 81, 51, 52, 51, 32, 52, 54, 48, 32, 51, 49, 52, 32, 52, 55, 50, 84, 50, 53, 57, 32, 52, 56, 52, 81, 50]).concat([50, 55, 32, 52, 56, 52, 32, 50, 48, 48, 32, 52, 54, 55, 84, 49, 53, 54, 32, 52, 50, 52, 81, 49, 51, 48, 32, 51, 56, 48, 32, 49, 51, 48, 32, 50, 54, 57, 81, 49, 51, 48, 32, 49, 54, 56, 32, 49, 51, 56, 32, 49, 51, 48, 81, 49, 52, 53, 32, 49, 48, 54, 32, 49, 53, 52, 32, 57, 48, 84, 49, 55, 57, 32, 54, 49, 81, 50, 49, 48, 32, 51, 53, 32, 50, 53, 50, 32, 51, 53, 81, 50, 56, 54, 32, 51, 53, 32, 51, 49, 55, 32, 53, 53, 84, 51, 55, 48, 32, 49, 49, 51, 84, 51, 57, 57, 32, 50, 48, 51, 72, 52, 50, 55, 81, 52, 50, 55, 32, 49, 54, 49, 10, 52, 49, 50, 32, 49, 50, 54, 84, 51, 54, 55, 32, 53, 56, 81, 51, 49, 50, 32, 48, 32, 50, 50, 51, 32, 48, 81, 49, 53, 52, 32, 48, 32, 49, 48, 52, 32, 52, 48, 81, 55, 57, 32, 54, 48, 32, 54, 48, 32, 56, 53, 84, 50, 55, 32, 49, 52, 52, 81, 48, 32, 50, 48, 55, 32, 48, 32, 50, 55, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 53, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 111, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 51, 51, 34, 32, 100, 61, 34, 77, 49, 51, 57, 32, 54, 53, 81, 49, 53, 52, 32, 55, 50, 32, 49, 54, 55, 32, 55, 50, 81, 49, 56, 49, 32, 55, 50, 32, 49, 56, 57, 32, 54, 52, 84, 49, 57, 55, 32, 52, 51, 81, 49, 57, 55, 32, 51, 53, 32, 49, 57, 50, 32, 50, 53, 81, 49, 56, 51, 32, 48, 32, 49, 51, 56, 32, 45, 51, 49, 84, 53, 54, 32, 45, 55, 48, 81, 51, 55, 32, 45, 55, 48, 32, 51, 49, 32, 45, 54, 53, 84, 50, 49, 32, 45, 52, 55, 81, 50, 49, 32, 45, 49, 53, 32, 53, 57, 32, 49, 55, 81, 56, 56, 32, 52, 49, 32, 49, 51, 57, 32, 54, 53, 90, 77, 50, 48, 57, 32, 53, 53, 50, 86, 54, 56, 76, 49, 57, 56, 32, 55, 56, 81, 49, 56, 55, 32, 56, 55, 32, 49, 55, 49, 32, 57, 49, 84, 49, 52, 49, 32, 57, 54, 81, 55, 55, 32, 57, 54, 32, 51, 53, 32, 53, 48, 81, 48, 10, 49, 49, 32, 48, 32, 45, 50, 56, 81, 48, 32, 45, 57, 54, 32, 54, 55, 32, 45, 57, 54, 81, 49, 48, 56, 32, 45, 57, 54, 32, 49, 52, 54, 32, 45, 55, 55, 84, 50, 48, 52, 32, 45, 50, 56, 81, 50, 49, 54, 32, 45, 49, 49, 32, 50, 50, 48, 32, 52, 84, 50, 50, 50, 32, 51, 52, 86, 53, 53, 50, 72, 50, 48, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 54, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 83, 99, 97, 114, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 55, 52, 34, 32, 100, 61, 34, 77, 50, 55, 52, 32, 54, 48, 81, 50, 55, 52, 32, 52, 52, 32, 50, 54, 49, 32, 50, 56, 84, 50, 48, 53, 32, 45, 57, 76, 50, 49, 57, 32, 45, 50, 57, 76, 50, 50, 57, 32, 45, 52, 53, 81, 50, 51, 53, 32, 45, 53, 55, 32, 50, 51, 54, 32, 45, 54, 51, 76, 50, 51, 57, 32, 45, 56, 50, 81, 50, 51, 57, 32, 45, 49, 50, 56, 32, 49, 57, 57, 32, 45, 49, 53, 50, 81, 49, 54, 53, 32, 45, 49, 55, 49, 32, 49, 49, 53, 32, 45, 49, 55, 49, 81, 55, 51, 32, 45, 49, 55, 49, 32, 52, 48, 32, 45, 49, 53, 49, 81, 48, 32, 45, 49, 50, 54, 32, 48, 32, 45, 56, 52, 81, 48, 32, 45, 53, 50, 32, 50, 57, 32, 45, 50, 56, 81, 53, 51, 32, 45, 49, 48, 32, 56, 57, 32, 52, 81, 56, 50, 32, 49, 52, 32, 55, 56, 32, 50, 49, 84, 54, 56, 32, 51, 57, 76, 54, 50, 10, 53, 55, 76, 54, 49, 32, 55, 54, 81, 54, 49, 32, 49, 49, 51, 32, 57, 53, 32, 49, 51, 52, 84, 49, 54, 57, 32, 49, 53, 53, 81, 49, 57, 48, 32, 49, 53, 53, 32, 50, 48, 55, 32, 49, 52, 56, 81, 50, 49, 53, 32, 49, 52, 53, 32, 50, 50, 50, 32, 49, 52, 49, 84, 50, 52, 49, 32, 49, 50, 56, 81, 50, 53, 56, 32, 49, 49, 52, 32, 50, 54, 53, 32, 57, 55, 81, 50, 55, 52, 32, 56, 48, 32, 50, 55, 52, 32, 54, 48, 90, 77, 50, 51, 53, 32, 54, 56, 76, 50, 51, 54, 32, 55, 54, 81, 50, 51, 54, 32, 56, 54, 32, 50, 51, 50, 32, 57, 53, 81, 50, 50, 57, 32, 49, 48, 54, 32, 50, 50, 48, 32, 49, 49, 52, 81, 50, 48, 51, 32, 49, 51, 54, 32, 49, 55, 54, 32, 49, 51, 54, 81, 49, 53, 55, 32, 49, 51, 54, 32, 49, 52, 51, 32, 49, 50, 55, 84, 49, 50, 54, 32, 57, 57, 81, 49, 50, 54, 32, 54, 55, 32, 49, 54, 48, 32, 51, 51, 76, 49, 57, 50, 32, 51, 81, 50, 50, 56, 32, 50, 53, 32, 50, 51, 53, 32, 54, 56, 90, 77, 49, 55, 53, 32, 45, 49, 48, 57, 81, 49, 55, 53, 32, 45, 57, 56, 32, 49, 54, 55, 32, 45, 56, 52, 81, 49, 54, 53, 10, 45, 56, 49, 32, 49, 53, 54, 32, 45, 54, 55, 81, 49, 53, 53, 32, 45, 54, 53, 32, 49, 52, 57, 32, 45, 53, 57, 84, 49, 51, 57, 32, 45, 52, 57, 76, 49, 48, 49, 32, 45, 57, 76, 55, 54, 32, 45, 50, 54, 76, 53, 56, 32, 45, 52, 50, 76, 52, 54, 32, 45, 54, 51, 81, 52, 50, 32, 45, 55, 52, 32, 52, 50, 32, 45, 57, 49, 81, 52, 50, 32, 45, 49, 49, 54, 32, 54, 53, 32, 45, 49, 51, 54, 76, 56, 57, 32, 45, 49, 52, 56, 81, 49, 48, 48, 32, 45, 49, 53, 50, 32, 49, 49, 53, 32, 45, 49, 53, 50, 81, 49, 52, 54, 32, 45, 49, 53, 50, 32, 49, 54, 49, 32, 45, 49, 52, 48, 81, 49, 55, 54, 32, 45, 49, 51, 50, 32, 49, 55, 54, 32, 45, 49, 49, 53, 76, 49, 55, 53, 32, 45, 49, 48, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 54, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 115, 99, 97, 114, 111, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 56, 49, 34, 32, 100, 61, 34, 77, 49, 56, 49, 32, 45, 49, 51, 49, 81, 49, 56, 49, 32, 45, 49, 54, 50, 32, 49, 55, 49, 32, 45, 49, 55, 55, 81, 49, 53, 52, 32, 45, 50, 48, 50, 32, 49, 48, 55, 32, 45, 50, 48, 50, 81, 51, 55, 32, 45, 50, 48, 50, 32, 49, 54, 32, 45, 49, 55, 52, 81, 45, 49, 32, 45, 49, 53, 49, 32, 45, 49, 32, 45, 56, 48, 81, 45, 49, 32, 45, 53, 55, 32, 45, 49, 32, 45, 51, 55, 84, 48, 32, 48, 81, 48, 32, 50, 49, 32, 48, 32, 52, 49, 84, 45, 49, 32, 56, 48, 81, 45, 49, 32, 49, 53, 50, 32, 49, 53, 32, 49, 55, 52, 81, 51, 54, 32, 50, 48, 50, 32, 49, 48, 55, 32, 50, 48, 50, 81, 49, 53, 53, 32, 50, 48, 50, 32, 49, 55, 49, 32, 49, 55, 56, 81, 49, 56, 49, 32, 49, 54, 51, 32, 49, 56, 49, 32, 49, 51, 49, 81, 49, 56, 49, 10, 56, 57, 32, 49, 53, 53, 32, 55, 51, 81, 49, 51, 53, 32, 54, 49, 32, 57, 55, 32, 54, 49, 81, 56, 53, 32, 54, 49, 32, 55, 52, 32, 54, 49, 84, 53, 51, 32, 54, 50, 81, 50, 55, 32, 54, 50, 32, 50, 55, 32, 53, 49, 86, 48, 86, 45, 53, 49, 81, 50, 55, 32, 45, 54, 51, 32, 53, 49, 32, 45, 54, 51, 81, 53, 55, 32, 45, 54, 51, 32, 55, 51, 32, 45, 54, 50, 84, 57, 56, 32, 45, 54, 49, 81, 49, 51, 54, 32, 45, 54, 49, 32, 49, 53, 52, 32, 45, 55, 50, 81, 49, 56, 49, 32, 45, 56, 56, 32, 49, 56, 49, 32, 45, 49, 51, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 55, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 89, 100, 105, 101, 114, 101, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 52, 53, 51, 34, 32, 100, 61, 34, 77, 50, 50, 49, 32, 55, 50, 53, 72, 50, 48, 57, 86, 54, 54, 81, 50, 48, 56, 32, 54, 56, 32, 50, 48, 52, 32, 55, 50, 84, 49, 57, 55, 32, 55, 57, 81, 49, 56, 54, 32, 56, 56, 32, 49, 55, 50, 32, 57, 50, 84, 49, 52, 50, 32, 57, 54, 81, 55, 55, 32, 57, 54, 32, 51, 53, 32, 53, 48, 81, 48, 32, 49, 49, 32, 48, 32, 45, 50, 57, 81, 48, 32, 45, 57, 55, 32, 54, 54, 32, 45, 57, 55, 81, 49, 48, 56, 32, 45, 57, 55, 32, 49, 52, 55, 32, 45, 55, 56, 84, 50, 48, 51, 32, 45, 50, 57, 81, 50, 49, 53, 32, 45, 49, 50, 32, 50, 49, 57, 32, 51, 84, 50, 50, 49, 32, 51, 52, 86, 51, 56, 54, 81, 50, 52, 53, 32, 51, 56, 52, 32, 50, 53, 53, 32, 51, 56, 50, 84, 50, 55, 57, 32, 51, 55, 54, 84, 51, 48, 53, 32, 51, 54, 55, 84, 51, 50, 52, 10, 51, 53, 56, 84, 51, 52, 53, 32, 51, 52, 50, 81, 51, 53, 51, 32, 51, 51, 53, 32, 51, 54, 49, 32, 51, 50, 56, 76, 51, 54, 54, 32, 51, 50, 53, 76, 51, 53, 54, 32, 51, 48, 56, 81, 51, 53, 56, 32, 51, 48, 54, 32, 51, 54, 48, 32, 51, 48, 54, 81, 51, 54, 55, 32, 51, 48, 56, 32, 51, 54, 56, 32, 51, 49, 48, 76, 51, 55, 53, 32, 51, 49, 53, 81, 51, 57, 49, 32, 50, 57, 51, 32, 51, 57, 55, 32, 50, 55, 52, 84, 52, 48, 51, 32, 50, 51, 49, 81, 52, 48, 51, 32, 50, 48, 49, 32, 51, 57, 48, 32, 49, 54, 56, 81, 51, 56, 54, 32, 49, 53, 55, 32, 51, 55, 57, 32, 49, 52, 52, 84, 51, 54, 56, 32, 49, 50, 52, 81, 51, 54, 51, 32, 49, 49, 57, 32, 51, 54, 49, 32, 49, 49, 53, 84, 51, 53, 54, 32, 49, 48, 54, 81, 51, 53, 56, 32, 49, 48, 51, 32, 51, 54, 48, 32, 49, 48, 51, 81, 51, 54, 55, 32, 49, 48, 54, 32, 51, 54, 56, 32, 49, 48, 56, 81, 51, 56, 48, 32, 49, 49, 57, 32, 51, 56, 55, 32, 49, 51, 50, 84, 52, 48, 50, 32, 49, 54, 54, 84, 52, 49, 51, 32, 50, 49, 49, 84, 52, 49, 56, 32, 50, 53, 51, 81, 52, 49, 56, 10, 50, 56, 50, 32, 52, 48, 57, 32, 51, 48, 53, 81, 52, 48, 52, 32, 51, 49, 56, 32, 51, 57, 48, 32, 51, 52, 48, 76, 52, 48, 49, 32, 51, 54, 52, 81, 52, 49, 54, 32, 52, 48, 54, 32, 52, 49, 54, 32, 52, 52, 50, 81, 52, 49, 54, 32, 52, 56, 51, 32, 51, 57, 54, 32, 53, 50, 51, 84, 51, 51, 48, 32, 54, 49, 53, 81, 51, 48, 49, 32, 54, 52, 53, 32, 50, 55, 50, 32, 54, 55, 49, 84, 50, 50, 49, 32, 55, 49, 51, 86, 55, 50, 53, 90, 77, 51, 55, 54, 32, 51, 54, 48, 81, 51, 54, 51, 32, 51, 55, 55, 32, 51, 53, 53, 32, 51, 56, 55, 81, 51, 53, 49, 32, 51, 57, 50, 32, 51, 50, 57, 32, 52, 49, 53, 84, 50, 55, 51, 32, 52, 54, 56, 81, 50, 52, 52, 32, 52, 57, 52, 32, 50, 50, 49, 32, 53, 49, 50, 86, 53, 57, 48, 81, 50, 52, 52, 32, 53, 56, 55, 32, 50, 53, 53, 32, 53, 56, 52, 84, 50, 56, 50, 32, 53, 55, 53, 81, 51, 53, 52, 32, 53, 52, 52, 32, 51, 56, 49, 32, 53, 48, 57, 81, 52, 48, 52, 32, 52, 55, 57, 32, 52, 48, 52, 32, 52, 51, 55, 81, 52, 48, 52, 32, 52, 50, 49, 32, 52, 48, 49, 10, 52, 48, 53, 84, 51, 57, 48, 32, 51, 54, 57, 76, 51, 56, 50, 32, 51, 53, 50, 76, 51, 55, 54, 32, 51, 54, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 49, 57, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 102, 108, 111, 114, 105, 110, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 48, 55, 34, 32, 100, 61, 34, 77, 50, 48, 55, 32, 49, 53, 53, 76, 49, 50, 50, 32, 45, 49, 50, 48, 81, 49, 49, 57, 32, 45, 49, 50, 53, 32, 49, 50, 55, 32, 45, 49, 51, 48, 76, 49, 51, 53, 32, 45, 49, 51, 51, 76, 49, 53, 51, 32, 45, 49, 51, 53, 72, 49, 54, 52, 76, 49, 53, 56, 32, 45, 49, 53, 54, 72, 48, 76, 54, 32, 45, 49, 51, 53, 72, 50, 49, 81, 51, 49, 32, 45, 49, 51, 53, 32, 52, 50, 32, 45, 49, 51, 48, 81, 53, 54, 32, 45, 49, 50, 56, 32, 54, 50, 32, 45, 49, 49, 48, 76, 49, 49, 55, 32, 54, 54, 76, 52, 54, 32, 49, 48, 76, 51, 54, 32, 50, 48, 76, 49, 52, 53, 32, 49, 53, 53, 72, 50, 48, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 99, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 99, 105, 114, 99, 117, 109, 102, 108, 101, 120, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 49, 52, 34, 32, 100, 61, 34, 77, 50, 49, 52, 32, 49, 48, 54, 81, 50, 49, 52, 32, 57, 53, 32, 50, 49, 50, 32, 57, 48, 76, 50, 48, 52, 32, 55, 54, 81, 49, 57, 56, 32, 54, 54, 32, 49, 55, 54, 32, 54, 49, 76, 49, 54, 51, 32, 54, 50, 76, 49, 53, 49, 32, 54, 57, 81, 49, 52, 53, 32, 55, 53, 32, 49, 52, 53, 32, 56, 57, 76, 49, 52, 54, 32, 49, 48, 48, 76, 49, 53, 52, 32, 49, 49, 48, 76, 49, 55, 49, 32, 49, 50, 54, 81, 49, 54, 56, 32, 49, 51, 54, 32, 49, 53, 49, 32, 49, 51, 54, 81, 49, 48, 54, 32, 49, 51, 54, 32, 56, 50, 32, 54, 50, 76, 55, 51, 32, 51, 49, 76, 54, 55, 32, 45, 53, 81, 56, 56, 32, 49, 51, 32, 49, 48, 54, 32, 50, 49, 84, 49, 53, 48, 32, 50, 57, 81, 49, 55, 48, 32, 50, 54, 32, 49, 56, 56, 32, 55, 81, 50, 48, 50, 10, 45, 55, 32, 50, 48, 54, 32, 45, 51, 50, 81, 50, 48, 54, 32, 45, 56, 52, 32, 49, 55, 49, 32, 45, 49, 50, 57, 81, 49, 53, 53, 32, 45, 49, 52, 57, 32, 49, 51, 53, 32, 45, 49, 54, 48, 81, 49, 50, 55, 32, 45, 49, 54, 53, 32, 49, 49, 52, 32, 45, 49, 54, 56, 84, 56, 56, 32, 45, 49, 55, 49, 81, 51, 56, 32, 45, 49, 55, 49, 32, 49, 57, 32, 45, 49, 52, 52, 84, 48, 32, 45, 54, 51, 81, 48, 32, 45, 53, 52, 32, 48, 32, 45, 52, 53, 84, 51, 32, 45, 50, 53, 81, 51, 32, 45, 49, 52, 32, 52, 32, 45, 56, 84, 49, 50, 32, 49, 52, 81, 50, 53, 32, 53, 54, 32, 52, 55, 32, 56, 55, 84, 57, 53, 32, 49, 51, 52, 81, 49, 50, 52, 32, 49, 53, 53, 32, 49, 53, 52, 32, 49, 53, 53, 81, 49, 56, 49, 32, 49, 53, 53, 32, 49, 57, 54, 32, 49, 52, 51, 81, 50, 48, 51, 32, 49, 51, 55, 32, 50, 48, 56, 32, 49, 50, 56, 84, 50, 49, 52, 32, 49, 48, 54, 90, 77, 49, 52, 57, 32, 45, 51, 51, 76, 49, 52, 54, 32, 45, 50, 51, 76, 49, 52, 48, 32, 45, 49, 49, 81, 49, 51, 51, 32, 45, 51, 32, 49, 50, 48, 32, 48, 76, 49, 49, 52, 10, 49, 81, 57, 55, 32, 49, 32, 55, 55, 32, 45, 51, 50, 76, 54, 51, 32, 45, 55, 50, 81, 53, 56, 32, 45, 57, 52, 32, 53, 56, 32, 45, 49, 49, 51, 81, 53, 56, 32, 45, 49, 51, 48, 32, 54, 51, 32, 45, 49, 52, 48, 84, 56, 53, 32, 45, 49, 53, 50, 81, 49, 49, 50, 32, 45, 49, 53, 50, 32, 49, 51, 51, 32, 45, 49, 48, 53, 81, 49, 52, 49, 32, 45, 56, 51, 32, 49, 52, 53, 32, 45, 54, 55, 84, 49, 52, 57, 32, 45, 51, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 100, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 105, 108, 100, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 34, 32, 100, 61, 34, 77, 50, 56, 48, 32, 50, 54, 49, 86, 45, 50, 54, 48, 72, 50, 50, 48, 86, 50, 54, 49, 72, 50, 56, 48, 90, 77, 52, 48, 49, 32, 50, 54, 49, 86, 45, 50, 54, 48, 72, 51, 52, 48, 86, 50, 54, 49, 72, 52, 48, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 51, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 110, 100, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 49, 55, 49, 34, 32, 100, 61, 34, 77, 48, 32, 48, 86, 50, 52, 72, 49, 48, 56, 49, 72, 49, 49, 49, 54, 86, 48, 72, 51, 54, 72, 48, 90, 77, 48, 32, 50, 53, 55, 86, 50, 56, 50, 72, 49, 48, 56, 49, 72, 49, 49, 49, 54, 86, 50, 53, 55, 72, 51, 54, 72, 48, 90, 77, 48, 32, 53, 49, 52, 86, 53, 51, 57, 72, 49, 48, 56, 49, 72, 49, 49, 49, 54, 86, 53, 49, 52, 72, 51, 54, 72, 48, 90, 77, 48, 32, 55, 55, 50, 86, 55, 57, 54, 72, 49, 48, 56, 49, 72, 49, 49, 49, 54, 86, 55, 55, 50, 72, 51, 54, 72, 48, 90, 77, 48, 32, 49, 48, 50, 57, 86, 49, 48, 53, 51, 72, 49, 48, 56, 49, 72, 49, 49, 49, 54, 86, 49, 48, 50, 57, 72, 51, 54, 72, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 52, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 109, 100, 97, 115, 104, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 50, 57, 34, 32, 100, 61, 34, 77, 48, 32, 52, 50, 49, 72, 49, 50, 51, 86, 45, 52, 49, 49, 86, 45, 52, 51, 48, 72, 48, 86, 52, 48, 51, 86, 52, 50, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 56, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 57, 48, 52, 34, 32, 100, 61, 34, 77, 49, 53, 53, 32, 48, 72, 48, 86, 49, 48, 81, 50, 50, 32, 49, 48, 32, 51, 53, 32, 50, 52, 81, 52, 50, 32, 51, 49, 32, 52, 54, 32, 52, 49, 84, 53, 49, 32, 54, 52, 76, 49, 51, 48, 32, 51, 52, 57, 76, 49, 51, 50, 32, 51, 53, 56, 76, 49, 51, 51, 32, 51, 54, 51, 81, 49, 51, 51, 32, 51, 55, 53, 32, 49, 50, 53, 32, 51, 56, 50, 84, 56, 53, 32, 51, 57, 53, 86, 52, 48, 52, 72, 50, 51, 55, 81, 52, 51, 56, 32, 52, 48, 52, 32, 52, 51, 56, 32, 50, 51, 56, 81, 52, 51, 56, 32, 49, 54, 54, 32, 51, 57, 57, 32, 49, 49, 48, 81, 51, 56, 48, 32, 56, 52, 32, 51, 53, 51, 32, 54, 51, 84, 50, 57, 51, 32, 50, 56, 81, 50, 50, 56, 32, 48, 32, 49, 53, 53, 32, 48, 90, 77, 50, 48, 48, 32, 51, 55, 52, 76, 49, 49, 48, 10, 53, 49, 76, 49, 48, 56, 32, 52, 48, 81, 49, 49, 49, 32, 49, 55, 32, 49, 53, 51, 32, 49, 55, 81, 50, 53, 53, 32, 49, 55, 32, 51, 49, 48, 32, 55, 57, 84, 51, 54, 54, 32, 50, 52, 57, 81, 51, 54, 54, 32, 51, 49, 55, 32, 51, 51, 53, 32, 51, 53, 49, 84, 50, 51, 56, 32, 51, 56, 53, 81, 50, 50, 52, 32, 51, 56, 53, 32, 50, 49, 52, 32, 51, 56, 51, 84, 50, 48, 48, 32, 51, 55, 52, 90, 77, 56, 49, 53, 32, 52, 48, 52, 76, 55, 57, 49, 32, 50, 56, 53, 72, 55, 56, 49, 81, 55, 56, 49, 32, 51, 56, 52, 32, 55, 48, 52, 32, 51, 56, 52, 81, 54, 55, 56, 32, 51, 56, 52, 32, 54, 53, 57, 32, 51, 54, 55, 84, 54, 52, 48, 32, 51, 50, 51, 81, 54, 52, 48, 32, 50, 57, 55, 32, 54, 53, 53, 32, 50, 55, 54, 81, 54, 54, 57, 32, 50, 53, 57, 32, 54, 55, 52, 32, 50, 53, 52, 81, 54, 56, 55, 32, 50, 52, 48, 32, 55, 48, 51, 32, 50, 50, 54, 81, 55, 49, 53, 32, 50, 49, 50, 32, 55, 50, 57, 32, 49, 57, 53, 84, 55, 53, 49, 32, 49, 54, 55, 81, 55, 54, 57, 32, 49, 51, 57, 32, 55, 54, 57, 32, 49, 48, 56, 81, 55, 54, 57, 10, 57, 49, 32, 55, 54, 52, 32, 55, 53, 84, 55, 53, 48, 32, 52, 51, 81, 55, 51, 48, 32, 49, 52, 32, 55, 48, 52, 32, 49, 81, 54, 56, 50, 32, 45, 49, 52, 32, 54, 52, 53, 32, 45, 49, 52, 81, 54, 50, 57, 32, 45, 49, 52, 32, 53, 57, 52, 32, 45, 49, 81, 53, 55, 54, 32, 51, 32, 53, 54, 53, 32, 54, 84, 53, 53, 50, 32, 49, 48, 81, 53, 52, 50, 32, 49, 48, 32, 53, 51, 54, 32, 49, 81, 53, 51, 48, 32, 45, 49, 32, 53, 50, 56, 32, 45, 49, 51, 72, 53, 49, 54, 76, 53, 51, 55, 32, 49, 50, 50, 72, 53, 53, 50, 76, 53, 52, 57, 32, 49, 48, 53, 81, 53, 52, 57, 32, 57, 50, 32, 53, 53, 49, 32, 56, 51, 84, 53, 53, 52, 32, 54, 56, 81, 53, 54, 48, 32, 53, 50, 32, 53, 55, 54, 32, 51, 54, 81, 53, 57, 56, 32, 56, 32, 54, 51, 56, 32, 56, 81, 54, 55, 52, 32, 56, 32, 54, 57, 50, 32, 51, 50, 81, 55, 49, 54, 32, 53, 53, 32, 55, 49, 54, 32, 56, 55, 81, 55, 49, 54, 32, 49, 49, 55, 32, 55, 48, 50, 32, 49, 51, 53, 81, 54, 57, 49, 32, 49, 52, 55, 32, 54, 56, 48, 32, 49, 54, 48, 81, 54, 55, 55, 10, 49, 54, 53, 32, 54, 54, 57, 32, 49, 55, 51, 84, 54, 53, 50, 32, 49, 57, 49, 81, 54, 49, 57, 32, 50, 50, 50, 32, 54, 48, 51, 32, 50, 52, 57, 81, 53, 56, 55, 32, 50, 54, 57, 32, 53, 56, 55, 32, 51, 48, 51, 81, 53, 56, 55, 32, 51, 50, 55, 32, 53, 57, 51, 32, 51, 52, 51, 84, 54, 49, 56, 32, 51, 55, 53, 81, 54, 52, 55, 32, 52, 48, 52, 32, 54, 57, 51, 32, 52, 48, 52, 81, 55, 50, 57, 32, 52, 48, 52, 32, 55, 52, 55, 32, 51, 57, 55, 81, 55, 54, 51, 32, 51, 56, 55, 32, 55, 55, 56, 32, 51, 56, 55, 81, 55, 56, 57, 32, 51, 56, 55, 32, 56, 48, 50, 32, 52, 48, 52, 72, 56, 49, 53, 90, 77, 51, 57, 56, 32, 51, 51, 81, 51, 57, 56, 32, 53, 48, 32, 52, 48, 54, 32, 53, 53, 81, 52, 49, 56, 32, 54, 55, 32, 52, 51, 48, 32, 54, 55, 81, 52, 52, 50, 32, 54, 55, 32, 52, 53, 49, 32, 53, 53, 81, 52, 54, 49, 32, 52, 57, 32, 52, 54, 49, 32, 51, 51, 81, 52, 54, 49, 32, 50, 48, 32, 52, 53, 49, 32, 49, 48, 81, 52, 52, 52, 32, 48, 32, 52, 51, 48, 32, 48, 81, 52, 49, 54, 32, 48, 32, 52, 48, 55, 10, 56, 84, 51, 57, 56, 32, 51, 51, 90, 77, 55, 57, 52, 32, 50, 56, 81, 55, 57, 52, 32, 52, 50, 32, 56, 48, 54, 32, 53, 49, 81, 56, 49, 53, 32, 54, 49, 32, 56, 50, 57, 32, 54, 49, 81, 56, 52, 50, 32, 54, 49, 32, 56, 53, 49, 32, 53, 51, 84, 56, 54, 48, 32, 50, 56, 81, 56, 54, 48, 32, 49, 52, 32, 56, 53, 49, 32, 56, 81, 56, 52, 50, 32, 45, 49, 32, 56, 50, 57, 32, 45, 49, 81, 56, 49, 51, 32, 45, 49, 32, 56, 48, 53, 32, 56, 81, 55, 57, 54, 32, 49, 53, 32, 55, 57, 52, 32, 50, 56, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 56, 34, 32, 100, 61, 34, 77, 49, 50, 51, 32, 45, 52, 50, 53, 72, 48, 86, 52, 48, 56, 86, 52, 50, 54, 72, 49, 50, 51, 86, 45, 52, 48, 54, 86, 45, 52, 50, 53, 90, 77, 50, 55, 51, 32, 45, 49, 48, 56, 81, 50, 55, 51, 32, 45, 56, 57, 32, 50, 56, 57, 32, 45, 55, 48, 81, 51, 48, 55, 32, 45, 53, 52, 32, 51, 50, 56, 32, 45, 53, 52, 81, 51, 52, 56, 32, 45, 53, 52, 32, 51, 54, 51, 32, 45, 55, 48, 84, 51, 55, 57, 32, 45, 49, 48, 56, 81, 51, 55, 57, 32, 45, 49, 50, 57, 32, 51, 54, 51, 32, 45, 49, 52, 52, 81, 51, 52, 56, 32, 45, 49, 54, 48, 32, 51, 50, 56, 32, 45, 49, 54, 48, 81, 51, 48, 53, 32, 45, 49, 54, 48, 32, 50, 56, 57, 32, 45, 49, 52, 52, 84, 50, 55, 51, 32, 45, 49, 48, 56, 90, 77, 50, 55, 51, 32, 49, 49, 48, 81, 50, 55, 51, 10, 49, 51, 48, 32, 50, 56, 57, 32, 49, 52, 56, 81, 51, 48, 54, 32, 49, 54, 51, 32, 51, 50, 56, 32, 49, 54, 51, 81, 51, 52, 56, 32, 49, 54, 51, 32, 51, 54, 51, 32, 49, 52, 55, 81, 51, 55, 57, 32, 49, 51, 50, 32, 51, 55, 57, 32, 49, 49, 48, 81, 51, 55, 57, 32, 56, 57, 32, 51, 54, 52, 32, 55, 52, 84, 51, 50, 56, 32, 53, 56, 81, 51, 48, 54, 32, 53, 56, 32, 50, 57, 48, 32, 55, 51, 84, 50, 55, 51, 32, 49, 49, 48, 90, 77, 50, 49, 53, 32, 45, 52, 50, 53, 72, 49, 56, 52, 86, 52, 48, 56, 86, 52, 50, 54, 72, 50, 49, 53, 86, 45, 52, 48, 54, 86, 45, 52, 50, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 115, 105, 110, 103, 108, 98, 97, 115, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 51, 34, 32, 100, 61, 34, 77, 50, 52, 51, 32, 54, 53, 81, 50, 52, 51, 32, 50, 52, 32, 50, 51, 52, 32, 45, 49, 49, 84, 50, 48, 50, 32, 45, 56, 55, 81, 49, 53, 50, 32, 45, 49, 55, 49, 32, 55, 57, 32, 45, 49, 55, 49, 81, 52, 50, 32, 45, 49, 55, 49, 32, 50, 49, 32, 45, 49, 52, 52, 84, 48, 32, 45, 55, 56, 81, 48, 32, 48, 32, 52, 51, 32, 55, 49, 81, 54, 57, 32, 49, 49, 52, 32, 57, 57, 32, 49, 51, 52, 84, 49, 54, 54, 32, 49, 53, 53, 81, 50, 48, 49, 32, 49, 53, 53, 32, 50, 50, 50, 32, 49, 50, 56, 84, 50, 52, 51, 32, 54, 53, 90, 77, 49, 57, 49, 32, 57, 55, 81, 49, 57, 49, 32, 49, 49, 53, 32, 49, 56, 51, 32, 49, 50, 52, 84, 49, 54, 54, 32, 49, 51, 54, 81, 49, 49, 55, 32, 49, 51, 54, 32, 56, 49, 10, 50, 57, 81, 53, 50, 32, 45, 53, 54, 32, 53, 50, 32, 45, 49, 49, 52, 76, 53, 52, 32, 45, 49, 50, 56, 81, 53, 54, 32, 45, 49, 51, 49, 32, 53, 55, 32, 45, 49, 51, 52, 84, 54, 49, 32, 45, 49, 52, 48, 81, 54, 56, 32, 45, 49, 53, 48, 32, 56, 49, 32, 45, 49, 53, 50, 81, 49, 50, 54, 32, 45, 49, 53, 50, 32, 49, 54, 51, 32, 45, 52, 53, 76, 49, 56, 52, 32, 51, 51, 81, 49, 57, 49, 32, 54, 53, 32, 49, 57, 49, 32, 57, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 99, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 100, 98, 108, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 57, 56, 34, 32, 100, 61, 34, 77, 48, 32, 45, 49, 48, 54, 81, 48, 32, 45, 56, 50, 32, 49, 54, 32, 45, 55, 48, 81, 51, 48, 32, 45, 53, 55, 32, 53, 51, 32, 45, 53, 55, 81, 55, 51, 32, 45, 53, 55, 32, 56, 56, 32, 45, 54, 57, 84, 49, 48, 52, 32, 45, 49, 48, 54, 81, 49, 48, 52, 32, 45, 49, 51, 50, 32, 56, 57, 32, 45, 49, 52, 57, 81, 55, 50, 32, 45, 49, 54, 52, 32, 53, 51, 32, 45, 49, 54, 52, 81, 51, 49, 32, 45, 49, 54, 52, 32, 49, 54, 32, 45, 49, 52, 57, 84, 48, 32, 45, 49, 48, 54, 90, 77, 48, 32, 49, 49, 49, 81, 48, 32, 49, 51, 52, 32, 49, 54, 32, 49, 52, 54, 81, 51, 48, 32, 49, 53, 57, 32, 53, 51, 32, 49, 53, 57, 81, 55, 51, 32, 49, 53, 57, 32, 56, 56, 32, 49, 52, 55, 84, 49, 48, 52, 32, 49, 49, 49, 81, 49, 48, 52, 10, 56, 52, 32, 56, 57, 32, 54, 55, 81, 55, 50, 32, 53, 50, 32, 53, 51, 32, 53, 50, 81, 51, 50, 32, 53, 50, 32, 49, 54, 32, 54, 55, 84, 48, 32, 49, 49, 49, 90, 77, 49, 53, 55, 32, 45, 52, 50, 48, 86, 52, 49, 50, 86, 52, 50, 49, 72, 49, 57, 49, 86, 45, 52, 49, 49, 86, 45, 52, 50, 48, 72, 49, 53, 55, 90, 77, 50, 52, 57, 32, 45, 52, 50, 48, 86, 52, 49, 50, 86, 52, 50, 49, 72, 51, 55, 57, 86, 45, 52, 49, 49, 86, 45, 52, 50, 48, 72, 50, 52, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 100, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 100, 98, 108, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 50, 53, 34, 32, 100, 61, 34, 77, 49, 50, 51, 32, 45, 52, 51, 48, 72, 48, 86, 52, 48, 51, 86, 52, 50, 49, 72, 49, 50, 51, 86, 45, 52, 49, 49, 86, 45, 52, 51, 48, 90, 77, 50, 49, 53, 32, 45, 52, 51, 48, 72, 49, 56, 52, 86, 52, 48, 51, 86, 52, 50, 49, 72, 50, 49, 53, 86, 45, 52, 49, 49, 86, 45, 52, 51, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 49, 101, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 113, 117, 111, 116, 101, 100, 98, 108, 98, 97, 115, 101, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 54, 48, 34, 32, 100, 61, 34, 77, 50, 54, 48, 32, 55, 53, 81, 50, 54, 48, 32, 51, 53, 32, 50, 50, 48, 32, 49, 49, 76, 49, 53, 48, 32, 45, 50, 49, 81, 57, 53, 32, 45, 51, 54, 32, 53, 52, 32, 45, 56, 49, 72, 55, 53, 76, 49, 48, 49, 32, 45, 56, 51, 76, 49, 49, 51, 32, 45, 56, 57, 76, 49, 51, 48, 32, 45, 57, 54, 76, 49, 53, 53, 32, 45, 49, 48, 54, 81, 49, 54, 52, 32, 45, 49, 49, 48, 32, 49, 55, 54, 32, 45, 49, 49, 48, 76, 49, 57, 49, 32, 45, 49, 48, 54, 76, 50, 48, 50, 32, 45, 57, 56, 81, 50, 48, 57, 32, 45, 57, 49, 32, 50, 50, 49, 32, 45, 55, 50, 76, 50, 51, 56, 32, 45, 56, 49, 76, 50, 50, 50, 32, 45, 49, 48, 57, 81, 50, 49, 57, 32, 45, 49, 49, 52, 32, 50, 49, 50, 32, 45, 49, 50, 54, 84, 50, 48, 50, 10, 45, 49, 52, 48, 81, 49, 55, 52, 32, 45, 49, 55, 49, 32, 49, 52, 53, 32, 45, 49, 55, 49, 72, 49, 51, 53, 76, 49, 50, 53, 32, 45, 49, 54, 54, 76, 57, 57, 32, 45, 49, 53, 49, 76, 56, 52, 32, 45, 49, 52, 48, 81, 54, 54, 32, 45, 49, 51, 48, 32, 53, 50, 32, 45, 49, 51, 48, 81, 52, 48, 32, 45, 49, 51, 51, 32, 51, 49, 32, 45, 49, 52, 50, 76, 50, 56, 32, 45, 49, 52, 55, 76, 50, 51, 32, 45, 49, 53, 54, 72, 48, 81, 48, 32, 45, 49, 49, 54, 32, 50, 48, 32, 45, 56, 52, 81, 51, 49, 32, 45, 55, 48, 32, 51, 57, 32, 45, 54, 51, 76, 54, 55, 32, 45, 51, 56, 76, 49, 48, 53, 32, 45, 49, 55, 76, 49, 50, 54, 32, 45, 53, 76, 49, 52, 53, 32, 52, 81, 49, 54, 57, 32, 49, 53, 32, 49, 56, 52, 32, 51, 52, 81, 50, 48, 51, 32, 53, 54, 32, 50, 48, 51, 32, 55, 57, 76, 50, 48, 52, 32, 57, 49, 81, 50, 48, 52, 32, 49, 49, 49, 32, 49, 57, 50, 32, 49, 50, 50, 81, 49, 56, 51, 32, 49, 51, 54, 32, 49, 54, 52, 32, 49, 51, 54, 81, 49, 50, 49, 32, 49, 51, 54, 32, 49, 49, 50, 32, 57, 50, 76, 49, 49, 53, 10, 56, 48, 76, 49, 49, 55, 32, 54, 52, 81, 49, 49, 55, 32, 53, 50, 32, 49, 49, 53, 32, 52, 56, 81, 49, 48, 56, 32, 51, 53, 32, 57, 50, 32, 51, 53, 81, 56, 49, 32, 51, 53, 32, 55, 50, 32, 52, 52, 81, 54, 54, 32, 53, 51, 32, 54, 54, 32, 54, 51, 81, 54, 54, 32, 57, 56, 32, 57, 55, 32, 49, 50, 54, 84, 49, 54, 54, 32, 49, 53, 53, 81, 50, 48, 54, 32, 49, 53, 53, 32, 50, 50, 57, 32, 49, 52, 50, 81, 50, 54, 48, 32, 49, 50, 51, 32, 50, 54, 48, 32, 55, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 50, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 97, 103, 103, 101, 114, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 53, 57, 34, 32, 100, 61, 34, 77, 50, 53, 57, 32, 45, 52, 54, 76, 50, 53, 51, 32, 45, 54, 55, 72, 49, 57, 52, 76, 49, 55, 56, 32, 45, 49, 49, 57, 81, 49, 55, 52, 32, 45, 49, 50, 56, 32, 49, 56, 55, 32, 45, 49, 51, 51, 76, 50, 50, 49, 32, 45, 49, 51, 53, 76, 50, 49, 53, 32, 45, 49, 53, 54, 72, 54, 48, 76, 54, 54, 32, 45, 49, 51, 53, 76, 56, 52, 32, 45, 49, 51, 52, 76, 57, 57, 32, 45, 49, 51, 48, 81, 49, 49, 50, 32, 45, 49, 50, 53, 32, 49, 49, 57, 32, 45, 49, 48, 55, 76, 49, 51, 50, 32, 45, 54, 55, 72, 48, 76, 53, 32, 45, 52, 54, 81, 50, 51, 32, 45, 51, 49, 32, 52, 52, 32, 45, 55, 76, 55, 55, 32, 51, 54, 81, 57, 55, 32, 54, 51, 32, 49, 49, 55, 32, 49, 48, 52, 76, 49, 50, 56, 32, 49, 51, 48, 76, 49, 51, 56, 32, 49, 53, 53, 72, 50, 51, 53, 76, 49, 57, 57, 10, 49, 48, 54, 81, 49, 57, 49, 32, 57, 54, 32, 49, 55, 56, 32, 56, 51, 84, 49, 53, 48, 32, 53, 55, 76, 49, 49, 49, 32, 50, 48, 76, 51, 53, 32, 45, 52, 51, 76, 49, 52, 51, 32, 45, 52, 54, 76, 49, 54, 51, 32, 50, 54, 76, 50, 52, 51, 32, 49, 48, 51, 72, 50, 52, 56, 76, 50, 48, 52, 32, 45, 52, 54, 72, 50, 53, 57, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 50, 49, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 100, 97, 103, 103, 101, 114, 100, 98, 108, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 48, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 49, 53, 53, 81, 50, 50, 50, 32, 49, 51, 48, 32, 50, 48, 50, 32, 49, 49, 54, 81, 49, 55, 51, 32, 57, 55, 32, 49, 53, 49, 32, 57, 55, 72, 49, 52, 49, 76, 49, 49, 57, 32, 57, 57, 76, 49, 48, 57, 32, 49, 48, 51, 76, 57, 51, 32, 49, 49, 48, 76, 53, 55, 32, 50, 76, 55, 53, 32, 49, 52, 76, 57, 53, 32, 50, 51, 76, 49, 49, 55, 32, 50, 56, 76, 49, 52, 51, 32, 51, 49, 81, 49, 53, 54, 32, 51, 49, 32, 49, 55, 51, 32, 50, 54, 81, 49, 56, 50, 32, 50, 50, 32, 49, 56, 54, 32, 50, 48, 84, 49, 57, 55, 32, 57, 81, 50, 49, 57, 32, 45, 49, 50, 32, 50, 49, 57, 32, 45, 52, 57, 81, 50, 49, 57, 32, 45, 57, 55, 32, 49, 55, 56, 32, 45, 49, 51, 54, 81, 49, 51, 53, 32, 45, 49, 55, 49, 10, 56, 52, 32, 45, 49, 55, 49, 81, 54, 51, 32, 45, 49, 55, 49, 32, 53, 48, 32, 45, 49, 54, 56, 84, 50, 51, 32, 45, 49, 53, 54, 81, 48, 32, 45, 49, 51, 57, 32, 48, 32, 45, 49, 48, 53, 76, 49, 32, 45, 57, 49, 81, 52, 32, 45, 56, 52, 32, 56, 32, 45, 55, 55, 81, 49, 57, 32, 45, 54, 55, 32, 51, 53, 32, 45, 54, 51, 81, 52, 53, 32, 45, 54, 51, 32, 53, 52, 32, 45, 55, 50, 76, 53, 56, 32, 45, 56, 49, 76, 54, 48, 32, 45, 57, 50, 76, 53, 54, 32, 45, 49, 48, 53, 81, 53, 52, 32, 45, 49, 48, 56, 32, 53, 51, 32, 45, 49, 49, 48, 84, 52, 56, 32, 45, 49, 49, 54, 76, 52, 49, 32, 45, 49, 51, 50, 81, 52, 49, 32, 45, 49, 52, 52, 32, 53, 49, 32, 45, 49, 52, 56, 76, 54, 52, 32, 45, 49, 53, 50, 72, 55, 57, 81, 49, 49, 50, 32, 45, 49, 53, 50, 32, 49, 51, 56, 32, 45, 49, 48, 55, 81, 49, 54, 49, 32, 45, 54, 55, 32, 49, 54, 49, 32, 45, 51, 50, 76, 49, 53, 56, 32, 45, 49, 57, 81, 49, 53, 55, 32, 45, 49, 52, 32, 49, 53, 49, 32, 45, 56, 84, 49, 51, 55, 32, 49, 76, 49, 50, 50, 32, 53, 76, 49, 48, 53, 10, 52, 76, 56, 57, 32, 49, 76, 55, 50, 32, 45, 57, 76, 52, 57, 32, 45, 50, 55, 72, 50, 56, 76, 57, 48, 32, 49, 53, 53, 81, 57, 54, 32, 49, 53, 51, 32, 49, 48, 54, 32, 49, 53, 49, 84, 49, 50, 53, 32, 49, 52, 54, 76, 49, 53, 56, 32, 49, 52, 51, 72, 49, 54, 56, 76, 49, 57, 49, 32, 49, 52, 54, 76, 50, 52, 48, 32, 49, 53, 53, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 50, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 98, 117, 108, 108, 101, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 50, 53, 34, 32, 100, 61, 34, 77, 48, 32, 52, 50, 49, 72, 51, 49, 86, 45, 52, 49, 49, 86, 45, 52, 51, 48, 72, 48, 86, 52, 48, 51, 86, 52, 50, 49, 90, 77, 57, 49, 32, 52, 50, 49, 72, 50, 49, 53, 86, 45, 52, 49, 49, 86, 45, 52, 51, 48, 72, 57, 49, 86, 52, 48, 51, 86, 52, 50, 49, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 50, 54, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 101, 108, 108, 105, 112, 115, 105, 115, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 53, 53, 34, 32, 100, 61, 34, 77, 50, 53, 53, 32, 56, 55, 81, 50, 53, 53, 32, 53, 51, 32, 50, 50, 56, 32, 50, 54, 81, 50, 48, 56, 32, 56, 32, 49, 55, 51, 32, 45, 55, 81, 50, 49, 50, 32, 45, 51, 56, 32, 50, 49, 50, 32, 45, 55, 49, 81, 50, 49, 50, 32, 45, 49, 49, 48, 32, 49, 55, 52, 32, 45, 49, 52, 50, 81, 49, 54, 56, 32, 45, 49, 52, 55, 32, 49, 53, 55, 32, 45, 49, 53, 52, 84, 49, 51, 54, 32, 45, 49, 54, 52, 81, 49, 49, 56, 32, 45, 49, 55, 49, 32, 57, 52, 32, 45, 49, 55, 49, 72, 56, 50, 81, 55, 54, 32, 45, 49, 55, 49, 32, 54, 50, 32, 45, 49, 54, 57, 81, 52, 54, 32, 45, 49, 54, 53, 32, 51, 53, 32, 45, 49, 54, 48, 81, 48, 32, 45, 49, 52, 53, 32, 48, 32, 45, 49, 49, 53, 81, 48, 32, 45, 55, 48, 32, 51, 55, 32, 45, 54, 54, 81, 52, 56, 10, 45, 54, 54, 32, 53, 56, 32, 45, 55, 53, 84, 55, 49, 32, 45, 57, 55, 81, 55, 49, 32, 45, 49, 48, 53, 32, 54, 48, 32, 45, 49, 49, 56, 76, 53, 51, 32, 45, 49, 50, 51, 81, 52, 55, 32, 45, 49, 50, 57, 32, 52, 55, 32, 45, 49, 51, 57, 76, 53, 56, 32, 45, 49, 52, 56, 76, 55, 53, 32, 45, 49, 53, 50, 81, 49, 48, 54, 32, 45, 49, 53, 50, 32, 49, 51, 49, 32, 45, 49, 49, 53, 81, 49, 53, 48, 32, 45, 56, 51, 32, 49, 53, 48, 32, 45, 52, 53, 81, 49, 52, 51, 32, 45, 50, 50, 32, 49, 50, 55, 32, 45, 49, 54, 84, 56, 52, 32, 45, 49, 48, 76, 57, 48, 32, 49, 51, 81, 49, 52, 49, 32, 49, 51, 32, 49, 54, 55, 32, 50, 54, 81, 49, 57, 55, 32, 52, 52, 32, 49, 57, 55, 32, 57, 54, 81, 49, 57, 52, 32, 49, 49, 57, 32, 49, 56, 53, 32, 49, 50, 55, 84, 49, 53, 56, 32, 49, 51, 54, 76, 49, 51, 56, 32, 49, 51, 51, 81, 49, 50, 54, 32, 49, 50, 56, 32, 49, 50, 54, 32, 49, 49, 55, 81, 49, 50, 57, 32, 49, 48, 55, 32, 49, 51, 49, 32, 49, 48, 51, 76, 49, 51, 53, 32, 57, 50, 76, 49, 51, 56, 32, 56, 50, 76, 49, 51, 53, 10, 55, 48, 81, 49, 50, 56, 32, 54, 49, 32, 49, 49, 53, 32, 53, 55, 81, 49, 48, 52, 32, 53, 53, 32, 57, 50, 32, 54, 50, 84, 55, 57, 32, 56, 52, 81, 55, 57, 32, 49, 49, 51, 32, 49, 48, 53, 32, 49, 51, 52, 84, 49, 54, 49, 32, 49, 53, 53, 81, 50, 48, 50, 32, 49, 53, 53, 32, 50, 50, 57, 32, 49, 52, 48, 81, 50, 52, 49, 32, 49, 51, 49, 32, 50, 52, 56, 32, 49, 49, 55, 84, 50, 53, 53, 32, 56, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 51, 48, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 112, 101, 114, 116, 104, 111, 117, 115, 97, 110, 100, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 51, 34, 32, 100, 61, 34, 77, 50, 52, 51, 32, 49, 53, 53, 81, 50, 51, 56, 32, 49, 49, 55, 32, 50, 50, 53, 32, 56, 56, 81, 50, 49, 50, 32, 53, 51, 32, 49, 54, 56, 32, 45, 49, 55, 76, 49, 53, 49, 32, 45, 53, 50, 76, 49, 51, 56, 32, 45, 56, 55, 81, 49, 51, 52, 32, 45, 49, 48, 50, 32, 49, 51, 49, 32, 45, 49, 50, 48, 84, 49, 50, 56, 32, 45, 49, 53, 54, 72, 50, 56, 81, 51, 49, 32, 45, 49, 51, 52, 32, 53, 50, 32, 45, 49, 48, 50, 81, 54, 51, 32, 45, 56, 53, 32, 56, 56, 32, 45, 53, 51, 81, 57, 53, 32, 45, 52, 52, 32, 49, 48, 56, 32, 45, 50, 57, 84, 49, 51, 56, 32, 51, 81, 49, 54, 50, 32, 50, 56, 32, 49, 55, 57, 32, 53, 51, 84, 50, 48, 56, 32, 49, 48, 55, 76, 50, 48, 54, 32, 49, 48, 57, 81, 49, 56, 50, 10, 56, 53, 32, 49, 54, 51, 32, 55, 55, 81, 49, 53, 56, 32, 55, 52, 32, 49, 53, 51, 32, 55, 51, 84, 49, 52, 48, 32, 55, 50, 72, 49, 51, 50, 76, 49, 48, 53, 32, 56, 56, 81, 57, 50, 32, 57, 54, 32, 55, 53, 32, 57, 54, 81, 54, 55, 32, 57, 54, 32, 53, 56, 32, 57, 48, 76, 52, 50, 32, 55, 54, 81, 51, 50, 32, 54, 48, 32, 50, 49, 32, 51, 52, 72, 48, 76, 51, 56, 32, 49, 53, 53, 72, 53, 56, 81, 53, 48, 32, 49, 52, 49, 32, 53, 48, 32, 49, 51, 52, 81, 53, 48, 32, 49, 50, 56, 32, 53, 50, 32, 49, 50, 54, 76, 54, 49, 32, 49, 50, 48, 76, 56, 53, 32, 49, 52, 48, 81, 57, 49, 32, 49, 52, 53, 32, 57, 55, 32, 49, 52, 56, 81, 49, 49, 48, 32, 49, 53, 53, 32, 49, 50, 53, 32, 49, 53, 53, 81, 49, 51, 49, 32, 49, 53, 53, 32, 49, 52, 51, 32, 49, 52, 57, 76, 49, 52, 56, 32, 49, 52, 53, 81, 49, 53, 53, 32, 49, 52, 49, 32, 49, 53, 56, 32, 49, 51, 52, 81, 49, 55, 53, 32, 49, 50, 48, 32, 49, 57, 49, 32, 49, 50, 48, 76, 50, 48, 52, 32, 49, 50, 49, 76, 50, 49, 51, 32, 49, 50, 56, 81, 50, 49, 53, 10, 49, 51, 48, 32, 50, 49, 56, 32, 49, 51, 56, 84, 50, 50, 52, 32, 49, 53, 53, 72, 50, 52, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 51, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 117, 105, 108, 115, 105, 110, 103, 108, 108, 101, 102, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 50, 53, 34, 32, 100, 61, 34, 77, 50, 50, 53, 32, 52, 52, 81, 50, 50, 53, 32, 50, 56, 32, 50, 50, 50, 32, 49, 49, 84, 50, 49, 52, 32, 45, 50, 53, 81, 50, 48, 51, 32, 45, 53, 56, 32, 49, 56, 50, 32, 45, 57, 49, 81, 49, 51, 54, 32, 45, 49, 53, 57, 32, 55, 48, 32, 45, 49, 55, 49, 76, 54, 50, 32, 45, 49, 55, 50, 81, 52, 50, 32, 45, 49, 55, 50, 32, 50, 48, 32, 45, 49, 53, 54, 81, 49, 49, 32, 45, 49, 52, 56, 32, 54, 32, 45, 49, 51, 56, 84, 48, 32, 45, 49, 49, 50, 86, 45, 49, 48, 52, 81, 50, 32, 45, 57, 56, 32, 52, 32, 45, 57, 54, 81, 49, 49, 32, 45, 56, 53, 32, 50, 55, 32, 45, 56, 50, 81, 51, 55, 32, 45, 56, 50, 32, 52, 53, 32, 45, 57, 48, 81, 53, 48, 32, 45, 57, 50, 32, 53, 51, 32, 45, 49, 48, 57, 76, 53, 49, 10, 45, 49, 49, 57, 76, 52, 56, 32, 45, 49, 51, 54, 81, 52, 53, 32, 45, 49, 53, 50, 32, 54, 49, 32, 45, 49, 53, 50, 81, 57, 49, 32, 45, 49, 53, 50, 32, 49, 50, 50, 32, 45, 57, 56, 76, 49, 51, 54, 32, 45, 54, 51, 81, 49, 52, 48, 32, 45, 53, 54, 32, 49, 52, 52, 32, 45, 52, 50, 84, 49, 53, 49, 32, 45, 49, 57, 76, 49, 50, 55, 32, 45, 51, 50, 76, 49, 49, 52, 32, 45, 52, 48, 81, 49, 48, 52, 32, 45, 52, 52, 32, 57, 54, 32, 45, 52, 54, 84, 55, 55, 32, 45, 52, 56, 81, 52, 52, 32, 45, 52, 56, 32, 50, 55, 32, 45, 50, 56, 81, 56, 32, 45, 49, 48, 32, 56, 32, 50, 52, 81, 56, 32, 55, 51, 32, 52, 48, 32, 49, 49, 52, 84, 49, 51, 49, 32, 49, 53, 53, 81, 49, 55, 53, 32, 49, 53, 53, 32, 50, 48, 50, 32, 49, 50, 52, 81, 50, 49, 49, 32, 49, 49, 49, 32, 50, 49, 57, 32, 56, 57, 81, 50, 50, 49, 32, 55, 57, 32, 50, 50, 51, 32, 54, 55, 84, 50, 50, 53, 32, 52, 52, 90, 77, 49, 54, 55, 32, 57, 51, 81, 49, 54, 55, 32, 49, 48, 56, 32, 49, 54, 49, 32, 49, 50, 48, 84, 49, 52, 48, 32, 49, 51, 54, 81, 49, 48, 57, 10, 49, 51, 54, 32, 56, 56, 32, 49, 48, 48, 84, 54, 54, 32, 50, 57, 81, 54, 54, 32, 49, 49, 32, 55, 49, 32, 45, 49, 84, 57, 55, 32, 45, 49, 57, 81, 49, 50, 51, 32, 45, 50, 50, 32, 49, 52, 56, 32, 50, 48, 81, 49, 53, 54, 32, 51, 53, 32, 49, 54, 49, 32, 53, 51, 84, 49, 54, 55, 32, 57, 51, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 48, 51, 97, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 103, 117, 105, 108, 115, 105, 110, 103, 108, 114, 105, 103, 104, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 49, 55, 54, 34, 32, 100, 61, 34, 77, 51, 51, 32, 50, 54, 50, 72, 49, 52, 52, 86, 51, 54, 48, 72, 51, 51, 86, 50, 54, 50, 90, 77, 51, 51, 32, 51, 57, 51, 72, 49, 52, 52, 86, 52, 57, 50, 72, 51, 51, 86, 51, 57, 51, 90, 77, 51, 51, 32, 53, 50, 52, 72, 49, 52, 52, 86, 54, 50, 51, 72, 51, 51, 86, 53, 50, 52, 90, 77, 51, 51, 32, 54, 53, 54, 72, 49, 52, 52, 86, 55, 53, 52, 72, 51, 51, 86, 54, 53, 54, 90, 77, 51, 51, 32, 49, 51, 48, 72, 49, 52, 52, 86, 50, 50, 57, 72, 51, 51, 86, 49, 51, 48, 90, 77, 48, 32, 48, 86, 56, 51, 50, 86, 56, 52, 49, 72, 49, 55, 54, 86, 57, 86, 48, 72, 49, 52, 52, 86, 49, 48, 52, 72, 51, 51, 86, 48, 72, 48, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 49, 50, 50, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 116, 114, 97, 100, 101, 109, 97, 114, 107, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 50, 52, 52, 34, 32, 100, 61, 34, 77, 48, 32, 51, 53, 57, 72, 50, 51, 51, 86, 45, 51, 54, 48, 72, 48, 86, 51, 53, 57, 90, 77, 51, 55, 32, 50, 56, 51, 86, 45, 50, 56, 51, 72, 49, 57, 53, 86, 50, 56, 51, 72, 51, 55, 90, 34, 32, 47, 62, 10, 60, 103, 108, 121, 112, 104, 32, 117, 110, 105, 99, 111, 100, 101, 61, 34, 38, 35, 120, 50, 50, 49, 57, 59, 34, 32, 103, 108, 121, 112, 104, 45, 110, 97, 109, 101, 61, 34, 109, 105, 100, 100, 111, 116, 34, 32, 104, 111, 114, 105, 122, 45, 97, 100, 118, 45, 120, 61, 34, 51, 49, 53, 34, 32, 100, 61, 34, 77, 48, 32, 57, 51, 72, 51, 49, 53, 81, 51, 49, 48, 32, 50, 49, 32, 50, 57, 56, 32, 45, 49, 53, 81, 50, 54, 49, 32, 45, 49, 50, 52, 32, 49, 54, 54, 32, 45, 49, 50, 52, 81, 54, 50, 32, 45, 49, 50, 52, 32, 50, 49, 32, 45, 49, 54, 81, 56, 32, 50, 48, 32, 48, 32, 57, 51, 90, 34, 32, 47, 62, 10, 60, 47, 102, 111, 110, 116, 62, 10, 60, 47, 100, 101, 102, 115, 62, 10]), true, true);
Module['FS_createDataFile']('/data/svg', 'font_css.xml', [60, 100, 101, 102, 115, 62, 10, 32, 32, 60, 115, 116, 121, 108, 101, 32, 116, 121, 112, 101, 61, 34, 116, 101, 120, 116, 47, 99, 115, 115, 34, 62, 10, 32, 32, 32, 32, 60, 33, 91, 67, 68, 65, 84, 65, 91, 10, 10, 9, 9, 64, 102, 111, 110, 116, 45, 102, 97, 99, 101, 32, 123, 10, 9, 9, 32, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121, 58, 32, 34, 76, 101, 105, 112, 122, 105, 103, 52, 54, 34, 59, 10, 9, 9, 32, 32, 115, 114, 99, 58, 32, 117, 114, 108, 40, 46, 47, 76, 101, 105, 112, 122, 105, 103, 45, 52, 46, 54, 46, 116, 116, 102, 41, 32, 102, 111, 114, 109, 97, 116, 40, 34, 116, 114, 117, 101, 116, 121, 112, 101, 34, 41, 59, 10, 9, 9, 125, 10, 10, 32, 32, 32, 32, 93, 93, 62, 10, 32, 60, 47, 115, 116, 121, 108, 101, 62, 10, 60, 47, 100, 101, 102, 115, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_half.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 104, 97, 108, 102, 34, 32, 100, 61, 34, 77, 49, 52, 32, 45, 54, 54, 81, 49, 56, 32, 45, 56, 52, 32, 50, 55, 32, 45, 57, 49, 84, 54, 51, 32, 45, 57, 56, 81, 49, 49, 51, 32, 45, 57, 48, 32, 49, 55, 56, 32, 45, 52, 53, 84, 50, 53, 54, 32, 51, 53, 81, 50, 54, 51, 32, 52, 56, 32, 50, 54, 51, 32, 54, 49, 81, 50, 54, 51, 32, 55, 55, 32, 50, 53, 50, 32, 56, 56, 84, 50, 50, 48, 32, 49, 48, 48, 81, 50, 48, 50, 32, 49, 48, 48, 32, 49, 55, 57, 32, 57, 48, 81, 56, 54, 32, 52, 51, 32, 52, 55, 32, 51, 81, 49, 52, 32, 45, 51, 49, 32, 49, 52, 32, 45, 54, 54, 90, 77, 49, 56, 53, 32, 49, 51, 53, 81, 50, 48, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 51, 48, 84, 50, 54, 51, 32, 49, 49, 49, 84, 50, 56, 57, 32, 56, 48, 84, 50, 57, 57, 32, 51, 56, 81, 50, 57, 57, 32, 49, 32, 50, 55, 50, 32, 45, 51, 57, 84, 49, 57, 49, 32, 45, 49, 48, 55, 84, 56, 49, 32, 45, 49, 51, 53, 81, 45, 49, 53, 32, 45, 49, 51, 53, 32, 45, 49, 53, 32, 45, 51, 57, 81, 45, 49, 53, 32, 49, 53, 32, 51, 52, 32, 54, 57, 81, 57, 52, 32, 49, 51, 53, 32, 49, 56, 53, 32, 49, 51, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_half_diamond.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 104, 97, 108, 102, 95, 100, 105, 97, 109, 111, 110, 100, 34, 32, 100, 61, 34, 77, 49, 52, 54, 32, 50, 51, 52, 76, 51, 50, 52, 32, 49, 49, 76, 49, 52, 54, 32, 45, 50, 49, 49, 76, 45, 51, 52, 32, 49, 49, 76, 49, 52, 54, 32, 50, 51, 52, 90, 77, 49, 49, 50, 32, 49, 51, 57, 76, 52, 53, 32, 53, 53, 76, 49, 56, 53, 32, 45, 49, 49, 55, 76, 50, 53, 48, 32, 45, 51, 53, 76, 49, 49, 50, 32, 49, 51, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_quarter.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 113, 117, 97, 114, 116, 101, 114, 34, 32, 100, 61, 34, 77, 49, 56, 53, 32, 49, 51, 53, 81, 50, 48, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 51, 48, 84, 50, 54, 51, 32, 49, 49, 49, 84, 50, 56, 57, 32, 56, 48, 84, 50, 57, 57, 32, 51, 56, 81, 50, 57, 57, 32, 49, 32, 50, 55, 50, 32, 45, 51, 57, 84, 49, 57, 49, 32, 45, 49, 48, 55, 84, 56, 49, 32, 45, 49, 51, 53, 81, 45, 49, 53, 32, 45, 49, 51, 53, 32, 45, 49, 53, 32, 45, 51, 57, 81, 45, 49, 53, 32, 49, 53, 32, 51, 52, 32, 54, 57, 81, 57, 52, 32, 49, 51, 53, 32, 49, 56, 53, 32, 49, 51, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_quarter_filldiamond.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 113, 117, 97, 114, 116, 101, 114, 95, 102, 105, 108, 108, 100, 105, 97, 109, 111, 110, 100, 34, 32, 100, 61, 34, 77, 49, 52, 54, 32, 50, 51, 52, 76, 51, 50, 52, 32, 49, 49, 76, 49, 52, 54, 32, 45, 50, 49, 49, 76, 45, 51, 52, 32, 49, 49, 76, 49, 52, 54, 32, 50, 51, 52, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_whole.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 119, 104, 111, 108, 101, 34, 32, 100, 61, 34, 77, 52, 48, 53, 32, 48, 81, 52, 48, 53, 32, 45, 54, 57, 32, 51, 51, 54, 32, 45, 49, 48, 52, 81, 50, 56, 49, 32, 45, 49, 51, 51, 32, 49, 57, 56, 32, 45, 49, 51, 51, 81, 49, 50, 49, 32, 45, 49, 51, 51, 32, 54, 53, 32, 45, 49, 48, 49, 81, 48, 32, 45, 54, 53, 32, 48, 32, 48, 81, 48, 32, 54, 53, 32, 54, 52, 32, 49, 48, 50, 81, 49, 50, 48, 32, 49, 51, 51, 32, 49, 57, 56, 32, 49, 51, 51, 81, 50, 55, 55, 32, 49, 51, 51, 32, 51, 51, 54, 32, 49, 48, 49, 81, 52, 48, 53, 32, 54, 53, 32, 52, 48, 53, 32, 48, 90, 77, 50, 57, 51, 32, 45, 50, 49, 81, 50, 57, 51, 32, 48, 32, 50, 56, 53, 32, 50, 51, 81, 50, 55, 52, 32, 53, 51, 32, 50, 53, 50, 32, 55, 55, 81, 50, 50, 50, 32, 49, 48, 56, 32, 49, 56, 52, 32, 49, 48, 56, 76, 49, 54, 52, 32, 49, 48, 54, 81, 49, 52, 49, 32, 57, 57, 32, 49, 50, 56, 32, 55, 56, 81, 49, 50, 50, 32, 54, 52, 32, 49, 50, 48, 32, 53, 52, 84, 49, 49, 55, 32, 50, 55, 81, 49, 49, 55, 32, 52, 32, 49, 50, 54, 32, 45, 51, 48, 84, 49, 54, 48, 32, 45, 56, 53, 81, 49, 56, 51, 32, 45, 49, 48, 56, 32, 50, 50, 50, 32, 45, 49, 48, 56, 81, 50, 50, 56, 32, 45, 49, 48, 56, 32, 50, 52, 48, 32, 45, 49, 48, 54, 81, 50, 54, 56, 32, 45, 57, 56, 32, 50, 56, 48, 32, 45, 55, 54, 84, 50, 57, 51, 32, 45, 50, 49, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_whole_diamond.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 119, 104, 111, 108, 101, 95, 100, 105, 97, 109, 111, 110, 100, 34, 32, 100, 61, 34, 77, 49, 55, 56, 32, 50, 51, 52, 76, 51, 53, 57, 32, 49, 49, 76, 49, 55, 56, 32, 45, 50, 49, 49, 76, 48, 32, 49, 49, 76, 49, 55, 56, 32, 50, 51, 52, 90, 77, 49, 52, 52, 32, 49, 51, 57, 76, 55, 56, 32, 53, 53, 76, 50, 49, 57, 32, 45, 49, 49, 55, 76, 50, 56, 52, 32, 45, 51, 53, 76, 49, 52, 52, 32, 49, 51, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_whole_fill.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 119, 104, 111, 108, 101, 95, 102, 105, 108, 108, 34, 32, 100, 61, 34, 77, 49, 57, 56, 32, 45, 49, 51, 51, 81, 49, 50, 49, 32, 45, 49, 51, 51, 32, 54, 53, 32, 45, 49, 48, 49, 81, 48, 32, 45, 54, 53, 32, 48, 32, 48, 81, 48, 32, 54, 53, 32, 54, 52, 32, 49, 48, 50, 81, 49, 50, 48, 32, 49, 51, 51, 32, 49, 57, 56, 32, 49, 51, 51, 81, 50, 55, 55, 32, 49, 51, 51, 32, 51, 51, 54, 32, 49, 48, 49, 81, 52, 48, 53, 32, 54, 53, 32, 52, 48, 53, 32, 48, 81, 52, 48, 53, 32, 45, 54, 57, 32, 51, 51, 54, 32, 45, 49, 48, 52, 81, 50, 56, 49, 32, 45, 49, 51, 51, 32, 49, 57, 56, 32, 45, 49, 51, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'head_whole_filldiamond.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 104, 101, 97, 100, 95, 119, 104, 111, 108, 101, 95, 102, 105, 108, 108, 100, 105, 97, 109, 111, 110, 100, 34, 32, 100, 61, 34, 77, 49, 55, 56, 32, 50, 51, 52, 76, 51, 53, 57, 32, 49, 49, 76, 49, 55, 56, 32, 45, 50, 49, 49, 76, 48, 32, 49, 49, 76, 49, 55, 56, 32, 50, 51, 52, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'meter_symb_2_cut.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 109, 101, 116, 101, 114, 95, 115, 121, 109, 98, 95, 50, 95, 99, 117, 116, 34, 32, 100, 61, 34, 77, 49, 54, 49, 32, 49, 52, 57, 76, 49, 49, 57, 32, 49, 52, 51, 81, 49, 51, 51, 32, 49, 54, 50, 32, 49, 54, 55, 32, 49, 55, 56, 76, 49, 56, 51, 32, 49, 56, 57, 86, 49, 52, 56, 76, 49, 54, 49, 32, 49, 52, 57, 90, 77, 50, 50, 50, 32, 52, 52, 48, 81, 50, 52, 50, 32, 52, 49, 55, 32, 50, 52, 50, 32, 51, 55, 52, 81, 50, 52, 50, 32, 51, 52, 53, 32, 50, 50, 54, 32, 51, 48, 53, 76, 50, 48, 56, 32, 50, 55, 49, 86, 52, 53, 49, 76, 50, 50, 50, 32, 52, 52, 48, 90, 77, 49, 56, 51, 32, 53, 48, 53, 81, 49, 52, 51, 32, 53, 48, 53, 32, 49, 48, 53, 32, 52, 56, 56, 84, 52, 48, 32, 52, 51, 56, 84, 49, 51, 32, 51, 54, 57, 81, 49, 51, 32, 51, 50, 52, 32, 51, 52, 32, 51, 48, 48, 81, 53, 52, 32, 50, 55, 52, 32, 56, 48, 32, 50, 55, 52, 81, 57, 52, 32, 50, 55, 56, 32, 49, 48, 55, 32, 50, 56, 53, 84, 49, 51, 49, 32, 51, 48, 49, 81, 49, 53, 50, 32, 51, 49, 57, 32, 49, 53, 50, 32, 51, 53, 48, 81, 49, 53, 50, 32, 51, 54, 53, 32, 49, 52, 53, 32, 51, 55, 54, 76, 49, 50, 50, 32, 51, 57, 56, 76, 57, 56, 32, 52, 49, 54, 81, 57, 50, 32, 52, 50, 55, 32, 57, 48, 32, 52, 51, 52, 81, 57, 52, 32, 52, 53, 48, 32, 49, 48, 57, 32, 52, 53, 53, 84, 49, 51, 53, 32, 52, 54, 50, 84, 49, 53, 56, 32, 52, 54, 52, 81, 49, 55, 53, 32, 52, 54, 52, 32, 49, 56, 51, 32, 52, 54, 50, 86, 50, 52, 50, 76, 49, 53, 57, 32, 50, 50, 50, 76, 49, 49, 57, 32, 49, 57, 49, 81, 49, 49, 48, 32, 49, 56, 54, 32, 49, 48, 48, 32, 49, 55, 56, 81, 56, 53, 32, 49, 54, 53, 32, 55, 55, 32, 49, 53, 57, 76, 53, 50, 32, 49, 51, 57, 81, 52, 50, 32, 49, 51, 48, 32, 51, 53, 32, 49, 50, 49, 84, 49, 56, 32, 57, 54, 81, 45, 51, 32, 54, 52, 32, 48, 32, 51, 49, 76, 50, 32, 50, 72, 51, 54, 81, 52, 49, 32, 51, 51, 32, 53, 54, 32, 52, 55, 81, 54, 49, 32, 53, 51, 32, 55, 49, 32, 53, 57, 84, 57, 50, 32, 54, 54, 81, 57, 57, 32, 54, 54, 32, 49, 48, 56, 32, 54, 52, 84, 49, 51, 49, 32, 53, 52, 76, 49, 55, 49, 32, 50, 53, 76, 49, 56, 51, 32, 49, 54, 86, 45, 54, 57, 72, 50, 48, 56, 86, 48, 76, 50, 49, 51, 32, 45, 50, 81, 50, 51, 52, 32, 45, 49, 49, 32, 50, 51, 57, 32, 45, 49, 50, 84, 50, 53, 53, 32, 45, 49, 52, 81, 50, 57, 57, 32, 45, 49, 52, 32, 51, 51, 48, 32, 51, 48, 81, 51, 52, 52, 32, 53, 48, 32, 51, 53, 49, 32, 56, 54, 84, 51, 53, 56, 32, 49, 54, 57, 72, 51, 50, 56, 81, 51, 49, 55, 32, 49, 48, 55, 32, 50, 57, 49, 32, 49, 48, 55, 81, 50, 56, 55, 32, 49, 48, 55, 32, 50, 55, 53, 32, 49, 49, 51, 84, 50, 53, 54, 32, 49, 50, 50, 81, 50, 51, 49, 32, 49, 51, 54, 32, 50, 48, 56, 32, 49, 52, 51, 86, 50, 48, 50, 76, 50, 53, 48, 32, 50, 50, 50, 81, 50, 55, 51, 32, 50, 51, 52, 32, 50, 56, 55, 32, 50, 52, 52, 84, 51, 50, 49, 32, 50, 55, 53, 81, 51, 52, 57, 32, 51, 48, 57, 32, 51, 52, 57, 32, 51, 53, 52, 81, 51, 52, 57, 32, 52, 50, 54, 32, 51, 48, 52, 32, 52, 54, 56, 81, 50, 54, 53, 32, 53, 48, 53, 32, 50, 48, 56, 32, 53, 48, 53, 86, 53, 54, 52, 72, 49, 56, 51, 86, 53, 48, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'meter_symb_3_cut.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 109, 101, 116, 101, 114, 95, 115, 121, 109, 98, 95, 51, 95, 99, 117, 116, 34, 32, 100, 61, 34, 77, 49, 57, 54, 32, 50, 48, 56, 81, 50, 48, 57, 32, 49, 57, 56, 32, 50, 49, 56, 32, 49, 55, 50, 84, 50, 50, 56, 32, 49, 49, 54, 81, 50, 50, 56, 32, 49, 48, 56, 32, 50, 50, 56, 32, 57, 56, 84, 50, 49, 57, 32, 55, 51, 84, 49, 57, 56, 32, 52, 57, 84, 49, 55, 52, 32, 51, 53, 86, 50, 50, 53, 81, 49, 56, 50, 32, 50, 50, 49, 32, 49, 56, 54, 32, 50, 49, 55, 84, 49, 57, 54, 32, 50, 48, 56, 90, 77, 49, 57, 56, 32, 52, 52, 51, 81, 50, 50, 50, 32, 52, 49, 54, 32, 50, 50, 50, 32, 51, 55, 55, 81, 50, 50, 50, 32, 51, 50, 50, 32, 49, 57, 51, 32, 50, 57, 57, 76, 49, 55, 52, 32, 50, 56, 55, 86, 52, 54, 49, 81, 49, 56, 56, 32, 52, 53, 53, 32, 49, 57, 56, 32, 52, 52, 51, 90, 77, 49, 52, 56, 32, 53, 48, 54, 81, 49, 48, 48, 32, 53, 48, 50, 32, 53, 55, 32, 52, 55, 51, 81, 57, 32, 52, 52, 48, 32, 57, 32, 51, 56, 54, 81, 57, 32, 51, 53, 49, 32, 50, 55, 32, 51, 51, 48, 81, 51, 53, 32, 51, 50, 49, 32, 52, 55, 32, 51, 49, 53, 84, 55, 49, 32, 51, 48, 56, 81, 56, 55, 32, 51, 49, 48, 32, 57, 54, 32, 51, 49, 52, 84, 49, 49, 54, 32, 51, 50, 55, 81, 49, 50, 55, 32, 51, 52, 48, 32, 49, 51, 48, 32, 51, 52, 55, 81, 49, 51, 55, 32, 51, 53, 56, 32, 49, 51, 55, 32, 51, 55, 50, 81, 49, 51, 55, 32, 51, 57, 57, 32, 49, 50, 57, 32, 52, 49, 48, 84, 49, 48, 57, 32, 52, 51, 49, 81, 49, 48, 52, 32, 52, 51, 52, 32, 57, 57, 32, 52, 52, 48, 81, 57, 56, 32, 52, 52, 49, 32, 57, 54, 32, 52, 52, 52, 81, 49, 48, 57, 32, 52, 54, 56, 32, 49, 52, 51, 32, 52, 54, 56, 72, 49, 52, 56, 86, 50, 55, 57, 81, 49, 51, 56, 32, 50, 55, 55, 32, 49, 50, 56, 32, 50, 55, 54, 84, 49, 48, 50, 32, 50, 55, 53, 86, 50, 51, 57, 81, 49, 50, 54, 32, 50, 51, 57, 32, 49, 52, 56, 32, 50, 51, 52, 86, 50, 57, 72, 49, 52, 51, 81, 49, 49, 56, 32, 50, 57, 32, 49, 49, 48, 32, 53, 53, 81, 49, 49, 48, 32, 54, 52, 32, 49, 50, 50, 32, 56, 50, 81, 49, 51, 49, 32, 57, 54, 32, 49, 51, 49, 32, 49, 49, 54, 81, 49, 51, 49, 32, 49, 52, 52, 32, 49, 49, 53, 32, 49, 54, 52, 84, 54, 54, 32, 49, 56, 53, 76, 54, 51, 32, 49, 56, 54, 76, 54, 49, 32, 49, 56, 57, 81, 51, 52, 32, 49, 56, 57, 32, 49, 56, 32, 49, 54, 51, 84, 49, 32, 49, 48, 51, 81, 49, 32, 56, 49, 32, 57, 32, 54, 55, 84, 50, 52, 32, 52, 52, 84, 52, 48, 32, 50, 56, 81, 53, 57, 32, 49, 50, 32, 56, 55, 32, 49, 81, 49, 49, 52, 32, 45, 56, 32, 49, 52, 55, 32, 45, 56, 76, 49, 52, 56, 32, 45, 54, 49, 72, 49, 55, 52, 86, 45, 55, 76, 49, 57, 51, 32, 45, 52, 76, 50, 51, 57, 32, 56, 81, 50, 56, 51, 32, 50, 54, 32, 51, 49, 48, 32, 53, 57, 84, 51, 51, 55, 32, 49, 51, 57, 81, 51, 51, 55, 32, 49, 55, 49, 32, 51, 50, 52, 32, 49, 57, 53, 84, 50, 56, 51, 32, 50, 51, 55, 81, 50, 54, 56, 32, 50, 52, 53, 32, 50, 53, 52, 32, 50, 53, 49, 84, 50, 50, 51, 32, 50, 53, 57, 81, 51, 51, 49, 32, 50, 55, 57, 32, 51, 51, 49, 32, 51, 56, 54, 81, 51, 51, 49, 32, 52, 49, 51, 32, 51, 49, 57, 32, 52, 51, 51, 84, 50, 56, 48, 32, 52, 55, 51, 81, 50, 53, 53, 32, 52, 56, 57, 32, 50, 51, 48, 32, 52, 57, 56, 84, 49, 55, 52, 32, 53, 48, 55, 86, 53, 55, 51, 72, 49, 52, 56, 86, 53, 48, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'meter_symb_common.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 109, 101, 116, 101, 114, 95, 115, 121, 109, 98, 95, 99, 111, 109, 109, 111, 110, 34, 32, 100, 61, 34, 77, 48, 32, 50, 55, 51, 81, 48, 32, 51, 51, 49, 32, 51, 51, 32, 51, 57, 48, 81, 52, 57, 32, 52, 49, 57, 32, 55, 48, 32, 52, 52, 49, 84, 49, 49, 57, 32, 52, 56, 49, 81, 49, 55, 52, 32, 53, 49, 54, 32, 50, 51, 53, 32, 53, 49, 54, 81, 50, 55, 50, 32, 53, 49, 54, 32, 51, 50, 48, 32, 52, 57, 54, 81, 51, 52, 51, 32, 52, 56, 55, 32, 51, 54, 48, 32, 52, 55, 53, 84, 51, 57, 52, 32, 52, 52, 52, 81, 52, 50, 50, 32, 52, 48, 56, 32, 52, 50, 50, 32, 51, 54, 53, 81, 52, 50, 50, 32, 51, 50, 54, 32, 51, 57, 55, 32, 51, 48, 48, 81, 51, 56, 50, 32, 50, 56, 56, 32, 51, 54, 56, 32, 50, 56, 50, 84, 51, 51, 51, 32, 50, 55, 53, 81, 51, 48, 52, 32, 50, 55, 53, 32, 50, 56, 49, 32, 50, 57, 51, 81, 50, 54, 49, 32, 51, 49, 49, 32, 50, 53, 53, 32, 51, 52, 53, 81, 50, 53, 53, 32, 51, 54, 50, 32, 50, 53, 57, 32, 51, 55, 51, 84, 50, 55, 54, 32, 51, 57, 55, 81, 50, 57, 53, 32, 52, 50, 48, 32, 51, 50, 54, 32, 52, 50, 56, 76, 51, 51, 54, 32, 52, 51, 48, 81, 51, 52, 52, 32, 52, 51, 50, 32, 51, 52, 53, 32, 52, 51, 52, 81, 51, 53, 48, 32, 52, 51, 57, 32, 51, 53, 48, 32, 52, 52, 49, 81, 51, 52, 51, 32, 52, 54, 48, 32, 51, 49, 52, 32, 52, 55, 50, 84, 50, 53, 57, 32, 52, 56, 52, 81, 50, 50, 55, 32, 52, 56, 52, 32, 50, 48, 48, 32, 52, 54, 55, 84, 49, 53, 54, 32, 52, 50, 52, 81, 49, 51, 48, 32, 51, 56, 48, 32, 49, 51, 48, 32, 50, 54, 57, 81, 49, 51, 48, 32, 49, 54, 56, 32, 49, 51, 56, 32, 49, 51, 48, 81, 49, 52, 53, 32, 49, 48, 54, 32, 49, 53, 52, 32, 57, 48, 84, 49, 55, 57, 32, 54, 49, 81, 50, 49, 48, 32, 51, 53, 32, 50, 53, 50, 32, 51, 53, 81, 50, 56, 54, 32, 51, 53, 32, 51, 49, 55, 32, 53, 53, 84, 51, 55, 48, 32, 49, 49, 51, 84, 51, 57, 57, 32, 50, 48, 51, 72, 52, 50, 55, 81, 52, 50, 55, 32, 49, 54, 49, 32, 52, 49, 50, 32, 49, 50, 54, 84, 51, 54, 55, 32, 53, 56, 81, 51, 49, 50, 32, 48, 32, 50, 50, 51, 32, 48, 81, 49, 53, 52, 32, 48, 32, 49, 48, 52, 32, 52, 48, 81, 55, 57, 32, 54, 48, 32, 54, 48, 32, 56, 53, 84, 50, 55, 32, 49, 52, 52, 81, 48, 32, 50, 48, 55, 32, 48, 32, 50, 55, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'meter_symb_cut.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 109, 101, 116, 101, 114, 95, 115, 121, 109, 98, 95, 99, 117, 116, 34, 32, 100, 61, 34, 77, 49, 57, 51, 32, 52, 54, 48, 81, 49, 50, 57, 32, 52, 50, 54, 32, 49, 50, 57, 32, 51, 49, 54, 86, 49, 57, 53, 81, 49, 50, 57, 32, 49, 51, 54, 32, 49, 52, 56, 32, 57, 57, 81, 49, 54, 53, 32, 54, 50, 32, 49, 57, 51, 32, 53, 48, 86, 52, 54, 48, 90, 77, 49, 57, 49, 32, 53, 56, 48, 72, 50, 50, 51, 86, 53, 49, 51, 81, 50, 55, 52, 32, 53, 49, 51, 32, 51, 50, 48, 32, 52, 57, 54, 84, 51, 57, 53, 32, 52, 52, 51, 84, 52, 50, 52, 32, 51, 53, 56, 81, 52, 50, 52, 32, 51, 51, 52, 32, 52, 49, 49, 32, 51, 49, 52, 81, 51, 57, 54, 32, 50, 57, 52, 32, 51, 55, 57, 32, 50, 56, 53, 76, 51, 53, 56, 32, 50, 55, 54, 76, 51, 51, 53, 32, 50, 55, 51, 81, 51, 48, 50, 32, 50, 55, 54, 32, 50, 55, 57, 32, 50, 57, 53, 81, 50, 53, 57, 32, 51, 49, 54, 32, 50, 53, 50, 32, 51, 52, 55, 81, 50, 53, 50, 32, 51, 55, 54, 32, 50, 55, 57, 32, 52, 48, 48, 84, 51, 51, 51, 32, 52, 50, 56, 81, 51, 53, 50, 32, 52, 50, 56, 32, 51, 53, 50, 32, 52, 51, 57, 81, 51, 53, 50, 32, 52, 52, 56, 32, 51, 51, 55, 32, 52, 53, 55, 81, 51, 50, 50, 32, 52, 54, 56, 32, 51, 48, 49, 32, 52, 55, 53, 84, 50, 53, 54, 32, 52, 56, 50, 81, 50, 52, 49, 32, 52, 56, 50, 32, 50, 50, 51, 32, 52, 55, 54, 86, 51, 55, 81, 50, 51, 51, 32, 51, 53, 32, 50, 51, 55, 32, 51, 52, 84, 50, 53, 52, 32, 51, 51, 81, 50, 57, 49, 32, 51, 51, 32, 51, 50, 52, 32, 54, 48, 84, 51, 55, 55, 32, 49, 50, 55, 76, 51, 57, 53, 32, 49, 54, 55, 81, 52, 48, 48, 32, 49, 56, 55, 32, 52, 48, 48, 32, 50, 48, 51, 72, 52, 50, 54, 81, 52, 49, 55, 32, 57, 54, 32, 51, 53, 57, 32, 52, 56, 84, 50, 50, 51, 32, 48, 86, 45, 54, 57, 72, 49, 57, 51, 86, 52, 81, 49, 50, 48, 32, 49, 55, 32, 54, 50, 32, 56, 49, 81, 52, 55, 32, 57, 55, 32, 51, 55, 32, 49, 49, 53, 84, 49, 55, 32, 49, 53, 56, 81, 49, 32, 50, 48, 51, 32, 49, 32, 50, 53, 54, 81, 49, 32, 51, 52, 55, 32, 53, 50, 32, 52, 49, 54, 84, 49, 57, 49, 32, 53, 48, 55, 86, 53, 56, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_0.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 48, 34, 32, 100, 61, 34, 77, 50, 52, 51, 32, 54, 53, 81, 50, 52, 51, 32, 50, 52, 32, 50, 51, 52, 32, 45, 49, 49, 84, 50, 48, 50, 32, 45, 56, 55, 81, 49, 53, 50, 32, 45, 49, 55, 49, 32, 55, 57, 32, 45, 49, 55, 49, 81, 52, 50, 32, 45, 49, 55, 49, 32, 50, 49, 32, 45, 49, 52, 52, 84, 48, 32, 45, 55, 56, 81, 48, 32, 48, 32, 52, 51, 32, 55, 49, 81, 54, 57, 32, 49, 49, 52, 32, 57, 57, 32, 49, 51, 52, 84, 49, 54, 54, 32, 49, 53, 53, 81, 50, 48, 49, 32, 49, 53, 53, 32, 50, 50, 50, 32, 49, 50, 56, 84, 50, 52, 51, 32, 54, 53, 90, 77, 49, 57, 49, 32, 57, 55, 81, 49, 57, 49, 32, 49, 49, 53, 32, 49, 56, 51, 32, 49, 50, 52, 84, 49, 54, 54, 32, 49, 51, 54, 81, 49, 49, 55, 32, 49, 51, 54, 32, 56, 49, 32, 50, 57, 81, 53, 50, 32, 45, 53, 54, 32, 53, 50, 32, 45, 49, 49, 52, 76, 53, 52, 32, 45, 49, 50, 56, 81, 53, 54, 32, 45, 49, 51, 49, 32, 53, 55, 32, 45, 49, 51, 52, 84, 54, 49, 32, 45, 49, 52, 48, 81, 54, 56, 32, 45, 49, 53, 48, 32, 56, 49, 32, 45, 49, 53, 50, 81, 49, 50, 54, 32, 45, 49, 53, 50, 32, 49, 54, 51, 32, 45, 52, 53, 76, 49, 56, 52, 32, 51, 51, 81, 49, 57, 49, 32, 54, 53, 32, 49, 57, 49, 32, 57, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_1.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 49, 34, 32, 100, 61, 34, 77, 50, 48, 55, 32, 49, 53, 53, 76, 49, 50, 50, 32, 45, 49, 50, 48, 81, 49, 49, 57, 32, 45, 49, 50, 53, 32, 49, 50, 55, 32, 45, 49, 51, 48, 76, 49, 51, 53, 32, 45, 49, 51, 51, 76, 49, 53, 51, 32, 45, 49, 51, 53, 72, 49, 54, 52, 76, 49, 53, 56, 32, 45, 49, 53, 54, 72, 48, 76, 54, 32, 45, 49, 51, 53, 72, 50, 49, 81, 51, 49, 32, 45, 49, 51, 53, 32, 52, 50, 32, 45, 49, 51, 48, 81, 53, 54, 32, 45, 49, 50, 56, 32, 54, 50, 32, 45, 49, 49, 48, 76, 49, 49, 55, 32, 54, 54, 76, 52, 54, 32, 49, 48, 76, 51, 54, 32, 50, 48, 76, 49, 52, 53, 32, 49, 53, 53, 72, 50, 48, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_2.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 50, 34, 32, 100, 61, 34, 77, 50, 54, 48, 32, 55, 53, 81, 50, 54, 48, 32, 51, 53, 32, 50, 50, 48, 32, 49, 49, 76, 49, 53, 48, 32, 45, 50, 49, 81, 57, 53, 32, 45, 51, 54, 32, 53, 52, 32, 45, 56, 49, 72, 55, 53, 76, 49, 48, 49, 32, 45, 56, 51, 76, 49, 49, 51, 32, 45, 56, 57, 76, 49, 51, 48, 32, 45, 57, 54, 76, 49, 53, 53, 32, 45, 49, 48, 54, 81, 49, 54, 52, 32, 45, 49, 49, 48, 32, 49, 55, 54, 32, 45, 49, 49, 48, 76, 49, 57, 49, 32, 45, 49, 48, 54, 76, 50, 48, 50, 32, 45, 57, 56, 81, 50, 48, 57, 32, 45, 57, 49, 32, 50, 50, 49, 32, 45, 55, 50, 76, 50, 51, 56, 32, 45, 56, 49, 76, 50, 50, 50, 32, 45, 49, 48, 57, 81, 50, 49, 57, 32, 45, 49, 49, 52, 32, 50, 49, 50, 32, 45, 49, 50, 54, 84, 50, 48, 50, 32, 45, 49, 52, 48, 81, 49, 55, 52, 32, 45, 49, 55, 49, 32, 49, 52, 53, 32, 45, 49, 55, 49, 72, 49, 51, 53, 76, 49, 50, 53, 32, 45, 49, 54, 54, 76, 57, 57, 32, 45, 49, 53, 49, 76, 56, 52, 32, 45, 49, 52, 48, 81, 54, 54, 32, 45, 49, 51, 48, 32, 53, 50, 32, 45, 49, 51, 48, 81, 52, 48, 32, 45, 49, 51, 51, 32, 51, 49, 32, 45, 49, 52, 50, 76, 50, 56, 32, 45, 49, 52, 55, 76, 50, 51, 32, 45, 49, 53, 54, 72, 48, 81, 48, 32, 45, 49, 49, 54, 32, 50, 48, 32, 45, 56, 52, 81, 51, 49, 32, 45, 55, 48, 32, 51, 57, 32, 45, 54, 51, 76, 54, 55, 32, 45, 51, 56, 76, 49, 48, 53, 32, 45, 49, 55, 76, 49, 50, 54, 32, 45, 53, 76, 49, 52, 53, 32, 52, 81, 49, 54, 57, 32, 49, 53, 32, 49, 56, 52, 32, 51, 52, 81, 50, 48, 51, 32, 53, 54, 32, 50, 48, 51, 32, 55, 57, 76, 50, 48, 52, 32, 57, 49, 81, 50, 48, 52, 32, 49, 49, 49, 32, 49, 57, 50, 32, 49, 50, 50, 81, 49, 56, 51, 32, 49, 51, 54, 32, 49, 54, 52, 32, 49, 51, 54, 81, 49, 50, 49, 32, 49, 51, 54, 32, 49, 49, 50, 32, 57, 50, 76, 49, 49, 53, 32, 56, 48, 76, 49, 49, 55, 32, 54, 52, 81, 49, 49, 55, 32, 53, 50, 32, 49, 49, 53, 32, 52, 56, 81, 49, 48, 56, 32, 51, 53, 32, 57, 50, 32, 51, 53, 81, 56, 49, 32, 51, 53, 32, 55, 50, 32, 52, 52, 81, 54, 54, 32, 53, 51, 32, 54, 54, 32, 54, 51, 81, 54, 54, 32, 57, 56, 32, 57, 55, 32, 49, 50, 54, 84, 49, 54, 54, 32, 49, 53, 53, 81, 50, 48, 54, 32, 49, 53, 53, 32, 50, 50, 57, 32, 49, 52, 50, 81, 50, 54, 48, 32, 49, 50, 51, 32, 50, 54, 48, 32, 55, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_3.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 51, 34, 32, 100, 61, 34, 77, 50, 53, 53, 32, 56, 55, 81, 50, 53, 53, 32, 53, 51, 32, 50, 50, 56, 32, 50, 54, 81, 50, 48, 56, 32, 56, 32, 49, 55, 51, 32, 45, 55, 81, 50, 49, 50, 32, 45, 51, 56, 32, 50, 49, 50, 32, 45, 55, 49, 81, 50, 49, 50, 32, 45, 49, 49, 48, 32, 49, 55, 52, 32, 45, 49, 52, 50, 81, 49, 54, 56, 32, 45, 49, 52, 55, 32, 49, 53, 55, 32, 45, 49, 53, 52, 84, 49, 51, 54, 32, 45, 49, 54, 52, 81, 49, 49, 56, 32, 45, 49, 55, 49, 32, 57, 52, 32, 45, 49, 55, 49, 72, 56, 50, 81, 55, 54, 32, 45, 49, 55, 49, 32, 54, 50, 32, 45, 49, 54, 57, 81, 52, 54, 32, 45, 49, 54, 53, 32, 51, 53, 32, 45, 49, 54, 48, 81, 48, 32, 45, 49, 52, 53, 32, 48, 32, 45, 49, 49, 53, 81, 48, 32, 45, 55, 48, 32, 51, 55, 32, 45, 54, 54, 81, 52, 56, 32, 45, 54, 54, 32, 53, 56, 32, 45, 55, 53, 84, 55, 49, 32, 45, 57, 55, 81, 55, 49, 32, 45, 49, 48, 53, 32, 54, 48, 32, 45, 49, 49, 56, 76, 53, 51, 32, 45, 49, 50, 51, 81, 52, 55, 32, 45, 49, 50, 57, 32, 52, 55, 32, 45, 49, 51, 57, 76, 53, 56, 32, 45, 49, 52, 56, 76, 55, 53, 32, 45, 49, 53, 50, 81, 49, 48, 54, 32, 45, 49, 53, 50, 32, 49, 51, 49, 32, 45, 49, 49, 53, 81, 49, 53, 48, 32, 45, 56, 51, 32, 49, 53, 48, 32, 45, 52, 53, 81, 49, 52, 51, 32, 45, 50, 50, 32, 49, 50, 55, 32, 45, 49, 54, 84, 56, 52, 32, 45, 49, 48, 76, 57, 48, 32, 49, 51, 81, 49, 52, 49, 32, 49, 51, 32, 49, 54, 55, 32, 50, 54, 81, 49, 57, 55, 32, 52, 52, 32, 49, 57, 55, 32, 57, 54, 81, 49, 57, 52, 32, 49, 49, 57, 32, 49, 56, 53, 32, 49, 50, 55, 84, 49, 53, 56, 32, 49, 51, 54, 76, 49, 51, 56, 32, 49, 51, 51, 81, 49, 50, 54, 32, 49, 50, 56, 32, 49, 50, 54, 32, 49, 49, 55, 81, 49, 50, 57, 32, 49, 48, 55, 32, 49, 51, 49, 32, 49, 48, 51, 76, 49, 51, 53, 32, 57, 50, 76, 49, 51, 56, 32, 56, 50, 76, 49, 51, 53, 32, 55, 48, 81, 49, 50, 56, 32, 54, 49, 32, 49, 49, 53, 32, 53, 55, 81, 49, 48, 52, 32, 53, 53, 32, 57, 50, 32, 54, 50, 84, 55, 57, 32, 56, 52, 81, 55, 57, 32, 49, 49, 51, 32, 49, 48, 53, 32, 49, 51, 52, 84, 49, 54, 49, 32, 49, 53, 53, 81, 50, 48, 50, 32, 49, 53, 53, 32, 50, 50, 57, 32, 49, 52, 48, 81, 50, 52, 49, 32, 49, 51, 49, 32, 50, 52, 56, 32, 49, 49, 55, 84, 50, 53, 53, 32, 56, 55, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_4.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 52, 34, 32, 100, 61, 34, 77, 50, 53, 57, 32, 45, 52, 54, 76, 50, 53, 51, 32, 45, 54, 55, 72, 49, 57, 52, 76, 49, 55, 56, 32, 45, 49, 49, 57, 81, 49, 55, 52, 32, 45, 49, 50, 56, 32, 49, 56, 55, 32, 45, 49, 51, 51, 76, 50, 50, 49, 32, 45, 49, 51, 53, 76, 50, 49, 53, 32, 45, 49, 53, 54, 72, 54, 48, 76, 54, 54, 32, 45, 49, 51, 53, 76, 56, 52, 32, 45, 49, 51, 52, 76, 57, 57, 32, 45, 49, 51, 48, 81, 49, 49, 50, 32, 45, 49, 50, 53, 32, 49, 49, 57, 32, 45, 49, 48, 55, 76, 49, 51, 50, 32, 45, 54, 55, 72, 48, 76, 53, 32, 45, 52, 54, 81, 50, 51, 32, 45, 51, 49, 32, 52, 52, 32, 45, 55, 76, 55, 55, 32, 51, 54, 81, 57, 55, 32, 54, 51, 32, 49, 49, 55, 32, 49, 48, 52, 76, 49, 50, 56, 32, 49, 51, 48, 76, 49, 51, 56, 32, 49, 53, 53, 72, 50, 51, 53, 76, 49, 57, 57, 32, 49, 48, 54, 81, 49, 57, 49, 32, 57, 54, 32, 49, 55, 56, 32, 56, 51, 84, 49, 53, 48, 32, 53, 55, 76, 49, 49, 49, 32, 50, 48, 76, 51, 53, 32, 45, 52, 51, 76, 49, 52, 51, 32, 45, 52, 54, 76, 49, 54, 51, 32, 50, 54, 76, 50, 52, 51, 32, 49, 48, 51, 72, 50, 52, 56, 76, 50, 48, 52, 32, 45, 52, 54, 72, 50, 53, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_5.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 53, 34, 32, 100, 61, 34, 77, 50, 52, 48, 32, 49, 53, 53, 81, 50, 50, 50, 32, 49, 51, 48, 32, 50, 48, 50, 32, 49, 49, 54, 81, 49, 55, 51, 32, 57, 55, 32, 49, 53, 49, 32, 57, 55, 72, 49, 52, 49, 76, 49, 49, 57, 32, 57, 57, 76, 49, 48, 57, 32, 49, 48, 51, 76, 57, 51, 32, 49, 49, 48, 76, 53, 55, 32, 50, 76, 55, 53, 32, 49, 52, 76, 57, 53, 32, 50, 51, 76, 49, 49, 55, 32, 50, 56, 76, 49, 52, 51, 32, 51, 49, 81, 49, 53, 54, 32, 51, 49, 32, 49, 55, 51, 32, 50, 54, 81, 49, 56, 50, 32, 50, 50, 32, 49, 56, 54, 32, 50, 48, 84, 49, 57, 55, 32, 57, 81, 50, 49, 57, 32, 45, 49, 50, 32, 50, 49, 57, 32, 45, 52, 57, 81, 50, 49, 57, 32, 45, 57, 55, 32, 49, 55, 56, 32, 45, 49, 51, 54, 81, 49, 51, 53, 32, 45, 49, 55, 49, 32, 56, 52, 32, 45, 49, 55, 49, 81, 54, 51, 32, 45, 49, 55, 49, 32, 53, 48, 32, 45, 49, 54, 56, 84, 50, 51, 32, 45, 49, 53, 54, 81, 48, 32, 45, 49, 51, 57, 32, 48, 32, 45, 49, 48, 53, 76, 49, 32, 45, 57, 49, 81, 52, 32, 45, 56, 52, 32, 56, 32, 45, 55, 55, 81, 49, 57, 32, 45, 54, 55, 32, 51, 53, 32, 45, 54, 51, 81, 52, 53, 32, 45, 54, 51, 32, 53, 52, 32, 45, 55, 50, 76, 53, 56, 32, 45, 56, 49, 76, 54, 48, 32, 45, 57, 50, 76, 53, 54, 32, 45, 49, 48, 53, 81, 53, 52, 32, 45, 49, 48, 56, 32, 53, 51, 32, 45, 49, 49, 48, 84, 52, 56, 32, 45, 49, 49, 54, 76, 52, 49, 32, 45, 49, 51, 50, 81, 52, 49, 32, 45, 49, 52, 52, 32, 53, 49, 32, 45, 49, 52, 56, 76, 54, 52, 32, 45, 49, 53, 50, 72, 55, 57, 81, 49, 49, 50, 32, 45, 49, 53, 50, 32, 49, 51, 56, 32, 45, 49, 48, 55, 81, 49, 54, 49, 32, 45, 54, 55, 32, 49, 54, 49, 32, 45, 51, 50, 76, 49, 53, 56, 32, 45, 49, 57, 81, 49, 53, 55, 32, 45, 49, 52, 32, 49, 53, 49, 32, 45, 56, 84, 49, 51, 55, 32, 49, 76, 49, 50, 50, 32, 53, 76, 49, 48, 53, 32, 52, 76, 56, 57, 32, 49, 76, 55, 50, 32, 45, 57, 76, 52, 57, 32, 45, 50, 55, 72, 50, 56, 76, 57, 48, 32, 49, 53, 53, 81, 57, 54, 32, 49, 53, 51, 32, 49, 48, 54, 32, 49, 53, 49, 84, 49, 50, 53, 32, 49, 52, 54, 76, 49, 53, 56, 32, 49, 52, 51, 72, 49, 54, 56, 76, 49, 57, 49, 32, 49, 52, 54, 76, 50, 52, 48, 32, 49, 53, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_6.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 54, 34, 32, 100, 61, 34, 77, 50, 49, 52, 32, 49, 48, 54, 81, 50, 49, 52, 32, 57, 53, 32, 50, 49, 50, 32, 57, 48, 76, 50, 48, 52, 32, 55, 54, 81, 49, 57, 56, 32, 54, 54, 32, 49, 55, 54, 32, 54, 49, 76, 49, 54, 51, 32, 54, 50, 76, 49, 53, 49, 32, 54, 57, 81, 49, 52, 53, 32, 55, 53, 32, 49, 52, 53, 32, 56, 57, 76, 49, 52, 54, 32, 49, 48, 48, 76, 49, 53, 52, 32, 49, 49, 48, 76, 49, 55, 49, 32, 49, 50, 54, 81, 49, 54, 56, 32, 49, 51, 54, 32, 49, 53, 49, 32, 49, 51, 54, 81, 49, 48, 54, 32, 49, 51, 54, 32, 56, 50, 32, 54, 50, 76, 55, 51, 32, 51, 49, 76, 54, 55, 32, 45, 53, 81, 56, 56, 32, 49, 51, 32, 49, 48, 54, 32, 50, 49, 84, 49, 53, 48, 32, 50, 57, 81, 49, 55, 48, 32, 50, 54, 32, 49, 56, 56, 32, 55, 81, 50, 48, 50, 32, 45, 55, 32, 50, 48, 54, 32, 45, 51, 50, 81, 50, 48, 54, 32, 45, 56, 52, 32, 49, 55, 49, 32, 45, 49, 50, 57, 81, 49, 53, 53, 32, 45, 49, 52, 57, 32, 49, 51, 53, 32, 45, 49, 54, 48, 81, 49, 50, 55, 32, 45, 49, 54, 53, 32, 49, 49, 52, 32, 45, 49, 54, 56, 84, 56, 56, 32, 45, 49, 55, 49, 81, 51, 56, 32, 45, 49, 55, 49, 32, 49, 57, 32, 45, 49, 52, 52, 84, 48, 32, 45, 54, 51, 81, 48, 32, 45, 53, 52, 32, 48, 32, 45, 52, 53, 84, 51, 32, 45, 50, 53, 81, 51, 32, 45, 49, 52, 32, 52, 32, 45, 56, 84, 49, 50, 32, 49, 52, 81, 50, 53, 32, 53, 54, 32, 52, 55, 32, 56, 55, 84, 57, 53, 32, 49, 51, 52, 81, 49, 50, 52, 32, 49, 53, 53, 32, 49, 53, 52, 32, 49, 53, 53, 81, 49, 56, 49, 32, 49, 53, 53, 32, 49, 57, 54, 32, 49, 52, 51, 81, 50, 48, 51, 32, 49, 51, 55, 32, 50, 48, 56, 32, 49, 50, 56, 84, 50, 49, 52, 32, 49, 48, 54, 90, 77, 49, 52, 57, 32, 45, 51, 51, 76, 49, 52, 54, 32, 45, 50, 51, 76, 49, 52, 48, 32, 45, 49, 49, 81, 49, 51, 51, 32, 45, 51, 32, 49, 50, 48, 32, 48, 76, 49, 49, 52, 32, 49, 81, 57, 55, 32, 49, 32, 55, 55, 32, 45, 51, 50, 76, 54, 51, 32, 45, 55, 50, 81, 53, 56, 32, 45, 57, 52, 32, 53, 56, 32, 45, 49, 49, 51, 81, 53, 56, 32, 45, 49, 51, 48, 32, 54, 51, 32, 45, 49, 52, 48, 84, 56, 53, 32, 45, 49, 53, 50, 81, 49, 49, 50, 32, 45, 49, 53, 50, 32, 49, 51, 51, 32, 45, 49, 48, 53, 81, 49, 52, 49, 32, 45, 56, 51, 32, 49, 52, 53, 32, 45, 54, 55, 84, 49, 52, 57, 32, 45, 51, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_7.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 55, 34, 32, 100, 61, 34, 77, 50, 52, 51, 32, 49, 53, 53, 81, 50, 51, 56, 32, 49, 49, 55, 32, 50, 50, 53, 32, 56, 56, 81, 50, 49, 50, 32, 53, 51, 32, 49, 54, 56, 32, 45, 49, 55, 76, 49, 53, 49, 32, 45, 53, 50, 76, 49, 51, 56, 32, 45, 56, 55, 81, 49, 51, 52, 32, 45, 49, 48, 50, 32, 49, 51, 49, 32, 45, 49, 50, 48, 84, 49, 50, 56, 32, 45, 49, 53, 54, 72, 50, 56, 81, 51, 49, 32, 45, 49, 51, 52, 32, 53, 50, 32, 45, 49, 48, 50, 81, 54, 51, 32, 45, 56, 53, 32, 56, 56, 32, 45, 53, 51, 81, 57, 53, 32, 45, 52, 52, 32, 49, 48, 56, 32, 45, 50, 57, 84, 49, 51, 56, 32, 51, 81, 49, 54, 50, 32, 50, 56, 32, 49, 55, 57, 32, 53, 51, 84, 50, 48, 56, 32, 49, 48, 55, 76, 50, 48, 54, 32, 49, 48, 57, 81, 49, 56, 50, 32, 56, 53, 32, 49, 54, 51, 32, 55, 55, 81, 49, 53, 56, 32, 55, 52, 32, 49, 53, 51, 32, 55, 51, 84, 49, 52, 48, 32, 55, 50, 72, 49, 51, 50, 76, 49, 48, 53, 32, 56, 56, 81, 57, 50, 32, 57, 54, 32, 55, 53, 32, 57, 54, 81, 54, 55, 32, 57, 54, 32, 53, 56, 32, 57, 48, 76, 52, 50, 32, 55, 54, 81, 51, 50, 32, 54, 48, 32, 50, 49, 32, 51, 52, 72, 48, 76, 51, 56, 32, 49, 53, 53, 72, 53, 56, 81, 53, 48, 32, 49, 52, 49, 32, 53, 48, 32, 49, 51, 52, 81, 53, 48, 32, 49, 50, 56, 32, 53, 50, 32, 49, 50, 54, 76, 54, 49, 32, 49, 50, 48, 76, 56, 53, 32, 49, 52, 48, 81, 57, 49, 32, 49, 52, 53, 32, 57, 55, 32, 49, 52, 56, 81, 49, 49, 48, 32, 49, 53, 53, 32, 49, 50, 53, 32, 49, 53, 53, 81, 49, 51, 49, 32, 49, 53, 53, 32, 49, 52, 51, 32, 49, 52, 57, 76, 49, 52, 56, 32, 49, 52, 53, 81, 49, 53, 53, 32, 49, 52, 49, 32, 49, 53, 56, 32, 49, 51, 52, 81, 49, 55, 53, 32, 49, 50, 48, 32, 49, 57, 49, 32, 49, 50, 48, 76, 50, 48, 52, 32, 49, 50, 49, 76, 50, 49, 51, 32, 49, 50, 56, 81, 50, 49, 53, 32, 49, 51, 48, 32, 50, 49, 56, 32, 49, 51, 56, 84, 50, 50, 52, 32, 49, 53, 53, 72, 50, 52, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_8.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 56, 34, 32, 100, 61, 34, 77, 50, 55, 52, 32, 54, 48, 81, 50, 55, 52, 32, 52, 52, 32, 50, 54, 49, 32, 50, 56, 84, 50, 48, 53, 32, 45, 57, 76, 50, 49, 57, 32, 45, 50, 57, 76, 50, 50, 57, 32, 45, 52, 53, 81, 50, 51, 53, 32, 45, 53, 55, 32, 50, 51, 54, 32, 45, 54, 51, 76, 50, 51, 57, 32, 45, 56, 50, 81, 50, 51, 57, 32, 45, 49, 50, 56, 32, 49, 57, 57, 32, 45, 49, 53, 50, 81, 49, 54, 53, 32, 45, 49, 55, 49, 32, 49, 49, 53, 32, 45, 49, 55, 49, 81, 55, 51, 32, 45, 49, 55, 49, 32, 52, 48, 32, 45, 49, 53, 49, 81, 48, 32, 45, 49, 50, 54, 32, 48, 32, 45, 56, 52, 81, 48, 32, 45, 53, 50, 32, 50, 57, 32, 45, 50, 56, 81, 53, 51, 32, 45, 49, 48, 32, 56, 57, 32, 52, 81, 56, 50, 32, 49, 52, 32, 55, 56, 32, 50, 49, 84, 54, 56, 32, 51, 57, 76, 54, 50, 32, 53, 55, 76, 54, 49, 32, 55, 54, 81, 54, 49, 32, 49, 49, 51, 32, 57, 53, 32, 49, 51, 52, 84, 49, 54, 57, 32, 49, 53, 53, 81, 49, 57, 48, 32, 49, 53, 53, 32, 50, 48, 55, 32, 49, 52, 56, 81, 50, 49, 53, 32, 49, 52, 53, 32, 50, 50, 50, 32, 49, 52, 49, 84, 50, 52, 49, 32, 49, 50, 56, 81, 50, 53, 56, 32, 49, 49, 52, 32, 50, 54, 53, 32, 57, 55, 81, 50, 55, 52, 32, 56, 48, 32, 50, 55, 52, 32, 54, 48, 90, 77, 50, 51, 53, 32, 54, 56, 76, 50, 51, 54, 32, 55, 54, 81, 50, 51, 54, 32, 56, 54, 32, 50, 51, 50, 32, 57, 53, 81, 50, 50, 57, 32, 49, 48, 54, 32, 50, 50, 48, 32, 49, 49, 52, 81, 50, 48, 51, 32, 49, 51, 54, 32, 49, 55, 54, 32, 49, 51, 54, 81, 49, 53, 55, 32, 49, 51, 54, 32, 49, 52, 51, 32, 49, 50, 55, 84, 49, 50, 54, 32, 57, 57, 81, 49, 50, 54, 32, 54, 55, 32, 49, 54, 48, 32, 51, 51, 76, 49, 57, 50, 32, 51, 81, 50, 50, 56, 32, 50, 53, 32, 50, 51, 53, 32, 54, 56, 90, 77, 49, 55, 53, 32, 45, 49, 48, 57, 81, 49, 55, 53, 32, 45, 57, 56, 32, 49, 54, 55, 32, 45, 56, 52, 81, 49, 54, 53, 32, 45, 56, 49, 32, 49, 53, 54, 32, 45, 54, 55, 81, 49, 53, 53, 32, 45, 54, 53, 32, 49, 52, 57, 32, 45, 53, 57, 84, 49, 51, 57, 32, 45, 52, 57, 76, 49, 48, 49, 32, 45, 57, 76, 55, 54, 32, 45, 50, 54, 76, 53, 56, 32, 45, 52, 50, 76, 52, 54, 32, 45, 54, 51, 81, 52, 50, 32, 45, 55, 52, 32, 52, 50, 32, 45, 57, 49, 81, 52, 50, 32, 45, 49, 49, 54, 32, 54, 53, 32, 45, 49, 51, 54, 76, 56, 57, 32, 45, 49, 52, 56, 81, 49, 48, 48, 32, 45, 49, 53, 50, 32, 49, 49, 53, 32, 45, 49, 53, 50, 81, 49, 52, 54, 32, 45, 49, 53, 50, 32, 49, 54, 49, 32, 45, 49, 52, 48, 81, 49, 55, 54, 32, 45, 49, 51, 50, 32, 49, 55, 54, 32, 45, 49, 49, 53, 76, 49, 55, 53, 32, 45, 49, 48, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'oblique_figure_9.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 98, 108, 105, 113, 117, 101, 95, 102, 105, 103, 117, 114, 101, 95, 57, 34, 32, 100, 61, 34, 77, 50, 50, 53, 32, 52, 52, 81, 50, 50, 53, 32, 50, 56, 32, 50, 50, 50, 32, 49, 49, 84, 50, 49, 52, 32, 45, 50, 53, 81, 50, 48, 51, 32, 45, 53, 56, 32, 49, 56, 50, 32, 45, 57, 49, 81, 49, 51, 54, 32, 45, 49, 53, 57, 32, 55, 48, 32, 45, 49, 55, 49, 76, 54, 50, 32, 45, 49, 55, 50, 81, 52, 50, 32, 45, 49, 55, 50, 32, 50, 48, 32, 45, 49, 53, 54, 81, 49, 49, 32, 45, 49, 52, 56, 32, 54, 32, 45, 49, 51, 56, 84, 48, 32, 45, 49, 49, 50, 86, 45, 49, 48, 52, 81, 50, 32, 45, 57, 56, 32, 52, 32, 45, 57, 54, 81, 49, 49, 32, 45, 56, 53, 32, 50, 55, 32, 45, 56, 50, 81, 51, 55, 32, 45, 56, 50, 32, 52, 53, 32, 45, 57, 48, 81, 53, 48, 32, 45, 57, 50, 32, 53, 51, 32, 45, 49, 48, 57, 76, 53, 49, 32, 45, 49, 49, 57, 76, 52, 56, 32, 45, 49, 51, 54, 81, 52, 53, 32, 45, 49, 53, 50, 32, 54, 49, 32, 45, 49, 53, 50, 81, 57, 49, 32, 45, 49, 53, 50, 32, 49, 50, 50, 32, 45, 57, 56, 76, 49, 51, 54, 32, 45, 54, 51, 81, 49, 52, 48, 32, 45, 53, 54, 32, 49, 52, 52, 32, 45, 52, 50, 84, 49, 53, 49, 32, 45, 49, 57, 76, 49, 50, 55, 32, 45, 51, 50, 76, 49, 49, 52, 32, 45, 52, 48, 81, 49, 48, 52, 32, 45, 52, 52, 32, 57, 54, 32, 45, 52, 54, 84, 55, 55, 32, 45, 52, 56, 81, 52, 52, 32, 45, 52, 56, 32, 50, 55, 32, 45, 50, 56, 81, 56, 32, 45, 49, 48, 32, 56, 32, 50, 52, 81, 56, 32, 55, 51, 32, 52, 48, 32, 49, 49, 52, 84, 49, 51, 49, 32, 49, 53, 53, 81, 49, 55, 53, 32, 49, 53, 53, 32, 50, 48, 50, 32, 49, 50, 52, 81, 50, 49, 49, 32, 49, 49, 49, 32, 50, 49, 57, 32, 56, 57, 81, 50, 50, 49, 32, 55, 57, 32, 50, 50, 51, 32, 54, 55, 84, 50, 50, 53, 32, 52, 52, 90, 77, 49, 54, 55, 32, 57, 51, 81, 49, 54, 55, 32, 49, 48, 56, 32, 49, 54, 49, 32, 49, 50, 48, 84, 49, 52, 48, 32, 49, 51, 54, 81, 49, 48, 57, 32, 49, 51, 54, 32, 56, 56, 32, 49, 48, 48, 84, 54, 54, 32, 50, 57, 81, 54, 54, 32, 49, 49, 32, 55, 49, 32, 45, 49, 84, 57, 55, 32, 45, 49, 57, 81, 49, 50, 51, 32, 45, 50, 50, 32, 49, 52, 56, 32, 50, 48, 81, 49, 53, 54, 32, 51, 53, 32, 49, 54, 49, 32, 53, 51, 84, 49, 54, 55, 32, 57, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'orn_mordent.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 114, 110, 95, 109, 111, 114, 100, 101, 110, 116, 34, 32, 100, 61, 34, 77, 48, 32, 50, 49, 86, 56, 48, 76, 49, 50, 57, 32, 50, 51, 48, 76, 49, 52, 54, 32, 50, 52, 48, 81, 49, 53, 54, 32, 50, 52, 48, 32, 49, 53, 56, 32, 50, 51, 52, 76, 50, 54, 52, 32, 49, 52, 49, 76, 50, 56, 49, 32, 49, 51, 49, 76, 50, 57, 51, 32, 49, 51, 55, 76, 51, 55, 51, 32, 50, 51, 48, 76, 51, 57, 49, 32, 50, 52, 48, 81, 51, 57, 57, 32, 50, 52, 48, 32, 52, 48, 51, 32, 50, 51, 52, 76, 53, 48, 56, 32, 49, 52, 49, 76, 53, 49, 55, 32, 49, 51, 52, 76, 53, 50, 53, 32, 49, 50, 57, 81, 53, 51, 51, 32, 49, 51, 49, 32, 53, 51, 55, 32, 49, 51, 55, 76, 54, 48, 53, 32, 50, 49, 55, 86, 49, 53, 56, 76, 52, 55, 55, 32, 56, 81, 52, 54, 51, 32, 45, 50, 32, 52, 53, 55, 32, 45, 50, 81, 52, 53, 50, 32, 45, 50, 32, 52, 52, 55, 32, 52, 76, 51, 52, 50, 32, 57, 56, 81, 51, 51, 51, 32, 49, 48, 53, 32, 51, 50, 50, 32, 49, 48, 53, 81, 51, 49, 54, 32, 49, 48, 53, 32, 51, 49, 51, 32, 49, 48, 50, 76, 50, 51, 50, 32, 56, 81, 50, 50, 49, 32, 45, 50, 32, 50, 49, 51, 32, 45, 50, 81, 50, 48, 56, 32, 45, 50, 32, 50, 48, 51, 32, 52, 76, 57, 56, 32, 57, 56, 81, 56, 57, 32, 49, 48, 55, 32, 55, 56, 32, 49, 48, 55, 81, 55, 51, 32, 49, 48, 55, 32, 54, 56, 32, 49, 48, 50, 76, 48, 32, 50, 49, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'orn_trill.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 111, 114, 110, 95, 116, 114, 105, 108, 108, 34, 32, 100, 61, 34, 77, 45, 49, 49, 52, 32, 49, 49, 76, 45, 49, 48, 48, 32, 54, 54, 81, 45, 49, 50, 53, 32, 56, 56, 32, 45, 49, 53, 53, 32, 56, 56, 81, 45, 49, 55, 51, 32, 56, 56, 32, 45, 49, 56, 52, 32, 55, 55, 84, 45, 49, 57, 56, 32, 52, 55, 81, 45, 49, 57, 56, 32, 50, 53, 32, 45, 49, 56, 52, 32, 49, 49, 81, 45, 49, 55, 55, 32, 54, 32, 45, 49, 54, 57, 32, 51, 84, 45, 49, 53, 51, 32, 48, 76, 45, 49, 53, 48, 32, 45, 50, 76, 45, 49, 51, 55, 32, 50, 76, 45, 49, 49, 52, 32, 49, 49, 90, 77, 45, 53, 32, 45, 49, 52, 51, 76, 53, 51, 32, 55, 49, 81, 53, 51, 32, 55, 54, 32, 53, 49, 32, 55, 55, 84, 52, 56, 32, 56, 48, 81, 51, 55, 32, 56, 48, 32, 45, 51, 32, 53, 50, 76, 45, 52, 54, 32, 49, 57, 76, 45, 52, 49, 32, 50, 53, 81, 45, 57, 32, 45, 50, 56, 32, 45, 57, 32, 45, 55, 51, 81, 45, 57, 32, 45, 57, 49, 32, 45, 49, 51, 32, 45, 49, 48, 49, 84, 45, 49, 57, 32, 45, 49, 49, 54, 84, 45, 51, 49, 32, 45, 49, 51, 53, 81, 45, 53, 50, 32, 45, 49, 54, 49, 32, 45, 56, 48, 32, 45, 49, 54, 49, 81, 45, 49, 48, 51, 32, 45, 49, 54, 49, 32, 45, 49, 50, 53, 32, 45, 49, 52, 55, 81, 45, 49, 51, 53, 32, 45, 49, 52, 49, 32, 45, 49, 52, 49, 32, 45, 49, 51, 49, 84, 45, 49, 52, 55, 32, 45, 49, 48, 57, 81, 45, 49, 52, 54, 32, 45, 49, 48, 55, 32, 45, 49, 52, 52, 32, 45, 57, 52, 76, 45, 49, 50, 52, 32, 45, 49, 48, 81, 45, 49, 51, 55, 32, 45, 49, 56, 32, 45, 49, 54, 48, 32, 45, 49, 56, 81, 45, 49, 55, 51, 32, 45, 49, 56, 32, 45, 49, 56, 50, 32, 45, 49, 52, 84, 45, 50, 48, 48, 32, 49, 81, 45, 50, 49, 54, 32, 49, 56, 32, 45, 50, 49, 54, 32, 52, 56, 81, 45, 50, 49, 54, 32, 54, 52, 32, 45, 50, 49, 50, 32, 55, 52, 84, 45, 49, 57, 57, 32, 57, 51, 81, 45, 49, 56, 52, 32, 49, 49, 49, 32, 45, 49, 53, 51, 32, 49, 49, 49, 81, 45, 49, 50, 52, 32, 49, 49, 49, 32, 45, 57, 51, 32, 56, 54, 76, 45, 53, 57, 32, 50, 48, 51, 72, 52, 76, 45, 52, 50, 32, 52, 53, 76, 45, 52, 32, 55, 54, 76, 50, 56, 32, 57, 54, 81, 52, 53, 32, 49, 48, 52, 32, 53, 57, 32, 49, 48, 55, 84, 57, 48, 32, 49, 49, 49, 81, 49, 49, 52, 32, 49, 49, 49, 32, 49, 49, 52, 32, 57, 48, 76, 49, 49, 51, 32, 56, 48, 76, 49, 49, 48, 32, 54, 56, 76, 49, 48, 55, 32, 53, 54, 81, 49, 51, 56, 32, 49, 49, 49, 32, 49, 55, 55, 32, 49, 49, 49, 81, 49, 57, 52, 32, 49, 49, 49, 32, 50, 48, 53, 32, 57, 55, 84, 50, 49, 54, 32, 54, 52, 81, 50, 49, 54, 32, 52, 56, 32, 50, 48, 56, 32, 51, 56, 84, 49, 56, 53, 32, 50, 55, 81, 49, 55, 55, 32, 50, 55, 32, 49, 55, 49, 32, 51, 50, 84, 49, 54, 50, 32, 53, 50, 76, 49, 54, 53, 32, 54, 54, 76, 49, 54, 55, 32, 55, 55, 76, 49, 54, 56, 32, 56, 54, 76, 49, 54, 52, 32, 57, 48, 81, 49, 54, 50, 32, 56, 57, 32, 49, 54, 49, 32, 56, 57, 81, 49, 53, 50, 32, 56, 52, 32, 49, 52, 53, 32, 55, 57, 84, 49, 51, 51, 32, 54, 57, 81, 49, 50, 51, 32, 53, 56, 32, 49, 49, 52, 32, 52, 49, 76, 49, 48, 50, 32, 49, 52, 76, 57, 48, 32, 45, 50, 48, 76, 53, 53, 32, 45, 49, 52, 51, 72, 45, 53, 90, 77, 45, 53, 52, 32, 54, 76, 45, 57, 48, 32, 45, 49, 48, 57, 76, 45, 57, 49, 32, 45, 49, 49, 57, 81, 45, 57, 49, 32, 45, 49, 51, 52, 32, 45, 55, 53, 32, 45, 49, 51, 56, 81, 45, 50, 55, 32, 45, 49, 49, 49, 32, 45, 50, 55, 32, 45, 54, 51, 81, 45, 50, 55, 32, 45, 51, 51, 32, 45, 53, 52, 32, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_128.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 49, 50, 56, 34, 32, 100, 61, 34, 77, 51, 54, 48, 32, 56, 52, 53, 81, 51, 54, 52, 32, 56, 52, 51, 32, 51, 55, 49, 32, 56, 52, 49, 84, 51, 56, 51, 32, 56, 51, 56, 84, 52, 48, 54, 32, 56, 51, 55, 81, 52, 51, 53, 32, 56, 51, 55, 32, 52, 55, 50, 32, 56, 52, 53, 84, 53, 51, 50, 32, 56, 54, 51, 76, 52, 54, 51, 32, 54, 53, 52, 81, 52, 52, 48, 32, 54, 50, 56, 32, 52, 50, 49, 32, 54, 49, 54, 81, 51, 57, 53, 32, 53, 57, 57, 32, 51, 54, 55, 32, 53, 57, 57, 81, 51, 53, 51, 32, 53, 57, 57, 32, 51, 51, 54, 32, 54, 48, 53, 81, 51, 55, 49, 32, 54, 49, 50, 32, 51, 56, 50, 32, 54, 50, 53, 84, 51, 57, 51, 32, 54, 54, 53, 81, 51, 56, 51, 32, 54, 57, 52, 32, 51, 54, 56, 32, 55, 48, 52, 84, 51, 50, 51, 32, 55, 50, 48, 81, 50, 54, 49, 32, 55, 48, 57, 32, 50, 52, 57, 32, 54, 53, 53, 81, 50, 52, 57, 32, 54, 48, 52, 32, 51, 48, 57, 32, 53, 57, 48, 76, 51, 50, 56, 32, 53, 56, 51, 81, 51, 51, 54, 32, 53, 56, 49, 32, 51, 54, 50, 32, 53, 56, 49, 81, 51, 57, 51, 32, 53, 56, 49, 32, 52, 49, 49, 32, 53, 56, 54, 84, 52, 52, 53, 32, 54, 48, 51, 76, 51, 55, 56, 32, 51, 57, 56, 81, 51, 54, 51, 32, 51, 55, 57, 32, 51, 51, 53, 32, 51, 54, 51, 84, 50, 55, 57, 32, 51, 52, 54, 81, 50, 54, 54, 32, 51, 52, 54, 32, 50, 53, 51, 32, 51, 53, 49, 81, 50, 56, 57, 32, 51, 53, 56, 32, 51, 48, 49, 32, 51, 55, 55, 81, 51, 48, 57, 32, 51, 56, 57, 32, 51, 48, 57, 32, 52, 49, 50, 81, 50, 57, 57, 32, 52, 52, 50, 32, 50, 56, 54, 32, 52, 53, 49, 84, 50, 52, 48, 32, 52, 54, 54, 81, 50, 48, 56, 32, 52, 54, 50, 32, 49, 57, 49, 32, 52, 52, 54, 84, 49, 54, 53, 32, 52, 48, 49, 81, 49, 54, 53, 32, 51, 53, 48, 32, 50, 50, 53, 32, 51, 51, 54, 81, 50, 51, 49, 32, 51, 51, 51, 32, 50, 52, 55, 32, 51, 51, 49, 84, 50, 55, 55, 32, 51, 50, 56, 81, 51, 48, 50, 32, 51, 50, 56, 32, 51, 50, 49, 32, 51, 51, 50, 84, 51, 54, 48, 32, 51, 53, 48, 76, 50, 57, 53, 32, 49, 52, 51, 81, 50, 54, 54, 32, 49, 49, 53, 32, 50, 52, 50, 32, 49, 48, 52, 84, 49, 57, 55, 32, 57, 50, 81, 49, 57, 48, 32, 57, 50, 32, 49, 56, 51, 32, 57, 52, 84, 49, 55, 48, 32, 57, 56, 81, 50, 48, 54, 32, 49, 48, 55, 32, 50, 49, 56, 32, 49, 50, 52, 81, 50, 50, 54, 32, 49, 51, 53, 32, 50, 50, 54, 32, 49, 53, 56, 81, 50, 49, 52, 32, 49, 56, 57, 32, 50, 48, 50, 32, 49, 57, 57, 84, 49, 53, 54, 32, 50, 49, 51, 81, 49, 50, 54, 32, 50, 48, 57, 32, 49, 48, 56, 32, 49, 57, 50, 84, 56, 52, 32, 49, 52, 55, 81, 56, 52, 32, 57, 54, 32, 49, 52, 49, 32, 56, 52, 81, 49, 52, 56, 32, 56, 48, 32, 49, 54, 49, 32, 55, 55, 84, 49, 57, 54, 32, 55, 52, 81, 50, 49, 55, 32, 55, 52, 32, 50, 51, 56, 32, 55, 57, 84, 50, 55, 56, 32, 57, 55, 76, 50, 49, 48, 32, 45, 49, 48, 57, 81, 49, 56, 54, 32, 45, 49, 51, 53, 32, 49, 54, 50, 32, 45, 49, 52, 55, 84, 49, 49, 52, 32, 45, 49, 54, 48, 81, 57, 57, 32, 45, 49, 54, 48, 32, 56, 56, 32, 45, 49, 53, 54, 81, 49, 50, 50, 32, 45, 49, 52, 53, 32, 49, 51, 50, 32, 45, 49, 51, 51, 84, 49, 52, 51, 32, 45, 57, 54, 81, 49, 51, 53, 32, 45, 54, 54, 32, 49, 50, 48, 32, 45, 53, 54, 84, 55, 51, 32, 45, 52, 49, 81, 49, 49, 32, 45, 53, 48, 32, 45, 49, 32, 45, 49, 48, 54, 81, 45, 49, 32, 45, 49, 53, 56, 32, 54, 48, 32, 45, 49, 55, 49, 76, 55, 56, 32, 45, 49, 55, 55, 81, 56, 49, 32, 45, 49, 55, 56, 32, 57, 55, 32, 45, 49, 55, 56, 81, 49, 50, 49, 32, 45, 49, 55, 56, 32, 49, 52, 56, 32, 45, 49, 55, 52, 84, 49, 57, 53, 32, 45, 49, 53, 56, 76, 49, 54, 50, 32, 45, 50, 53, 56, 76, 56, 48, 32, 45, 53, 49, 48, 72, 49, 49, 55, 76, 51, 53, 48, 32, 49, 57, 56, 76, 53, 49, 53, 32, 55, 48, 52, 76, 54, 48, 49, 32, 57, 54, 52, 72, 53, 57, 53, 76, 53, 56, 54, 32, 57, 54, 49, 72, 53, 55, 55, 81, 53, 55, 52, 32, 57, 52, 57, 32, 53, 54, 56, 32, 57, 51, 56, 84, 53, 53, 52, 32, 57, 49, 54, 81, 53, 52, 54, 32, 57, 48, 55, 32, 53, 51, 54, 32, 56, 57, 57, 84, 53, 49, 51, 32, 56, 56, 52, 81, 52, 54, 52, 32, 56, 53, 52, 32, 52, 49, 57, 32, 56, 53, 52, 81, 52, 49, 51, 32, 56, 53, 52, 32, 52, 48, 56, 32, 56, 53, 53, 84, 51, 57, 49, 32, 56, 53, 57, 81, 52, 49, 50, 32, 56, 54, 51, 32, 52, 50, 54, 32, 56, 55, 52, 81, 52, 52, 53, 32, 56, 56, 57, 32, 52, 52, 53, 32, 57, 49, 54, 81, 52, 52, 53, 32, 57, 52, 50, 32, 52, 50, 54, 32, 57, 53, 55, 84, 51, 55, 54, 32, 57, 55, 53, 81, 51, 49, 52, 32, 57, 54, 54, 32, 51, 48, 49, 32, 57, 48, 57, 81, 51, 48, 49, 32, 56, 53, 57, 32, 51, 54, 48, 32, 56, 52, 53, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_128_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 49, 50, 56, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 51, 72, 56, 48, 86, 51, 53, 56, 72, 50, 52, 50, 86, 49, 56, 54, 90, 77, 50, 52, 50, 32, 50, 56, 50, 72, 49, 56, 54, 86, 51, 56, 51, 72, 56, 48, 86, 52, 53, 55, 72, 50, 52, 50, 86, 50, 56, 50, 90, 77, 50, 52, 50, 32, 51, 56, 51, 72, 49, 56, 54, 86, 52, 56, 51, 72, 56, 48, 86, 53, 53, 56, 72, 50, 52, 50, 86, 51, 56, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_16.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 49, 54, 34, 32, 100, 61, 34, 77, 49, 48, 57, 32, 51, 50, 57, 81, 49, 50, 48, 32, 51, 50, 49, 32, 49, 53, 55, 32, 51, 50, 49, 81, 49, 56, 56, 32, 51, 50, 49, 32, 50, 49, 53, 32, 51, 50, 54, 84, 50, 55, 52, 32, 51, 52, 55, 76, 50, 48, 53, 32, 49, 52, 48, 81, 49, 56, 53, 32, 49, 49, 56, 32, 49, 54, 49, 32, 49, 48, 52, 84, 49, 49, 48, 32, 57, 48, 81, 57, 57, 32, 57, 48, 32, 56, 52, 32, 57, 53, 81, 49, 49, 49, 32, 57, 57, 32, 49, 50, 53, 32, 49, 49, 52, 84, 49, 51, 57, 32, 49, 53, 51, 81, 49, 50, 54, 32, 49, 56, 52, 32, 49, 49, 52, 32, 49, 57, 50, 84, 55, 49, 32, 50, 48, 54, 81, 49, 50, 32, 49, 57, 57, 32, 48, 32, 49, 52, 51, 81, 48, 32, 57, 50, 32, 53, 56, 32, 56, 50, 81, 55, 48, 32, 55, 50, 32, 49, 48, 51, 32, 55, 50, 81, 49, 50, 54, 32, 55, 50, 32, 49, 52, 57, 32, 55, 55, 84, 49, 56, 57, 32, 57, 51, 76, 55, 53, 32, 45, 50, 52, 57, 72, 49, 49, 52, 76, 50, 53, 56, 32, 49, 57, 49, 76, 51, 52, 49, 32, 52, 52, 53, 72, 51, 51, 54, 76, 51, 50, 54, 32, 52, 52, 51, 76, 51, 49, 57, 32, 52, 52, 50, 81, 51, 48, 56, 32, 52, 49, 54, 32, 50, 57, 53, 32, 51, 57, 57, 84, 50, 53, 54, 32, 51, 54, 55, 84, 50, 48, 54, 32, 51, 52, 53, 84, 49, 54, 52, 32, 51, 51, 55, 81, 49, 52, 54, 32, 51, 51, 55, 32, 49, 51, 55, 32, 51, 52, 51, 81, 49, 54, 53, 32, 51, 52, 54, 32, 49, 55, 57, 32, 51, 54, 52, 84, 49, 57, 48, 32, 52, 48, 50, 81, 49, 55, 57, 32, 52, 50, 55, 32, 49, 55, 52, 32, 52, 51, 51, 81, 49, 54, 50, 32, 52, 52, 56, 32, 49, 50, 51, 32, 52, 53, 51, 81, 54, 51, 32, 52, 52, 54, 32, 53, 49, 32, 51, 57, 49, 81, 53, 49, 32, 51, 52, 48, 32, 49, 48, 57, 32, 51, 50, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_16_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 49, 54, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_32.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 51, 50, 34, 32, 100, 61, 34, 77, 52, 49, 53, 32, 54, 56, 57, 76, 51, 57, 54, 32, 54, 56, 55, 81, 51, 57, 51, 32, 54, 55, 53, 32, 51, 56, 55, 32, 54, 54, 52, 84, 51, 55, 51, 32, 54, 52, 51, 81, 51, 53, 57, 32, 54, 50, 52, 32, 51, 51, 55, 32, 54, 49, 49, 84, 50, 57, 48, 32, 53, 57, 48, 84, 50, 52, 51, 32, 53, 56, 50, 81, 50, 50, 54, 32, 53, 56, 50, 32, 50, 49, 56, 32, 53, 56, 56, 81, 50, 52, 57, 32, 53, 57, 53, 32, 50, 54, 48, 32, 54, 48, 56, 84, 50, 55, 49, 32, 54, 52, 54, 81, 50, 54, 52, 32, 54, 55, 49, 32, 50, 52, 55, 32, 54, 56, 52, 84, 50, 48, 55, 32, 54, 57, 56, 81, 49, 55, 56, 32, 54, 57, 56, 32, 49, 53, 54, 32, 54, 55, 57, 81, 49, 52, 55, 32, 54, 55, 50, 32, 49, 52, 49, 32, 54, 54, 49, 84, 49, 51, 49, 32, 54, 51, 54, 81, 49, 51, 49, 32, 53, 56, 52, 32, 49, 57, 48, 32, 53, 55, 51, 81, 49, 57, 57, 32, 53, 54, 56, 32, 50, 49, 52, 32, 53, 54, 55, 84, 50, 52, 52, 32, 53, 54, 53, 81, 50, 53, 49, 32, 53, 54, 53, 32, 50, 54, 48, 32, 53, 54, 53, 84, 50, 57, 55, 32, 53, 55, 51, 81, 51, 49, 56, 32, 53, 55, 54, 32, 51, 51, 50, 32, 53, 56, 48, 84, 51, 53, 52, 32, 53, 57, 49, 76, 50, 56, 53, 32, 51, 56, 51, 81, 50, 54, 57, 32, 51, 54, 52, 32, 50, 52, 51, 32, 51, 53, 48, 84, 49, 57, 50, 32, 51, 51, 54, 81, 49, 56, 48, 32, 51, 51, 54, 32, 49, 54, 55, 32, 51, 52, 49, 81, 50, 48, 51, 32, 51, 53, 49, 32, 50, 48, 56, 32, 51, 54, 48, 81, 50, 49, 57, 32, 51, 55, 52, 32, 50, 49, 57, 32, 51, 57, 49, 81, 50, 49, 57, 32, 52, 49, 53, 32, 50, 48, 48, 32, 52, 51, 51, 84, 49, 53, 50, 32, 52, 53, 49, 81, 49, 50, 51, 32, 52, 52, 55, 32, 49, 48, 53, 32, 52, 51, 50, 84, 56, 49, 32, 51, 57, 48, 81, 56, 49, 32, 51, 52, 48, 32, 49, 51, 56, 32, 51, 50, 54, 81, 49, 52, 56, 32, 51, 50, 49, 32, 49, 54, 48, 32, 51, 49, 57, 84, 49, 56, 54, 32, 51, 49, 55, 81, 50, 49, 49, 32, 51, 49, 55, 32, 50, 51, 50, 32, 51, 50, 51, 84, 50, 55, 49, 32, 51, 51, 57, 76, 50, 48, 55, 32, 49, 52, 50, 81, 50, 48, 51, 32, 49, 51, 51, 32, 49, 55, 53, 32, 49, 49, 52, 81, 49, 52, 48, 32, 57, 49, 32, 49, 49, 49, 32, 57, 49, 81, 57, 53, 32, 57, 49, 32, 56, 53, 32, 57, 54, 81, 49, 50, 51, 32, 49, 48, 53, 32, 49, 51, 52, 32, 49, 50, 51, 81, 49, 51, 57, 32, 49, 51, 49, 32, 49, 51, 57, 32, 49, 53, 51, 81, 49, 50, 56, 32, 49, 56, 53, 32, 49, 49, 50, 32, 49, 57, 53, 81, 49, 48, 52, 32, 50, 48, 48, 32, 55, 50, 32, 50, 48, 54, 81, 49, 52, 32, 50, 48, 48, 32, 49, 32, 49, 52, 53, 81, 49, 32, 49, 50, 48, 32, 49, 52, 32, 49, 48, 52, 84, 53, 57, 32, 56, 49, 81, 55, 56, 32, 55, 49, 32, 49, 49, 51, 32, 55, 49, 81, 49, 54, 49, 32, 55, 49, 32, 49, 56, 56, 32, 56, 57, 76, 50, 48, 55, 32, 49, 52, 50, 76, 55, 56, 32, 45, 50, 52, 56, 72, 49, 49, 55, 76, 52, 50, 48, 32, 54, 56, 56, 76, 52, 49, 53, 32, 54, 56, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_32_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 51, 50, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 55, 72, 56, 48, 86, 51, 54, 50, 72, 50, 52, 50, 86, 49, 56, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_4.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 52, 34, 32, 100, 61, 34, 77, 54, 49, 32, 54, 53, 48, 81, 54, 48, 32, 54, 53, 49, 32, 53, 57, 32, 54, 53, 50, 84, 53, 56, 32, 54, 53, 53, 76, 53, 54, 32, 54, 53, 56, 81, 54, 48, 32, 54, 54, 50, 32, 54, 51, 32, 54, 54, 50, 81, 56, 50, 32, 54, 54, 50, 32, 49, 48, 53, 32, 54, 52, 49, 84, 50, 48, 48, 32, 53, 53, 52, 81, 50, 50, 54, 32, 53, 51, 48, 32, 50, 51, 52, 32, 53, 50, 49, 84, 50, 52, 57, 32, 53, 48, 53, 84, 50, 53, 57, 32, 52, 57, 48, 81, 50, 54, 56, 32, 52, 55, 56, 32, 50, 54, 56, 32, 52, 54, 49, 81, 50, 54, 56, 32, 52, 51, 48, 32, 50, 51, 48, 32, 51, 57, 54, 81, 50, 49, 49, 32, 51, 56, 48, 32, 49, 57, 56, 32, 51, 54, 56, 84, 49, 55, 56, 32, 51, 52, 54, 84, 49, 54, 53, 32, 51, 49, 57, 84, 49, 53, 52, 32, 50, 54, 53, 81, 49, 55, 53, 32, 49, 57, 55, 32, 50, 49, 55, 32, 49, 51, 55, 81, 50, 51, 52, 32, 49, 49, 48, 32, 50, 53, 57, 32, 55, 57, 84, 51, 50, 52, 32, 48, 81, 51, 49, 49, 32, 48, 32, 50, 54, 55, 32, 50, 49, 76, 50, 48, 49, 32, 53, 50, 76, 49, 55, 57, 32, 53, 56, 76, 49, 53, 52, 32, 53, 57, 81, 49, 49, 52, 32, 53, 57, 32, 57, 48, 32, 50, 55, 76, 56, 54, 32, 49, 51, 76, 56, 53, 32, 48, 81, 56, 53, 32, 45, 51, 49, 32, 49, 48, 54, 32, 45, 53, 56, 81, 49, 49, 52, 32, 45, 54, 56, 32, 49, 50, 55, 32, 45, 56, 51, 84, 49, 53, 52, 32, 45, 49, 49, 49, 81, 49, 56, 50, 32, 45, 49, 51, 52, 32, 49, 56, 52, 32, 45, 49, 52, 51, 76, 49, 56, 49, 32, 45, 49, 52, 54, 81, 49, 54, 51, 32, 45, 49, 51, 56, 32, 49, 53, 52, 32, 45, 49, 51, 48, 81, 49, 52, 56, 32, 45, 49, 50, 56, 32, 49, 51, 50, 32, 45, 49, 49, 56, 84, 49, 48, 54, 32, 45, 49, 48, 50, 81, 54, 55, 32, 45, 56, 48, 32, 51, 57, 32, 45, 52, 56, 81, 55, 32, 45, 49, 54, 32, 48, 32, 50, 55, 81, 48, 32, 49, 50, 56, 32, 56, 53, 32, 49, 50, 56, 81, 49, 53, 48, 32, 49, 50, 56, 32, 50, 51, 48, 32, 55, 51, 81, 50, 48, 48, 32, 49, 49, 52, 32, 49, 55, 49, 32, 49, 52, 51, 76, 49, 51, 55, 32, 49, 55, 53, 76, 57, 52, 32, 50, 49, 50, 81, 53, 48, 32, 50, 52, 56, 32, 51, 50, 32, 50, 54, 57, 84, 49, 51, 32, 51, 49, 48, 81, 49, 51, 51, 32, 52, 49, 50, 32, 49, 51, 51, 32, 53, 48, 53, 81, 49, 51, 51, 32, 53, 50, 50, 32, 49, 50, 57, 32, 53, 52, 48, 84, 49, 49, 52, 32, 53, 55, 55, 81, 57, 54, 32, 54, 49, 53, 32, 54, 49, 32, 54, 53, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_4_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 52, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 56, 48, 32, 48, 86, 49, 55, 48, 72, 50, 53, 48, 86, 57, 49, 72, 49, 51, 57, 86, 48, 72, 56, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_64.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 54, 52, 34, 32, 100, 61, 34, 77, 49, 57, 53, 32, 45, 52, 76, 50, 54, 48, 32, 49, 57, 48, 76, 49, 57, 53, 32, 45, 52, 90, 77, 50, 54, 57, 32, 56, 49, 57, 81, 50, 55, 55, 32, 56, 49, 52, 32, 50, 56, 57, 32, 56, 49, 50, 84, 51, 49, 54, 32, 56, 49, 48, 81, 51, 52, 54, 32, 56, 49, 48, 32, 51, 56, 51, 32, 56, 49, 57, 84, 52, 51, 52, 32, 56, 51, 53, 76, 51, 54, 57, 32, 54, 51, 52, 81, 51, 52, 56, 32, 54, 49, 50, 32, 51, 51, 48, 32, 54, 48, 48, 81, 51, 48, 51, 32, 53, 56, 50, 32, 50, 55, 51, 32, 53, 56, 50, 81, 50, 54, 49, 32, 53, 56, 50, 32, 50, 52, 57, 32, 53, 56, 53, 81, 50, 56, 51, 32, 53, 57, 54, 32, 50, 57, 51, 32, 54, 49, 49, 81, 51, 48, 48, 32, 54, 50, 50, 32, 51, 48, 48, 32, 54, 52, 51, 81, 50, 57, 48, 32, 54, 55, 51, 32, 50, 55, 56, 32, 54, 56, 50, 84, 50, 51, 50, 32, 54, 57, 53, 81, 49, 55, 53, 32, 54, 56, 57, 32, 49, 54, 48, 32, 54, 51, 52, 81, 49, 54, 48, 32, 53, 56, 49, 32, 50, 49, 57, 32, 53, 55, 48, 81, 50, 51, 51, 32, 53, 54, 51, 32, 50, 54, 50, 32, 53, 54, 51, 81, 51, 48, 54, 32, 53, 54, 51, 32, 51, 53, 48, 32, 53, 56, 50, 76, 50, 56, 54, 32, 51, 56, 53, 81, 50, 54, 50, 32, 51, 54, 49, 32, 50, 51, 57, 32, 51, 52, 57, 84, 49, 57, 50, 32, 51, 51, 54, 81, 49, 55, 56, 32, 51, 51, 54, 32, 49, 54, 54, 32, 51, 52, 48, 81, 50, 48, 51, 32, 51, 53, 50, 32, 50, 49, 51, 32, 51, 54, 54, 81, 50, 49, 57, 32, 51, 55, 52, 32, 50, 49, 57, 32, 51, 57, 56, 81, 50, 49, 48, 32, 52, 50, 55, 32, 49, 57, 55, 32, 52, 51, 54, 84, 49, 53, 50, 32, 52, 53, 49, 81, 57, 48, 32, 52, 52, 51, 32, 56, 49, 32, 51, 56, 56, 81, 56, 49, 32, 51, 51, 57, 32, 49, 51, 54, 32, 51, 50, 55, 81, 49, 52, 55, 32, 51, 50, 51, 32, 49, 53, 57, 32, 51, 50, 48, 84, 49, 56, 56, 32, 51, 49, 55, 81, 50, 49, 48, 32, 51, 49, 55, 32, 50, 50, 56, 32, 51, 50, 49, 84, 50, 55, 48, 32, 51, 51, 56, 76, 50, 48, 52, 32, 49, 51, 57, 81, 49, 53, 55, 32, 57, 48, 32, 49, 48, 57, 32, 57, 48, 81, 57, 56, 32, 57, 48, 32, 56, 53, 32, 57, 53, 81, 49, 49, 51, 32, 49, 48, 52, 32, 49, 49, 57, 32, 49, 48, 56, 81, 49, 51, 57, 32, 49, 50, 50, 32, 49, 51, 57, 32, 49, 53, 52, 81, 49, 50, 57, 32, 49, 56, 50, 32, 49, 49, 54, 32, 49, 57, 49, 84, 55, 49, 32, 50, 48, 54, 81, 49, 48, 32, 49, 57, 57, 32, 48, 32, 49, 52, 50, 81, 48, 32, 49, 49, 56, 32, 49, 53, 32, 49, 48, 50, 84, 53, 55, 32, 56, 49, 81, 55, 49, 32, 55, 51, 32, 49, 48, 51, 32, 55, 51, 81, 49, 50, 56, 32, 55, 51, 32, 49, 52, 56, 32, 55, 55, 84, 49, 57, 49, 32, 57, 51, 76, 49, 53, 55, 32, 45, 52, 76, 55, 56, 32, 45, 50, 52, 56, 72, 49, 49, 51, 76, 49, 57, 53, 32, 45, 52, 76, 50, 54, 48, 32, 49, 57, 48, 76, 52, 50, 48, 32, 54, 56, 51, 76, 53, 48, 51, 32, 57, 51, 53, 76, 52, 57, 53, 32, 57, 51, 54, 76, 52, 56, 56, 32, 57, 51, 50, 72, 52, 56, 50, 81, 52, 54, 48, 32, 56, 56, 49, 32, 52, 49, 53, 32, 56, 53, 53, 84, 51, 50, 54, 32, 56, 50, 56, 76, 51, 49, 49, 32, 56, 50, 57, 81, 51, 48, 56, 32, 56, 51, 49, 32, 51, 48, 53, 32, 56, 51, 49, 84, 50, 57, 55, 32, 56, 51, 51, 81, 51, 50, 57, 32, 56, 52, 48, 32, 51, 51, 57, 32, 56, 53, 51, 84, 51, 53, 48, 32, 56, 57, 51, 81, 51, 52, 51, 32, 57, 49, 55, 32, 51, 51, 49, 32, 57, 50, 56, 81, 51, 49, 53, 32, 57, 52, 51, 32, 50, 56, 50, 32, 57, 52, 51, 81, 50, 53, 54, 32, 57, 52, 48, 32, 50, 51, 54, 32, 57, 50, 52, 84, 50, 49, 50, 32, 56, 56, 50, 81, 50, 49, 50, 32, 56, 51, 49, 32, 50, 54, 57, 32, 56, 49, 57, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_64_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 54, 52, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 52, 50, 32, 56, 54, 72, 49, 56, 54, 86, 49, 56, 55, 72, 56, 48, 86, 50, 54, 50, 72, 50, 52, 50, 86, 56, 54, 90, 77, 50, 52, 50, 32, 48, 72, 49, 56, 54, 86, 56, 54, 72, 56, 48, 86, 49, 54, 50, 72, 50, 52, 50, 86, 48, 90, 77, 50, 52, 50, 32, 49, 56, 54, 72, 49, 56, 54, 86, 50, 56, 55, 72, 56, 48, 86, 51, 54, 50, 72, 50, 52, 50, 86, 49, 56, 54, 90, 77, 50, 52, 50, 32, 50, 56, 54, 72, 49, 56, 54, 86, 51, 56, 55, 72, 56, 48, 86, 52, 54, 49, 72, 50, 52, 50, 86, 50, 56, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_8.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 56, 34, 32, 100, 61, 34, 77, 48, 32, 51, 57, 50, 81, 54, 32, 52, 50, 48, 32, 50, 53, 32, 52, 51, 53, 81, 52, 52, 32, 52, 53, 50, 32, 55, 51, 32, 52, 53, 53, 81, 49, 48, 51, 32, 52, 53, 50, 32, 49, 49, 55, 32, 52, 52, 49, 81, 49, 50, 50, 32, 52, 51, 55, 32, 49, 50, 56, 32, 52, 50, 53, 84, 49, 51, 57, 32, 52, 48, 50, 81, 49, 51, 57, 32, 51, 56, 55, 32, 49, 51, 56, 32, 51, 56, 50, 84, 49, 51, 52, 32, 51, 55, 51, 84, 49, 50, 55, 32, 51, 54, 53, 81, 49, 49, 57, 32, 51, 53, 51, 32, 56, 53, 32, 51, 52, 52, 76, 57, 56, 32, 51, 52, 49, 76, 49, 49, 52, 32, 51, 52, 48, 81, 49, 53, 57, 32, 51, 52, 48, 32, 50, 48, 53, 32, 51, 54, 56, 81, 50, 50, 55, 32, 51, 56, 49, 32, 50, 52, 50, 32, 51, 57, 57, 84, 50, 54, 55, 32, 52, 52, 51, 76, 50, 55, 53, 32, 52, 52, 52, 76, 50, 57, 48, 32, 52, 52, 54, 76, 49, 52, 51, 32, 48, 72, 49, 48, 53, 76, 50, 50, 50, 32, 51, 52, 55, 81, 50, 48, 54, 32, 51, 51, 56, 32, 49, 54, 54, 32, 51, 51, 48, 76, 49, 49, 50, 32, 51, 50, 50, 72, 49, 48, 49, 76, 56, 48, 32, 51, 50, 51, 81, 55, 56, 32, 51, 50, 51, 32, 53, 56, 32, 51, 50, 57, 81, 48, 32, 51, 52, 50, 32, 48, 32, 51, 57, 50, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'rest_8_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 114, 101, 115, 116, 95, 56, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 50, 53, 48, 32, 48, 72, 49, 57, 49, 86, 57, 49, 72, 56, 48, 86, 49, 55, 48, 72, 50, 53, 48, 86, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'slash_down.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 115, 108, 97, 115, 104, 95, 100, 111, 119, 110, 34, 32, 100, 61, 34, 77, 52, 49, 55, 32, 53, 49, 49, 81, 52, 52, 48, 32, 52, 53, 53, 32, 52, 52, 48, 32, 52, 48, 48, 81, 52, 52, 48, 32, 51, 51, 50, 32, 52, 48, 53, 32, 50, 54, 56, 81, 51, 55, 53, 32, 50, 49, 50, 32, 51, 49, 56, 32, 49, 53, 57, 81, 50, 55, 55, 32, 49, 50, 48, 32, 50, 51, 55, 32, 56, 51, 84, 49, 54, 52, 32, 50, 48, 86, 49, 57, 54, 81, 50, 50, 52, 32, 50, 48, 55, 32, 50, 53, 49, 32, 50, 49, 52, 81, 51, 50, 48, 32, 50, 51, 53, 32, 51, 54, 53, 32, 50, 56, 49, 81, 52, 49, 57, 32, 51, 51, 55, 32, 52, 49, 57, 32, 52, 49, 52, 81, 52, 49, 57, 32, 52, 53, 56, 32, 52, 48, 52, 32, 52, 57, 57, 84, 51, 55, 48, 32, 53, 54, 54, 81, 51, 54, 51, 32, 53, 55, 53, 32, 51, 53, 55, 32, 53, 56, 55, 81, 51, 53, 54, 32, 53, 56, 57, 32, 51, 53, 53, 32, 53, 57, 50, 81, 51, 53, 53, 32, 53, 57, 55, 32, 51, 54, 48, 32, 53, 57, 55, 81, 51, 54, 52, 32, 53, 57, 55, 32, 51, 55, 51, 32, 53, 57, 48, 81, 51, 56, 50, 32, 53, 55, 57, 32, 51, 57, 50, 32, 53, 54, 50, 84, 52, 49, 55, 32, 53, 49, 49, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'slash_down_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 115, 108, 97, 115, 104, 95, 100, 111, 119, 110, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 49, 54, 52, 32, 54, 76, 50, 32, 49, 49, 55, 86, 50, 52, 51, 76, 49, 54, 52, 32, 49, 51, 50, 86, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'slash_up.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 115, 108, 97, 115, 104, 95, 117, 112, 34, 32, 100, 61, 34, 77, 50, 48, 54, 32, 45, 53, 54, 54, 81, 50, 50, 52, 32, 45, 53, 52, 49, 32, 50, 51, 57, 32, 45, 53, 48, 48, 84, 50, 53, 53, 32, 45, 52, 49, 52, 81, 50, 53, 53, 32, 45, 51, 51, 55, 32, 50, 48, 49, 32, 45, 50, 56, 49, 81, 49, 53, 54, 32, 45, 50, 51, 53, 32, 56, 55, 32, 45, 50, 49, 52, 81, 54, 48, 32, 45, 50, 48, 55, 32, 48, 32, 45, 49, 57, 54, 86, 45, 50, 48, 81, 50, 52, 32, 45, 51, 57, 32, 53, 51, 32, 45, 54, 53, 81, 53, 57, 32, 45, 55, 48, 32, 49, 53, 52, 32, 45, 49, 53, 57, 81, 50, 48, 57, 32, 45, 50, 49, 49, 32, 50, 52, 48, 32, 45, 50, 54, 55, 81, 50, 55, 54, 32, 45, 51, 51, 51, 32, 50, 55, 54, 32, 45, 52, 48, 48, 81, 50, 55, 54, 32, 45, 52, 53, 53, 32, 50, 53, 51, 32, 45, 53, 49, 49, 81, 50, 52, 50, 32, 45, 53, 51, 56, 32, 50, 51, 51, 32, 45, 53, 53, 53, 84, 50, 48, 57, 32, 45, 53, 57, 48, 81, 50, 48, 48, 32, 45, 53, 57, 55, 32, 49, 57, 54, 32, 45, 53, 57, 55, 81, 49, 57, 49, 32, 45, 53, 57, 55, 32, 49, 57, 49, 32, 45, 53, 57, 50, 81, 49, 57, 51, 32, 45, 53, 56, 55, 32, 49, 57, 53, 32, 45, 53, 56, 50, 84, 50, 48, 54, 32, 45, 53, 54, 54, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'slash_up_mensural.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 115, 108, 97, 115, 104, 95, 117, 112, 95, 109, 101, 110, 115, 117, 114, 97, 108, 34, 32, 100, 61, 34, 77, 48, 32, 48, 76, 49, 54, 50, 32, 45, 49, 49, 49, 86, 45, 50, 51, 55, 76, 48, 32, 45, 49, 50, 53, 86, 48, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'test.pae', [64, 115, 116, 97, 114, 116, 58, 48, 48, 48, 48, 48, 52, 48, 48, 48, 48, 51, 54, 52, 51, 45, 49, 46, 49, 46, 49, 10, 64, 99, 108, 101, 102, 58, 67, 45, 49, 10, 64, 107, 101, 121, 115, 105, 103, 58, 120, 70, 67, 10, 64, 107, 101, 121, 58, 10, 64, 116, 105, 109, 101, 115, 105, 103, 58, 51, 47, 52, 10, 64, 100, 97, 116, 97, 58, 32, 39, 39, 52, 68, 47, 123, 56, 68, 54, 67, 68, 125, 52, 69, 67, 47, 105, 47, 56, 123, 68, 39, 66, 125, 65, 71, 10, 64, 101, 110, 100, 58, 48, 48, 48, 48, 48, 52, 48, 48, 48, 48, 51, 54, 52, 51, 45, 49, 46, 49, 46, 49, 10, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'unknown.xml', [60, 112, 97, 116, 104, 32, 105, 100, 61, 34, 117, 110, 107, 110, 111, 119, 110, 34, 32, 100, 61, 34, 77, 48, 32, 57, 51, 72, 51, 49, 53, 81, 51, 49, 48, 32, 50, 49, 32, 50, 57, 56, 32, 45, 49, 53, 81, 50, 54, 49, 32, 45, 49, 50, 52, 32, 49, 54, 54, 32, 45, 49, 50, 52, 81, 54, 50, 32, 45, 49, 50, 52, 32, 50, 49, 32, 45, 49, 54, 81, 56, 32, 50, 48, 32, 48, 32, 57, 51, 90, 34, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 61, 34, 115, 99, 97, 108, 101, 40, 49, 46, 48, 44, 32, 45, 49, 46, 48, 41, 34, 47, 62, 10], true, true);
Module['FS_createDataFile']('/data/svg', 'untitled.mei', [60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34, 32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 32, 63, 62, 10, 60, 63, 120, 109, 108, 45, 109, 111, 100, 101, 108, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 97, 114, 117, 115, 112, 105, 120, 46, 110, 101, 116, 47, 109, 101, 105, 45, 112, 97, 103, 101, 45, 98, 97, 115, 101, 100, 45, 50, 48, 49, 51, 45, 48, 56, 45, 50, 57, 46, 114, 110, 103, 34, 32, 116, 121, 112, 101, 61, 34, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 109, 108, 34, 32, 115, 99, 104, 101, 109, 97, 116, 121, 112, 101, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 114, 101, 108, 97, 120, 110, 103, 46, 111, 114, 103, 47, 110, 115, 47, 115, 116, 114, 117, 99, 116, 117, 114, 101, 47, 49, 46, 48, 34, 63, 62, 10, 60, 109, 101, 105, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 109, 117, 115, 105, 99, 45, 101, 110, 99, 111, 100, 105, 110, 103, 46, 111, 114, 103, 47, 110, 115, 47, 109, 101, 105, 34, 32, 109, 101, 105, 118, 101, 114, 115, 105, 111, 110, 61, 34, 50, 48, 49, 51, 34, 62, 10, 32, 32, 32, 32, 60, 109, 101, 105, 72, 101, 97, 100, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 102, 105, 108, 101, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 105, 116, 108, 101, 83, 116, 109, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 116, 105, 116, 108, 101, 32, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 116, 105, 116, 108, 101, 83, 116, 109, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 112, 117, 98, 83, 116, 109, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 100, 97, 116, 101, 62, 70, 114, 105, 32, 83, 101, 112, 32, 32, 54, 32, 49, 49, 58, 52, 52, 58, 49, 48, 32, 50, 48, 49, 51, 60, 47, 100, 97, 116, 101, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 112, 117, 98, 83, 116, 109, 116, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 102, 105, 108, 101, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 101, 110, 99, 111, 100, 105, 110, 103, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 112, 114, 111, 106, 101, 99, 116, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 112, 62, 69, 110, 99, 111, 100, 101, 100, 32, 119, 105, 116, 104, 32, 65, 114, 117, 115, 112, 105, 120, 32, 118, 101, 114, 115, 105, 111, 110, 32, 50, 46, 51, 46, 48, 60, 47, 112, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 112, 114, 111, 106, 101, 99, 116, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 101, 110, 99, 111, 100, 105, 110, 103, 68, 101, 115, 99, 62, 10, 32, 32, 32, 32, 60, 47, 109, 101, 105, 72, 101, 97, 100, 62, 10, 32, 32, 32, 32, 60, 109, 117, 115, 105, 99, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 98, 111, 100, 121, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 109, 100, 105, 118, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 115, 99, 111, 114, 101, 32, 116, 121, 112, 101, 61, 34, 114, 97, 119, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 33, 45, 45, 67, 111, 111, 114, 100, 105, 110, 97, 116, 101, 115, 32, 105, 110, 32, 77, 69, 73, 32, 97, 120, 105, 115, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 45, 45, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 112, 97, 103, 101, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 51, 98, 48, 57, 98, 49, 55, 101, 45, 97, 100, 99, 97, 45, 52, 56, 49, 55, 45, 56, 98, 99, 49, 45, 53, 52, 100, 57, 55, 54, 51, 56, 52, 52, 101, 54, 34, 32, 112, 97, 103, 101, 46, 119, 105, 100, 116, 104, 61, 34, 50, 49, 48, 52, 34, 32, 112, 97, 103, 101, 46, 104, 101, 105, 103, 104, 116, 61, 34, 50, 57, 55, 48, 34, 32, 112, 97, 103, 101, 46, 108, 101, 102, 116, 109, 97, 114, 61, 34, 48, 34, 32, 112, 97, 103, 101, 46, 114, 105, 103, 104, 116, 109, 97, 114, 61, 34, 48, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 115, 121, 115, 116, 101, 109, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 49, 98, 99, 101, 55, 57, 50, 55, 45, 51, 48, 98, 102, 45, 52, 99, 54, 54, 45, 98, 57, 53, 55, 45, 97, 53, 53, 56, 100, 55, 54, 98, 54, 48, 49, 50, 34, 32, 115, 121, 115, 116, 101, 109, 46, 108, 101, 102, 116, 109, 97, 114, 61, 34, 48, 34, 32, 115, 121, 115, 116, 101, 109, 46, 114, 105, 103, 104, 116, 109, 97, 114, 61, 34, 48, 34, 32, 117, 108, 121, 61, 34, 48, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 115, 116, 97, 102, 102, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 53, 54, 99, 57, 51, 56, 100, 54, 45, 56, 50, 98, 56, 45, 52, 102, 53, 97, 45, 56, 97, 51, 56, 45, 51, 53, 52, 57, 53, 56, 56, 50, 102, 51, 53, 57, 34, 32, 117, 108, 121, 61, 34, 50, 57, 54, 57, 34, 32, 110, 61, 34, 45, 49, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 108, 97, 121, 101, 114, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 53, 102, 99, 102, 48, 98, 101, 48, 45, 97, 50, 49, 55, 45, 52, 100, 97, 55, 45, 98, 48, 98, 98, 45, 49, 48, 102, 53, 57, 97, 53, 100, 102, 52, 50, 101, 34, 32, 110, 61, 34, 49, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 110, 111, 116, 101, 32, 112, 110, 97, 109, 101, 61, 34, 103, 34, 32, 111, 99, 116, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 109, 105, 110, 105, 109, 97, 34, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 50, 102, 51, 99, 49, 52, 51, 102, 45, 52, 99, 53, 52, 45, 52, 48, 97, 49, 45, 57, 54, 100, 97, 45, 48, 54, 49, 50, 97, 49, 50, 55, 99, 49, 99, 49, 34, 32, 117, 108, 120, 61, 34, 49, 53, 34, 32, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 98, 101, 97, 109, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 50, 97, 48, 48, 49, 102, 99, 53, 45, 50, 54, 100, 50, 45, 52, 49, 50, 51, 45, 57, 99, 101, 52, 45, 48, 97, 51, 98, 48, 101, 52, 56, 99, 54, 50, 100, 34, 32, 117, 108, 120, 61, 34, 48, 34, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 110, 111, 116, 101, 32, 100, 111, 116, 115, 61, 34, 50, 34, 32, 112, 110, 97, 109, 101, 61, 34, 97, 34, 32, 111, 99, 116, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 102, 117, 115, 97, 34, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 54, 50, 53, 55, 56, 50, 57, 102, 45, 51, 97, 97, 49, 45, 52, 55, 53, 102, 45, 57, 49, 49, 51, 45, 99, 101, 57, 54, 54, 98, 48, 102, 54, 100, 53, 99, 34, 32, 117, 108, 120, 61, 34, 53, 56, 34, 32, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 114, 101, 115, 116, 32, 112, 108, 111, 99, 61, 34, 97, 34, 32, 111, 108, 111, 99, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 102, 117, 115, 97, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 115, 112, 97, 99, 101, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 110, 111, 116, 101, 32, 97, 99, 99, 105, 100, 61, 34, 115, 34, 32, 112, 110, 97, 109, 101, 61, 34, 103, 34, 32, 111, 99, 116, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 102, 117, 115, 97, 34, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 50, 102, 51, 99, 49, 52, 51, 102, 45, 52, 99, 53, 52, 45, 52, 48, 97, 49, 45, 57, 54, 100, 97, 45, 48, 54, 49, 50, 97, 49, 50, 55, 99, 49, 99, 49, 34, 32, 117, 108, 120, 61, 34, 49, 48, 49, 34, 32, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 99, 117, 115, 116, 111, 115, 32, 111, 99, 116, 61, 34, 51, 34, 32, 112, 110, 97, 109, 101, 61, 34, 97, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 114, 101, 115, 116, 32, 112, 108, 111, 99, 61, 34, 97, 34, 32, 111, 108, 111, 99, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 102, 117, 115, 97, 34, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 98, 101, 97, 109, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 110, 111, 116, 101, 32, 112, 110, 97, 109, 101, 61, 34, 103, 34, 32, 111, 99, 116, 61, 34, 52, 34, 32, 100, 117, 114, 61, 34, 109, 105, 110, 105, 109, 97, 34, 32, 120, 109, 108, 58, 105, 100, 61, 34, 109, 45, 50, 102, 51, 99, 49, 52, 51, 102, 45, 52, 99, 53, 52, 45, 52, 48, 97, 49, 45, 57, 54, 100, 97, 45, 48, 54, 49, 50, 97, 49, 50, 55, 99, 49, 99, 49, 34, 32, 117, 108, 120, 61, 34, 49, 52, 52, 34, 32, 47, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 108, 97, 121, 101, 114, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 115, 116, 97, 102, 102, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 115, 121, 115, 116, 101, 109, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 112, 97, 103, 101, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 115, 99, 111, 114, 101, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 109, 100, 105, 118, 62, 10, 32, 32, 32, 32, 32, 32, 32, 32, 60, 47, 98, 111, 100, 121, 62, 10, 32, 32, 32, 32, 60, 47, 109, 117, 115, 105, 99, 62, 10, 60, 47, 109, 101, 105, 62, 10], true, true);
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }
})();
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function print(x) {
      console.log(x);
    };
    Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + Pointer_stringify(code) + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 16777216;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i)
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 60568;
var _stdout;
var _stdout=_stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a581() } },{ func: function() { __GLOBAL__I_a1332() } });
var ___fsmu8;
var ___dso_handle;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,208,146,0,0,52,2,0,0,156,1,0,0,160,0,0,0,164,1,0,0,12,0,0,0,12,0,0,0,6,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv119__pointer_type_infoE;
__ZTVN10__cxxabiv119__pointer_type_infoE=allocate([0,0,0,0,224,146,0,0,52,2,0,0,164,0,0,0,160,0,0,0,164,1,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,0,147,0,0,52,2,0,0,154,2,0,0,160,0,0,0,164,1,0,0,12,0,0,0,32,0,0,0,2,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTIc;
__ZTIc=allocate([96,115,0,0,160,118,0,0], "i8", ALLOC_STATIC);
var __ZN3vrv6MusEnvC1Ev;
var __ZN3vrv6MusEnvD1Ev;
var __ZN3vrv13SystemAlignerC1Ev;
var __ZN3vrv13SystemAlignerD1Ev;
var __ZN3vrv14MeasureAlignerC1Ev;
var __ZN3vrv14MeasureAlignerD1Ev;
var __ZN3vrv8LayerAppC1Ev;
var __ZN3vrv8LayerRdgC1Ev;
var __ZN3vrv7BarlineC1Ev;
var __ZN3vrv7BarlineD1Ev;
var __ZN3vrv7MeasureC1Ebi;
var __ZN3vrv17BBoxDeviceContextC1EPNS_4ViewEii;
var __ZN3vrv17BBoxDeviceContextD1Ev;
var __ZN3vrv4BeamC1Ev;
var __ZN3vrv4ClefC1Ev;
var __ZN3vrv4ClefD1Ev;
var __ZN3vrv19InterfaceControllerC1Ev;
var __ZN3vrv19InterfaceControllerD1Ev;
var __ZN3vrv3DocC1Ev;
var __ZN3vrv3DocD1Ev;
var __ZN3vrv12KeySignatureC1Eic;
var __ZN3vrv12KeySignatureD1Ev;
var __ZN3vrv5LayerC1Ei;
var __ZN3vrv6MensurC1Ev;
var __ZN3vrv9MultiRestC1Ev;
var __ZN3vrv9MultiRestC1Ei;
var __ZN3vrv4NoteC1Ev;
var __ZN3vrv9DocObjectD2Ev;
var __ZN3vrv10MusFunctorC1EMNS_6ObjectEFiNSt3__16vectorIPvNS2_9allocatorIS4_EEEEE;
var __ZN3vrv4PageC1Ev;
var __ZN3vrv4ViewC1Ev;
var __ZN3vrv4ViewD1Ev;
var __ZN3vrv4RestC1Ev;
var __ZN3vrv8ScoreDefC1Ev;
var __ZN3vrv8ScoreDefD1Ev;
var __ZN3vrv8StaffGrpC1Ev;
var __ZN3vrv8StaffDefC1Ev;
var __ZN3vrv5StaffC1Ei;
var __ZN3vrv16SvgDeviceContextC1Eii;
var __ZN3vrv16SvgDeviceContextD1Ev;
var __ZN3vrv6SymbolC1ENS_10SymbolTypeE;
var __ZN3vrv6SymbolD1Ev;
var __ZN3vrv6SystemC1Ev;
var __ZN3vrv3TieC1Ev;
var __ZN3vrv6TupletC1Ev;
var __ZN12TiXmlElementC1EPKc;
var __ZN13TiXmlDocumentC1Ev;
var __ZN13TiXmlDocumentC1EPKc;
var __ZN6jsonxx6ObjectC1Ev;
var __ZN6jsonxx6ObjectD1Ev;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt12out_of_rangeD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([97,108,110,117,109,0,97,108,112,104,97,0,98,108,97,110,107,0,99,110,116,114,108,0,100,105,103,105,116,0,103,114,97,112,104,0,108,111,119,101,114,0,112,114,105,110,116,0,112,117,110,99,116,0,115,112,97,99,101,0,117,112,112,101,114,0,120,100,105,103,105,116,0,0,0,0,0,0,0,0,116,0,0,0,24,43,0,0,110,0,0,0,112,65,0,0,114,0,0,0,168,56,0,0,102,0,0,0,104,49,0,0,97,0,0,0,208,43,0,0,101,0,0,0,152,40,0,0,119,0,0,0,200,37,0,0,87,0,0,0,104,34,0,0,115,0,0,0,56,32,0,0,83,0,0,0,240,29,0,0,100,0,0,0,176,74,0,0,68,0,0,0,104,71,0,0,0,0,0,0,0,0,0,0,18,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,16,16,34,35,16,36,37,38,39,40,41,42,43,16,44,45,46,17,47,48,17,17,49,17,17,17,50,51,52,53,54,55,56,57,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,58,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,59,16,60,61,62,63,64,65,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,67,16,16,68,16,69,70,71,16,72,16,73,16,16,16,16,74,75,76,77,16,16,78,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,16,16,16,16,82,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,83,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,84,85,86,87,16,16,88,89,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,90,16,91,92,93,94,95,96,97,98,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,254,255,0,252,1,0,0,248,1,0,0,120,0,0,0,0,255,251,223,251,0,0,128,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,252,255,224,175,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,32,64,176,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,134,254,255,255,255,0,64,73,0,0,0,0,0,24,0,223,255,0,200,0,0,0,0,0,0,0,1,0,60,0,0,0,0,0,0,0,0,0,0,0,0,16,224,1,30,0,96,255,191,0,0,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,207,3,0,0,0,3,0,32,255,127,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,0,0,0,16,0,32,30,0,48,0,1,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,252,15,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,3,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,253,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,255,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,63,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,16,0,0,0,0,0,0,128,0,128,192,223,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,254,255,255,255,0,252,255,255,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,192,255,223,255,7,0,0,0,0,0,0,0,0,0,0,128,6,0,252,0,0,24,62,0,0,128,191,0,204,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,96,255,255,255,31,0,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,56,0,0,0,0,16,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,254,127,47,0,0,255,3,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,255,255,255,255,0,0,0,192,0,0,0,0,0,0,0,0,1,0,224,159,0,0,0,0,127,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,0,252,255,255,255,31,0,0,0,0,0,12,0,0,0,0,0,0,64,0,12,240,0,0,0,0,0,0,192,248,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,255,0,255,255,255,33,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,127,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,3,224,0,224,0,224,0,96,128,248,255,255,255,252,255,255,255,255,255,127,31,252,241,127,255,127,0,0,255,255,255,3,0,0,255,255,255,255,1,0,123,3,208,193,175,66,0,12,31,188,255,255,0,0,0,0,0,2,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,127,0,0,0,255,7,0,0,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,252,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,135,3,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,255,15,0,0,0,0,0,0,0,0,255,255,255,251,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,255,15,30,255,255,255,1,252,193,224,0,0,0,0,0,0,0,0,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,255,255,255,255,15,0,0,0,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,0,0,0,0,0,0,192,0,224,0,0,0,0,0,0,0,0,0,0,0,128,15,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,127,0,3,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,8,0,0,0,15,255,3,0,0,0,0,0,0,240,0,0,0,0,0,0,0,0,0,16,192,0,0,255,255,3,7,0,0,0,0,0,248,0,0,0,0,8,128,0,0,0,0,0,0,0,0,0,0,8,0,255,63,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,128,11,0,0,0,0,0,0,0,128,2,0,0,192,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,255,255,255,3,127,0,255,255,255,255,247,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,254,255,0,252,1,0,0,248,1,0,0,248,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,48,135,255,255,255,255,255,143,255,0,0,0,0,0,0,224,255,255,7,255,15,0,0,0,0,0,0,255,255,255,255,255,63,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,143,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,255,0,255,1,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,63,252,255,63,0,0,0,3,0,0,0,0,0,0,254,3,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,7,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,255,255,255,255,127,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,127,0,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,8,0,0,0,8,0,0,32,0,0,0,32,0,0,128,0,0,0,128,0,0,0,2,0,0,0,2,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,127,254,127,254,255,254,255,0,0,0,0,255,7,255,255,255,127,255,255,255,255,255,255,255,15,255,255,255,255,255,7,0,0,0,0,0,0,0,0,192,255,255,255,7,0,255,255,255,255,255,7,255,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,191,255,255,255,255,255,255,255,255,31,255,255,15,0,255,255,255,255,223,7,0,0,255,255,1,0,255,255,255,255,255,255,255,127,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,30,255,255,255,255,255,255,255,63,15,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,255,255,255,255,255,225,255,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,17,34,35,36,17,37,38,39,40,41,42,43,44,17,45,46,47,16,16,48,16,16,16,16,16,16,16,49,50,51,16,52,53,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,54,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,55,17,17,17,17,56,17,57,58,59,60,61,62,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,63,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,64,65,17,66,67,68,69,70,71,72,73,16,16,16,74,75,76,77,78,16,16,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,17,17,17,82,83,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,84,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,85,16,16,16,16,86,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,87,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,88,89,90,91,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,92,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,254,255,255,7,254,255,255,7,0,0,0,0,0,4,32,4,255,255,127,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,195,255,3,0,31,80,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,223,60,64,215,255,255,251,255,255,255,255,255,255,255,255,255,191,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,254,255,255,255,127,2,254,255,255,255,255,0,0,0,0,0,255,191,182,0,255,255,255,7,7,0,0,0,255,7,255,255,255,255,255,255,255,254,255,195,255,255,255,255,255,255,255,255,255,255,255,255,239,31,254,225,255,159,0,0,255,255,255,255,255,255,0,224,255,255,255,255,255,255,255,255,255,255,255,255,3,0,255,255,255,255,255,7,48,4,255,255,255,252,255,31,0,0,255,255,255,1,0,0,0,0,0,0,0,0,253,31,0,0,0,0,0,0,240,3,255,127,255,255,255,255,255,255,255,239,255,223,225,255,207,255,254,254,238,159,249,255,255,253,197,227,159,89,128,176,207,255,3,0,238,135,249,255,255,253,109,195,135,25,2,94,192,255,63,0,238,191,251,255,255,253,237,227,191,27,1,0,207,255,0,0,238,159,249,255,255,253,237,227,159,25,192,176,207,255,2,0,236,199,61,214,24,199,255,195,199,29,129,0,192,255,0,0,238,223,253,255,255,253,239,227,223,29,96,3,207,255,0,0,236,223,253,255,255,253,239,227,223,29,96,64,207,255,6,0,236,223,253,255,255,255,255,231,223,93,128,0,207,255,0,252,236,255,127,252,255,255,251,47,127,128,95,255,0,0,12,0,254,255,255,255,255,127,255,7,63,32,255,3,0,0,0,0,150,37,240,254,174,236,255,59,95,32,255,243,0,0,0,0,1,0,0,0,255,3,0,0,255,254,255,255,255,31,254,255,3,255,255,254,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,249,255,3,255,255,231,193,255,255,127,64,255,51,255,255,255,255,191,32,255,255,255,255,255,247,255,255,255,255,255,255,255,255,255,61,127,61,255,255,255,255,255,61,255,255,255,255,61,127,61,255,127,255,255,255,255,255,255,255,61,255,255,255,255,255,255,255,255,135,0,0,0,0,255,255,0,0,255,255,255,255,255,255,255,255,255,255,31,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,159,255,255,254,255,255,7,255,255,255,255,255,255,255,255,255,199,1,0,255,223,15,0,255,255,15,0,255,255,15,0,255,223,13,0,255,255,255,255,255,255,207,255,255,1,128,16,255,3,0,0,0,0,255,3,255,255,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,7,255,255,255,255,255,255,255,255,63,0,255,255,255,31,255,15,255,1,192,255,255,255,255,63,31,0,255,255,255,255,255,15,255,255,255,3,255,3,0,0,0,0,255,255,255,15,255,255,255,255,255,255,255,127,254,255,31,0,255,3,255,3,128,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,239,255,239,15,255,3,0,0,0,0,255,255,255,255,255,243,255,255,255,255,255,255,191,255,3,0,255,255,255,255,255,255,63,0,255,227,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,222,111,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,63,63,255,255,255,255,63,63,255,170,255,255,255,63,255,255,255,255,255,255,223,95,220,31,207,15,255,31,220,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,128,0,0,255,31,0,0,0,0,0,0,0,0,0,0,0,0,132,252,47,62,80,189,255,243,224,67,0,0,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,255,255,255,255,255,255,3,0,0,255,255,255,255,255,127,255,255,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,120,12,0,255,255,255,255,191,32,255,255,255,255,255,255,255,128,0,0,255,255,127,0,127,127,127,127,127,127,127,127,255,255,255,255,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,254,3,62,31,254,255,255,255,255,255,255,255,255,255,127,224,254,255,255,255,255,255,255,255,255,255,255,247,224,255,255,255,255,63,254,255,255,255,255,255,255,255,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,63,255,31,255,255,255,15,0,0,255,255,255,255,255,127,240,143,255,255,255,128,255,255,255,255,255,255,255,255,255,255,0,0,0,0,128,255,252,255,255,255,255,255,255,255,255,255,255,255,255,121,15,0,255,7,0,0,0,0,0,0,0,0,0,255,187,247,255,255,255,0,0,0,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,15,0,255,3,0,0,252,8,255,255,255,255,255,7,255,255,255,255,7,0,255,255,255,31,255,255,255,255,255,255,247,255,0,128,255,3,0,0,0,0,255,255,255,255,255,255,127,0,255,63,255,3,255,255,127,4,255,255,255,255,255,255,255,127,5,0,0,56,255,255,60,0,126,126,126,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,7,255,3,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,127,248,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,127,0,248,224,255,253,127,95,219,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,248,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,255,255,255,255,255,255,255,255,252,255,255,255,255,255,255,0,0,0,0,0,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,255,3,254,255,255,7,254,255,255,7,192,255,255,255,255,255,255,255,255,255,255,127,252,252,252,28,0,0,0,0,255,239,255,255,127,255,255,183,255,63,255,63,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,31,255,255,255,255,255,255,1,0,0,0,0,0,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,63,255,255,255,255,15,255,62,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,3,0,0,0,0,0,0,0,0,0,0,63,253,255,255,255,255,191,145,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,63,0,255,255,255,3,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,192,0,0,0,0,0,0,0,0,111,240,239,254,255,255,15,0,0,0,0,0,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,255,63,0,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,192,255,0,0,252,255,255,255,255,255,255,1,0,0,255,255,255,1,255,3,255,255,255,255,255,255,199,255,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,30,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,3,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,31,0,255,255,255,255,255,127,0,0,248,255,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,255,255,255,223,100,222,255,235,239,255,255,255,255,255,255,255,191,231,223,223,255,255,255,123,95,252,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,255,255,253,255,255,247,255,255,255,247,255,255,223,255,255,255,223,255,255,127,255,255,255,127,255,255,255,253,255,255,255,253,255,255,247,207,255,255,255,255,255,255,239,255,255,255,150,254,247,10,132,234,150,170,150,247,247,94,255,251,255,15,238,251,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,73,0,49,1,83,0,127,1,48,1,105,0,120,1,255,0,129,1,83,2,130,1,131,1,132,1,133,1,134,1,84,2,135,1,136,1,137,1,86,2,138,1,87,2,139,1,140,1,142,1,221,1,143,1,89,2,144,1,91,2,145,1,146,1,147,1,96,2,148,1,99,2,150,1,105,2,151,1,104,2,152,1,153,1,156,1,111,2,157,1,114,2,159,1,117,2,166,1,128,2,167,1,168,1,169,1,131,2,172,1,173,1,174,1,136,2,175,1,176,1,177,1,138,2,178,1,139,2,183,1,146,2,184,1,185,1,188,1,189,1,196,1,198,1,196,1,197,1,197,1,198,1,199,1,201,1,199,1,200,1,200,1,201,1,202,1,204,1,202,1,203,1,203,1,204,1,241,1,243,1,241,1,242,1,242,1,243,1,244,1,245,1,246,1,149,1,247,1,191,1,32,2,158,1,134,3,172,3,136,3,173,3,137,3,174,3,138,3,175,3,140,3,204,3,142,3,205,3,143,3,206,3,153,3,69,3,153,3,190,31,163,3,194,3,247,3,248,3,250,3,251,3,96,30,155,30,223,0,223,0,158,30,223,0,89,31,81,31,91,31,83,31,93,31,85,31,95,31,87,31,188,31,179,31,204,31,195,31,236,31,229,31,252,31,243,31,58,2,101,44,59,2,60,2,61,2,154,1,62,2,102,44,65,2,66,2,67,2,128,1,68,2,137,2,69,2,140,2,244,3,184,3,249,3,242,3,253,3,123,3,254,3,124,3,255,3,125,3,192,4,207,4,38,33,201,3,42,33,107,0,43,33,229,0,50,33,78,33,131,33,132,33,96,44,97,44,98,44,107,2,99,44,125,29,100,44,125,2,109,44,81,2,110,44,113,2,111,44,80,2,112,44,82,2,114,44,115,44,117,44,118,44,126,44,63,2,127,44,64,2,242,44,243,44,125,167,121,29,139,167,140,167,141,167,101,2,170,167,102,2,199,16,39,45,205,16,45,45,118,3,119,3,156,3,181,0,146,3,208,3,152,3,209,3,166,3,213,3,160,3,214,3,154,3,240,3,161,3,241,3,149,3,245,3,207,3,215,3,0,0,0,0,0,0,0,0,32,0,0,0,9,0,0,0,10,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,133,0,0,0,0,32,0,0,1,32,0,0,2,32,0,0,3,32,0,0,4,32,0,0,5,32,0,0,6,32,0,0,8,32,0,0,9,32,0,0,10,32,0,0,40,32,0,0,41,32,0,0,95,32,0,0,0,48,0,0,0,0,0,0,65,0,32,26,192,0,32,31,0,1,1,47,50,1,1,5,57,1,1,15,74,1,1,45,121,1,1,5,112,3,1,3,145,3,32,17,163,3,32,9,0,4,80,16,16,4,32,32,96,4,1,33,138,4,1,53,193,4,1,13,208,4,1,63,20,5,1,19,49,5,48,38,160,1,1,5,179,1,1,3,205,1,1,15,222,1,1,17,248,1,1,39,34,2,1,17,216,3,1,23,0,30,1,149,160,30,1,95,8,31,248,8,24,31,248,6,40,31,248,8,56,31,248,8,72,31,248,6,104,31,248,8,136,31,248,8,152,31,248,8,168,31,248,8,184,31,248,2,186,31,182,2,200,31,170,4,216,31,248,2,218,31,156,2,232,31,248,2,234,31,144,2,248,31,128,2,250,31,130,2,70,2,1,9,16,5,1,3,96,33,16,16,0,44,48,47,103,44,1,5,128,44,1,99,235,44,1,3,64,166,1,45,128,166,1,23,34,167,1,13,50,167,1,61,121,167,1,3,126,167,1,9,144,167,1,3,160,167,1,9,33,255,32,26,0,0,0,0,78,111,32,101,114,114,111,114,0,0,0,0,0,0,0,0,115,108,97,115,104,95,117,112,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,109,117,115,105,99,0,0,0,74,117,108,0,0,0,0,0,97,112,112,0,0,0,0,0,115,108,97,115,104,95,100,111,119,110,0,0,0,0,0,0,74,117,110,0,0,0,0,0,99,117,115,116,111,115,0,0,115,108,97,115,104,95,117,112,0,0,0,0,0,0,0,0,47,115,118,103,47,0,0,0,65,112,114,0,0,0,0,0,111,108,111,99,0,0,0,0,104,101,97,100,95,113,117,97,114,116,101,114,95,102,105,108,108,100,105,97,109,111,110,100,0,0,0,0,0,0,0,0,115,116,97,102,102,71,114,112,0,0,0,0,0,0,0,0,77,97,114,0,0,0,0,0,112,108,111,99,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,78,111,116,101,42,62,40,101,108,101,109,101,110,116,41,0,0,0,0,104,101,97,100,95,104,97,108,102,95,100,105,97,109,111,110,100,0,0,0,0,0,0,0,70,101,98,0,0,0,0,0,99,111,108,111,114,101,100,0,104,101,97,100,95,119,104,111,108,101,95,102,105,108,108,100,105,97,109,111,110,100,0,0,74,97,110,0,0,0,0,0,104,101,97,100,95,119,104,111,108,101,95,100,105,97,109,111,110,100,0,0,0,0,0,0,98,111,114,100,101,114,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,115,116,101,109,46,100,105,114,0,0,0,0,0,0,0,0,104,101,97,100,95,113,117,97,114,116,101,114,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,104,101,97,100,95,104,97,108,102,0,0,0,0,0,0,0,91,94,91,58,115,112,97,99,101,58,93,93,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,79,99,116,111,98,101,114,0,58,0,0,0,0,0,0,0,99,117,114,115,111,114,46,99,111,108,32,62,61,32,45,49,0,0,0,0,0,0,0,0,69,114,114,111,114,32,112,97,114,115,105,110,103,32,85,110,107,110,111,119,110,46,0,0,111,98,108,105,113,117,97,0,104,101,97,100,95,119,104,111,108,101,95,102,105,108,108,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,108,105,103,0,0,0,0,0,105,100,120,32,61,61,32,71,101,116,83,116,97,102,102,65,108,105,103,110,109,101,110,116,67,111,117,110,116,40,41,0,38,35,120,37,48,50,88,59,0,0,0,0,0,0,0,0,104,101,97,100,95,119,104,111,108,101,0,0,0,0,0,0,98,111,100,121,0,0,0,0,65,117,103,117,115,116,0,0,97,99,99,105,100,0,0,0,114,101,115,116,95,49,50,56,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,116,117,112,108,101,116,45,0,74,117,108,121,0,0,0,0,100,111,116,115,0,0,0,0,114,101,115,116,95,54,52,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,74,117,110,101,0,0,0,0,100,117,114,0,0,0,0,0,114,101,115,116,95,51,50,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,0,98,97,114,108,105,110,101,0,77,97,121,0,0,0,0,0,111,99,116,0,0,0,0,0,115,121,115,116,101,109,45,0,116,117,112,108,101,116,0,0,114,101,115,116,95,49,54,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,0,65,112,114,105,108,0,0,0,112,110,97,109,101,0,0,0,114,101,115,116,95,56,95,109,101,110,115,117,114,97,108,0,77,97,114,99,104,0,0,0,110,117,109,98,97,115,101,0,114,101,115,116,95,52,95,109,101,110,115,117,114,97,108,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,110,117,109,0,0,0,0,0,114,101,115,116,95,49,50,56,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,114,101,118,101,114,115,101,100,0,0,0,0,0,0,0,0,114,101,115,116,95,54,52,0,91,91,58,115,112,97,99,101,58,93,93,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,125,0,0,0,0,0,0,0,99,117,114,115,111,114,46,114,111,119,32,62,61,32,45,49,0,0,0,0,0,0,0,0,69,114,114,111,114,32,114,101,97,100,105,110,103,32,101,110,100,32,116,97,103,46,0,0,111,114,105,101,110,116,0,0,114,101,115,116,95,51,50,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,115,99,97,108,101,0,0,0,114,101,115,116,95,49,54,0,109,100,105,118,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,115,108,97,115,104,0,0,0,114,101,115,116,95,56,0,0,83,121,115,116,101,109,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,114,101,115,116,95,52,0,0,9,60,100,101,102,115,62,10,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,100,111,116,0,0,0,0,0,97,108,116,95,100,111,117,98,108,101,95,115,104,97,114,112,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,109,101,97,115,117,114,101,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,115,105,103,110,0,0,0,0,97,108,116,95,102,108,97,116,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,115,104,97,112,101,0,0,0,97,108,116,95,110,97,116,117,114,97,108,95,109,101,110,115,117,114,97,108,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,108,105,110,101,0,0,0,0,97,108,116,95,115,104,97,114,112,95,109,101,110,115,117,114,97,108,0,0,0,0,0,0,105,110,112,117,116,70,111,114,109,97,116,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,100,97,116,97,0,0,0,0,97,108,116,95,100,111,117,98,108,101,95,115,104,97,114,112,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,117,108,120,0,0,0,0,0,97,108,116,95,102,108,97,116,0,0,0,0,0,0,0,0,115,116,97,102,102,45,0,0,91,94,91,58,97,108,110,117,109,58,93,95,93,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,123,0,0,0,0,0,0,0,112,0,0,0,0,0,0,0,69,114,114,111,114,58,32,101,109,112,116,121,32,116,97,103,46,0,0,0,0,0,0,0,116,117,112,108,101,116,0,0,97,108,116,95,110,97,116,117,114,97,108,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,114,101,115,116,0,0,0,0,97,108,116,95,115,104,97,114,112,0,0,0,0,0,0,0,116,121,112,101,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,110,111,116,101,0,0,0,0,109,101,116,101,114,95,115,121,109,98,95,51,95,99,117,116,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,109,117,108,116,105,82,101,115,116,0,0,0,0,0,0,0,109,101,116,101,114,95,115,121,109,98,95,50,95,99,117,116,0,0,0,0,0,0,0,0,32,118,101,114,115,105,111,110,61,34,49,46,49,34,32,120,109,108,110,115,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,115,118,103,34,32,32,120,109,108,110,115,58,120,108,105,110,107,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,120,108,105,110,107,34,62,10,0,115,99,111,114,101,100,101,102,45,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,109,101,110,115,117,114,0,0,109,101,116,101,114,95,115,121,109,98,95,99,117,116,0,0,114,101,115,116,45,0,0,0,115,99,111,114,101,68,101,102,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,99,108,101,102,0,0,0,0,100,111,99,0,0,0,0,0,109,101,116,101,114,95,115,121,109,98,95,99,111,109,109,111,110,0,0,0,0,0,0,0,37,105,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,98,101,97,109,0,0,0,0,99,108,101,102,95,71,95,99,104,105,97,118,101,116,116,101,0,0,0,0,0,0,0,0,77,105,115,115,105,110,103,32,99,111,109,112,97,114,105,115,111,110,32,111,112,101,114,97,116,111,114,32,102,111,114,32,39,37,115,39,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,99,108,101,102,95,67,95,109,101,110,115,117,114,97,108,0,67,97,110,32,110,111,116,32,112,97,114,115,101,32,74,83,79,78,32,115,116,114,105,110,103,46,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,100,99,0,0,0,0,0,0,97,108,116,116,105,109,101,115,105,103,0,0,0,0,0,0,99,108,101,102,95,70,95,109,101,110,115,117,114,97,108,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,77,101,97,115,117,114,101,0,99,108,101,102,95,71,95,109,101,110,115,117,114,97,108,0,91,91,58,97,108,110,117,109,58,93,95,93,0,0,0,0,110,117,108,108,0,0,0,0,46,46,47,47,116,105,110,121,120,109,108,47,116,105,110,121,120,109,108,112,97,114,115,101,114,46,99,112,112,0,0,0,69,114,114,111,114,32,114,101,97,100,105,110,103,32,65,116,116,114,105,98,117,116,101,115,46,0,0,0,0,0,0,0,100,99,0,0,0,0,0,0,99,108,101,102,95,71,56,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,109,95,108,97,121,101,114,0,47,0,0,0,0,0,0,0,46,46,47,47,116,105,110,121,120,109,108,47,116,105,110,121,115,116,114,46,104,0,0,0,99,108,101,102,95,67,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,112,97,103,101,115,0,0,0,108,97,121,101,114,0,0,0,105,110,100,101,120,32,60,32,108,101,110,103,116,104,40,41,0,0,0,0,0,0,0,0,84,105,101,0,0,0,0,0,99,108,101,102,95,70,0,0,108,97,121,101,114,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,109,101,97,115,117,114,101,0,99,108,101,102,95,71,0,0,60,115,118,103,32,119,105,100,116,104,61,34,37,100,112,120,34,32,104,101,105,103,104,116,61,34,37,100,112,120,34,0,83,116,97,102,102,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,109,95,115,116,97,102,102,0,102,101,114,109,97,116,97,95,100,111,119,110,0,0,0,0,115,116,97,102,102,0,0,0,112,97,103,101,0,0,0,0,109,95,100,111,99,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,84,114,97,110,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,102,101,114,109,97,116,97,95,117,112,0,0,0,0,0,0,80,77,0,0,0,0,0,0,108,97,98,101,108,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,57,0,0,0,0,0,0,0,0,33,109,95,112,97,114,101,110,116,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,115,116,97,102,102,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,56].concat([0,0,0,0,0,0,0,0,112,97,101,0,0,0,0,0,110,0,0,0,0,0,0,0,116,105,109,101,115,105,103,0,112,97,103,101,45,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,55,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,115,116,97,102,102,68,101,102,0,0,0,0,0,0,0,0,33,70,105,110,100,40,32,97,100,100,77,101,45,62,78,97,109,101,40,41,32,41,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,54,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,110,111,119,0,0,0,0,0,69,114,114,111,114,32,114,101,97,100,105,110,103,32,69,108,101,109,101,110,116,32,118,97,108,117,101,46,0,0,0,0,115,101,110,116,105,110,101,108,46,112,114,101,118,32,61,61,32,38,115,101,110,116,105,110,101,108,0,0,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,53,0,0,0,0,0,0,0,0,98,97,114,116,104,114,117,0,46,0,0,0,0,0,0,0,115,101,110,116,105,110,101,108,46,110,101,120,116,32,61,61,32,38,115,101,110,116,105,110,101,108,0,0,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,52,0,0,0,0,0,0,0,0,115,121,109,98,111,108,0,0,60,37,115,62,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,51,0,0,0,0,0,0,0,0,74,117,115,116,105,102,105,99,97,116,105,111,110,32,115,116,111,112,32,98,101,99,97,117,115,101,32,111,102,32,97,32,114,97,116,105,111,32,115,109,97,108,108,101,114,32,116,104,101,32,48,46,56,0,0,0,115,116,97,102,102,71,114,112,0,0,0,0,0,0,0,0,63,62,0,0,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,50,0,0,0,0,0,0,0,0,60,63,120,109,108,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,101,110,99,111,100,105,110,103,61,34,85,84,70,45,56,34,32,115,116,97,110,100,97,108,111,110,101,61,34,110,111,34,63,62,10,0,107,101,121,46,115,105,103,0,115,116,97,110,100,97,108,111,110,101,61,34,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,49,0,0,0,0,0,0,0,0,108,97,121,101,114,0,0,0,109,95,100,111,99,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,82,97,119,0,99,108,101,102,46,115,104,97,112,101,0,0,0,0,0,0,115,116,97,110,100,97,108,111,110,101,61,34,37,115,34,32,0,0,0,0,0,0,0,0,109,95,100,111,99,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,84,114,97,110,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,111,98,108,105,113,117,101,95,102,105,103,117,114,101,95,48,0,0,0,0,0,0,0,0,99,108,101,102,46,108,105,110,101,0,0,0,0,0,0,0,101,110,99,111,100,105,110,103,61,34,0,0,0,0,0,0,102,105,103,117,114,101,95,57,0,0,0,0,0,0,0,0,37,48,49,54,100,0,0,0,9,0,0,0,0,0,0,0,115,99,111,114,101,68,101,102,0,0,0,0,0,0,0,0,101,110,99,111,100,105,110,103,61,34,37,115,34,32,0,0,102,105,103,117,114,101,95,56,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,69,114,114,111,114,32,105,109,112,111,114,116,105,110,103,32,100,97,116,97,0,0,0,0,107,101,121,115,105,103,0,0,109,95,115,121,115,116,101,109,0,0,0,0,0,0,0,0,34,32,0,0,0,0,0,0,102,105,103,117,114,101,95,55,0,0,0,0,0,0,0,0,110,111,116,101,45,0,0,0,117,108,121,0,0,0,0,0,118,101,114,115,105,111,110,61,34,0,0,0,0,0,0,0,102,105,103,117,114,101,95,54,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,109,117,108,116,105,114,101,115,116,45,0,0,0,0,0,0,115,121,115,116,101,109,46,114,105,103,104,116,109,97,114,0,116,114,117,101,0,0,0,0,38,97,112,111,115,59,0,0,70,97,105,108,101,100,32,116,111,32,114,101,97,100,32,69,108,101,109,101,110,116,32,110,97,109,101,0,0,0,0,0,105,115,60,83,116,114,105,110,103,62,40,41,0,0,0,0,118,101,114,115,105,111,110,61,34,37,115,34,32,0,0,0,102,105,103,117,114,101,95,53,0,0,0,0,0,0,0,0,109,101,110,115,117,114,45,0,115,121,115,116,101,109,46,108,101,102,116,109,97,114,0,0,105,115,60,78,117,109,98,101,114,62,40,41,0,0,0,0,60,63,120,109,108,32,0,0,102,105,103,117,114,101,95,52,0,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,115,121,115,116,101,109,0,0,110,111,100,101,45,62,71,101,116,68,111,99,117,109,101,110,116,40,41,32,61,61,32,48,32,124,124,32,110,111,100,101,45,62,71,101,116,68,111,99,117,109,101,110,116,40,41,32,61,61,32,116,104,105,115,45,62,71,101,116,68,111,99,117,109,101,110,116,40,41,0,0,105,115,60,66,111,111,108,101,97,110,62,40,41,0,0,0,84,117,112,108,101,116,0,0,102,105,103,117,114,101,95,51,0,0,0,0,0,0,0,0,33,109,95,115,101,99,111,110,100,0,0,0,0,0,0,0,46,46,47,47,115,114,99,47,115,121,115,116,101,109,46,99,112,112,0,0,0,0,0,0,83,121,109,98,111,108,0,0,46,46,47,47,115,114,99,47,105,111,112,97,101,46,99,112,112,0,0,0,0,0,0,0,109,95,112,97,103,101,0,0,104,97,115,60,84,62,40,107,101,121,41,0,0,0,0,0,102,105,103,117,114,101,95,50,0,0,0,0,0,0,0,0,109,95,110,101,115,116,101,100,95,111,98,106,101,99,116,115,46,115,105,122,101,40,41,32,62,32,48,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,60,47,115,118,103,62,10,0,46,47,108,105,98,47,106,115,111,110,120,120,47,106,115,111,110,120,120,46,104,0,0,0,60,33,91,67,68,65,84,65,91,37,115,93,93,62,10,0,102,105,103,117,114,101,95,49,0,0,0,0,0,0,0,0,99,117,114,114,101,110,116,66,101,97,109,0,0,0,0,0,115,121,115,116,101,109,0,0,94,91,94,65,66,67,68,69,70,71,93,42,92,43,0,0,108,101,45,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,115,117,114,102,97,99,101,0,48,59,49,50,59,55,48,59,57,51,59,57,48,59,48,59,71,97,114,97,109,111,110,100,59,48,0,0,0,0,0,0,60,33,45,45,37,115,45,45,62,0,0,0,0,0,0,0,109,95,100,111,99,45,62,71,101,116,84,121,112,101,40,41,32,61,61,32,82,97,119,0,102,105,103,117,114,101,95,48,0,0,0,0,0,0,0,0,94,91,94,65,66,67,68,69,70,71,93,42,116,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,108,97,121,101,114,45,0,0,112,97,103,101,46,114,105,103,104,116,109,97,114,0,0,0,47,42,45,32,77,117,115,83,86,71,70,105,108,101,68,67,58,58,68,114,97,119,82,111,116,97,116,101,100,84,101,120,116,32,45,32,66,97,99,107,103,111,117,110,100,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,42,47,0,0,0,0,0,0,0,0,94,91,94,125,47,93,42,91,65,66,67,68,69,70,71,45,93,46,42,0,0,0,0,0,107,115,105,103,45,0,0,0,78,111,32,112,114,101,118,105,111,117,115,32,110,111,116,101,32,111,114,32,112,114,101,118,105,111,117,115,32,110,111,116,101,32,119,105,116,104,111,117,116,32,105,110,116,105,97,108,32,111,114,32,109,101,100,105,97,110,32,97,116,116,114,105,98,117,116,101,32,102,111,114,32,110,111,116,101,32,39,37,115,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,112,97,103,101,46,108,101,102,116,109,97,114,0,0,0,0,32,60,114,101,99,116,32,120,61,34,37,100,34,32,121,61,34,37,100,34,32,119,105,100,116,104,61,34,37,100,34,32,104,101,105,103,104,116,61,34,37,100,34,32,114,120,61,34,37,46,50,103,34,32,47,62,0,0,0,0,0,0,0,0,46,46,47,47,115,114,99,47,108,97,121,101,114,101,108,101,109,101,110,116,46,99,112,112,0,0,0,0,0,0,0,0,115,99,111,114,101,68,101,102,32,97,110,100,47,111,114,32,115,116,97,102,102,68,101,102,32,110,111,116,32,102,111,117,110,100,0,0,0,0,0,0,61,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,107,101,121,0,0,0,0,0,112,97,103,101,46,104,101,105,103,104,116,0,0,0,0,0,34,32,47,62,32,0,0,0,61,124,124,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,109,95,109,101,97,115,117,114,101,65,108,105,103,110,101,114,46,71,101,116,82,105,103,104,116,65,108,105,103,110,109,101,110,116,40,41,0,0,0,0,37,100,44,37,100,32,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,12,0,0,0,0,0,0,0,61,33,124,58,0,0,0,0,91,77,73,83,83,73,78,71,93,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,115,116,97,110,100,97,108,111,110,101,0,0,0,0,0,0,34,0,0,0,0,0,0,0,38,113,117,111,116,59,0,0,69,114,114,111,114,32,112,97,114,115,105,110,103,32,69,108,101,109,101,110,116,46,0,0,112,97,103,101,46,119,105,100,116,104,0,0,0,0,0,0,61,39,0,0,0,0,0,0,34,32,112,111,105,110,116,115,61,34,0,0,0,0,0,0,61,58,124,33,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,120,109,108,58,105,100,0,0,101,110,99,111,100,105,110,103,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,102,111,114,109,97,116,0,0,47,117,115,114,47,108,111,99,97,108,47,115,104,97,114,101,47,97,114,117,115,112,105,120,0,0,0,0,0,0,0,0,37,115,61,39,37,115,39,0,102,105,108,108,45,114,117,108,101,58,110,111,110,122,101,114,111,59,32,0,0,0,0,0,84,114,117,110,99,97,116,101,100,32,102,105,108,101,32,111,114,32,101,110,100,105,110,103,32,116,97,103,32,109,105,115,115,105,110,103,0,0,0,0,116,105,101,0,0,0,0,0,61,58,124,124,58,0,0,0,112,97,103,101,0,0,0,0,118,101,114,115,105,111,110,0,46,46,47,47,116,105,110,121,120,109,108,47,116,105,110,121,120,109,108,46,99,112,112,0,99,108,101,102,45,0,0,0,34,0,0,0,0,0,0,0,60,112,111,108,121,103,111,110,32,115,116,121,108,101,61,34,0,0,0,0,0,0,0,0,46,46,47,47,115,114,99,47,116,105,101,46,99,112,112,0,109,95,115,121,115,116,101,109,65,108,105,103,110,101,114,46,71,101,116,66,111,116,116,111,109,65,108,105,103,110,109,101,110,116,40,41,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,84,105,101,42,62,40,101,108,101,109,101,110,116,41,0,0,0,0,0,94,47,47,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,61,34,0,0,0,0,0,0,60,112,97,116,104,32,100,61,34,77,37,100,32,37,100,32,76,37,100,32,37,100,34,32,115,116,121,108,101,61,34,37,115,34,32,47,62,0,0,0,107,101,121,115,105,103,0,0,37,112,0,0,0,0,0,0,94,47,47,58,0,0,0,0,102,97,108,115,101,0,0,0,46,46,47,47,115,114,99,47,115,116,97,102,102,46,99,112,112,0,0,0,0,0,0,0,93,93,62,0,0,0,0,0,98,101,97,109,45,0,0,0,37,115,61,34,37,115,34,0,60,112,97,116,104,32,100,61,34,77,37,100,32,37,100,32,65,37,100,32,37,100,32,48,46,48,32,37,100,32,37,100,32,32,37,100,32,37,100,32,34,32,47,62,0,0,0,0,46,46,47,47,115,114,99,47,115,99,111,114,101,100,101,102,46,99,112,112,0,0,0,0,100,111,116,0,0,0,0,0,46,46,47,47,115,114,99,47,118,105,101,119,95,116,117,112,108,101,116,46,99,112,112,0,112,97,103,101,0,0,0,0,94,58,47,47,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,67,101,110,116,101,114,105,110,103,32,115,116,114,105,110,103,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,119,105,116,104,32,68,101,118,105,99,101,67,111,110,116,101,120,116,0,0,0,0,0,34,0,0,0,0,0,0,0,115,116,97,102,102,0,0,0,60,101,108,108,105,112,115,101,32,99,120,61,34,37,100,34,32,99,121,61,34,37,100,34,32,114,120,61,34,37,100,34,32,114,121,61,34,37,100,34,32,47,62,0,0,0,0,0,99,117,115,116,111,115,0,0,73,109,112,111,115,115,105,98,108,101,32,116,111,32,108,111,97,100,32,102,111,110,116,32,102,111,114,32,116,104,101,32,108,121,114,105,99,115,0,0,94,58,47,47,58,0,0,0,46,46,47,47,115,114,99,47,112,97,103,101,46,99,112,112,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,39,0,0,0,0,0,0,0,48,59,49,51,59,55,48,59,57,48,59,57,48,59,48,59,76,101,105,112,122,105,103,32,52,46,55,59,51,51,0,0,113,32,60,61,32,112,0,0,60,112,97,116,104,32,100,61,34,77,37,100,44,37,100,32,67,37,100,44,37,100,32,37,100,44,37,100,32,37,100,44,37,100,32,67,37,100,44,37,100,32,37,100,44,37,100,32,37,100,44,37,100,34,32,115,116,121,108,101,61,34,102,105,108,108,58,35,48,48,48,59,32,102,105,108,108,45,111,112,97,99,105,116,121,58,49,46,48,59,32,115,116,114,111,107,101,58,35,48,48,48,48,48,48,59,32,115,116,114,111,107,101,45,108,105,110,101,99,97,112,58,114,111,117,110,100,59,32,115,116,114,111,107,101,45,108,105,110,101,106,111,105,110,58,114,111,117,110,100,59,32,115,116,114,111,107,101,45,111,112,97,99,105,116,121,58,49,46,48,59,32,115,116,114,111,107,101,45,119,105,100,116,104,58,48,34,32,47,62,0,0,97,99,99,105,100,0,0,0,46,46,47,47,115,114,99,47,111,98,106,101,99,116,46,99,112,112,0,0,0,0,0,0,37,100,0,0,0,0,0,0,84,101,114,109,105,110,97,108,32,116,105,101,32,97,116,116,114,105,98,117,116,101,32,97,108,114,101,97,100,121,32,115,101,116,32,102,111,114,32,110,111,116,101,32,39,37,115,0,77,117,108,116,105,82,101,115,116,0,0,0,0,0,0,0,77,101,110,115,117,114,0,0,45,45,62,0,0,0,0,0,58,32,0,0,0,0,0,0,113,32,60,61,32,40,98,117,102,43,108,101,110,103,116,104,41,0,0,0,0,0,0,0,115,116,114,111,107,101,45,111,112,97,99,105,116,121,58,48,46,48,59,32,0,0,0,0,102,97,108,115,101,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,83,121,109,98,111,108,42,62,40,101,108,101,109,101,110,116,41,0,0,46,46,47,47,115,114,99,47,108,97,121,101,114,46,99,112,112,0,0,0,0,0,0,0,75,101,121,83,105,103,110,97,116,117,114,101,0,0,0,0,67,108,101,102,32,105,115,32,63,63,0,0,0,0,0,0,60,47,0,0,0,0,0,0,99,108,101,102,0,0,0,0,80,97,103,101,32,72,101,105,103,104,116,32,111,117,116,32,111,102,32,98,111,117,110,100,115,46,0,0,0,0,0,0,112,32,60,32,40,98,117,102,43,108,101,110,103,116,104,41,0,0,0,0,0,0,0,0,115,116,114,111,107,101,45,111,112,97,99,105,116,121,58,49,46,48,59,32,0,0,0,0,37,117,0,0,0,0,0,0,80,97,103,101,32,119,105,100,116,104,32,111,117,116,32,111,102,32,98,111,117,110,100,115,0,0,0,0,0,0,0,0,33,109,95,111,98,106,101,99,116,115,46,101,109,112,116,121,40,41,0,0,0,0,0,0,87,97,114,110,105,110,103,58,32,117,110,107,110,111,119,110,32,116,105,109,101,32,115,105,103,110,97,116,117,114,101,58,32,0,0,0,0,0,0,0,60,33,91,67,68,65,84,65,91,0,0,0,0,0,0,0,109,95,111,98,106,101,99,116,115,46,98,97,99,107,40,41,32,61,61,32,111,98,106,101,99,116,0,0,0,0,0,0,114,98,0,0,0,0,0,0,46,46,47,47,115,114,99,47,109,101,97,115,117,114,101,46,99,112,112,0,0,0,0,0,37,100,0,0,0,0,0,0,66,97,114,108,105,110,101,0,100,99,0,0,0,0,0,0,13,0,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,99,51,47,50,0,0,0,0,85,110,107,110,111,119,110,32,115,116,97,102,102,71,114,112,32,64,115,121,109,98,111,108,32,39,37,115,39,0,0,0,85,110,107,110,111,119,110,32,98,97,114,108,105,110,101,32,116,121,112,101,32,39,37,115,39,0,0,0,0,0,0,0,60,33,0,0,0,0,0,0,108,105,98,47,106,115,111,110,120,120,47,106,115,111,110,120,120,46,99,99,0,0,0,0,38,103,116,59,0,0,0,0,70,97,105,108,101,100,32,116,111,32,111,112,101,110,32,102,105,108,101,0,0,0,0,0,114,112,116,98,111,116,104,0,83,99,97,108,101,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,117,115,101,32,49,48,32,40,100,101,102,97,117,108,116,41,46,0,0,114,112,116,115,116,97,114,116,0,0,0,0,0,0,0,0,114,112,116,101,110,100,0,0,115,116,114,111,107,101,45,119,105,100,116,104,58,0,0,0,100,98,108,0,0,0,0,0,101,110,100,0,0,0,0,0,109,101,110,115,117,114,0,0,115,105,103,108,101,0,0,0,85,110,107,110,111,119,110,32,107,101,121,115,105,103,32,39,37,115,39,0,0,0,0,0,99,51,0,0,0,0,0,0,85,110,107,110,111,119,110,32,108,97,121,111,117,116,32,116,121,112,101,32,39,37,115,39,0,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,109,101,110,115,117,114,32,115,105,103,110,32,39,37,115,39,0,0,0,0,0,0,0,0,60,33,45,45,0,0,0,0,85,110,107,110,111,119,110,32,99,108,101,102,32,115,104,97,112,101,32,39,37,115,39,32,108,105,110,101,32,39,37,115,39,0,0,0,0,0,0,0,67,53,0,0,0,0,0,0,66,111,114,100,101,114,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,117,115,101,32,49,48,32,40,100,101,102,97,117,108,116,41,46,0,60,47,37,115,62,0,0,0,67,52,0,0,0,0,0,0,67,51,0,0,0,0,0,0,67,50,0,0,0,0,0,0,67,49,0,0,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,77,101,110,115,117,114,42,62,40,101,108,101,109,101,110,116,41,0,0,70,51,0,0,0,0,0,0,70,52,0,0,0,0,0,0,99,47,0,0,0,0,0,0,70,53,0,0,0,0,0,0,71,49,0,0,0,0,0,0,60,63,120,109,108,0,0,0,71,50,0,0,0,0,0,0,110,111,100,101,45,62,112,97,114,101,110,116,32,61,61,32,48,32,124,124,32,110,111,100,101,45,62,112,97,114,101,110,116,32,61,61,32,116,104,105,115,0,0,0,0,0,0,0,85,110,107,110,111,119,110,32,97,99,99,105,100,32,39,37,115,39,0,0,0,0,0,0,73,110,112,117,116,70,111,114,109,97,116,32,105,115,32,105,110,118,97,108,105,100,58,32,37,115,10,0,0,0,0,0,85,110,107,110,111,119,32,112,110,97,109,101,32,39,37,115,39,0,0,0,0,0,0,0,115,98,0,0,0,0,0,0,102,105,108,108,45,111,112,97,99,105,116,121,58,48,46,48,59,32,0,0,0,0,0,0,33,109,95,102,105,114,115,116,0,0,0,0,0,0,0,0,112,98,0,0,0,0,0,0,115,101,99,116,105,111,110,0,115,121,109,98,45,0,0,0,115,99,111,114,101,0,0,0,109,95,99,117,114,114,101,110,116,76,97,121,101,114,0,0,99,0,0,0,0,0,0,0,109,95,108,97,121,101,114,65,112,112,0,0,0,0,0,0,33,109,95,108,97,121,101,114,82,100,103,0,0,0,0,0,109,101,105,72,101,97,100,0,101,114,114,32,62,32,48,32,38,38,32,101,114,114,32,60,32,84,73,88,77,76,95,69,82,82,79,82,95,83,84,82,73,78,71,95,67,79,85,78,84,0,0,0,0,0,0,0,84,117,112,108,101,116,32,101,108,101,109,101,110,116,32,119,105,116,104,32,111,110,108,121,32,111,110,101,32,110,111,116,101,0,0,0,0,0,0,0,33,109,95,116,117,112,108,101,116,0,0,0,0,0,0,0,100,97,114,109,115,0,0,0,32,47,62,0,0,0,0,0,73,110,105,116,105,97,108,32,116,105,101,32,99,111,117,108,100,32,110,111,116,32,98,101,32,102,111,117,110,100,0,0,116,0,0,0,0,0,0,0,102,105,108,108,45,111,112,97,99,105,116,121,58,49,46,48,59,32,0,0,0,0,0,0,109,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,67,108,101,102,42,62,40,101,108,101,109,101,110,116,41,0,0,0,0,116,105,101,0,0,0,0,0,66,101,97,109,32,101,108,101,109,101,110,116,32,119,105,116,104,32,111,110,108,121,32,111,110,101,32,110,111,116,101,0,47,0,0,0,0,0,0,0,33,109,95,98,101,97,109,0,47,42,45,32,83,118,103,68,101,118,105,99,101,67,111,110,116,101,120,116,58,58,70,108,117,115,104,32,45,32,85,110,99,108,111,115,101,100,32,103,114,97,112,104,105,99,32,42,47,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,69,108,101,109,101,110,116,32,37,115,32,105,103,110,111,114,101,100,0,0,0,0,0,0,97,108,105,103,110,109,101,110,116,0,0,0,0,0,0,0,98,97,114,76,105,110,101,0,85,84,70,56,0,0,0,0,46,46,47,47,115,114,99,47,105,111,109,101,105,46,99,112,112,0,0,0,0,0,0,0,78,111,32,64,110,32,111,110,32,108,97,121,101,114,0,0,109,101,105,0,0,0,0,0,78,111,32,64,110,32,111,110,32,115,116,97,102,102,0,0,33,109,95,108,97,121,101,114,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,109,95,99,104,105,108,100,114,101,110,46,101,109,112,116,121,40,41,0,0,0,0,0,0,114,105,103,104,116,0,0,0,46,46,47,47,115,114,99,47,105,111,46,99,112,112,0,0,109,95,109,101,97,115,117,114,101,0,0,0,0,0,0,0,98,97,114,108,105,110,101,0,40,115,105,122,101,111,102,40,98,117,102,41,32,45,32,49,41,32,62,32,108,101,110,0,99,108,101,102,46,100,105,115,0,0,0,0,0,0,0,0,78,111,32,64,110,32,111,110,32,115,116,97,102,102,68,101,102,0,0,0,0,0,0,0,46,46,47,47,115,114,99,47,118,105,101,119,95,112,97,103,101,46,99,112,112,0,0,0,94,91,48,45,57,93,42,36,0,0,0,0,0,0,0,0,109,95,115,116,97,102,102,68,101,102,0,0,0,0,0,0,118,101,99,116,111,114,0,0,33,109,95,115,116,97,102,102,68,101,102,0,0,0,0,0,85,84,70,45,56,0,0,0,46,46,47,47,115,114,99,47,118,105,101,119,95,103,114,97,112,104,46,99,112,112,0,0,33,109,95,115,116,97,102,102,71,114,112,115,46,101,109,112,116,121,40,41,0,0,0,0,109,95,115,116,97,102,102,71,114,112,115,46,101,109,112,116,121,40,41,0,0,0,0,0,115,104,111,119,66,111,117,110,100,105,110,103,66,111,120,101,115,0,0,0,0,0,0,0,60,37,115,0,0,0,0,0,109,95,115,99,111,114,101,68,101,102,0,0,0,0,0,0,46,46,47,47,115,114,99,47,118,105,101,119,95,101,108,101,109,101,110,116,46,99,112,112,0,0,0,0,0,0,0,0,33,109,95,115,116,97,102,102,0,0,0,0,0,0,0,0,102,105,108,108,58,35,0,0,33,109,95,109,101,97,115,117,114,101,0,0,0,0,0,0,46,46,47,47,115,114,99,47,118,105,101,119,46,99,112,112,0,0,0,0,0,0,0,0,112,97,103,101,46,116,111,112,109,97,114,0,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,66,97,114,108,105,110,101,42,62,40,101,108,101,109,101,110,116,41,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,84,101,114,109,105,110,97,108,32,116,105,101,32,102,111,114,32,110,111,116,101,32,39,37,115,39,32,99,111,117,108,100,32,110,111,116,32,98,101,32,109,97,116,99,104,101,100,0,73,109,112,111,115,115,105,98,108,101,32,116,111,32,108,111,97,100,32,102,111,110,116,32,39,76,101,105,112,122,105,103,39,0,0,0,0,0,0,0,110,111,74,117,115,116,105,102,105,99,97,116,105,111,110,0,94,91,48,45,57,93,42,47,91,48,45,57,93,42,36,0,102,97,108,115,101,0,0,0,98,114,97,99,107,101,116,0,37,46,48,76,102,0,0,0,98,114,97,99,101,0,0,0,101,110,99,0,0,0,0,0,69,114,114,111,114,32,119,104,101,110,32,84,105,88,109,108,68,111,99,117,109,101,110,116,32,97,100,100,101,100,32,116,111,32,100,111,99,117,109,101,110,116,44,32,98,101,99,97,117,115,101,32,84,105,88,109,108,68,111,99,117,109,101,110,116,32,99,97,110,32,111,110,108,121,32,98,101,32,97,116,32,116,104,101,32,114,111,111,116,46,0,0,0,0,0,0,98,108,105,110,101,45,0,0,32,32,32,32,0,0,0,0,48,0,0,0,0,0,0,0,60,103,32,99,108,97,115,115,61,34,112,97,103,101,34,32,116,114,97,110,115,102,111,114,109,61,34,116,114,97,110,115,108,97,116,101,40,37,100,44,32,37,100,41,32,32,115,99,97,108,101,40,37,102,44,32,37,102,41,34,62,0,0,0,116,114,97,110,115,99,114,105,112,116,105,111,110,0,0,0,115,116,97,102,102,45,62,109,95,112,97,114,101,110,116,0,10,0,0,0,0,0,0,0,114,101,110,100,101,114,105,110,103,0,0,0,0,0,0,0,114,97,119,0,0,0,0,0,97,100,106,117,115,116,80,97,103,101,72,101,105,103,104,116,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,87,97,114,110,105,110,103,58,32,102,101,114,109,97,116,97,32,119,105,116,104,105,110,32,97,32,116,117,112,108,101,116,46,32,87,111,110,39,116,32,98,101,32,104,97,110,100,108,101,100,32,99,111,114,114,101,99,116,108,121,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,73,110,105,116,105,97,108,32,116,105,101,32,97,116,116,114,105,98,117,116,101,32,97,108,114,101,97,100,121,32,115,101,116,32,102,111,114,32,110,111,116,101,32,39,37,115,0,0,49,50,56,0,0,0,0,0,48,0,0,0,0,0,0,0,69,114,114,111,114,32,112,97,114,115,105,110,103,32,67,68,65,84,65,46,0,0,0,0,37,115,0,0,0,0,0,0,54,52,0,0,0,0,0,0,51,50,0,0,0,0,0,0,99,102,105,108,101,0,0,0,49,54,0,0,0,0,0,0,56,0,0,0,0,0,0,0,60,103,32,99,108,97,115,115,61,34,37,115,34,32,105,100,61,34,37,115,34,32,115,116,121,108,101,61,34,37,115,32,37,115,32,37,115,32,37,115,34,62,0,0,0,0,0,0,98,114,101,118,101,0,0,0,115,116,97,102,102,0,0,0,77,105,115,115,105,110,103,32,37,115,0,0,0,0,0,0,108,111,110,103,0,0,0,0,109,117,108,116,105,114,101,115,116,0,0,0,0,0,0,0,110,32,62,32,48,0,0,0,115,101,109,105,102,117,115,97,0,0,0,0,0,0,0,0,83,97,116,0,0,0,0,0,102,117,115,97,0,0,0,0,105,103,110,111,114,101,76,97,121,111,117,116,0,0,0,0,70,114,105,0,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,89,111,117,32,104,97,118,101,32,97,32,110,111,110,45,110,117,109,98,101,114,32,105,110,32,97,32,116,117,112,108,101,116,32,110,117,109,98,101,114,0,0,0,0,0,0,0,0,115,101,109,105,109,105,110,105,109,97,0,0,0,0,0,0,37,76,102,0,0,0,0,0,84,104,117,0,0,0,0,0,109,105,110,105,109,97,0,0,87,101,100,0,0,0,0,0,115,101,109,105,98,114,101,118,105,115,0,0,0,0,0,0,116,97,103,0,0,0,0,0,69,114,114,111,114,32,110,117,108,108,32,40,48,41,32,111,114,32,117,110,101,120,112,101,99,116,101,100,32,69,79,70,32,102,111,117,110,100,32,105,110,32,105,110,112,117,116,32,115,116,114,101,97,109,46,0,85,110,107,110,111,119,110,32,101,114,114,111,114,0,0,0,84,117,101,0,0,0,0,0,98,114,101,118,105,115,0,0,101,110,100,0,0,0,0,0,77,111,110,0,0,0,0,0,108,111,110,103,97,0,0,0,83,117,110,0,0,0,0,0,10,0,0,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,103,101,116,32,115,116,97,102,102,32,40,37,100,41,32,119,104,105,108,101,32,100,114,97,119,105,110,103,32,115,116,97,102,102,71,114,112,32,45,32,86,114,118,58,58,68,114,97,119,66,97,114,108,105,110,101,115,0,0,0,0,0,70,114,105,100,97,121,0,0,67,0,0,0,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,77,117,108,116,105,82,101,115,116,42,62,40,101,108,101,109,101,110,116,41,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,89,111,117,32,104,97,118,101,32,97,32,41,32,98,101,102,111,114,101,32,116,104,101,32,59,32,105,110,32,97,32,116,117,112,108,101,116,33,0,0,46,46,47,47,115,114,99,47,98,98,111,120,100,99,46,99,112,112,0,0,0,0,0,0,77,111,110,100,97,121,0,0,114,98,0,0,0,0,0,0,83,117,110,100,97,121,0,0,93,0,0,0,0,0,0,0,115,116,114,108,101,110,40,32,101,110,116,105,116,121,91,105,93,46,115,116,114,32,41,32,61,61,32,101,110,116,105,116,121,91,105,93,46,115,116,114,76,101,110,103,116,104,0,0,69,114,114,111,114,32,100,111,99,117,109,101,110,116,32,101,109,112,116,121,46,0,0,0,52,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,9,60,47,100,101,102,115,62,10,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,110,102,0,0,0,0,0,0,42,109,101,97,115,117,114,101,65,108,105,103,110,101,114,0,67,111,117,108,100,32,110,111,116,32,103,101,116,32,115,116,97,102,102,32,40,37,100,59,32,37,100,41,32,119,104,105,108,101,32,100,114,97,119,105,110,103,32,115,116,97,102,102,71,114,112,32,45,32,86,114,118,58,58,68,114,97,119,83,116,97,102,102,71,114,112,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,110,115,0,0,0,0,0,0,84,114,105,101,100,32,116,111,32,115,101,116,32,109,117,108,116,105,32,109,101,97,117,115,117,114,101,32,105,110,32,114,101,115,116,10,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,102,102,0,0,0,0,0,0,99,117,114,114,101,110,116,45,62,71,101,116,65,108,105,103,110,109,101,110,116,40,41,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,94,40,91,94,41,93,42,91,65,66,67,68,69,70,71,45,93,91,94,41,93,42,91,65,66,67,68,69,70,71,45,93,91,94,41,93,42,41,0,0,115,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,91,94,91,58,100,105,103,105,116,58,93,93,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,91,0,0,0,0,0,0,0,69,114,114,111,114,32,112,97,114,115,105,110,103,32,68,101,99,108,97,114,97,116,105,111,110,46,0,0,0,0,0,0,97,0,0,0,0,0,0,0,55,55,55,55,55,55,0,0,48,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,38,108,116,59,0,0,0,0,103,0,0,0,0,0,0,0,69,114,114,111,114,0,0,0,46,46,47,47,115,114,99,47,97,108,105,103,110,101,114,46,99,112,112,0,0,0,0,0,112,97,103,101,72,101,105,103,104,116,0,0,0,0,0,0,48,48,70,70,70,70,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,48,48,48,48,70,70,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,48,48,70,70,48,48,0,0,46,120,109,108,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,91,74,83,79,78,88,88,93,32,101,120,112,114,101,115,115,105,111,110,32,39,37,115,39,32,102,97,105,108,101,100,32,97,116,32,37,115,58,37,100,32,45,62,32,0,0,0,0,70,70,48,48,48,48,0,0,67,111,117,108,100,32,110,111,116,32,103,101,116,32,115,116,97,102,102,68,101,102,32,119,104,105,108,101,32,100,114,97,119,105,110,103,32,115,116,97,102,102,71,114,112,32,45,32,86,114,118,58,58,68,114,97,119,83,116,97,102,102,71,114,112,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,82,101,115,116,42,62,40,101,108,101,109,101,110,116,41,0,0,0,0,70,70,70,70,70,70,0,0,98,0,0,0,0,0,0,0,48,48,48,48,48,48,0,0,68,101,99,0,0,0,0,0,102,97,108,115,101,0,0,0,60,117,115,101,32,120,108,105,110,107,58,104,114,101,102,61,34,35,37,115,34,32,116,114,97,110,115,102,111,114,109,61,34,116,114,97,110,115,108,97,116,101,40,37,100,44,32,37,100,41,32,115,99,97,108,101,40,37,102,44,32,37,102,41,34,47,62,0,0,0,0,0,78,111,118,0,0,0,0,0,87,97,114,110,105,110,103,58,32,102,111,117,110,100,32,97,32,110,111,116,101,32,105,110,32,110,101,117,109,97,116,105,99,32,110,111,116,97,116,105,111,110,32,40,55,46,41,44,32,117,115,105,110,103,32,113,117,97,114,116,101,114,32,110,111,116,101,32,105,110,115,116,101,97,100,0,0,0,0,0,115,97,109,101,97,115,0,0,111,114,110,95,116,114,105,108,108,0,0,0,0,0,0,0,79,99,116,0,0,0,0,0,115,111,117,114,99,101,0,0,111,114,110,95,109,111,114,100,101,110,116,0,0,0,0,0,38,97,109,112,59,0,0,0,91,91,58,100,105,103,105,116,58,93,93,0,0,0,0,0,83,101,112,0,0,0,0,0,44,0,0,0,0,0,0,0,115,116,97,109,112,0,0,0,69,114,114,111,114,32,112,97,114,115,105,110,103,32,67,111,109,109,101,110,116,46,0,0,114,100,103,0,0,0,0,0,115,108,97,115,104,95,100,111,119,110,95,109,101,110,115,117,114,97,108,0,0,0,0,0,65,117,103,0,0,0,0,0,112,97,103,101,87,105,100,116,104,0,0,0,0,0,0,0,47,100,97,116,97,0,0,0,67,111,117,108,100,32,110,111,116,32,108,111,97,100,32,74,83,79,78,32,111,112,116,105,111,110,115,46,0,0,0,0,80,114,105,110,116,0,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,76,105,110,107,69,110,100,67,104,105,108,100,0,0,0,0,71,101,116,69,110,116,105,116,121,0,0,0,0,0,0,0,82,101,97,100,78,97,109,101,0,0,0,0,0,0,0,0,83,116,114,105,110,103,69,113,117,97,108,0,0,0,0,0,97,115,115,101,114,116,105,111,110,0,0,0,0,0,0,0,65,100,100,83,116,97,102,102,71,114,112,0,0,0,0,0,80,111,112,67,111,110,116,97,105,110,101,114,0,0,0,0,82,101,97,100,77,101,105,83,116,97,102,102,71,114,112,0,82,101,97,100,77,101,105,83,116,97,102,102,68,101,102,0,82,101,97,100,77,101,105,83,99,111,114,101,68,101,102,0,65,100,100,76,97,121,101,114,69,108,101,109,101,110,116,0,82,101,97,100,77,101,105,77,101,97,115,117,114,101,0,0,82,101,97,100,77,101,105,84,117,112,108,101,116,0,0,0,82,101,97,100,77,101,105,83,121,115,116,101,109,0,0,0,82,101,97,100,77,101,105,83,116,97,102,102,0,0,0,0,82,101,97,100,77,101,105,76,97,121,101,114,0,0,0,0,82,101,97,100,77,101,105,80,97,103,101,0,0,0,0,0,82,101,97,100,77,101,105,66,101,97,109,0,0,0,0,0,70,105,110,100,79,112,101,110,84,105,101,0,0,0,0,0,82,101,97,100,77,101,105,82,100,103,0,0,0,0,0,0,65,108,105,103,110,0,0,0,65,108,105,103,110,77,101,97,115,117,114,101,115,0,0,0,65,108,105,103,110,83,121,115,116,101,109,115,0,0,0,0,83,101,116,80,97,114,101,110,116,0,0,0,0,0,0,0,67,108,111,110,101,0,0,0,83,101,116,66,111,117,110,100,105,110,103,66,111,120,89,83,104,105,102,116,0,0,0,0,83,101,116,66,111,117,110,100,105,110,103,66,111,120,88,83,104,105,102,116,0,0,0,0,65,108,105,103,110,0,0,0,76,97,121,101,114,0,0,0,112,117,116,115,116,114,105,110,103,0,0,0,0,0,0,0,68,114,97,119,83,116,97,102,102,0,0,0,0,0,0,0,68,114,97,119,76,97,121,101,114,0,0,0,0,0,0,0,68,114,97,119,66,114,97,99,101,0,0,0,0,0,0,0,118,95,98,108,105,110,101,50,0,0,0,0,0,0,0,0,68,114,97,119,82,101,115,116,0,0,0,0,0,0,0,0,68,114,97,119,80,97,103,101,0,0,0,0,0,0,0,0,68,114,97,119,78,111,116,101,0,0,0,0,0,0,0,0,68,114,97,119,67,108,101,102,0,0,0,0,0,0,0,0,118,95,98,108,105,110,101,0,104,95,98,108,105,110,101,0,83,101,116,80,97,103,101,0,68,114,97,119,84,105,101,0,68,114,97,119,77,101,110,115,117,114,82,101,118,101,114,115,101,100,72,97,108,102,67,105,114,99,108,101,0,0,0,0,68,114,97,119,77,101,110,115,117,114,72,97,108,102,67,105,114,99,108,101,0,0,0,0,73,110,116,84,111,79,98,108,105,113,117,101,70,105,103,117,114,101,115,0,0,0,0,0,68,114,97,119,68,117,114,97,116,105,111,110,69,108,101,109,101,110,116,0,0,0,0,0,68,114,97,119,80,97,114,116,105,97,108,66,97,114,108,105,110,101,0,0,0,0,0,0,67,97,108,99,117,108,97,116,101,80,105,116,99,104,80,111,115,89,0,0,0,0,0,0,68,114,97,119,84,117,112,108,101,116,69,108,101,109,101,110,116,0,0,0,0,0,0,0,68,114,97,119,77,101,110,115,117,114,70,105,103,117,114,101,115,0,0,0,0,0,0,0,67,97,108,99,117,108,97,116,101,82,101,115,116,80,111,115,89,0,0,0,0,0,0,0,68,114,97,119,83,121,109,98,111,108,67,117,115,116,111,115,0,0,0,0,0,0,0,0,68,114,97,119,77,101,110,115,117,114,67,105,114,99,108,101,0,0,0,0,0,0,0,0,79,110,101,66,101,97,109,73,110,84,117,112,108,101,116,0,68,114,97,119,83,121,109,98,111,108,65,99,99,105,100,0,68,114,97,119,77,101,110,115,117,114,83,108,97,115,104,0,68,114,97,119,66,101,97,109,69,108,101,109,101,110,116,0,68,114,97,119,66,97,114,108,105,110,101,68,111,116,115,0,68,114,97,119,83,116,97,102,102,76,105,110,101,115,0,0,68,114,97,119,83,121,109,98,111,108,68,111,116,0,0,0,68,114,97,119,77,117,108,116,105,82,101,115,116,0,0,0,68,114,97,119,77,101,110,115,117,114,68,111,116,0,0,0,68,114,97,119,76,97,121,101,114,76,105,115,116,0,0,0,68,114,97,119,83,116,97,102,102,71,114,112,0,0,0,0,68,114,97,119,83,99,111,114,101,68,101,102,0,0,0,0,68,114,97,119,76,105,103,97,116,117,114,101,0,0,0,0,68,114,97,119,76,97,121,101,114,65,112,112,0,0,0,0,68,114,97,119,66,97,114,108,105,110,101,115,0,0,0,0,114,101,99,116,95,112,108,101,105,110,50,0,0,0,0,0,68,114,97,119,77,101,97,115,117,114,101,0,0,0,0,0,68,114,97,119,69,108,101,109,101,110,116,0,0,0,0,0])
.concat([68,114,97,119,66,97,114,108,105,110,101,0,0,0,0,0,68,114,97,119,66,97,114,108,105,110,101,0,0,0,0,0,68,114,97,119,84,117,112,108,101,116,0,0,0,0,0,0,68,114,97,119,83,121,115,116,101,109,0,0,0,0,0,0,68,114,97,119,83,121,109,98,111,108,0,0,0,0,0,0,68,114,97,119,77,101,110,115,117,114,0,0,0,0,0,0,68,114,97,119,75,101,121,83,105,103,0,0,0,0,0,0,76,97,121,111,117,116,0,0,83,101,116,83,101,99,111,110,100,78,111,116,101,0,0,0,83,101,116,70,105,114,115,116,78,111,116,101,0,0,0,0,85,112,100,97,116,101,66,66,0,0,0,0,0,0,0,0,69,110,100,71,114,97,112,104,105,99,0,0,0,0,0,0,70,105,108,101,73,110,112,117,116,83,116,114,101,97,109,0,71,101,116,83,116,97,102,102,65,108,105,103,110,109,101,110,116,0,0,0,0,0,0,0,71,101,116,67,104,105,108,100,67,111,112,121,0,0,0,0,126,84,105,88,109,108,65,116,116,114,105,98,117,116,101,83,101,116,0,0,0,0,0,0,82,101,109,111,118,101,0,0,65,100,100,0,0,0,0,0,83,116,97,109,112,0,0,0,83,101,116,69,114,114,111,114,0,0,0,0,0,0,0,0,76,111,97,100,70,105,108,101,0,0,0,0,0,0,0,0,80,97,114,115,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,224,0,0,0,240,0,0,0,248,0,0,0,252,0,0,0,0,0,0,0,1,2,3,4,5,6,7,0,0,0,0,0,8,137,0,0,158,1,0,0,242,1,0,0,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,137,0,0,38,1,0,0,194,1,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,137,0,0,190,0,0,0,190,2,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,137,0,0,194,0,0,0,56,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,137,0,0,194,0,0,0,18,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,137,0,0,194,0,0,0,44,0,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,137,0,0,202,1,0,0,228,0,0,0,118,0,0,0,4,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,137,0,0,176,2,0,0,240,1,0,0,118,0,0,0,2,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,137,0,0,192,1,0,0,66,1,0,0,118,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,137,0,0,178,2,0,0,136,1,0,0,118,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,138,0,0,64,2,0,0,86,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,138,0,0,174,2,0,0,252,0,0,0,118,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,138,0,0,190,1,0,0,60,1,0,0,118,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,138,0,0,96,0,0,0,62,1,0,0,118,0,0,0,186,0,0,0,6,0,0,0,14,0,0,0,8,0,0,0,24,0,0,0,58,0,0,0,2,0,0,0,248,255,255,255,192,138,0,0,32,0,0,0,66,0,0,0,54,0,0,0,26,0,0,0,4,0,0,0,52,0,0,0,202,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,138,0,0,148,2,0,0,106,2,0,0,118,0,0,0,30,0,0,0,2,0,0,0,64,0,0,0,28,0,0,0,22,0,0,0,4,0,0,0,4,0,0,0,248,255,255,255,232,138,0,0,108,0,0,0,162,0,0,0,178,0,0,0,198,0,0,0,150,0,0,0,70,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,139,0,0,28,2,0,0,246,1,0,0,118,0,0,0,74,0,0,0,64,0,0,0,20,0,0,0,82,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,139,0,0,16,1,0,0,180,0,0,0,118,0,0,0,68,0,0,0,128,0,0,0,34,0,0,0,138,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,139,0,0,158,2,0,0,4,0,0,0,118,0,0,0,32,0,0,0,38,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,139,0,0,110,0,0,0,14,0,0,0,118,0,0,0,20,0,0,0,16,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,139,0,0,106,0,0,0,68,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,139,0,0,70,0,0,0,142,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,139,0,0,124,0,0,0,210,1,0,0,118,0,0,0,10,0,0,0,8,0,0,0,18,0,0,0,6,0,0,0,16,0,0,0,4,0,0,0,2,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,139,0,0,8,1,0,0,0,1,0,0,118,0,0,0,22,0,0,0,28,0,0,0,36,0,0,0,26,0,0,0,34,0,0,0,10,0,0,0,8,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,139,0,0,98,0,0,0,52,0,0,0,118,0,0,0,50,0,0,0,48,0,0,0,42,0,0,0,44,0,0,0,32,0,0,0,38,0,0,0,40,0,0,0,56,0,0,0,54,0,0,0,52,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,139,0,0,252,1,0,0,10,0,0,0,118,0,0,0,76,0,0,0,10,0,0,0,60,0,0,0,68,0,0,0,62,0,0,0,70,0,0,0,66,0,0,0,74,0,0,0,30,0,0,0,72,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,140,0,0,204,0,0,0,250,0,0,0,118,0,0,0,6,0,0,0,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,140,0,0,66,0,0,0,212,1,0,0,118,0,0,0,14,0,0,0,48,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,140,0,0,26,0,0,0,192,2,0,0,118,0,0,0,2,0,0,0,12,0,0,0,18,0,0,0,184,0,0,0,100,0,0,0,22,0,0,0,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,140,0,0,218,1,0,0,122,1,0,0,118,0,0,0,14,0,0,0,16,0,0,0,24,0,0,0,82,0,0,0,14,0,0,0,16,0,0,0,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,140,0,0,218,1,0,0,46,0,0,0,118,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,156,0,0,0,92,0,0,0,12,0,0,0,210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,140,0,0,218,1,0,0,20,1,0,0,118,0,0,0,8,0,0,0,10,0,0,0,20,0,0,0,50,0,0,0,22,0,0,0,8,0,0,0,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,140,0,0,218,1,0,0,82,0,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,140,0,0,136,0,0,0,186,1,0,0,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,140,0,0,218,1,0,0,222,0,0,0,118,0,0,0,26,0,0,0,4,0,0,0,6,0,0,0,24,0,0,0,52,0,0,0,56,0,0,0,20,0,0,0,6,0,0,0,30,0,0,0,18,0,0,0,14,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,140,0,0,186,2,0,0,88,0,0,0,118,0,0,0,44,0,0,0,28,0,0,0,110,0,0,0,50,0,0,0,40,0,0,0,8,0,0,0,36,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,24,141,0,0,58,2,0,0,18,2,0,0,200,255,255,255,200,255,255,255,24,141,0,0,78,0,0,0,22,1,0,0,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,40,141,0,0,108,0,0,0,64,1,0,0,196,255,255,255,196,255,255,255,40,141,0,0,182,1,0,0,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,141,0,0,102,1,0,0,100,2,0,0,116,0,0,0,30,0,0,0,46,0,0,0,48,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,72,141,0,0,34,2,0,0,180,2,0,0,56,0,0,0,248,255,255,255,72,141,0,0,116,0,0,0,150,0,0,0,192,255,255,255,192,255,255,255,72,141,0,0,54,2,0,0,42,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,141,0,0,218,1,0,0,230,0,0,0,118,0,0,0,8,0,0,0,10,0,0,0,20,0,0,0,50,0,0,0,22,0,0,0,8,0,0,0,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,141,0,0,218,1,0,0,196,1,0,0,118,0,0,0,8,0,0,0,10,0,0,0,20,0,0,0,50,0,0,0,22,0,0,0,8,0,0,0,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,141,0,0,122,0,0,0,80,2,0,0,24,0,0,0,52,0,0,0,30,0,0,0,8,0,0,0,78,0,0,0,132,0,0,0,24,0,0,0,190,0,0,0,20,0,0,0,158,0,0,0,22,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,141,0,0,138,2,0,0,120,2,0,0,48,0,0,0,30,0,0,0,20,0,0,0,40,0,0,0,138,0,0,0,122,0,0,0,44,0,0,0,46,0,0,0,38,0,0,0,34,0,0,0,2,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,141,0,0,22,0,0,0,80,1,0,0,24,0,0,0,52,0,0,0,36,0,0,0,36,0,0,0,78,0,0,0,132,0,0,0,24,0,0,0,10,0,0,0,20,0,0,0,182,0,0,0,22,0,0,0,134,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,192,141,0,0,104,1,0,0,214,1,0,0,148,255,255,255,148,255,255,255,192,141,0,0,34,1,0,0,74,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,240,141,0,0,102,0,0,0,66,2,0,0,252,255,255,255,252,255,255,255,240,141,0,0,150,1,0,0,106,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,8,142,0,0,86,2,0,0,122,2,0,0,252,255,255,255,252,255,255,255,8,142,0,0,56,1,0,0,30,2,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,32,142,0,0,242,0,0,0,166,2,0,0,248,255,255,255,248,255,255,255,32,142,0,0,220,1,0,0,118,2,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,248,255,255,255,248,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,142,0,0,78,2,0,0,162,0,0,0,90,0,0,0,10,0,0,0,14,0,0,0,34,0,0,0,72,0,0,0,132,0,0,0,24,0,0,0,142,0,0,0,20,0,0,0,104,0,0,0,22,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,142,0,0,44,2,0,0,88,2,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,142,0,0,160,2,0,0,114,0,0,0,44,0,0,0,30,0,0,0,20,0,0,0,40,0,0,0,86,0,0,0,122,0,0,0,44,0,0,0,46,0,0,0,38,0,0,0,34,0,0,0,42,0,0,0,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,142,0,0,180,1,0,0,62,2,0,0,70,0,0,0,52,0,0,0,36,0,0,0,36,0,0,0,6,0,0,0,132,0,0,0,24,0,0,0,10,0,0,0,20,0,0,0,182,0,0,0,54,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,142,0,0,104,2,0,0,140,1,0,0,118,0,0,0,104,0,0,0,182,0,0,0,104,0,0,0,152,0,0,0,12,0,0,0,64,0,0,0,84,0,0,0,52,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,142,0,0,42,1,0,0,132,0,0,0,118,0,0,0,170,0,0,0,176,0,0,0,118,0,0,0,134,0,0,0,136,0,0,0,60,0,0,0,174,0,0,0,96,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,143,0,0,108,2,0,0,70,1,0,0,118,0,0,0,28,0,0,0,90,0,0,0,18,0,0,0,88,0,0,0,156,0,0,0,98,0,0,0,148,0,0,0,144,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,143,0,0,208,0,0,0,208,1,0,0,118,0,0,0,160,0,0,0,164,0,0,0,42,0,0,0,130,0,0,0,62,0,0,0,50,0,0,0,118,0,0,0,124,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,143,0,0,8,2,0,0,20,2,0,0,58,0,0,0,30,0,0,0,20,0,0,0,40,0,0,0,138,0,0,0,122,0,0,0,44,0,0,0,110,0,0,0,124,0,0,0,50,0,0,0,2,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,143,0,0,32,0,0,0,90,2,0,0,116,0,0,0,52,0,0,0,36,0,0,0,36,0,0,0,78,0,0,0,132,0,0,0,24,0,0,0,152,0,0,0,36,0,0,0,4,0,0,0,22,0,0,0,134,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,143,0,0,46,2,0,0,238,0,0,0,94,0,0,0,164,0,0,0,16,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,143,0,0,68,0,0,0,26,2,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,143,0,0,6,2,0,0,248,0,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,2,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,26,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,92,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,143,0,0,216,0,0,0,238,1,0,0,98,0,0,0,80,0,0,0,8,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,68,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,40,1,0,0,196,255,255,255,176,143,0,0,156,2,0,0,54,1,0,0,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,143,0,0,84,1,0,0,28,0,0,0,130,0,0,0,80,0,0,0,68,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,10,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,58,0,0,0,108,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,196,255,255,255,208,143,0,0,186,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,143,0,0,134,2,0,0,134,0,0,0,94,0,0,0,80,0,0,0,84,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,202,0,0,0,196,255,255,255,240,143,0,0,12,1,0,0,160,1,0,0,180,255,255,255,240,143,0,0,114,2,0,0,92,1,0,0,52,1,0,0,0,0,0,0,0,0,0,0,156,0,0,0,0,0,0,0,24,144,0,0,166,1,0,0,116,1,0,0,76,0,0,0,60,0,0,0,100,255,255,255,100,255,255,255,24,144,0,0,236,0,0,0,188,0,0,0,0,0,0,0,0,0,0,0,204,0,0,0,0,0,0,0,40,144,0,0,36,2,0,0,0,2,0,0,44,0,0,0,132,0,0,0,52,255,255,255,52,255,255,255,40,144,0,0,70,2,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,144,0,0,6,0,0,0,32,1,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,38,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,144,0,0,254,0,0,0,250,1,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,56,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,144,0,0,60,0,0,0,98,1,0,0,94,0,0,0,80,0,0,0,54,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,122,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,32,0,0,0,112,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,114,0,0,0,96,0,0,0,150,0,0,0,36,0,0,0,46,0,0,0,128,0,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,144,0,0,36,1,0,0,144,0,0,0,94,0,0,0,118,0,0,0,142,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,134,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,144,0,0,198,0,0,0,200,0,0,0,94,0,0,0,80,0,0,0,6,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,46,1,0,0,112,255,255,255,120,144,0,0,152,1,0,0,100,1,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,144,0,0,172,2,0,0,146,2,0,0,94,0,0,0,80,0,0,0,140,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,138,0,0,0,154,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,178,0,0,0,88,0,0,0,152,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,78,0,0,0,24,0,0,0,16,0,0,0,130,0,0,0,176,0,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,144,0,0,28,1,0,0,148,1,0,0,94,0,0,0,14,0,0,0,40,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,16,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,112,255,255,255,168,144,0,0,94,0,0,0,234,0,0,0,24,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,144,0,0,68,0,0,0,88,1,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,144,0,0,174,1,0,0,144,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,144,0,0,154,1,0,0,136,2,0,0,94,0,0,0,76,0,0,0,120,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,28,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,144,0,0,176,0,0,0,92,0,0,0,94,0,0,0,80,0,0,0,72,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,140,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,8,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,144,0,0,206,0,0,0,130,2,0,0,94,0,0,0,80,0,0,0,158,0,0,0,44,0,0,0,144,0,0,0,124,0,0,0,54,0,0,0,84,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,18,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,160,255,255,255,248,144,0,0,174,0,0,0,140,0,0,0,146,0,0,0,144,255,255,255,248,144,0,0,142,1,0,0,168,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,145,0,0,120,1,0,0,218,0,0,0,50,0,0,0,236,1,0,0,26,1,0,0,254,1,0,0,126,1,0,0,116,2,0,0,24,0,0,0,110,1,0,0,166,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,145,0,0,170,0,0,0,142,2,0,0,94,0,0,0,12,0,0,0,28,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,112,255,255,255,40,145,0,0,58,1,0,0,48,1,0,0,126,0,0,0,2,0,0,0,84,255,255,255,40,145,0,0,146,1,0,0,126,2,0,0,24,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,145,0,0,132,1,0,0,60,2,0,0,94,0,0,0,80,0,0,0,76,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,74,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,145,0,0,50,2,0,0,246,0,0,0,94,0,0,0,100,0,0,0,36,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,16,0,0,0,50,0,0,0,8,0,0,0,52,0,0,0,170,1,0,0,226,1,0,0,228,1,0,0,2,0,0,0,112,255,255,255,96,145,0,0,34,0,0,0,10,1,0,0,126,0,0,0,2,0,0,0,84,255,255,255,96,145,0,0,2,0,0,0,248,1,0,0,14,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,145,0,0,14,2,0,0,128,2,0,0,94,0,0,0,186,0,0,0,128,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,42,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,145,0,0,194,2,0,0,184,1,0,0,94,0,0,0,80,0,0,0,110,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,32,2,0,0,112,255,255,255,152,145,0,0,40,0,0,0,172,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,145,0,0,144,1,0,0,234,1,0,0,94,0,0,0,80,0,0,0,108,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,145,0,0,140,2,0,0,102,2,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,6,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,112,2,0,0,136,0,0,0,22,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,145,0,0,204,1,0,0,150,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,145,0,0,76,2,0,0,196,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,145,0,0,82,2,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,145,0,0,82,1,0,0,96,1,0,0,24,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,145,0,0,18,1,0,0,112,1,0,0,126,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,0,0,74,2,0,0,148,0,0,0,18,0,0,0,58,0,0,0,2,0,0,0,106,0,0,0,46,0,0,0,102,0,0,0,80,0,0,0,100,0,0,0,44,1,0,0,42,0,0,0,10,0,0,0,28,0,0,0,30,0,0,0,18,0,0,0,20,0,0,0,2,0,0,0,12,0,0,0,2,0,0,0,10,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,6,0,0,0,10,0,0,0,16,0,0,0,48,0,0,0,26,0,0,0,12,0,0,0,20,0,0,0,120,0,0,0,58,0,0,0,160,0,0,0,216,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,146,0,0,108,1,0,0,12,0,0,0,36,0,0,0,12,0,0,0,4,0,0,0,56,0,0,0,32,0,0,0,132,0,0,0,10,0,0,0,22,0,0,0,152,0,0,0,172,1,0,0,44,0,0,0,42,0,0,0,146,0,0,0,18,0,0,0,22,0,0,0,20,0,0,0,16,0,0,0,4,0,0,0,8,0,0,0,34,0,0,0,14,0,0,0,2,0,0,0,12,0,0,0,4,0,0,0,6,0,0,0,38,0,0,0,8,0,0,0,14,0,0,0,34,0,0,0,124,2,0,0,86,0,0,0,160,0,0,0,216,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,146,0,0,156,0,0,0,68,2,0,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,40,146,0,0,74,1,0,0,118,1,0,0,204,0,0,0,126,0,0,0,140,255,255,255,140,255,255,255,40,146,0,0,64,0,0,0,94,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,146,0,0,78,1,0,0,178,1,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,190,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,170,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,146,0,0,72,1,0,0,62,0,0,0,14,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,146,0,0,72,0,0,0,164,2,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,42,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,28,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,146,0,0,168,0,0,0,212,0,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,172,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,166,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,146,0,0,38,0,0,0,176,1,0,0,94,0,0,0,80,0,0,0,32,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,24,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,146,0,0,182,0,0,0,130,0,0,0,94,0,0,0,80,0,0,0,148,0,0,0,44,0,0,0,144,0,0,0,22,0,0,0,54,0,0,0,188,0,0,0,90,0,0,0,116,0,0,0,82,0,0,0,162,0,0,0,156,0,0,0,88,0,0,0,120,0,0,0,48,0,0,0,66,0,0,0,180,0,0,0,64,0,0,0,96,0,0,0,94,0,0,0,36,0,0,0,72,0,0,0,128,0,0,0,10,2,0,0,200,0,0,0,50,0,0,0,8,0,0,0,22,0,0,0,20,0,0,0,72,2,0,0,216,1,0,0,2,0,0,0,112,255,255,255,136,146,0,0,96,2,0,0,134,1,0,0,24,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,146,0,0,188,1,0,0,214,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,146,0,0,52,2,0,0,232,0,0,0,160,0,0,0,164,1,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,146,0,0,52,2,0,0,24,2,0,0,160,0,0,0,164,1,0,0,12,0,0,0,4,0,0,0,18,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,147,0,0,36,0,0,0,12,2,0,0,4,0,0,0,20,0,0,0,106,0,0,0,208,0,0,0,194,0,0,0,136,0,0,0,168,0,0,0,114,0,0,0,112,0,0,0,146,0,0,0,140,0,0,0,102,0,0,0,12,0,0,0,2,0,0,0,192,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,147,0,0,226,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,106,0,0,0,208,0,0,0,194,0,0,0,136,0,0,0,154,0,0,0,114,0,0,0,112,0,0,0,146,0,0,0,140,0,0,0,102,0,0,0,40,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,147,0,0,138,0,0,0,210,0,0,0,32,0,0,0,10,0,0,0,106,0,0,0,208,0,0,0,194,0,0,0,136,0,0,0,154,0,0,0,34,0,0,0,112,0,0,0,146,0,0,0,140,0,0,0,102,0,0,0,40,0,0,0,180,0,0,0,206,0,0,0,106,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,147,0,0,168,1,0,0,98,2,0,0,60,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,147,0,0,6,1,0,0,232,1,0,0,46,0,0,0,16,0,0,0,42,0,0,0,208,0,0,0,194,0,0,0,136,0,0,0,154,0,0,0,114,0,0,0,188,0,0,0,146,0,0,0,140,0,0,0,102,0,0,0,40,0,0,0,2,0,0,0,48,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,147,0,0,244,0,0,0,222,1,0,0,2,0,0,0,12,0,0,0,106,0,0,0,208,0,0,0,194,0,0,0,62,0,0,0,154,0,0,0,114,0,0,0,112,0,0,0,146,0,0,0,140,0,0,0,126,0,0,0,40,0,0,0,2,0,0,0,8,0,0,0,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,147,0,0,84,0,0,0,224,1,0,0,66,0,0,0,2,0,0,0,106,0,0,0,88,0,0,0,194,0,0,0,136,0,0,0,154,0,0,0,114,0,0,0,112,0,0,0,120,0,0,0,140,0,0,0,102,0,0,0,40,0,0,0,2,0,0,0,212,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,147,0,0,114,1,0,0,128,0,0,0,56,0,0,0,14,0,0,0,106,0,0,0,208,0,0,0,196,0,0,0,136,0,0,0,154,0,0,0,114,0,0,0,112,0,0,0,146,0,0,0,96,0,0,0,102,0,0,0,40,0,0,0,2,0,0,0,80,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,124,98,0,0,172,148,0,0,92,148,0,0,132,148,0,0,152,148,0,0,112,148,0,0,200,148,0,0,152,98,0,0,180,98,0,0,44,149,0,0,220,148,0,0,4,149,0,0,24,149,0,0,240,148,0,0,72,149,0,0,208,98,0,0,44,112,0,0,92,149,0,0,132,149,0,0,152,149,0,0,112,149,0,0,72,112,0,0,118,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,80,99,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57])
.concat([105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,105,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,51,118,114,118,57,77,117,108,116,105,82,101,115,116,69,0,0,0,0,0,0,0,0,78,51,118,114,118,57,68,111,99,79,98,106,101,99,116,69,0,0,0,0,0,0,0,0,78,51,118,114,118,57,65,108,105,103,110,109,101,110,116,69,0,0,0,0,0,0,0,0,78,51,118,114,118,56,83,116,97,102,102,71,114,112,69,0,78,51,118,114,118,56,83,116,97,102,102,68,101,102,69,0,78,51,118,114,118,56,83,99,111,114,101,68,101,102,69,0,78,51,118,114,118,56,80,97,101,73,110,112,117,116,69,0,78,51,118,114,118,56,77,101,105,73,110,112,117,116,69,0,78,51,118,114,118,56,76,97,121,101,114,82,100,103,69,0,78,51,118,114,118,56,76,97,121,101,114,65,112,112,69,0,78,51,118,114,118,55,77,101,97,115,117,114,101,69,0,0,78,51,118,114,118,55,66,97,114,108,105,110,101,69,0,0,78,51,118,114,118,54,84,117,112,108,101,116,69,0,0,0,78,51,118,114,118,54,83,121,115,116,101,109,69,0,0,0,78,51,118,114,118,54,83,121,109,98,111,108,69,0,0,0,78,51,118,114,118,54,79,98,106,101,99,116,69,0,0,0,78,51,118,114,118,54,77,117,115,69,110,118,69,0,0,0,78,51,118,114,118,54,77,101,110,115,117,114,69,0,0,0,78,51,118,114,118,53,83,116,97,102,102,69,0,0,0,0,78,51,118,114,118,53,76,97,121,101,114,69,0,0,0,0,78,51,118,114,118,52,86,105,101,119,69,0,0,0,0,0,78,51,118,114,118,52,82,101,115,116,69,0,0,0,0,0,78,51,118,114,118,52,80,97,103,101,69,0,0,0,0,0,78,51,118,114,118,52,78,111,116,101,69,0,0,0,0,0,78,51,118,114,118,52,67,108,101,102,69,0,0,0,0,0,78,51,118,114,118,52,66,101,97,109,69,0,0,0,0,0,78,51,118,114,118,51,84,105,101,69,0,0,0,0,0,0,78,51,118,114,118,51,68,111,99,69,0,0,0,0,0,0,78,51,118,114,118,50,56,83,99,111,114,101,79,114,83,116,97,102,102,68,101,102,65,116,116,114,73,110,116,101,114,102,97,99,101,69,0,0,0,0,78,51,118,114,118,49,57,79,98,106,101,99,116,76,105,115,116,73,110,116,101,114,102,97,99,101,69,0,0,0,0,0,78,51,118,114,118,49,57,73,110,116,101,114,102,97,99,101,67,111,110,116,114,111,108,108,101,114,69,0,0,0,0,0,78,51,118,114,118,49,55,80,111,115,105,116,105,111,110,73,110,116,101,114,102,97,99,101,69,0,0,0,0,0,0,0,78,51,118,114,118,49,55,68,117,114,97,116,105,111,110,73,110,116,101,114,102,97,99,101,69,0,0,0,0,0,0,0,78,51,118,114,118,49,55,66,66,111,120,68,101,118,105,99,101,67,111,110,116,101,120,116,69,0,0,0,0,0,0,0,78,51,118,114,118,49,54,83,118,103,68,101,118,105,99,101,67,111,110,116,101,120,116,69,0,0,0,0,0,0,0,0,78,51,118,114,118,49,53,70,111,110,116,77,101,116,114,105,99,115,73,110,102,111,69,0,78,51,118,114,118,49,53,70,105,108,101,73,110,112,117,116,83,116,114,101,97,109,69,0,78,51,118,114,118,49,52,83,116,97,102,102,65,108,105,103,110,109,101,110,116,69,0,0,78,51,118,114,118,49,52,80,105,116,99,104,73,110,116,101,114,102,97,99,101,69,0,0,78,51,118,114,118,49,52,77,101,97,115,117,114,101,65,108,105,103,110,101,114,69,0,0,78,51,118,114,118,49,51,83,121,115,116,101,109,65,108,105,103,110,101,114,69,0,0,0,78,51,118,114,118,49,51,68,101,118,105,99,101,67,111,110,116,101,120,116,69,0,0,0,78,51,118,114,118,49,50,76,97,121,101,114,69,108,101,109,101,110,116,69,0,0,0,0,78,51,118,114,118,49,50,75,101,121,83,105,103,110,97,116,117,114,101,69,0,0,0,0,78,51,118,114,118,49,48,77,117,115,70,117,110,99,116,111,114,69,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,68,110,0,0,0,0,0,0,57,84,105,88,109,108,84,101,120,116,0,0,0,0,0,0,57,84,105,88,109,108,78,111,100,101,0,0,0,0,0,0,57,84,105,88,109,108,66,97,115,101,0,0,0,0,0,0,49,54,84,105,88,109,108,68,101,99,108,97,114,97,116,105,111,110,0,0,0,0,0,0,49,52,84,105,88,109,108,65,116,116,114,105,98,117,116,101,0,0,0,0,0,0,0,0,49,51,84,105,88,109,108,68,111,99,117,109,101,110,116,0,49,50,84,105,88,109,108,85,110,107,110,111,119,110,0,0,49,50,84,105,88,109,108,69,108,101,109,101,110,116,0,0,49,50,84,105,88,109,108,67,111,109,109,101,110,116,0,0,96,115,0,0,152,118,0,0,0,0,0,0,168,118,0,0,0,0,0,0,184,118,0,0,0,0,0,0,200,118,0,0,0,137,0,0,0,0,0,0,0,0,0,0,216,118,0,0,0,137,0,0,0,0,0,0,0,0,0,0,232,118,0,0,0,137,0,0,0,0,0,0,0,0,0,0,0,119,0,0,88,137,0,0,0,0,0,0,0,0,0,0,24,119,0,0,88,137,0,0,0,0,0,0,0,0,0,0,48,119,0,0,0,137,0,0,0,0,0,0,0,0,0,0,64,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,119,0,0,136,115,0,0,96,119,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,168,142,0,0,0,0,0,0,136,115,0,0,168,119,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,176,142,0,0,0,0,0,0,136,115,0,0,240,119,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,184,142,0,0,0,0,0,0,136,115,0,0,56,120,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,192,142,0,0,0,0,0,0,0,0,0,0,128,120,0,0,112,139,0,0,0,0,0,0,0,0,0,0,176,120,0,0,112,139,0,0,0,0,0,0,136,115,0,0,224,120,0,0,0,0,0,0,1,0,0,0,216,141,0,0,0,0,0,0,136,115,0,0,248,120,0,0,0,0,0,0,1,0,0,0,216,141,0,0,0,0,0,0,136,115,0,0,16,121,0,0,0,0,0,0,1,0,0,0,224,141,0,0,0,0,0,0,136,115,0,0,40,121,0,0,0,0,0,0,1,0,0,0,224,141,0,0,0,0,0,0,136,115,0,0,64,121,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,88,143,0,0,0,8,0,0,136,115,0,0,136,121,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,88,143,0,0,0,8,0,0,136,115,0,0,208,121,0,0,0,0,0,0,3,0,0,0,168,140,0,0,2,0,0,0,120,137,0,0,2,0,0,0,8,141,0,0,0,8,0,0,136,115,0,0,24,122,0,0,0,0,0,0,3,0,0,0,168,140,0,0,2,0,0,0,120,137,0,0,2,0,0,0,16,141,0,0,0,8,0,0,0,0,0,0,96,122,0,0,168,140,0,0,0,0,0,0,0,0,0,0,120,122,0,0,168,140,0,0,0,0,0,0,136,115,0,0,144,122,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,232,141,0,0,2,0,0,0,136,115,0,0,168,122,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,232,141,0,0,2,0,0,0,0,0,0,0,192,122,0,0,0,0,0,0,216,122,0,0,96,142,0,0,0,0,0,0,136,115,0,0,248,122,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,32,138,0,0,0,0,0,0,136,115,0,0,64,123,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,56,138,0,0,0,0,0,0,136,115,0,0,136,123,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,80,138,0,0,0,0,0,0,136,115,0,0,208,123,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,104,138,0,0,0,0,0,0,0,0,0,0,24,124,0,0,168,140,0,0,0,0,0,0,0,0,0,0,48,124,0,0,168,140,0,0,0,0,0,0,136,115,0,0,72,124,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,112,142,0,0,2,0,0,0,136,115,0,0,112,124,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,112,142,0,0,2,0,0,0,136,115,0,0,152,124,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,112,142,0,0,2,0,0,0,136,115,0,0,192,124,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,112,142,0,0,2,0,0,0,0,0,0,0,232,124,0,0,208,141,0,0,0,0,0,0,0,0,0,0,0,125,0,0,168,140,0,0,0,0,0,0,136,115,0,0,24,125,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,80,143,0,0,2,0,0,0,136,115,0,0,48,125,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,80,143,0,0,2,0,0,0,0,0,0,0,72,125,0,0,0,0,0,0,112,125,0,0,0,0,0,0,152,125,0,0,8,142,0,0,0,0,0,0,0,0,0,0,224,125,0,0,56,142,0,0,0,0,0,0,0,0,0,0,40,126,0,0,120,142,0,0,0,0,0,0,0,0,0,0,72,126,0,0,160,141,0,0,0,0,0,0,0,0,0,0,144,126,0,0,136,140,0,0,0,0,0,0,0,0,0,0,184,126,0,0,136,140,0,0,0,0,0,0,0,0,0,0,224,126,0,0,144,141,0,0,0,0,0,0,0,0,0,0,40,127,0,0,0,0,0,0,96,127,0,0,0,0,0,0,152,127,0,0,136,115,0,0,184,127,0,0,3,0,0,0,2,0,0,0,56,142,0,0,2,0,0,0,8,142,0,0,2,8,0,0,0,0,0,0,232,127,0,0,56,142,0,0,0,0,0,0,0,0,0,0,24,128,0,0,0,0,0,0,56,128,0,0,0,0,0,0,88,128,0,0,0,0,0,0,120,128,0,0,136,115,0,0,144,128,0,0,0,0,0,0,1,0,0,0,0,138,0,0,3,244,255,255,136,115,0,0,192,128,0,0,0,0,0,0,1,0,0,0,16,138,0,0,3,244,255,255,136,115,0,0,240,128,0,0,0,0,0,0,1,0,0,0,0,138,0,0,3,244,255,255,136,115,0,0,32,129,0,0,0,0,0,0,1,0,0,0,16,138,0,0,3,244,255,255,0,0,0,0,80,129,0,0,144,141,0,0,0,0,0,0,0,0,0,0,128,129,0,0,40,137,0,0,0,0,0,0,0,0,0,0,152,129,0,0,0,0,0,0,176,129,0,0,152,141,0,0,0,0,0,0,0,0,0,0,200,129,0,0,136,141,0,0,0,0,0,0,0,0,0,0,232,129,0,0,144,141,0,0,0,0,0,0,0,0,0,0,8,130,0,0,0,0,0,0,40,130,0,0,0,0,0,0,72,130,0,0,0,0,0,0,104,130,0,0,136,115,0,0,136,130,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,72,143,0,0,2,0,0,0,136,115,0,0,168,130,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,72,143,0,0,2,0,0,0,136,115,0,0,200,130,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,72,143,0,0,2,0,0,0,136,115,0,0,232,130,0,0,0,0,0,0,2,0,0,0,168,140,0,0,2,0,0,0,72,143,0,0,2,0,0,0,0,0,0,0,8,131,0,0,0,0,0,0,32,131,0,0,0,0,0,0,56,131,0,0,0,0,0,0,80,131,0,0,136,141,0,0,0,0,0,0,0,0,0,0,104,131,0,0,144,141,0,0,0,0,0,0,0,0,0,0,128,131,0,0,120,146,0,0,0,0,0,0,0,0,0,0,152,131,0,0,200,144,0,0,0,0,0,0,0,0,0,0,176,131,0,0,200,144,0,0,0,0,0,0,136,115,0,0,200,131,0,0,0,0,0,0,2,0,0,0,200,144,0,0,2,0,0,0,224,145,0,0,2,60,0,0,136,115,0,0,216,131,0,0,0,0,0,0,2,0,0,0,200,144,0,0,2,0,0,0,216,145,0,0,2,60,0,0,136,115,0,0,232,131,0,0,0,0,0,0,3,0,0,0,200,144,0,0,2,0,0,0,216,145,0,0,2,60,0,0,224,145,0,0,2,76,0,0,0,0,0,0,248,131,0,0,40,146,0,0,0,0,0,0,0,0,0,0,8,132,0,0,40,146,0,0,0,0,0,0,0,0,0,0,24,132,0,0,200,144,0,0,0,0,0,0,0,0,0,0,40,132,0,0,120,146,0,0,0,0,0,0,0,0,0,0,56,132,0,0,144,143,0,0,0,0,0,0,0,0,0,0,72,132,0,0,120,146,0,0,0,0,0,0,136,115,0,0,88,132,0,0,0,0,0,0,2,0,0,0,120,146,0,0,2,0,0,0,224,145,0,0,2,144,0,0,0,0,0,0,104,132,0,0,144,143,0,0,0,0,0,0,136,115,0,0,120,132,0,0,0,0,0,0,2,0,0,0,120,146,0,0,2,0,0,0,240,145,0,0,2,144,0,0,0,0,0,0,136,132,0,0,0,0,0,0,152,132,0,0,0,0,0,0,168,132,0,0,120,146,0,0,0,0,0,0,0,0,0,0,184,132,0,0,144,143,0,0,0,0,0,0,136,115,0,0,200,132,0,0,0,0,0,0,3,0,0,0,144,143,0,0,2,0,0,0,224,145,0,0,2,96,0,0,216,145,0,0,2,112,0,0,0,0,0,0,216,132,0,0,136,115,0,0,232,132,0,0,0,0,0,0,3,0,0,0,120,146,0,0,2,0,0,0,248,145,0,0,2,144,0,0,240,145,0,0,2,172,0,0,0,0,0,0,248,132,0,0,144,143,0,0,0,0,0,0,136,115,0,0,8,133,0,0,0,0,0,0,3,0,0,0,120,146,0,0,2,0,0,0,248,145,0,0,2,144,0,0,72,146,0,0,2,172,0,0,0,0,0,0,24,133,0,0,120,146,0,0,0,0,0,0,136,115,0,0,40,133,0,0,0,0,0,0,2,0,0,0,120,146,0,0,2,0,0,0,224,145,0,0,2,144,0,0,0,0,0,0,56,133,0,0,120,146,0,0,0,0,0,0,0,0,0,0,72,133,0,0,200,144,0,0,0,0,0,0,0,0,0,0,88,133,0,0,0,0,0,0,128,133,0,0,0,0,0,0,160,133,0,0,0,0,0,0,192,133,0,0,0,0,0,0,224,133,0,0,0,0,0,0,0,134,0,0,112,146,0,0,0,0,0,0,0,0,0,0,32,134,0,0,112,146,0,0,0,0,0,0,0,0,0,0,64,134,0,0,0,0,0,0,88,134,0,0,192,141,0,0,0,0,0,0,0,0,0,0,112,134,0,0,200,144,0,0,0,0,0,0,0,0,0,0,136,134,0,0,0,0,0,0,160,134,0,0,200,144,0,0,0,0,0,0,0,0,0,0,184,134,0,0,200,144,0,0,0,0,0,0,0,0,0,0,208,134,0,0,0,0,0,0,232,134,0,0,144,143,0,0,0,0,0,0,136,115,0,0,0,135,0,0,0,0,0,0,2,0,0,0,120,146,0,0,2,0,0,0,240,145,0,0,2,144,0,0,0,0,0,0,24,135,0,0,0,0,0,0,48,135,0,0,16,147,0,0,0,0,0,0,0,0,0,0,88,135,0,0,0,147,0,0,0,0,0,0,0,0,0,0,128,135,0,0,0,147,0,0,0,0,0,0,0,0,0,0,168,135,0,0,240,146,0,0,0,0,0,0,0,0,0,0,208,135,0,0,16,147,0,0,0,0,0,0,0,0,0,0,248,135,0,0,16,147,0,0,0,0,0,0,0,0,0,0,32,136,0,0,248,136,0,0,0,0,0,0,96,115,0,0,72,136,0,0,0,0,0,0,80,136,0,0,56,147,0,0,0,0,0,0,0,0,0,0,96,136,0,0,72,147,0,0,0,0,0,0,0,0,0,0,112,136,0,0,0,0,0,0,128,136,0,0,56,147,0,0,0,0,0,0,0,0,0,0,152,136,0,0,72,147,0,0,0,0,0,0,0,0,0,0,176,136,0,0,56,147,0,0,0,0,0,0,0,0,0,0,192,136,0,0,56,147,0,0,0,0,0,0,0,0,0,0,208,136,0,0,56,147,0,0,0,0,0,0,0,0,0,0,224,136,0,0,56,147,0,0,0,0,0,0,56,0,0,0,0,0,0,0,8,142,0,0,86,2,0,0,122,2,0,0,200,255,255,255,200,255,255,255,8,142,0,0,56,1,0,0,30,2,0,0,60,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,196,255,255,255,196,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,64,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,192,255,255,255,192,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,108,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,148,255,255,255,148,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,156,0,0,0,0,0,0,0,192,141,0,0,104,1,0,0,214,1,0,0,100,255,255,255,100,255,255,255,192,141,0,0,34,1,0,0,74,0,0,0,156,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,100,255,255,255,100,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,156,0,0,0,0,0,0,0,40,146,0,0,74,1,0,0,118,1,0,0,204,0,0,0,126,0,0,0,100,255,255,255,100,255,255,255,40,146,0,0,64,0,0,0,94,2,0,0,204,0,0,0,0,0,0,0,192,141,0,0,104,1,0,0,214,1,0,0,52,255,255,255,52,255,255,255,192,141,0,0,34,1,0,0,74,0,0,0,204,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,52,255,255,255,52,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,204,0,0,0,0,0,0,0,40,146,0,0,74,1,0,0,118,1,0,0,204,0,0,0,126,0,0,0,52,255,255,255,52,255,255,255,40,146,0,0,64,0,0,0,94,2,0,0,116,0,0,0,0,0,0,0,192,141,0,0,104,1,0,0,214,1,0,0,140,255,255,255,140,255,255,255,192,141,0,0,34,1,0,0,74,0,0,0,116,0,0,0,0,0,0,0,56,142,0,0,50,1,0,0,224,0,0,0,140,255,255,255,140,255,255,255,56,142,0,0,130,1,0,0,126,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,168,74,0,0,5,0,0,0,38,0,0,0,0,72,0,0,4,0,0,0,60,0,0,0,40,57,0,0,4,0,0,0,62,0,0,0,200,49,0,0,6,0,0,0,34,0,0,0,0,44,0,0,6,0,0,0,39,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,72,28,0,0,16,72,0,0,48,57,0,0,208,49,0,0,8,44,0,0,192,40,0,0,0,38,0,0,152,34,0,0,120,32,0,0,80,30,0,0,216,74,0,0,160,71,0,0,136,69,0,0,184,67,0,0,64,66,0,0,152,64,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,0,0,0,0,4,1,5,2,6,3,7,0,7,3,6,2,5,1,4,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function ___gxx_personality_v0() {
    }
  function _srand(seed) {}
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  Module["_strlen"] = _strlen;
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  var _fabs=Math_abs;
  var _llvm_va_start=undefined;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _memchr(ptr, chr, num) {
      chr = unSign(chr);
      for (var i = 0; i < num; i++) {
        if (HEAP8[(ptr)] == chr) return ptr;
        ptr++;
      }
      return 0;
    }
  var _llvm_memset_p0i8_i64=_memset;
  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }
  var _llvm_pow_f64=Math_pow;
  var _ceil=Math_ceil;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
          this.stack = stackTrace();
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  Module["_memcmp"] = _memcmp;
  var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }var _fseeko=_fseek;
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStream(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }var _ftello=_ftell;
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"]((tempDouble=ret,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)),ret>>>0)|0);
      }
      return ret;
    }function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }function _atoi(ptr) {
      return _strtol(ptr, null, 10);
    }
  var _floor=Math_floor;
  function _round(x) {
      return (x < 0) ? -Math.round(-x) : Math.round(x);
    }
  var _ceilf=Math_ceil;
  function _exp2(x) {
      return Math.pow(2, x);
    }
  function _ldexp(x, exp_) {
      return x * Math.pow(2, exp_);
    }
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }
  function _llvm_eh_typeid_for(type) {
      return type;
    }
  Module["_tolower"] = _tolower;
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  Module["_strcpy"] = _strcpy;
  Module["_strncpy"] = _strncpy;
  var ___strtok_state=0;
  function _strtok_r(s, delim, lasts) {
      var skip_leading_delim = 1;
      var spanp;
      var c, sc;
      var tok;
      if (s == 0 && (s = getValue(lasts, 'i8*')) == 0) {
        return 0;
      }
      cont: while (1) {
        c = getValue(s++, 'i8');
        for (spanp = delim; (sc = getValue(spanp++, 'i8')) != 0;) {
          if (c == sc) {
            if (skip_leading_delim) {
              continue cont;
            } else {
              setValue(lasts, s, 'i8*');
              setValue(s - 1, 0, 'i8');
              return s - 1;
            }
          }
        }
        break;
      }
      if (c == 0) {
        setValue(lasts, 0, 'i8*');
        return 0;
      }
      tok = s - 1;
      for (;;) {
        c = getValue(s++, 'i8');
        spanp = delim;
        do {
          if ((sc = getValue(spanp++, 'i8')) == c) {
            if (c == 0) {
              s = 0;
            } else {
              setValue(s - 1, 0, 'i8');
            }
            setValue(lasts, s, 'i8*');
            return tok;
          }
        } while (sc != 0);
      }
      abort('strtok_r error!');
    }function _strtok(s, delim) {
      return _strtok_r(s, delim, ___strtok_state);
    }
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  function ___cxa_bad_typeid() {
  Module['printErr']('missing function: __cxa_bad_typeid'); abort(-1);
  }
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  var _sin=Math_sin;
  var _cos=Math_cos;
  var _atan2=Math_atan2;
  var _abs=Math_abs;
  function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }
  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _isalpha(chr) {
      return (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  function _isalnum(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  function _isascii(chr) {
      return chr >= 0 && (chr & 0x80) == 0;
    }
  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }
  function ___cxa_guard_release() {}
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___errno_location() {
      return ___errno_state;
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _abort() {
      Module['abort']();
    }
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)] + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function ___cxa_guard_abort() {}
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  var _isdigit_l=_isdigit;
  function _catopen() { throw 'TODO: ' + aborter }
  function _catgets() { throw 'TODO: ' + aborter }
  function _catclose() { throw 'TODO: ' + aborter }
  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }
  function _freelocale(locale) {
      _free(locale);
    }
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
      var pattern = Pointer_stringify(format);
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }var _strftime_l=_strftime;
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _isblank(chr) {
      return chr == 32 || chr == 9;
    }
  function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return Module['dynCall_iii'](cmp, base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            ['experimental-webgl', 'webgl'].some(function(webglId) {
              return ctx = canvas.getContext(webglId, contextAttributes);
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
___strtok_state = Runtime.staticAlloc(4);
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 16777216;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiid(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vidd(index,a1,a2,a3) {
  try {
    Module["dynCall_vidd"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiidd(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiidd"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var p=env.___fsmu8|0;var q=env.__ZTIc|0;var r=env._stdout|0;var s=env.__ZTVN10__cxxabiv119__pointer_type_infoE|0;var t=env.___dso_handle|0;var u=env._stdin|0;var v=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var w=env._stderr|0;var x=+env.NaN;var y=+env.Infinity;var z=0;var A=0;var B=0;var C=0;var D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0.0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=0;var V=0;var W=global.Math.floor;var X=global.Math.abs;var Y=global.Math.sqrt;var Z=global.Math.pow;var _=global.Math.cos;var $=global.Math.sin;var aa=global.Math.tan;var ab=global.Math.acos;var ac=global.Math.asin;var ad=global.Math.atan;var ae=global.Math.atan2;var af=global.Math.exp;var ag=global.Math.log;var ah=global.Math.ceil;var ai=global.Math.imul;var aj=env.abort;var ak=env.assert;var al=env.asmPrintInt;var am=env.asmPrintFloat;var an=env.min;var ao=env.invoke_viiiii;var ap=env.invoke_vi;var aq=env.invoke_vii;var ar=env.invoke_viiiid;var as=env.invoke_ii;var at=env.invoke_iiiiii;var au=env.invoke_vidd;var av=env.invoke_iiii;var aw=env.invoke_viiiiid;var ax=env.invoke_viiiiiiii;var ay=env.invoke_viiiiii;var az=env.invoke_viiiiidd;var aA=env.invoke_di;var aB=env.invoke_viid;var aC=env.invoke_viiiiiii;var aD=env.invoke_viiiiiid;var aE=env.invoke_viiiiiiiii;var aF=env.invoke_iii;var aG=env.invoke_diii;var aH=env.invoke_iiiii;var aI=env.invoke_viii;var aJ=env.invoke_v;var aK=env.invoke_iiiiiiiii;var aL=env.invoke_viiii;var aM=env._llvm_lifetime_end;var aN=env._lseek;var aO=env._rand;var aP=env.__scanString;var aQ=env._fclose;var aR=env._pthread_mutex_lock;var aS=env.___cxa_end_catch;var aT=env._strtoull;var aU=env._fflush;var aV=env._strtol;var aW=env._fputc;var aX=env._strtok;var aY=env._fwrite;var aZ=env._send;var a_=env._fputs;var a$=env._isspace;var a0=env._read;var a1=env._ceil;var a2=env._fsync;var a3=env.___cxa_guard_abort;var a4=env._newlocale;var a5=env.___gxx_personality_v0;var a6=env._isblank;var a7=env._pthread_cond_wait;var a8=env.___cxa_rethrow;var a9=env.___resumeException;var ba=env._strcmp;var bb=env._memchr;var bc=env._llvm_va_end;var bd=env._vsscanf;var be=env._snprintf;var bf=env._fgetc;var bg=env.__getFloat;var bh=env._atexit;var bi=env.___cxa_free_exception;var bj=env._close;var bk=env._strchr;var bl=env.___setErrNo;var bm=env._isxdigit;var bn=env._ftell;var bo=env._abs;var bp=env._exit;var bq=env._sprintf;var br=env.___ctype_b_loc;var bs=env._freelocale;var bt=env._catgets;var bu=env.__isLeapYear;var bv=env._asprintf;var bw=env.___cxa_is_number_type;var bx=env.___cxa_does_inherit;var by=env.___cxa_guard_acquire;var bz=env.___cxa_begin_catch;var bA=env._recv;var bB=env.__parseInt64;var bC=env.__ZSt18uncaught_exceptionv;var bD=env._cos;var bE=env.___cxa_call_unexpected;var bF=env._round;var bG=env.__exit;var bH=env._strftime;var bI=env._strncmp;var bJ=env.___cxa_throw;var bK=env._ldexp;var bL=env._llvm_eh_exception;var bM=env._pread;var bN=env._fopen;var bO=env._open;var bP=env.__arraySum;var bQ=env._sysconf;var bR=env._isalnum;var bS=env._exp2;var bT=env._qsort;var bU=env._isalpha;var bV=env.___cxa_find_matching_catch;var bW=env._fread;var bX=env.__formatString;var bY=env._pthread_cond_broadcast;var bZ=env.__ZSt9terminatev;var b_=env._atoi;var b$=env._isascii;var b0=env._pthread_mutex_unlock;var b1=env._llvm_pow_f64;var b2=env._sbrk;var b3=env.___errno_location;var b4=env._strerror;var b5=env._catclose;var b6=env._llvm_lifetime_start;var b7=env.__parseInt;var b8=env.___cxa_guard_release;var b9=env._ungetc;var ca=env._uselocale;var cb=env._vsnprintf;var cc=env._sscanf;var cd=env.___assert_fail;var ce=env._srand;var cf=env._strtok_r;var cg=env._abort;var ch=env._fprintf;var ci=env._isdigit;var cj=env._strtoll;var ck=env.__addDays;var cl=env._fabs;var cm=env._floor;var cn=env.__reallyNegative;var co=env._fseek;var cp=env.___cxa_bad_typeid;var cq=env._write;var cr=env.___cxa_allocate_exception;var cs=env._sin;var ct=env._ceilf;var cu=env.___cxa_pure_virtual;var cv=env._vasprintf;var cw=env._catopen;var cx=env.___ctype_toupper_loc;var cy=env.___ctype_tolower_loc;var cz=env._llvm_eh_typeid_for;var cA=env._pwrite;var cB=env._strerror_r;var cC=env._atan2;var cD=env._time;var cE=0.0;
// EMSCRIPTEN_START_FUNCS
function kw(b,e,f,j,k){b=b|0;e=e|0;f=f|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0.0,Z=0,_=0.0,$=0.0,aa=0,ab=0,ac=0.0,ad=0,ae=0,af=0,ag=0.0,ah=0.0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0,ar=0.0,as=0.0,at=0,au=0,av=0.0,aw=0,ax=0,ay=0,az=0.0,aA=0,aB=0.0,aC=0.0,aD=0.0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0.0,aM=0.0,aN=0,aO=0,aP=0,aQ=0.0,aR=0.0,aS=0,aT=0,aU=0.0,aV=0.0,aW=0.0,aX=0.0,aY=0,aZ=0.0,a_=0.0;f=i;i=i+80|0;l=f|0;m=i;i=i+16|0;n=i;i=i+16|0;o=i;i=i+80|0;p=o;q=i;i=i+80|0;r=q;s=i;i=i+80|0;t=s;u=i;i=i+80|0;v=u;w=i;i=i+20|0;i=i+7&-8;if((c[14182]|0)==0){c[10760]=c[10760]&-2050}jL(j+144|0,j|0);if((c[j+156>>2]|0)==0){i=f;return}x=j+152|0;y=c[(c[x>>2]|0)+8>>2]|0;if((y|0)==0){z=0}else{z=yc(y,37064,37496,-1)|0}c[14282]=c[14282]&-129;y=c[10760]|0;c[10760]=y&-15;h[4940]=0.0;yC(l|0,0,80);A=k+116|0;B=(a[z+190|0]&1)+(c[z+152>>2]|0)|0;c[10760]=y&-239;y=k+100|0;if((a[y]|0)==0){C=d[k+105|0]|0;D=b+4|0;E=c[D>>2]|0;F=c[E+344+(C<<3)>>2]|0;G=a[E+92|0]|0;H=+(F-((ai(G,F)|0)/20|0)|0);F=c[E+344+(C<<3)+4>>2]|0;I=+(F-((ai(G,F)|0)/20|0)|0);J=+((d[E+82|0]|0)>>>1|0);h[m>>3]=H-J;h[m+8>>3]=I-J;K=D}else{yC(m|0,0,16);K=b+4|0}D=c[A>>2]|0;a[57152]=1;a[57160]=a[z+200|0]|0;E=j+148|0;j=z;z=0;F=0;G=0;C=B;L=B;B=c[x>>2]|0;while(1){if(iB(j)|0){M=(a[j+190|0]&1)+(c[j+152>>2]|0)|0}else{M=C}if((M|0)>4){c[44428+(z<<4)>>2]=j;do{if((c[14182]|0)==0){if(!(iB(j)|0)){break}x=j;a[x+201|0]=a[57152]|0;if((a[57152]|0)==0){a[j+200|0]=a[57160]|0}N=c[10760]|0;if((N&1|0)!=0){break}if((a[x+194|0]&8)==0){break}c[10760]=N|1}}while(0);g[44416+(z<<4)>>2]=+((c[j+112>>2]|0)+(c[j+100>>2]|0)-((d[(c[K>>2]|0)+82|0]|0)>>>1)|0);N=44424+(z<<4)|0;c[N>>2]=c[N>>2]&-256|M&255;do{if(iB(j)|0){if((a[j+148|0]|0)==0|(z|0)==0){O=F;break}c[l+(F<<2)>>2]=z;O=F+1|0}else{O=F}}while(0);if(iB(j)|0){N=c[10760]|0;if(!((N&8|0)!=0|(M|0)==(L|0))){c[10760]=N|8}P=(M|0)<(G|0)?G:M;Q=(L|0)<(M|0)?L:M}else{P=G;Q=L}R=z+1|0;S=O;T=P;U=Q}else{R=z;S=F;T=G;U=L}N=c[B+4>>2]|0;if((N|0)==(E|0)){V=1408;break}x=c[N+8>>2]|0;if((x|0)==0){V=1530;break}W=yc(x,37064,37496,-1)|0;if((W|0)==0){V=1531;break}else{j=W;z=R;F=S;G=T;C=M;L=U;B=N}}if((V|0)==1408){B=R-1|0;U=(R|0)>0;if(!U){i=f;return}L=c[10760]|0;J=0.0;M=0;do{C=L>>>1&3;do{if((C|0)==0){G=44424+(M<<4)|0;c[G>>2]=c[G>>2]&-65281;I=+((c[A>>2]|0)+(c[(c[44428+(M<<4)>>2]|0)+104>>2]|0)|0);g[44420+(M<<4)>>2]=I;Y=I}else if((C|0)==1){G=c[44428+(M<<4)>>2]|0;F=44424+(M<<4)|0;z=c[F>>2]&-65281;if((a[G+116|0]|0)==0){c[F>>2]=z;g[44420+(M<<4)>>2]=0.0;Y=0.0;break}else{c[F>>2]=z|256;I=+((c[G+104>>2]|0)+D|0);g[44420+(M<<4)>>2]=I;Y=I;break}}else if((C|0)==2){G=c[44428+(M<<4)>>2]|0;z=44424+(M<<4)|0;F=c[z>>2]&-65281;if((a[G+116|0]|0)==0){c[z>>2]=F|256;I=+((c[G+104>>2]|0)+D|0);g[44420+(M<<4)>>2]=I;Y=I;break}else{c[z>>2]=F;g[44420+(M<<4)>>2]=0.0;Y=0.0;break}}else{Y=+g[44420+(M<<4)>>2]}}while(0);J=J+Y;M=M+1|0;}while((M|0)<(R|0));if((R|0)<2){i=f;return}M=c[10760]|0;A=M&-1793;c[10760]=A;L=(a[57152]|0)==0;do{if(L){V=1427}else{if((M&6|0)!=0){V=1427;break}C=k+105|0;Y=+(D-(c[(c[K>>2]|0)+252+(d[C]<<2)>>2]<<1)|0);I=J/+(R|0);if(I<Y){F=A|256;c[10760]=F;Z=F}else{Z=A}if((c[14282]&192|0)==192){i=f;return}else{_=Y;$=I;aa=Z;ab=C;break}}}while(0);if((V|0)==1427){Z=d[57160]<<8&1792|A;c[10760]=Z;_=0.0;$=J;aa=Z;ab=k+105|0}k=d[ab]|0;Z=c[K>>2]|0;A=c[Z+312+(k<<2)>>2]|0;do{if((a[(c[44428+(B<<4)>>2]|0)+109|0]&1)==0){D=c[Z+320+(k<<2)>>2]|0;M=D+A|0;J=+(ai(M,T-5|0)|0);C=c[Z+252+(k<<2)>>2]|0;if((T|0)>5){ac=+(C|0)*+g[9886];ad=A;ae=D;af=M;ag=J;break}else{ac=+(C|0)*(+g[9886]+.5);ad=A;ae=D;af=M;ag=J;break}}else{M=(A|0)/2|0;D=(M|0)>2?M:2;M=(c[Z+320+(k<<2)>>2]|0)-1|0;C=(M|0)>2?M:2;M=C+D|0;J=+(ai(M,T-5|0)|0);ac=+((c[Z+244+(k<<2)>>2]|0)*5|0|0);ad=D;ae=C;af=M;ag=J}}while(0);J=ag+ac;k=(aa&1792|0)==0;if(k){if((a[y]|0)==0){y=m|0;h[y>>3]=-0.0- +h[y>>3];y=m+8|0;h[y>>3]=-0.0- +h[y>>3]}ah=-0.0-J}else{ah=J}J=$+ah;do{if(L){aj=ah}else{if(k){if(J<=_){aj=ah;break}}else{if(J>=_){aj=ah;break}}aj=ah+(_-J)}}while(0);if(U){J=0.0;_=0.0;ah=0.0;$=0.0;k=0;while(1){L=~~(aj+ +g[44420+(k<<4)>>2]);c[42720+(k<<2)>>2]=L;y=44428+(k<<4)|0;aa=c[y>>2]|0;Z=44416+(k<<4)|0;ac=+h[m+((a[aa+109|0]&1)<<3)>>3]+ +g[Z>>2];g[Z>>2]=ac;ag=_+ +(L|0);I=J+ac;Y=$+ac*ac;H=ah+ +(L|0)*ac;if(iB(aa)|0){a[(c[y>>2]|0)+200|0]=(c[10760]|0)>>>8&7}y=k+1|0;if((y|0)<(R|0)){J=I;_=ag;ah=H;$=Y;k=y}else{ak=I;al=ag;am=H;an=Y;break}}}else{ak=0.0;al=0.0;am=0.0;an=0.0}$=+(R|0);ah=$*am-ak*al;am=$*an-ak*ak;if(ah!=0.0&am!=0.0){ao=ah/am}else{ao=0.0}h[4941]=ao;am=+X(+ao);k=c[K>>2]|0;if(am<+g[k+764>>2]){h[4941]=0.0;ap=0.0;aq=c[K>>2]|0}else{ap=ao;aq=k}ao=+X(+ap);am=+g[aq+768>>2];if(ao>am){if(ap>0.0){ar=am}else{ar=-0.0-am}am=ar;h[4941]=am;as=am}else{as=ap}ap=(al-ak*as)/$;h[4942]=ap;aq=c[10760]|0;if((S|0)==0){at=(aq&8|0)==0?T-4|0:1}else{at=1}k=aq&-17;c[10760]=k;if(U){m=(aq&6|0)!=0&(a[57152]|0)!=0;y=(aq&1792|0)==0;aq=0;$=+h[4940];while(1){aa=42720+(aq<<2)|0;ak=+(c[aa>>2]|0);L=~~(ap+$+as*+g[44416+(aq<<4)>>2]);c[aa>>2]=L;do{if(m){au=aq;av=$}else{al=+(L|0);if(y){if(ak>=al){au=aq;av=$;break}}else{if(ak<=al){au=aq;av=$;break}}al=$+(ak- +(L|0));h[4940]=al;au=-1;av=al}}while(0);L=au+1|0;if((L|0)<(R|0)){aq=L;$=av}else{break}}}if((c[14182]|0)!=0){i=f;return}if(U){U=0;aq=0;au=k;while(1){do{if((au&16|0)==0){y=c[42720+(aq<<2)>>2]|0;m=c[K>>2]|0;L=d[m+82|0]|0;if((au&1792|0)==0){aa=L+y|0;Z=~~(+g[44420+(aq<<4)>>2]- +g[m+416+(d[ab]<<2)>>2]);A=~~+g[44416+(aq<<4)>>2];M=44428+(aq<<4)|0;c[(c[M>>2]|0)+128>>2]=A;c[(c[M>>2]|0)+120>>2]=A;c[(c[M>>2]|0)+124>>2]=Z;c[(c[M>>2]|0)+132>>2]=aa;a[(c[M>>2]|0)+136|0]=0;aw=Z;ax=aa;break}else{aa=y-L|0;L=~~(+g[44420+(aq<<4)>>2]+ +g[m+416+(d[ab]<<2)>>2]);m=~~+g[44416+(aq<<4)>>2];y=44428+(aq<<4)|0;c[(c[y>>2]|0)+128>>2]=m;c[(c[y>>2]|0)+120>>2]=m;c[(c[y>>2]|0)+124>>2]=L;c[(c[y>>2]|0)+132>>2]=aa;a[(c[y>>2]|0)+136|0]=1;aw=L;ax=aa;break}}else{av=+g[44420+(aq<<4)>>2];$=+g[(c[K>>2]|0)+416+(d[ab]<<2)>>2];if((c[44424+(aq<<4)>>2]&65280|0)==0){aw=~~(av+$);ax=U;break}else{aw=~~(av-$);ax=U;break}}}while(0);aa=44428+(aq<<4)|0;do{if(iB(c[aa>>2]|0)|0){if((a[(c[aa>>2]|0)+192|0]|0)==7){break}k$(b,e,aw,ax,~~+g[44416+(aq<<4)>>2],d[(c[K>>2]|0)+82|0]|0)}}while(0);aa=aq+1|0;L=c[10760]|0;if((aa|0)<(R|0)){U=ax;aq=aa;au=L}else{ay=L;break}}}else{ay=k}g[11104]=+g[11104]- +(((d[(c[K>>2]|0)+82|0]|0)-1|0)/3|0|0);k=44416+(B<<4)|0;$=+g[k>>2]+ +(((d[(c[K>>2]|0)+82|0]|0)-1|0)/3|0|0);g[k>>2]=$;if((ay&1792|0)==0){az=1.0}else{az=(ay&16|0)!=0?1.0:-1.0}au=~~+g[11104];aq=~~$;if((at|0)>0){ax=~~(+(ad|0)*az);$=+(ae|0)*az;U=c[10680]|0;aw=c[42720+(B<<2)>>2]|0;B=0;while(1){L=k3(b,e,au,U,aq,aw,ax)|0;aa=B+1|0;if((aa|0)<(at|0)){U=~~($+ +(L+U|0));aw=~~($+ +(L+aw|0));B=aa}else{break}}aA=c[10760]|0}else{aA=ay}if((aA&8|S|0)==0){i=f;return}ay=at+5|0;$=+(((aA&16|0)==0?af:ae)|0);if((aA&1792|0)==0){aB=$}else{aB=-0.0-$}if((ay|0)>(T|0)){i=f;return}ae=(S|0)<0;$=+(af|0);af=w|0;at=(c[l>>2]|0)==0;B=at&1^1;av=+h[n+8>>3];as=+h[n>>3];ap=+(ad|0);ak=az;az=aB;ad=ay;ay=0;n=aA;while(1){L1668:do{if(ae){aC=ak;aD=az;aE=ay;aF=n}else{aB=ak;al=az;aA=1;aw=0;U=0;ax=ay;aq=n;while(1){au=c[l+(U<<2)>>2]|0;yC(v|0,0,80);yC(r|0,0,80);yC(t|0,0,80);yC(p|0,0,80);aa=(au|0)==0?R:au;a[af]=0;if((aw|0)<(aa|0)){au=aw;L=0;y=ax;while(1){m=c[44424+(au<<4)>>2]|0;do{if((m&255)>>>0<ad>>>0){if((c[o+(L<<2)>>2]|0)==0){aG=y;aH=L;break}Z=L+1|0;a[w+Z|0]=0;aG=y;aH=Z}else{Z=~~+g[44416+(au<<4)>>2];c[q+(L<<2)>>2]=Z;M=c[42720+(au<<2)>>2]|0;c[u+(L<<2)>>2]=M;A=o+(L<<2)|0;if((c[A>>2]|0)!=0){aG=y;aH=L;break}c[A>>2]=Z;c[s+(L<<2)>>2]=M;M=(L|0)==0?au:y;if((m&65280|0)!=0){aG=M;aH=L;break}a[w+L|0]=1;aG=M;aH=L}}while(0);m=au+1|0;if((m|0)<(aa|0)){au=m;L=aH;y=aG}else{aI=aa;aJ=aH;aK=aG;break}}}else{aI=aw;aJ=0;aK=ax}aa=q+(aJ<<2)|0;y=c[aa>>2]|0;L=(((y|0)==0)<<31>>31)+aJ|0;au=(aq&16|0)!=0;L1682:do{if((L|0)<0){aL=aB;aM=al;aN=au;aO=aq}else{m=~~al;am=+(((m|0)>-1?m:-m|0)|0);ar=-0.0-am;if((aK|0)==(aw|0)){aP=0;aQ=aB;aR=al;aS=au;aT=y}else{m=0;ao=aB;ah=al;M=au;while(1){do{if(M){Z=~~ao;an=+(((Z|0)>-1?Z:-Z|0)|0);if((a[w+m|0]|0)==0){h[4940]=av;aU=am;aV=an;break}else{h[4940]=as;aU=ar;aV=-0.0-an;break}}else{aU=ah;aV=ao}}while(0);Z=o+(m<<2)|0;A=c[Z>>2]|0;C=c[q+(m<<2)>>2]|0;do{if((A|0)==(C|0)){D=~~(aU+ +(c[s+(m<<2)>>2]|0));F=A-(c[(c[K>>2]|0)+360+((d[ab]|0)*12|0)>>2]|0)|0;c[Z>>2]=F;z=~~(aU+(+h[4942]+ +h[4940])+ +(F|0)*+h[4941]);G=~~(ap*aV);k3(b,e,F,z,A,D,G)|0}else{if((A|0)==0){break}G=~~(aU+ +(c[s+(m<<2)>>2]|0));D=~~(aU+ +(c[u+(m<<2)>>2]|0));z=~~(ap*aV);k3(b,e,A,G,C,D,z)|0}}while(0);C=m+1|0;A=c[10760]|0;Z=(A&16|0)!=0;if((C|0)>(((L|0)>20?20:L)|0)){aL=aV;aM=aU;aN=Z;aO=A;break L1682}else{m=C;ao=aV;ah=aU;M=Z}}}while(1){do{if(aS){M=~~aQ;ah=+(((M|0)>-1?M:-M|0)|0);if((a[w+aP|0]|0)==0){h[4940]=av;aW=am;aX=ah;break}else{h[4940]=as;aW=ar;aX=-0.0-ah;break}}else{aW=aR;aX=aQ}}while(0);M=o+(aP<<2)|0;m=c[M>>2]|0;Z=q+(aP<<2)|0;C=c[Z>>2]|0;L1706:do{if((m|0)==(C|0)){do{if((aP|0)==0){if(+(m|0)==+g[k>>2]){break}A=~~(aW+ +(c[s>>2]|0));z=(c[(c[K>>2]|0)+360+((d[ab]|0)*12|0)>>2]|0)+m|0;c[Z>>2]=z;D=~~(aW+(+h[4942]+ +h[4940])+ +(z|0)*+h[4941]);G=~~(ap*aX);k3(b,e,m,A,z,D,G)|0;aY=c[aa>>2]|0;break L1706}}while(0);G=~~(aW+ +(c[s+(aP<<2)>>2]|0));D=m-(c[(c[K>>2]|0)+360+((d[ab]|0)*12|0)>>2]|0)|0;c[M>>2]=D;z=~~(aW+(+h[4942]+ +h[4940])+ +(D|0)*+h[4941]);A=~~(ap*aX);k3(b,e,D,z,m,G,A)|0;aY=aT}else{if((m|0)==0){aY=aT;break}A=~~(aW+ +(c[s+(aP<<2)>>2]|0));G=~~(aW+ +(c[u+(aP<<2)>>2]|0));z=~~(ap*aX);k3(b,e,m,A,C,G,z)|0;aY=aT}}while(0);C=aP+1|0;m=(((aY|0)==0)<<31>>31)+aJ|0;M=c[10760]|0;Z=(M&16|0)!=0;if((C|0)>(((m|0)>20?20:m)|0)){aL=aX;aM=aW;aN=Z;aO=M;break}else{aP=C;aQ=aX;aR=aW;aS=Z;aT=aY}}}}while(0);if(aN){aa=~~al;L=~~aL;aZ=+(((aa|0)>-1?aa:-aa|0)|0);a_=+(((L|0)>-1?L:-L|0)|0)}else{aZ=aM;a_=aL}if((aA|0)>(S|0)){aC=a_;aD=aZ;aE=aK;aF=aO;break L1668}aB=a_;al=aZ;aA=aA+1|0;aw=at?0:aI;U=B+U|0;ax=aK;aq=aO}}}while(0);aq=ad+1|0;if((aq|0)>(T|0)){break}else{ak=aC;az=aD+$*aC;ad=aq;ay=aE;n=aF}}i=f;return}else if((V|0)==1530){i=f;return}else if((V|0)==1531){i=f;return}}function kx(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a;a=c[d>>2]|0;e=c[d+4>>2]|0;f=b;b=c[f+4>>2]|0;c[d>>2]=c[f>>2];c[d+4>>2]=b;c[f>>2]=a;c[f+4>>2]=e;return}function ky(){var a=0;yC(56736,0,32);a=56768;do{c[a>>2]=0;c[a+4>>2]=0;a=a+8|0;}while((a|0)!=57104);return}function kz(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;if((e|0)==0){cd(9928,16216,50,20472)}if((g|0)==0){cd(13544,16216,51,20472)}h=a+28|0;i=c[h>>2]|0;c[h>>2]=(c[a+32>>2]|0)==(d|0)?16711680:0;j=c[d+96>>2]|0;k=c[(c[a+4>>2]|0)+772>>2]|0;do{if((j|0)==-2147483647){if((k|0)==0){l=iJ(d)|0;c[d+100>>2]=(c[f+108>>2]|0)+l;break}else{cd(11936,16216,66,20472)}}else{if((k|0)==2){c[d+100>>2]=j;break}else{cd(10912,16216,73,20472)}}}while(0);if((d|0)==0){c[h>>2]=i;return}j=d;if((yc(j,37496,36968,-1)|0)!=0){kA(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37272,-1)|0)!=0){kB(a,b,d,e,f,g);c[h>>2]=i;return}if((yc(j,37496,37256,-1)|0)!=0){kC(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37512,-1)|0)!=0){kD(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37080,-1)|0)!=0){kE(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,36736,-1)|0)!=0){kF(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37216,-1)|0)!=0){kG(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37160,-1)|0)!=0){kG(a,b,d,e,g);c[h>>2]=i;return}if((yc(j,37496,37032,-1)|0)!=0){kH(a,b,d,e,g,0);c[h>>2]=i;return}if((yc(j,37496,37304,-1)|0)!=0){kI(a,b,d,e,g,f);c[h>>2]=i;return}if((yc(j,37496,36984,-1)|0)!=0){kJ(a,b,d,e,f,g);c[h>>2]=i;return}if((yc(j,37496,36936,-1)|0)==0){c[h>>2]=i;return}kK(a,b,d,e,f,g);c[h>>2]=i;return}function kA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+32|0;j=h|0;k=h+16|0;if((f|0)==0){cd(9928,16216,1026,20504)}if((g|0)==0){cd(13544,16216,1027,20504)}f=g+16|0;if((c[f>>2]|0)==0){cd(16736,16216,1028,20504)}if((e|0)==0){cd(16328,16216,1029,20504)}l=e;if((yc(l,37496,36968,-1)|0)==0){cd(16328,16216,1029,20504)}m=yc(l,37496,36968,-1)|0;l=(c[m+112>>2]|0)+(c[e+100>>2]|0)|0;n=c[(c[d>>2]|0)+116>>2]|0;o=e|0;p=j;a[p]=14;q=j+1|0;a[q]=a[15936]|0;a[q+1|0]=a[15937]|0;a[q+2|0]=a[15938]|0;a[q+3|0]=a[15939]|0;a[q+4|0]=a[15940]|0;a[q+5|0]=a[15941]|0;a[q+6|0]=a[15942]|0;q=j+8|0;a[q]=0;r=e+32|0;if((a[r]&1)==0){s=k;c[s>>2]=c[r>>2];c[s+4>>2]=c[r+4>>2];c[s+8>>2]=c[r+8>>2]}else{r=c[e+40>>2]|0;s=c[e+36>>2]|0;if(s>>>0>4294967279>>>0){qo(0)}if(s>>>0<11>>>0){a[k]=s<<1&255;t=k+1|0}else{e=s+16&-16;u=yp(e)|0;c[k+8>>2]=u;c[k>>2]=e|1;c[k+4>>2]=s;t=u}yA(t|0,r|0,s)|0;a[t+s|0]=0}c0[n&63](d,o,j,k);if((a[k]&1)!=0){yr(c[k+8>>2]|0)}if((a[p]&1)!=0){yr(c[q>>2]|0)}if((a[m+148|0]&1)==0){v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=h;return}li(b,d,c[f>>2]|0,l,g);v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=h;return}function kB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((f|0)==0){cd(9928,16216,187,20248)}if((h|0)==0){cd(13544,16216,188,20248)}if((e|0)==0){m=0}else{m=yc(e,37496,37272,-1)|0}n=c[(c[d>>2]|0)+116>>2]|0;o=e|0;p=k;q=k;a[q]=8;r=p+1|0;E=1835099490;a[r]=E&255;E=E>>8;a[r+1|0]=E&255;E=E>>8;a[r+2|0]=E&255;E=E>>8;a[r+3|0]=E&255;a[p+5|0]=0;p=e+32|0;if((a[p]&1)==0){r=l;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2]}else{p=c[e+40>>2]|0;r=c[e+36>>2]|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[l]=r<<1&255;s=l+1|0}else{e=r+16&-16;t=yp(e)|0;c[l+8>>2]=t;c[l>>2]=e|1;c[l+4>>2]=r;s=t}yA(s|0,p|0,r)|0;a[s+r|0]=0}c0[n&63](d,o,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[q]&1)!=0){yr(c[k+8>>2]|0)}k=m+8|0;q=m+4|0;l=c[q>>2]|0;if((c[k>>2]|0)==(l|0)){u=m|0;ik(f,u);v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=j;return}else{z=0;A=l}do{l=c[A+(z<<2)>>2]|0;do{if((l|0)!=0){if((yc(l,37064,37496,-1)|0)==0){break}n=c[(c[q>>2]|0)+(z<<2)>>2]|0;if((n|0)==0){B=0}else{B=yc(n,37064,37496,-1)|0}kz(b,d,B,f,g,h)}}while(0);z=z+1|0;A=c[q>>2]|0;}while(z>>>0<(c[k>>2]|0)-A>>2>>>0);u=m|0;ik(f,u);v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=j;return}function kC(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((g|0)==0){cd(9928,16216,1052,19880)}if((h|0)==0){cd(13544,16216,1053,19880)}if((f|0)==0){cd(15576,16216,1054,19880)}g=f;if((yc(g,37496,37256,-1)|0)==0){cd(15576,16216,1054,19880)}m=yc(g,37496,37256,-1)|0;g=c[(c[e>>2]|0)+116>>2]|0;n=f|0;o=k;p=k;a[p]=8;q=o+1|0;E=1717922915;a[q]=E&255;E=E>>8;a[q+1|0]=E&255;E=E>>8;a[q+2|0]=E&255;E=E>>8;a[q+3|0]=E&255;a[o+5|0]=0;o=f+32|0;if((a[o]&1)==0){q=l;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2]}else{o=c[f+40>>2]|0;q=c[f+36>>2]|0;if(q>>>0>4294967279>>>0){qo(0)}if(q>>>0<11>>>0){a[l]=q<<1&255;r=l+1|0}else{s=q+16&-16;t=yp(s)|0;c[l+8>>2]=t;c[l>>2]=s|1;c[l+4>>2]=q;r=t}yA(r|0,o|0,q)|0;a[r+q|0]=0}c0[g&63](e,n,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[p]&1)!=0){yr(c[k+8>>2]|0)}k=c[h+116>>2]|0;p=c[f+100>>2]|0;f=a[h+106|0]|0;if((f&255)>>>0>5>>>0){u=k-(ai(c[(c[b+4>>2]|0)+244+((d[h+105|0]|0)<<2)>>2]|0,((f&255)<<1)-10|0)|0)|0}else{u=k}switch(c[m+144>>2]|0){case 5:{v=-47;w=1696;break};case 2:{v=-49;w=1696;break};case 9:{x=-46;w=1698;break};case 6:{x=-47;w=1698;break};case 1:{y=-49;w=1699;break};case 4:{z=-48;w=1701;break};case 7:{z=-47;w=1701;break};case 10:{A=-48;B=u;break};case 3:{C=-50;w=1704;break};case 8:{C=-49;w=1704;break};case 11:{D=-49;F=u;w=1705;break};case 12:{A=-104;B=u-(c[(c[b+4>>2]|0)+252+((d[h+105|0]|0)<<2)>>2]<<1)|0;break};default:{A=-49;B=u}}if((w|0)==1696){A=v;B=u-(c[(c[b+4>>2]|0)+260+((d[h+105|0]|0)<<2)>>2]|0)|0}else if((w|0)==1698){y=x;w=1699}else if((w|0)==1701){A=z;B=u-(c[(c[b+4>>2]|0)+252+((d[h+105|0]|0)<<2)>>2]<<1)|0}else if((w|0)==1704){D=C;F=u-(c[(c[b+4>>2]|0)+252+((d[h+105|0]|0)<<2)>>2]|0)|0;w=1705}if((w|0)==1699){A=y;B=((c[(c[b+4>>2]|0)+252+((d[h+105|0]|0)<<2)>>2]|0)*-3|0)+u|0}else if((w|0)==1705){A=D+2&255;B=F}F=c[(c[b+4>>2]|0)+232>>2]|0;D=a[m+109|0]&1;k5(b,e,p-(F<<1)+(D<<24>>24==0?0:F)|0,B,A,h,D<<24>>24!=0);cZ[c[(c[e>>2]|0)+120>>2]&127](e,n,b);i=j;return}function kD(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((g|0)==0){cd(9928,16216,1445,20584)}if((h|0)==0){cd(13544,16216,1446,20584)}if((f|0)==0){m=0}else{m=yc(f,37496,37512,-1)|0}n=ip(g,f)|0;if((n|0)==0){i=j;return}o=c[(c[e>>2]|0)+116>>2]|0;p=f|0;q=k;r=k;a[r]=12;s=q+1|0;a[s]=a[13256]|0;a[s+1|0]=a[13257]|0;a[s+2|0]=a[13258]|0;a[s+3|0]=a[13259]|0;a[s+4|0]=a[13260]|0;a[s+5|0]=a[13261]|0;a[q+7|0]=0;q=f+32|0;if((a[q]&1)==0){s=l;c[s>>2]=c[q>>2];c[s+4>>2]=c[q+4>>2];c[s+8>>2]=c[q+8>>2]}else{q=c[f+40>>2]|0;s=c[f+36>>2]|0;if(s>>>0>4294967279>>>0){qo(0)}if(s>>>0<11>>>0){a[l]=s<<1&255;t=l+1|0}else{u=s+16&-16;v=yp(u)|0;c[l+8>>2]=v;c[l>>2]=u|1;c[l+4>>2]=s;t=v}yA(t|0,q|0,s)|0;a[t+s|0]=0}c0[o&63](e,p,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[r]&1)!=0){yr(c[k+8>>2]|0)}k=m+152|0;if((c[k>>2]|0)>0){r=n+144|0;n=f+104|0;l=f+100|0;o=h+105|0;s=b+4|0;t=h+116|0;q=m+156|0;v=0;do{u=h5(m,v)|0;w=iq(g,f)|0;x=h5(m,v)|0;y=lk(b,h,u,w,h6(m,x,c[r>>2]&255)|0)|0;c[n>>2]=y;x=(ai((c[(c[s>>2]|0)+392+(d[o]<<3)>>2]|0)+5|0,v)|0)+(c[l>>2]|0)|0;k5(b,e,x,(c[t>>2]|0)+y|0,(a[q]|0)==2?-43:-45,h,0);v=v+1|0;}while((v|0)<(c[k>>2]|0))}cZ[c[(c[e>>2]|0)+120>>2]&127](e,p,b);i=j;return}function kE(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((g|0)==0){cd(9928,16216,1120,20568)}if((h|0)==0){cd(13544,16216,1121,20568)}if((f|0)==0){cd(15016,16216,1122,20568)}g=f;if((yc(g,37496,37080,-1)|0)==0){cd(15016,16216,1122,20568)}m=yc(g,37496,37080,-1)|0;g=c[(c[e>>2]|0)+116>>2]|0;n=f|0;o=k;p=k;a[p]=12;q=o+1|0;a[q]=a[14768]|0;a[q+1|0]=a[14769]|0;a[q+2|0]=a[14770]|0;a[q+3|0]=a[14771]|0;a[q+4|0]=a[14772]|0;a[q+5|0]=a[14773]|0;a[o+7|0]=0;o=f+32|0;if((a[o]&1)==0){q=l;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2]}else{o=c[f+40>>2]|0;q=c[f+36>>2]|0;if(q>>>0>4294967279>>>0){qo(0)}if(q>>>0<11>>>0){a[l]=q<<1&255;r=l+1|0}else{s=q+16&-16;t=yp(s)|0;c[l+8>>2]=t;c[l>>2]=s|1;c[l+4>>2]=q;r=t}yA(r|0,o|0,q)|0;a[r+q|0]=0}c0[g&63](e,n,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[p]&1)!=0){yr(c[k+8>>2]|0)}k=m+148|0;p=c[k>>2]|0;do{if((p|0)==0){l=c[m+164>>2]|0;do{if((l|0)==2){kT(b,e,c[f+100>>2]|0,c[h+116>>2]|0,h)}else if((l|0)==1){g=c[f+100>>2]|0;q=c[h+116>>2]|0;if((a[m+160|0]&1)==0){kU(b,e,g,q,h);break}else{kV(b,e,g,q,h);break}}}while(0);do{if((a[m+168|0]|0)!=0){l=c[h+116>>2]|0;if((e|0)==0){cd(14496,16216,1300,20232)}else{k0(b,e,l,l-(c[(c[b+4>>2]|0)+260+(d[h+105|0]<<2)>>2]|0)|0,c[f+100>>2]|0,3);break}}}while(0);if((a[m+144|0]|0)==0){break}kW(b,e,c[f+100>>2]|0,c[h+116>>2]|0,h)}else{l=a[h+105|0]|0;switch(p|0){case 2:{u=-73;break};case 3:{u=50;break};case 4:{u=51;break};case 5:{u=127;break};case 6:{u=-7;break};default:{u=-116}}if((e|0)==0){break}k5(b,e,c[f+100>>2]|0,((c[(c[b+4>>2]|0)+244+((l&255)<<2)>>2]|0)*-6|0)+(c[h+116>>2]|0)|0,u,h,l<<24>>24!=0)}}while(0);u=c[m+152>>2]|0;if((u|0)==0){v=e;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](e,n,b);i=j;return}p=c[f+100>>2]|0;if((c[m+164>>2]|0)==0){if((c[k>>2]|0)==0){z=p}else{A=1796}}else{A=1796}if((A|0)==1796){z=((c[(c[b+4>>2]|0)+232>>2]|0)*5|0)+p|0}kX(b,e,z,c[h+116>>2]|0,u,c[m+156>>2]|0,h);v=e;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](e,n,b);i=j;return}function kF(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+16|0;k=j|0;l=k;m=i;i=i+12|0;i=i+7&-8;n=i;i=i+12|0;i=i+7&-8;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+4|0;i=i+7&-8;q=i;i=i+144|0;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+12|0;i=i+7&-8;if((g|0)==0){cd(9928,16216,710,20312)}if((h|0)==0){cd(13544,16216,711,20312)}if((f|0)==0){cd(17576,16216,712,20312)}g=f;if((yc(g,37496,36736,-1)|0)==0){cd(17576,16216,712,20312)}t=yc(g,37496,36736,-1)|0;g=c[(c[e>>2]|0)+116>>2]|0;u=f|0;v=m;w=m;a[w]=18;x=v+1|0;yA(x|0,17120,9)|0;a[v+10|0]=0;v=f+32|0;if((a[v]&1)==0){x=n;c[x>>2]=c[v>>2];c[x+4>>2]=c[v+4>>2];c[x+8>>2]=c[v+8>>2]}else{v=c[f+40>>2]|0;x=c[f+36>>2]|0;if(x>>>0>4294967279>>>0){qo(0)}if(x>>>0<11>>>0){a[n]=x<<1&255;y=n+1|0}else{z=x+16&-16;A=yp(z)|0;c[n+8>>2]=A;c[n>>2]=z|1;c[n+4>>2]=x;y=A}yA(y|0,v|0,x)|0;a[y+x|0]=0}c0[g&63](e,u,m,n);if((a[n]&1)!=0){yr(c[n+8>>2]|0)}if((a[w]&1)!=0){yr(c[m+8>>2]|0)}m=(c[t+112>>2]|0)+(c[f+100>>2]|0)|0;f=t+144|0;if((c[f>>2]|0)>999){c[f>>2]=999}t=c[b+4>>2]|0;w=(c[t+232>>2]|0)*5|0;n=h+116|0;g=c[t+252+((d[h+105|0]|0)<<2)>>2]|0;h=(((g|0)/2|0)*-5|0)+(c[n>>2]|0)|0;t=h+g|0;g=m-w|0;x=w+m|0;k2(b,e,g,t-4|0,x,h+4|0);m=h-4|0;h=t+4|0;k$(b,e,m,h,g,4);k$(b,e,m,h,x,4);h=q|0;m=q+8|0;t=m|0;c[t>>2]=23096;w=q+12|0;c[h>>2]=37900;y=q+64|0;c[y>>2]=37920;c[q+4>>2]=0;qS(q+64|0,w);c[q+136>>2]=0;c[q+140>>2]=-1;c[h>>2]=23076;c[q+64>>2]=23116;c[t>>2]=23096;t=w|0;c[t>>2]=23400;v=q+16|0;vl(v);yC(q+20|0,0,24);c[t>>2]=23256;yC(q+44|0,0,16);c[q+60>>2]=24;yC(l|0,0,12);gb(w,k);if((a[l]&1)!=0){yr(c[k+8>>2]|0)}rH(m,c[f>>2]|0)|0;f=c[(c[e>>2]|0)+52>>2]|0;hn(r,w);c0[f&63](e,r,o,p);if((a[r]&1)!=0){yr(c[r+8>>2]|0)}r=c[o>>2]|0;o=c[n>>2]|0;hn(s,w);k6(b,e,((x-g-r|0)/2|0)+g|0,o+5|0,s,0,0);if((a[s]&1)!=0){yr(c[s+8>>2]|0)}cZ[c[(c[e>>2]|0)+120>>2]&127](e,u,b);c[h>>2]=23076;c[y>>2]=23116;c[q+8>>2]=23096;y=q+12|0;c[y>>2]=23256;if((a[q+44|0]&1)!=0){yr(c[q+52>>2]|0)}c[y>>2]=23400;vn(v);qO(q+64|0);i=j;return}function kG(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+64|0;j=h|0;k=h+16|0;l=h+32|0;m=h+48|0;if((f|0)==0){cd(9928,16216,119,20008)}if((g|0)==0){cd(13544,16216,120,20008)}if((e|0)==0){i=h;return}n=e;if((yc(n,37496,37368,-1)|0)==0){i=h;return}if((yc(n,37496,37216,-1)|0)!=0){o=yc(n,37496,37216,-1)|0;p=(a[o+177|0]|0)-4|0;q=c[(c[d>>2]|0)+116>>2]|0;r=e|0;s=j;t=j;a[t]=8;u=s+1|0;E=1702129518;a[u]=E&255;E=E>>8;a[u+1|0]=E&255;E=E>>8;a[u+2|0]=E&255;E=E>>8;a[u+3|0]=E&255;a[s+5|0]=0;s=e+32|0;if((a[s]&1)==0){u=k;c[u>>2]=c[s>>2];c[u+4>>2]=c[s+4>>2];c[u+8>>2]=c[s+8>>2]}else{s=c[e+40>>2]|0;u=c[e+36>>2]|0;if(u>>>0>4294967279>>>0){qo(0)}if(u>>>0<11>>>0){a[k]=u<<1&255;v=k+1|0}else{w=u+16&-16;x=yp(w)|0;c[k+8>>2]=x;c[k>>2]=w|1;c[k+4>>2]=u;v=x}yA(v|0,s|0,u)|0;a[v+u|0]=0}c0[q&63](d,r,j,k);if((a[k]&1)!=0){yr(c[k+8>>2]|0)}if((a[t]&1)!=0){yr(c[j+8>>2]|0)}j=a[o+178|0]|0;c[e+104>>2]=lk(b,g,j,iq(f,e)|0,p)|0;if((a[o+189|0]|0)==0){kL(b,d,e,f,g)}cZ[c[(c[d>>2]|0)+120>>2]&127](d,r,b);i=h;return}if((yc(n,37496,37160,-1)|0)==0){i=h;return}r=yc(n,37496,37160,-1)|0;n=(a[r+176|0]|0)-4|0;o=c[(c[d>>2]|0)+116>>2]|0;p=e|0;j=l;t=l;a[t]=8;k=j+1|0;E=1953719666;a[k]=E&255;E=E>>8;a[k+1|0]=E&255;E=E>>8;a[k+2|0]=E&255;E=E>>8;a[k+3|0]=E&255;a[j+5|0]=0;j=e+32|0;if((a[j]&1)==0){k=m;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2]}else{j=c[e+40>>2]|0;k=c[e+36>>2]|0;if(k>>>0>4294967279>>>0){qo(0)}if(k>>>0<11>>>0){a[m]=k<<1&255;y=m+1|0}else{q=k+16&-16;u=yp(q)|0;c[m+8>>2]=u;c[m>>2]=q|1;c[m+4>>2]=k;y=u}yA(y|0,j|0,k)|0;a[y+k|0]=0}c0[o&63](d,p,l,m);if((a[m]&1)!=0){yr(c[m+8>>2]|0)}if((a[t]&1)!=0){yr(c[l+8>>2]|0)}l=a[r+177|0]|0;if(l<<24>>24==-1){c[e+104>>2]=ll(b,g,c[r+152>>2]&255)|0}else{c[e+104>>2]=lk(b,g,l,iq(f,e)|0,n)|0}kM(b,d,e,f,g);cZ[c[(c[d>>2]|0)+120>>2]&127](d,p,b);i=h;return}function kH(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;if((f|0)==0){cd(9928,16216,1342,20552)}if((g|0)==0){cd(13544,16216,1343,20552)}if((e|0)==0){cd(14112,16216,1344,20552)}i=e;if((yc(i,37496,37032,-1)|0)==0){cd(14112,16216,1344,20552)}j=yc(i,37496,37032,-1)|0;i=(a[j+148|0]|0)-4|0;k=a[j+149|0]|0;c[e+104>>2]=lk(b,g,k,iq(f,(h|0)==0?e:h)|0,i)|0;i=c[j+152>>2]|0;if((i|0)==2){kY(b,d,e,f,g);return}else if((i|0)==3){kZ(b,d,e,f,g);return}else if((i|0)==1){k_(b,d,e,f,g);return}else{return}}function kI(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;k=i;i=i+32|0;l=k|0;m=k+16|0;if((g|0)==0){cd(9928,16216,1480,19920)}if((h|0)==0){cd(13544,16216,1481,19920)}if((f|0)==0){cd(13136,16216,1482,19920)}g=f;if((yc(g,37496,37304,-1)|0)==0){cd(13136,16216,1482,19920)}n=yc(g,37496,37304,-1)|0;g=c[n+144>>2]|0;o=c[n+148>>2]|0;n=jy(h,37016,-1)|0;if((n|0)==0){p=0}else{p=yc(n,37064,37016,-1)|0}n=(g|0)!=0;do{if(n){q=jy(g|0,37016,-1)|0;if((q|0)==0){r=0;break}r=yc(q,37064,37016,-1)|0}else{r=0}}while(0);q=(o|0)!=0;do{if(q){s=jy(o|0,37016,-1)|0;if((s|0)==0){t=1974;break}u=yc(s,37064,37016,-1)|0;s=(p|0)==0;if((u|0)==0|s|(u|0)==(p|0)){v=s;break}s=c[g+140>>2]|0;if((s|0)==0){i=k;return}else{w=s}while(1){if((c[w+80>>2]|0)==7){t=1980;break}s=jA(w|0,0)|0;if((s|0)==0){t=2017;break}u=yc(s,37064,36768,-1)|0;if((u|0)==0){t=2018;break}else{w=u}}if((t|0)==1980){k7(b,e,c[g+100>>2]|0,(c[g+104>>2]|0)-14+(c[h+116>>2]|0)|0,(c[w+60>>2]|0)+(c[j+108>>2]|0)|0,1);i=k;return}else if((t|0)==2017){i=k;return}else if((t|0)==2018){i=k;return}}else{t=1974}}while(0);if((t|0)==1974){v=(p|0)==0}if(!((r|0)==0|v|(r|0)==(p|0))){p=c[o+140>>2]|0;if((p|0)==0){i=k;return}else{x=p}while(1){if((c[x+80>>2]|0)!=0){t=1986;break}p=jB(x|0,0)|0;if((p|0)==0){t=2021;break}r=yc(p,37064,36768,-1)|0;if((r|0)==0){t=2022;break}else{x=r}}if((t|0)==1986){x=c[o+100>>2]|0;k7(b,e,x-(c[(c[b+4>>2]|0)+236>>2]|0)|0,(c[o+104>>2]|0)-14+(c[h+116>>2]|0)|0,x,1);i=k;return}else if((t|0)==2021){i=k;return}else if((t|0)==2022){i=k;return}}if(!(n&q)){i=k;return}q=g+104|0;n=h+116|0;t=c[n>>2]|0;x=(t+(c[q>>2]|0)|0)<(t-(c[(c[b+4>>2]|0)+252+((d[h+105|0]|0)<<2)>>2]<<1)|0);h=c[(c[e>>2]|0)+116>>2]|0;t=f|0;r=l;a[r]=6;p=l+1|0;a[p]=a[12984]|0;a[p+1|0]=a[12985]|0;a[p+2|0]=a[12986]|0;a[l+4|0]=0;p=f+32|0;if((a[p]&1)==0){v=m;c[v>>2]=c[p>>2];c[v+4>>2]=c[p+4>>2];c[v+8>>2]=c[p+8>>2]}else{p=c[f+40>>2]|0;v=c[f+36>>2]|0;if(v>>>0>4294967279>>>0){qo(0)}if(v>>>0<11>>>0){a[m]=v<<1&255;y=m+1|0}else{f=v+16&-16;j=yp(f)|0;c[m+8>>2]=j;c[m>>2]=f|1;c[m+4>>2]=v;y=j}yA(y|0,p|0,v)|0;a[y+v|0]=0}c0[h&63](e,t,l,m);if((a[m]&1)!=0){yr(c[m+8>>2]|0)}if((a[r]&1)!=0){yr(c[l+8>>2]|0)}l=c[g+100>>2]|0;g=(c[n>>2]|0)+(c[q>>2]|0)|0;if(x){k7(b,e,l,g-14|0,c[o+100>>2]|0,1)}else{k7(b,e,l,g+14|0,c[o+100>>2]|0,0)}cZ[c[(c[e>>2]|0)+120>>2]&127](e,t,b);i=k;return}function kJ(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((f|0)==0){cd(9928,16216,210,20080)}if((h|0)==0){cd(13544,16216,211,20080)}if((e|0)==0){m=0}else{m=yc(e,37496,36984,-1)|0}n=c[(c[d>>2]|0)+116>>2]|0;o=e|0;p=k;q=k;a[q]=12;r=p+1|0;a[r]=a[8072]|0;a[r+1|0]=a[8073]|0;a[r+2|0]=a[8074]|0;a[r+3|0]=a[8075]|0;a[r+4|0]=a[8076]|0;a[r+5|0]=a[8077]|0;a[p+7|0]=0;p=e+32|0;if((a[p]&1)==0){r=l;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2]}else{p=c[e+40>>2]|0;r=c[e+36>>2]|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[l]=r<<1&255;s=l+1|0}else{e=r+16&-16;t=yp(e)|0;c[l+8>>2]=t;c[l>>2]=e|1;c[l+4>>2]=r;s=t}yA(s|0,p|0,r)|0;a[s+r|0]=0}c0[n&63](d,o,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[q]&1)!=0){yr(c[k+8>>2]|0)}k=m+8|0;q=m+4|0;l=c[q>>2]|0;if((c[k>>2]|0)==(l|0)){u=m|0;ik(f,u);v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=j;return}else{z=0;A=l}do{l=c[A+(z<<2)>>2]|0;do{if((l|0)!=0){if((yc(l,37064,37496,-1)|0)==0){break}n=c[(c[q>>2]|0)+(z<<2)>>2]|0;if((n|0)==0){B=0}else{B=yc(n,37064,37496,-1)|0}kz(b,d,B,f,g,h)}}while(0);z=z+1|0;A=c[q>>2]|0;}while(z>>>0<(c[k>>2]|0)-A>>2>>>0);u=m|0;ik(f,u);v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,o,b);i=j;return}function kK(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((e|0)==0){cd(9928,16216,1652,20408)}if((g|0)==0){cd(13544,16216,1653,20408)}if((c[g+16>>2]|0)==0){cd(16736,16216,1654,20408)}if((d|0)==0){h=0}else{h=yc(d,37496,36936,-1)|0}d=h+8|0;i=c[d>>2]|0;j=h+4|0;h=c[j>>2]|0;if((i-h|0)<=0){return}k=a+28|0;l=0;m=h;h=i;while(1){i=c[m+(l<<2)>>2]|0;n=i+8|0;o=i+4|0;i=c[o>>2]|0;if(((c[n>>2]|0)-i|0)>0){p=(l|0)==0?65280:255;q=0;r=i;do{i=c[r+(q<<2)>>2]|0;c[k>>2]=p;kz(a,b,i,e,f,g);q=q+1|0;r=c[o>>2]|0;}while((q|0)<((c[n>>2]|0)-r>>2|0));s=c[d>>2]|0;t=c[j>>2]|0}else{s=h;t=m}r=l+1|0;if((r|0)<(s-t>>2|0)){l=r;m=t;h=s}else{break}}return}function kL(b,e,f,h,j){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0.0,aj=0.0,ak=0,al=0,am=0,an=0.0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0;k=i;i=i+160|0;l=k|0;if((h|0)==0){cd(9928,16216,240,19864)}if((j|0)==0){cd(13544,16216,241,19864)}if((f|0)==0){cd(7440,16216,242,19864)}m=f;if((yc(m,37496,37216,-1)|0)==0){cd(7440,16216,242,19864)}n=yc(m,37496,37216,-1)|0;m=n;o=(jy(m,37272,-1)|0)!=0;p=j+105|0;q=d[p]|0;r=f+104|0;s=c[r>>2]|0;t=f+100|0;u=j+116|0;v=c[u>>2]|0;w=v+s|0;x=(c[n+112>>2]|0)+(c[t>>2]|0)|0;y=n+190|0;z=c[n+152>>2]|0;A=z+((a[y]&1)!=0&(z|0)>2&1)|0;B=n+109|0;C=a[B]&1;D=b+4|0;E=c[D>>2]|0;F=c[E+344+(q<<3)+(C<<2)>>2]|0;G=n+152|0;H=(z|0)>2;do{if(H){I=2091}else{if((z|0)==2){if((a[j+100|0]|0)!=0){I=2091;break}}J=E+360+(q*12|0)+8|0;K=((F|0)/3|0)+F|0}}while(0);if((I|0)==2091){J=E+360+(q*12|0)+(C<<2)|0;K=F}F=c[J>>2]|0;if(H){L=K-((ai(a[E+92|0]|0,K)|0)/20|0)|0}else{L=K}K=x-L|0;kN(b,e,w,v,x,F,q);E=c[G>>2]|0;do{if(E>>>0<2>>>0){I=2097}else{H=(E|0)==2;if((a[n+191|0]|0)!=0&H){I=2097;break}J=n+192|0;C=a[J]|0;z=C<<24>>24!=0&(C&255)>>>0<7>>>0;if(H){if(z){M=C-7&255}else{M=(a[y]&1)-55&255}k5(b,e,K,w,M,j,(a[B]&1)!=0);N=0;O=0;P=w;break}if(z){Q=C-7&255}else{Q=(a[y]&1)!=0|(A|0)==3?-53:-52}k5(b,e,K,w,Q,j,(a[B]&1)!=0);C=c[D>>2]|0;z=v-(c[C+252+(q<<2)>>2]<<1)|0;H=j+100|0;if((a[H]|0)==0){R=z}else{R=(c[C+244+(q<<2)>>2]|0)+z|0}z=n+189|0;if((a[z]|0)!=0){c[10678]=w}C=(A|0)>4;if(o&C){N=0;O=0;P=w;break}if((a[J]|0)==7){N=0;O=0;P=w;break}J=a[z]|0;if((J<<24>>24|0)==0){S=(w|0)>(R|0)|0}else if((J<<24>>24|0)==8){S=0}else{N=0;O=0;P=w;break}z=(a[n+200|0]|0)!=0|0;T=z^S;U=c[D>>2]|0;V=U+244+(q<<2)|0;W=c[V>>2]|0;if((a[B]&1)==0){X=U+252+(q<<2)|0;Y=W*7|0}else{X=V;Y=W*5|0}V=c[X>>2]|0;Z=A-5|0;_=ai(V,Z)|0;$=d[U+82|0]|0;aa=$>>>1;ab=L-aa|0;ac=(S|0)!=(z|0);if(ac){ad=ab;ae=Y;af=_}else{ad=-ab|0;ae=-Y|0;af=-_|0}_=(A|0)>5;ab=ae+w+(_?af:0)|0;if((J<<24>>24|0)==2|(J<<24>>24|0)==4){ag=c[10678]|0}else{ag=w}J=(a[H]|0)==0;H=(J?ad:0)+x|0;do{if(ac){z=ab-(_?W:0)|0;if(J){ah=+(ag|0);k$(b,e,z,~~(ah+ +g[U+416+(q<<2)>>2]),H-aa|0,$);aj=ah}else{k$(b,e,z,W+ag|0,H,$);aj=+(ag|0)}ak=H-((d[(c[D>>2]|0)+82|0]|0)>>>1)|0;c[f+128>>2]=ak;c[f+120>>2]=ak;c[f+132>>2]=z;c[f+124>>2]=~~(aj+ +g[(c[D>>2]|0)+416+(q<<2)>>2]);a[f+136|0]=1;if(!C){break}ak=((d[(c[D>>2]|0)+82|0]|0)>>>1)+z|0;k5(b,e,H,ak,-51,j,(a[B]&1)!=0);if((Z|0)>0){al=ak;am=0}else{break}do{al=al-V|0;k5(b,e,H,al,-51,j,(a[B]&1)!=0);am=am+1|0;}while((am|0)<(Z|0))}else{ak=ab+(_?W:0)|0;if(J){ah=+(ag|0);k$(b,e,ak,~~(ah- +g[U+416+(q<<2)>>2]),H-aa|0,$);an=ah}else{k$(b,e,ak,ag-W|0,H-aa|0,$);an=+(ag|0)}z=H-((d[(c[D>>2]|0)+82|0]|0)>>>1)|0;c[f+128>>2]=z;c[f+120>>2]=z;c[f+124>>2]=~~(an- +g[(c[D>>2]|0)+416+(q<<2)>>2]);c[f+132>>2]=ak;a[f+136|0]=0;z=a[B]&1;ao=c[D>>2]|0;ap=(d[ao+82|0]|0)>>>1;if(!C){break}aq=ak-ap|0;ak=H-ap-(c[ao+344+(q<<3)+((z&255)<<2)>>2]|0)|0;k5(b,e,ak,aq,-50,j,z<<24>>24!=0);if((Z|0)>0){ar=aq;as=0}else{break}do{ar=ar+V|0;k5(b,e,ak,ar,-50,j,(a[B]&1)!=0);as=as+1|0;}while((as|0)<(Z|0))}}while(0);if((a[B]&1)==0){N=T;O=H;P=ag;break}if((a[n+202|0]&1)==0){N=T;O=H;P=ag;break}kP(b,e,f);N=T;O=H;P=ag}}while(0);if((I|0)==2097){kO(b,e,w,f,h,j);N=0;O=0;P=w}kN(b,e,P,v,x,F,q);F=n+176|0;v=n+189|0;if((a[F]|0)!=0){if((a[v]|0)==0){at=~~(+(K|0)- +(c[(c[D>>2]|0)+392+(q<<3)+((a[B]&1)<<2)>>2]|0)*1.5)}else{at=K}m5(l,2);a[l+148|0]=a[n+177|0]|0;a[l+149|0]=a[n+178|0]|0;a[l+157|0]=a[F]|0;c[l+100>>2]=at;kH(b,e,l|0,h,j,f);m8(l)}L2420:do{if((a[v]|0)==0){l=c[G>>2]|0;do{if((l|0)>=3){if(!((l|0)<6|o|(N|0)==0)){break}au=(((c[(c[D>>2]|0)+232>>2]|0)*5|0|0)/2|0)+x|0;break L2420}}while(0);au=(((c[(c[D>>2]|0)+232>>2]|0)*7|0|0)/2|0)+x|0}else{au=O}}while(0);O=a[n+149|0]|0;if(O<<24>>24!=0){x=(c[u>>2]|0)+s|0;s=d[p]|0;p=c[D>>2]|0;if(((x|0)%(c[p+252+(s<<2)>>2]|0)|0|0)==0){av=(c[p+244+(s<<2)>>2]|0)+x|0}else{av=x}x=O&255;O=au;au=0;while(1){k4(b,e,O,av)|0;s=c[(c[D>>2]|0)+232>>2]<<1;p=au+1|0;if((p|0)<(x|0)){O=((s|0)>6?s:6)+O|0;au=p}else{break}}}au=n+180|0;O=c[au>>2]|0;do{if((O|0)!=0){x=c[O+148>>2]|0;if((x|0)==0){break}D=jy(m,37016,-1)|0;if((D|0)==0){aw=0}else{aw=yc(D,37064,37016,-1)|0}D=jy(x|0,37016,-1)|0;if((D|0)==0){ax=0}else{ax=yc(D,37064,37016,-1)|0}if(!((aw|0)!=(ax|0)&(aw|0)!=0)){break}ik(h,c[au>>2]|0)}}while(0);au=c[n+184>>2]|0;if((au|0)!=0){ik(h,au|0)}if((a[n+170|0]&1)!=0){kQ(b,e,f,j)}if((c[n+204>>2]|0)!=1){i=k;return}n=(c[u>>2]|0)+(c[r>>2]|0)|0;r=c[j+112>>2]|0;k5(b,e,c[t>>2]|0,((n|0)<(r|0)?r:n)+30|0,116,j,0);i=k;return}function kM(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;if((g|0)==0){cd(9928,16216,589,19832)}if((h|0)==0){cd(13544,16216,590,19832)}if((f|0)==0){cd(18824,16216,591,19832)}g=f;if((yc(g,37496,37160,-1)|0)==0){cd(18824,16216,591,19832)}k=yc(g,37496,37160,-1)|0;g=c[k+152>>2]|0;l=(c[k+112>>2]|0)+(c[f+100>>2]|0)|0;m=c[f+104>>2]|0;n=(g|0)==15;do{if(n){o=2185}else{if((g|0)>3){p=m;q=g;r=l-(c[(c[b+4>>2]|0)+344+(d[h+105|0]<<3)+((a[k+109|0]&1)<<2)>>2]|0)|0;o=2187;break}else{if((g|0)==2){o=2185;break}else{s=l;t=g;u=m;o=2190;break}}}}while(0);do{if((o|0)==2185){if((a[h+106|0]|0)!=1){p=m;q=2;r=l;o=2187;break}p=(c[(c[b+4>>2]|0)+252+(d[h+105|0]<<2)>>2]|0)+m|0;q=2;r=l;o=2187}}while(0);do{if((o|0)==2187){if(!n){s=r;t=q;u=p;o=2190;break}if((c[k+180>>2]|0)<=1){s=r;t=q;u=p;o=2190;break}ds(18024,(l=i,i=i+1|0,i=i+7&-8,c[l>>2]=0,l)|0);i=l}}while(0);do{if((o|0)==2190){if((t|0)==2|(t|0)==3){kR(b,e,s,u,t,a[k+149|0]|0,a[k+109|0]&1,h);break}else if((t|0)==0){p=(c[h+116>>2]|0)+u|0;q=c[b+4>>2]|0;r=d[h+105|0]|0;n=c[q+252+(r<<2)>>2]|0;if(((u|0)%(n|0)|0|0)==0){v=p}else{v=p-(c[q+244+(r<<2)>>2]|0)|0}k2(b,e,s,v+(n<<1)|0,((c[q+232>>2]<<1|0)/3|0)+s|0,v);break}else if((t|0)==1){q=(c[h+116>>2]|0)+u|0;n=b+4|0;r=c[n>>2]|0;p=d[h+105|0]|0;l=c[r+252+(p<<2)>>2]|0;if(((u|0)%(l|0)|0|0)==0){w=q}else{w=q-(c[r+244+(p<<2)>>2]|0)|0}p=w+l|0;k2(b,e,s,p,((c[r+232>>2]<<1|0)/3|0)+s|0,w);r=c[(c[n>>2]|0)+232>>2]|0;n=s-r|0;l=r+s|0;k1(b,e,n,l,p,1);k1(b,e,n,l,w,1);break}else{kS(b,e,s,u,t,a[k+149|0]|0,a[k+109|0]&1,h);break}}}while(0);if((a[k+170|0]&1)==0){i=j;return}kQ(b,e,f,h);i=j;return}function kN(a,b,e,f,g,h,i){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=c[a+4>>2]|0;k=c[j+252+(i<<2)>>2]|0;l=c[j+244+(i<<2)>>2]|0;m=l+f|0;n=c[j+260+(i<<2)>>2]|0;i=f-n-l|0;do{if((((i|0)<(m|0)?i:m)|0)<=(e|0)){if((((m|0)<(i|0)?i:m)|0)<(e|0)){break}return}}while(0);i=g-h|0;o=h+g|0;g=(m|0)<(e|0);if(g){p=e-f|0}else{p=f-e-n|0}e=p-(((p|0)%(k|0)|0|0)>0?l:0)|0;l=(e|0)/(k|0)|0;if(g){q=e+f|0;r=-k|0}else{q=f-e-n|0;r=k}k=c[(c[b>>2]|0)+24>>2]|0;n=a+28|0;e=c[n>>2]|0;f=kj(a,d[j+81|0]|0)|0;c0[k&63](b,e,f,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[n>>2]|0,106);if((l|0)>0){n=b;f=q;q=0;while(1){e=c[(c[n>>2]|0)+80>>2]|0;k=kj(a,i)|0;j=kl(a,f)|0;g=kj(a,o)|0;p=kl(a,f)|0;cF[e&31](b,k,j,g,p);p=q+1|0;if((p|0)<(l|0)){f=f+r|0;q=p}else{break}}}q=b;cG[c[(c[q>>2]|0)+44>>2]&1023](b);cG[c[(c[q>>2]|0)+40>>2]&1023](b);return}function kO(b,e,f,h,i,j){b=b|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;if((i|0)==0){cd(9928,16216,900,20392)}if((j|0)==0){cd(13544,16216,901,20392)}if((h|0)==0){cd(7440,16216,902,20392)}k=h;if((yc(k,37496,37216,-1)|0)==0){cd(7440,16216,902,20392)}l=yc(k,37496,37216,-1)|0;k=j+105|0;m=b+4|0;n=(c[(c[m>>2]|0)+312+(d[k]<<2)>>2]|0)/2|0;o=(n|0)>2?n:2;n=h+100|0;p=c[n>>2]|0;q=l+191|0;r=a[q]|0;do{if((r<<24>>24|0)==4|(r<<24>>24|0)==8){s=ij(i,h)|0;if((s|0)==0){t=p;break}if(!(iB(s)|0)){t=p;break}u=yc(s,37496,37216,-1)|0;v=a[u+191|0]|0;if((v<<24>>24|0)==8|(v<<24>>24|0)==0){t=p;break}if((c[u+152>>2]|0)>=3){t=p;break}c[n>>2]=(c[(c[m>>2]|0)+384+(d[k]<<2)>>2]<<1)+(c[s+100>>2]|0);t=p}else{t=(c[l+112>>2]|0)+p|0}}while(0);p=d[k]|0;n=c[m>>2]|0;h=c[n+384+(p<<2)>>2]|0;i=t-h|0;r=h+t|0;t=c[n+244+(p<<2)>>2]|0;s=t+f|0;u=f-t|0;w=+g[n+408+(p<<2)>>2];v=~~(w+ +(s|0));x=~~(+(u|0)-w);y=a[57104]|0;do{if((a[l+193|0]&1)==0){if((y&1)!=0){z=2241;break}if((a[l+190|0]&1)==0){A=-o|0;k3(b,e,i,s,r,s,A)|0;k3(b,e,i,u,r,u,o)|0}else{k2(b,e,i,s,r,u)}k$(b,e,v,x,i,d[(c[m>>2]|0)+82|0]|0);k$(b,e,v,x,r,d[(c[m>>2]|0)+82|0]|0);B=i;C=s;D=u}else{z=2241}}while(0);do{if((z|0)==2241){if((y&1)==0){k$(b,e,v,x,i,d[n+82|0]|0);a[57104]=1;B=i;C=s;D=u;break}o=i-(h<<1)|0;A=(c[14278]|0)-t|0;E=c[n+252+(p<<2)>>2]|0;F=E+u|0;if((a[l+190|0]&1)==0){G=A+E|0;k3(b,e,o,A,r,u,5)|0;k3(b,e,o,G,r,F,-5)|0}else{k3(b,e,o,A,r,u,E)|0}k$(b,e,v,x,r,d[(c[m>>2]|0)+82|0]|0);a[57104]=0;B=o;C=A;D=F}}while(0);if((a[q]|0)==0){H=1}else{c[14281]=r;c[14279]=f;c[14280]=r;c[14278]=f;H=(a[q]|0)==0}q=d[k]|0;k=c[m>>2]|0;m=(c[k+244+(q<<2)>>2]|0)*6|0;x=D-m|0;v=c[l+152>>2]|0;if(H){if((v|0)!=0){return}H=(((c[k+252+(q<<2)>>2]|0)*-6|0)+(c[j+116>>2]|0)|0)>(f|0);if((a[l+200|0]|0)==0){if(H){z=2258}else{I=D;J=x}}else{if(H){I=D;J=x}else{z=2258}}if((z|0)==2258){I=C;J=m+C|0}k$(b,e,I,J,r,d[k+82|0]|0);return}else{if((v|0)==1){k$(b,e,D,x,B,d[k+82|0]|0);return}else if((v|0)==0){k$(b,e,D,x,r,d[k+82|0]|0);return}else if((v|0)==2){k$(b,e,C,m+C|0,B,d[k+82|0]|0);return}else{return}}}function kP(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((c[(yc(e,37496,37216,-1)|0)+152>>2]|0)<5){return}c0[c[(c[d>>2]|0)+24>>2]&63](d,0,2,100);cZ[c[(c[d>>2]|0)+8>>2]&127](d,0,100);f=c[(c[d>>2]|0)+80>>2]|0;g=e+120|0;h=(c[g>>2]|0)-10|0;i=e+124|0;j=c[i>>2]|0;if((a[e+136|0]&1)==0){e=kl(b,j-10|0)|0;k=(c[g>>2]|0)+20|0;l=kl(b,(c[i>>2]|0)-40|0)|0;cF[f&31](d,h,e,k,l)}else{l=kl(b,j+10|0)|0;j=(c[g>>2]|0)+20|0;g=kl(b,(c[i>>2]|0)+40|0)|0;cF[f&31](d,h,l,j,g)}g=d;cG[c[(c[g>>2]|0)+44>>2]&1023](d);cG[c[(c[g>>2]|0)+40>>2]&1023](d);return}function kQ(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;h=f+100|0;if((f|0)==0){return}i=f;if((yc(i,37496,37216,-1)|0)==0){if((yc(i,37496,37160,-1)|0)==0){return}k5(b,e,c[h>>2]|0,(c[g+112>>2]|0)+20|0,63,g,0);return}j=yc(i,37496,37216,-1)|0;if((a[f+136|0]&1)==0){i=(c[g+116>>2]|0)+(c[f+104>>2]|0)|0;k=c[g+112>>2]|0;k5(b,e,c[h>>2]|0,((c[j+204>>2]|0)==0?20:55)+((i|0)<(k|0)?k:i)|0,63,g,0);return}else{i=c[g+116>>2]|0;k=i+(c[f+104>>2]|0)|0;f=i-(c[(c[b+4>>2]|0)+260+((d[g+105|0]|0)<<2)>>2]|0)|0;k5(b,e,c[h>>2]|0,((k|0)>(f|0)?f:k)-20|0,64,g,0);return}}function kR(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0;l=k+116|0;m=(c[l>>2]|0)+g|0;n=k+105|0;o=d[n]|0;p=b+4|0;q=c[p>>2]|0;r=c[q+244+(o<<2)>>2]|0;if((a[k+100|0]|0)==0){s=c[q+360+(o*12|0)+8>>2]<<1}else{s=c[q+232>>2]|0}t=+((s|0)/3|0|0);if((j|0)==0){u=t}else{u=t*+(~~(+(c[q+304>>2]|0)/+(c[q+308>>2]|0))|0)}j=~~u;s=f-j|0;k=j+f|0;f=(h|0)==2?-r|0:r;do{if(((g|0)%(c[q+252+(o<<2)>>2]|0)|0|0)==0){v=m}else{if((h|0)==3){v=m-f|0;break}else{v=f+m|0;break}}}while(0);m=v+f|0;k2(b,e,s,v,k,m);f=(j|0)/2|0;j=s-f|0;s=f+k|0;k=c[l>>2]|0;if((v|0)>(k|0)){w=c[p>>2]|0;x=2302}else{l=c[p>>2]|0;if((v|0)<(k-(c[l+260+(d[n]<<2)>>2]|0)|0)){w=l;x=2302}}if((x|0)==2302){k1(b,e,j,s,v,d[w+81|0]|0)}if(i<<24>>24==0){return}w=c[p>>2]|0;v=d[n]|0;if(((m|0)%(c[w+252+(v<<2)>>2]|0)|0|0)==0){y=(c[w+244+(v<<2)>>2]|0)+m|0}else{y=m}m=i&255;i=(c[w+232>>2]|0)+s|0;s=0;while(1){k4(b,e,i,y)|0;w=c[(c[p>>2]|0)+232>>2]<<1;v=s+1|0;if((v|0)<(m|0)){i=((w|0)>6?w:6)+i|0;s=v}else{break}}return}function kS(a,b,e,f,g,h,i,j){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;k=j+105|0;l=a+4|0;m=c[(c[l>>2]|0)+252+((d[k]|0)<<2)>>2]|0;n=j+116|0;k5(a,b,e,(c[n>>2]|0)+f|0,g+211&255,j,(i|0)!=0);if(h<<24>>24==0){return}i=c[l>>2]|0;j=((g|0)>5?0:m)+f+(c[n>>2]|0)|0;n=d[k]|0;if(((j|0)%(c[i+252+(n<<2)>>2]|0)|0|0)==0){o=(c[i+244+(n<<2)>>2]|0)+j|0}else{o=j}j=h&255;h=(c[i+236>>2]|0)+e|0;e=0;while(1){k4(a,b,h,o)|0;i=c[(c[l>>2]|0)+232>>2]<<1;n=e+1|0;if((n|0)<(j|0)){h=((i|0)>6?i:6)+h|0;e=n}else{break}}return}function kT(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((b|0)==0){cd(14496,16216,1218,20176)}else{h=g+105|0;g=a+4|0;i=kl(a,f-(c[(c[g>>2]|0)+252+((d[h]|0)<<2)>>2]<<1)|0)|0;f=kj(a,c[(c[g>>2]|0)+252+((d[h]|0)<<2)>>2]|0)|0;h=kj(a,4)|0;g=b;j=a+28|0;c0[c[(c[g>>2]|0)+24>>2]&63](b,c[j>>2]|0,(h|0)<2?2:h,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[j>>2]|0,106);j=c[(c[g>>2]|0)+68>>2]|0;g=kj(a,e)|0;c0[j&63](b,g,i,f);f=b;cG[c[(c[f>>2]|0)+44>>2]&1023](b);cG[c[(c[f>>2]|0)+40>>2]&1023](b);return}}function kU(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;if((b|0)==0){cd(14496,16216,1236,19960)}else{h=kj(a,4)|0;i=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[i>>2]|0,(h|0)<2?2:h,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,106);i=g+105|0;g=a+4|0;h=kl(a,f-(c[(c[g>>2]|0)+252+((d[i]|0)<<2)>>2]|0)|0)|0;f=kj(a,c[(c[g>>2]|0)+252+((d[i]|0)<<2)>>2]|0)|0;i=(kj(a,e)|0)-f|0;e=f<<1;cQ[c[(c[b>>2]|0)+76>>2]&7](b,i,h,e,e,70.0,290.0);e=b;cG[c[(c[e>>2]|0)+44>>2]&1023](b);cG[c[(c[e>>2]|0)+40>>2]&1023](b);return}}function kV(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;if((b|0)==0){cd(14496,16216,1258,19928)}else{h=kj(a,4)|0;i=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[i>>2]|0,(h|0)<2?2:h,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,106);i=g+105|0;g=a+4|0;h=kl(a,f-(c[(c[g>>2]|0)+252+((d[i]|0)<<2)>>2]|0)|0)|0;f=kj(a,c[(c[g>>2]|0)+252+((d[i]|0)<<2)>>2]|0)|0;i=(kj(a,e)|0)-((f<<2|0)/3|0)|0;e=f<<1;cQ[c[(c[b>>2]|0)+76>>2]&7](b,i,h,e,e,250.0,110.0);e=b;cG[c[(c[e>>2]|0)+44>>2]&1023](b);cG[c[(c[e>>2]|0)+40>>2]&1023](b);return}}function kW(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;if((b|0)==0){cd(14496,16216,1281,20328)}else{h=kl(a,f-(c[(c[a+4>>2]|0)+252+((d[g+105|0]|0)<<2)>>2]<<1)|0)|0;g=kj(a,4)|0;f=(g|0)<2?2:g;g=b;i=a+28|0;c0[c[(c[g>>2]|0)+24>>2]&63](b,c[i>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,100);i=c[(c[g>>2]|0)+68>>2]|0;g=(kj(a,e)|0)-((f|0)/2|0)|0;c0[i&63](b,g,h,f);f=b;cG[c[(c[f>>2]|0)+44>>2]&1023](b);cG[c[(c[f>>2]|0)+40>>2]&1023](b);return}}function kX(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;l=i;i=i+16|0;m=l|0;n=m;o=i;i=i+12|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;if((e|0)==0){cd(14496,16216,1312,20104)}yC(n|0,0,12);s=(j|0)!=0;t=k+105|0;k=d[t]|0;u=c[b+4>>2]|0;v=c[u+244+(k<<2)>>2]|0;if(s){w=g-(v<<2)|0;x=w-(c[u+252+(k<<2)>>2]<<1)|0;y=w}else{x=0;y=(v*-6|0)+g|0}if((j|0)>9|(h|0)>9){z=(c[u+232>>2]<<1)+f|0}else{z=f}dp(o,14296,(f=i,i=i+8|0,c[f>>2]=h,f)|0);i=f;qv(m,o)|0;if((a[o]&1)!=0){yr(c[o+8>>2]|0)}if((a[n]&1)==0){o=p;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2]}else{o=c[m+8>>2]|0;h=c[m+4>>2]|0;if(h>>>0>4294967279>>>0){qo(0)}if(h>>>0<11>>>0){a[p]=h<<1&255;A=p+1|0}else{u=h+16&-16;g=yp(u)|0;c[p+8>>2]=g;c[p>>2]=u|1;c[p+4>>2]=h;A=g}yA(A|0,o|0,h)|0;a[A+h|0]=0}k6(b,e,z,y,p,1,d[t]|0);if((a[p]&1)!=0){yr(c[p+8>>2]|0)}do{if(s){dp(q,14296,(f=i,i=i+8|0,c[f>>2]=j,f)|0);i=f;qv(m,q)|0;if((a[q]&1)!=0){yr(c[q+8>>2]|0)}if((a[n]&1)==0){p=r;c[p>>2]=c[n>>2];c[p+4>>2]=c[n+4>>2];c[p+8>>2]=c[n+8>>2]}else{p=c[m+8>>2]|0;y=c[m+4>>2]|0;if(y>>>0>4294967279>>>0){qo(0)}if(y>>>0<11>>>0){a[r]=y<<1&255;B=r+1|0}else{h=y+16&-16;A=yp(h)|0;c[r+8>>2]=A;c[r>>2]=h|1;c[r+4>>2]=y;B=A}yA(B|0,p|0,y)|0;a[B+y|0]=0}k6(b,e,z,x,r,1,d[t]|0);if((a[r]&1)==0){break}yr(c[r+8>>2]|0)}}while(0);if((a[n]&1)==0){i=l;return}yr(c[m+8>>2]|0);i=l;return}function kY(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((g|0)==0){cd(9928,16216,1370,20216)}if((h|0)==0){cd(13544,16216,1371,20216)}if((f|0)==0){cd(14112,16216,1372,20216)}g=f;if((yc(g,37496,37032,-1)|0)==0){cd(14112,16216,1372,20216)}m=yc(g,37496,37032,-1)|0;g=c[(c[e>>2]|0)+116>>2]|0;n=f|0;o=k;p=k;a[p]=10;q=o+1|0;a[q]=a[13928]|0;a[q+1|0]=a[13929]|0;a[q+2|0]=a[13930]|0;a[q+3|0]=a[13931]|0;a[q+4|0]=a[13932]|0;a[o+6|0]=0;o=f+32|0;if((a[o]&1)==0){q=l;c[q>>2]=c[o>>2];c[q+4>>2]=c[o+4>>2];c[q+8>>2]=c[o+8>>2]}else{o=c[f+40>>2]|0;q=c[f+36>>2]|0;if(q>>>0>4294967279>>>0){qo(0)}if(q>>>0<11>>>0){a[l]=q<<1&255;r=l+1|0}else{s=q+16&-16;t=yp(s)|0;c[l+8>>2]=t;c[l>>2]=s|1;c[l+4>>2]=q;r=t}yA(r|0,o|0,q)|0;a[r+q|0]=0}c0[g&63](e,n,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[p]&1)!=0){yr(c[k+8>>2]|0)}k=(c[m+112>>2]|0)+(c[f+100>>2]|0)|0;p=(c[h+116>>2]|0)+(c[f+104>>2]|0)|0;switch(d[m+157|0]|0|0){case 5:{k5(b,e,k,p,-43,h,(a[m+109|0]&1)!=0);u=((c[(c[b+4>>2]|0)+244+((d[h+105|0]|0)<<2)>>2]|0)*7|0)+p|0;v=2422;break};case 2:{u=p;v=2422;break};case 1:{w=p;v=2420;break};case 3:{x=-44;y=p;break};case 4:{k5(b,e,k,p,-45,h,(a[m+109|0]&1)!=0);w=((c[(c[b+4>>2]|0)+244+((d[h+105|0]|0)<<2)>>2]|0)*7|0)+p|0;v=2420;break};case 6:{x=-12;y=p;break};case 7:{x=-10;y=p;break};default:{x=0;y=p}}if((v|0)==2422){x=-43;y=u}else if((v|0)==2420){x=-45;y=w}k5(b,e,k,y,x,h,(a[m+109|0]&1)!=0);cZ[c[(c[e>>2]|0)+120>>2]&127](e,n,b);i=j;return}function kZ(b,e,f,h,j){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+32|0;l=k|0;m=k+16|0;if((h|0)==0){cd(9928,16216,1404,20152)}if((j|0)==0){cd(13544,16216,1405,20152)}if((f|0)==0){cd(14112,16216,1406,20152)}h=f;if((yc(h,37496,37032,-1)|0)==0){cd(14112,16216,1406,20152)}n=yc(h,37496,37032,-1)|0;h=c[(c[e>>2]|0)+116>>2]|0;o=f|0;p=l;q=l;a[q]=12;r=p+1|0;a[r]=a[13600]|0;a[r+1|0]=a[13601]|0;a[r+2|0]=a[13602]|0;a[r+3|0]=a[13603]|0;a[r+4|0]=a[13604]|0;a[r+5|0]=a[13605]|0;a[p+7|0]=0;p=f+32|0;if((a[p]&1)==0){r=m;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2]}else{p=c[f+40>>2]|0;r=c[f+36>>2]|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[m]=r<<1&255;s=m+1|0}else{t=r+16&-16;u=yp(t)|0;c[m+8>>2]=u;c[m>>2]=t|1;c[m+4>>2]=r;s=u}yA(s|0,p|0,r)|0;a[s+r|0]=0}c0[h&63](e,o,l,m);if((a[m]&1)!=0){yr(c[m+8>>2]|0)}if((a[q]&1)!=0){yr(c[l+8>>2]|0)}l=d[j+105|0]|0;q=c[b+4>>2]|0;k5(b,e,(c[n+112>>2]|0)+(c[f+100>>2]|0)|0,~~(+((c[j+116>>2]|0)+(c[f+104>>2]|0)|0)-(+(c[q+244+(l<<2)>>2]|0)- +g[q+416+(l<<2)>>2])),35,j,(a[n+109|0]&1)!=0);cZ[c[(c[e>>2]|0)+120>>2]&127](e,o,b);i=k;return}function k_(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((g|0)==0){cd(9928,16216,1423,20296)}if((h|0)==0){cd(13544,16216,1424,20296)}if((f|0)==0){cd(14112,16216,1425,20296)}h=f;if((yc(h,37496,37032,-1)|0)==0){cd(14112,16216,1425,20296)}g=yc(h,37496,37032,-1)|0;h=c[(c[e>>2]|0)+116>>2]|0;m=f|0;n=k;a[n]=6;o=k+1|0;a[o]=a[13408]|0;a[o+1|0]=a[13409]|0;a[o+2|0]=a[13410]|0;a[k+4|0]=0;o=f+32|0;if((a[o]&1)==0){p=l;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2]}else{o=c[f+40>>2]|0;p=c[f+36>>2]|0;if(p>>>0>4294967279>>>0){qo(0)}if(p>>>0<11>>>0){a[l]=p<<1&255;q=l+1|0}else{r=p+16&-16;s=yp(r)|0;c[l+8>>2]=s;c[l>>2]=r|1;c[l+4>>2]=p;q=s}yA(q|0,o|0,p)|0;a[q+p|0]=0}c0[h&63](e,m,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[n]&1)!=0){yr(c[k+8>>2]|0)}k=(c[g+112>>2]|0)+(c[f+100>>2]|0)|0;n=c[f+104>>2]|0;f=d[g+156|0]|0;if((f|0)==1){k4(b,e,k,n)|0;g=c[(c[b+4>>2]|0)+232>>2]|0;t=((g|0)>6?g:6)+k|0}else if((f|0)==0){t=k}else{u=e;v=c[u>>2]|0;w=v+120|0;x=c[w>>2]|0;cZ[x&127](e,m,b);i=j;return}k4(b,e,t,n)|0;u=e;v=c[u>>2]|0;w=v+120|0;x=c[w>>2]|0;cZ[x&127](e,m,b);i=j;return}function k$(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;if((b|0)==0){cd(9760,16096,24,19896)}else{h=c[(c[b>>2]|0)+24>>2]|0;i=a+28|0;j=c[i>>2]|0;k=kj(a,g)|0;c0[h&63](b,j,(k|0)>1?k:1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,100);i=c[(c[b>>2]|0)+80>>2]|0;k=kj(a,f)|0;j=kl(a,d)|0;d=kj(a,f)|0;f=kl(a,e)|0;cF[i&31](b,k,j,d,f);f=b;cG[c[(c[f>>2]|0)+44>>2]&1023](b);cG[c[(c[f>>2]|0)+40>>2]&1023](b);return}}function k0(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((b|0)==0){cd(9760,16096,40,19816)}if((kj(a,g)|0)<1){h=kk(a,1)|0}else{h=g}i=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[i>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,100);i=c[(c[b>>2]|0)+88>>2]|0;j=kj(a,f-g|0)|0;g=kl(a,e)|0;f=kj(a,h)|0;h=kj(a,e-d|0)|0;cF[i&31](b,j,g,f,h);h=b;cG[c[(c[h>>2]|0)+44>>2]&1023](b);cG[c[(c[h>>2]|0)+40>>2]&1023](b);return}function k1(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;if((b|0)==0){cd(9760,16096,63,19904)}else{h=c[(c[b>>2]|0)+24>>2]|0;i=a+28|0;j=c[i>>2]|0;k=kj(a,g)|0;c0[h&63](b,j,(k|0)>1?k:1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[i>>2]|0,106);i=c[(c[b>>2]|0)+80>>2]|0;k=kj(a,d)|0;d=kl(a,f)|0;j=kj(a,e)|0;e=kl(a,f)|0;cF[i&31](b,k,d,j,e);e=b;cG[c[(c[e>>2]|0)+44>>2]&1023](b);cG[c[(c[e>>2]|0)+40>>2]&1023](b);return}}function k2(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;if((b|0)==0){cd(9760,16096,93,20440)}else{h=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[h>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[h>>2]|0,100);h=c[(c[b>>2]|0)+88>>2]|0;i=kj(a,d)|0;j=kl(a,g)|0;k=kj(a,f-d|0)|0;d=kj(a,g-e|0)|0;cF[h&31](b,i,j,k,d);d=b;cG[c[(c[d>>2]|0)+44>>2]&1023](b);cG[c[(c[d>>2]|0)+40>>2]&1023](b);return}}function k3(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+32|0;k=j|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[k+20>>2]=0;c[k+24>>2]=0;c[k+28>>2]=0;l=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[l>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[l>>2]|0,100);l=kj(a,h)|0;m=kj(a,d)|0;c[k>>2]=m;d=kl(a,e)|0;c[k+4>>2]=d;e=kj(a,f)|0;c[k+8>>2]=e;f=kl(a,g)|0;c[k+12>>2]=f;c[k+16>>2]=e;c[k+20>>2]=f-l;c[k+24>>2]=m;c[k+28>>2]=d-l;cP[c[(c[b>>2]|0)+84>>2]&63](b,4,k|0,0,0,1);k=b;cG[c[(c[k>>2]|0)+44>>2]&1023](b);cG[c[(c[k>>2]|0)+40>>2]&1023](b);i=j;return h|0}function k4(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=kj(a,3)|0;g=b;h=a+28|0;c0[c[(c[g>>2]|0)+24>>2]&63](b,c[h>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[h>>2]|0,100);h=c[(c[g>>2]|0)+68>>2]|0;g=kj(a,d)|0;d=kl(a,e)|0;c0[h&63](b,g,d,(f|0)<2?2:f);f=b;cG[c[(c[f>>2]|0)+44>>2]&1023](b);cG[c[(c[f>>2]|0)+40>>2]&1023](b);return e|0}function k5(b,e,f,g,h,i,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;k=d[i+105|0]|0;l=e;if(cJ[c[(c[l>>2]|0)+60>>2]&255](e)|0){m=c[(c[b+4>>2]|0)+280+(k<<3)+((j&1)<<2)>>2]|0}else{m=0}n=i+100|0;do{if((a[n]|0)!=0&(h&255)>>>0>199>>>0){i=h+20&255;if(!((i&255)>>>0>226>>>0&j&(i&255)>>>0<230>>>0)){o=m;p=i;break}i=h+34&255;if(!(cJ[c[(c[l>>2]|0)+60>>2]&255](e)|0)){o=m;p=i;break}o=c[(c[b+4>>2]|0)+280+(k<<3)>>2]|0;p=i}else{o=m;p=h}}while(0);if(!((a[n]|0)!=0&(p&255)>>>0>240>>>0&(p&255)>>>0<244>>>0)){cH[c[(c[e>>2]|0)+28>>2]&255](e,(c[b+4>>2]|0)+424+(k*80|0)+((j&1)*40|0)|0)}j=e;cZ[c[(c[j>>2]|0)+12>>2]&127](e,255,100);k=e;cH[c[(c[k>>2]|0)+20>>2]&255](e,106);n=b+16|0;h=n;if((a[h]&1)==0){a[h]=2;q=n+1|0}else{h=c[b+24>>2]|0;c[b+20>>2]=1;q=h}a[q]=p;a[q+1|0]=0;q=b+28|0;cH[c[(c[k>>2]|0)+32>>2]&255](e,c[q>>2]|0);c0[c[(c[e>>2]|0)+24>>2]&63](e,c[q>>2]|0,1,100);cZ[c[(c[j>>2]|0)+8>>2]&127](e,c[q>>2]|0,100);q=c[(c[e>>2]|0)+104>>2]|0;j=kj(b,f)|0;f=kl(b,o+g|0)|0;c0[q&63](e,n,j,f);f=e;cG[c[(c[f>>2]|0)+44>>2]&1023](e);cG[c[(c[f>>2]|0)+40>>2]&1023](e);return}function k6(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;j=i;i=i+16|0;k=j|0;if((b|0)==0){cd(9760,16096,201,19752)}l=a+4|0;cH[c[(c[b>>2]|0)+28>>2]&255](b,(c[l>>2]|0)+424+(h*80|0)|0);m=kj(a,d)|0;if(cJ[c[(c[b>>2]|0)+60>>2]&255](b)|0){n=c[(c[l>>2]|0)+280+(h<<3)>>2]|0}else{n=0}if((g|0)==0){o=m}else{dr(13480,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;c0[c[(c[b>>2]|0)+52>>2]&63](b,f,k,j+8|0);o=m-((c[k>>2]|0)/2|0)|0}cH[c[(c[b>>2]|0)+32>>2]&255](b,c[a+28>>2]|0);k=c[(c[b>>2]|0)+100>>2]|0;m=kl(a,n+e|0)|0;c0[k&63](b,f,o,m);i=j;return}function k7(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+48|0;j=h|0;k=h+24|0;l=c[(c[a+4>>2]|0)+252>>2]|0;m=f-d|0;n=(((m|0)>-1?m:-m|0)|0)/4|0;o=(n|0)<(l|0)?n:l;n=(o|0)>12?o:12;o=(l|0)/3|0;l=(o|0)<6?6:o;o=(m|0)/4|0;if(g){g=e-n|0;p=g+l|0;q=g}else{g=n+e|0;p=g-l|0;q=g}g=o+d|0;l=j|0;c[l>>2]=kj(a,g)|0;c[j+4>>2]=kl(a,q)|0;n=(o*3|0)+d|0;c[j+8>>2]=kj(a,n)|0;c[j+12>>2]=kl(a,q)|0;c[j+16>>2]=kj(a,f)|0;c[j+20>>2]=kl(a,e)|0;j=k|0;c[j>>2]=kj(a,n)|0;c[k+4>>2]=kl(a,p)|0;c[k+8>>2]=kj(a,g)|0;c[k+12>>2]=kl(a,p)|0;c[k+16>>2]=kj(a,d)|0;c[k+20>>2]=kl(a,e)|0;k=c[(c[b>>2]|0)+64>>2]|0;p=kj(a,d)|0;d=kl(a,e)|0;cF[k&31](b,p,d,l,j);i=h;return}function k8(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){cd(9584,16008,42,19848)}if((d|0)==0){cd(13440,16008,43,19848)}jm(a+64|0,d+128|0)|0;lI(a+124|0,d+188|0)|0;jK(a+140|0,d+204|0)|0;if(e){e=a+4|0;h=c[e>>2]|0;cF[c[(c[b>>2]|0)+88>>2]&31](b,0,0,c[h+748>>2]|0,c[h+744>>2]|0);j=e}else{j=a+4|0}e=b;cZ[c[(c[e>>2]|0)+112>>2]&127](b,0,0);cH[c[(c[b>>2]|0)+56>>2]&255](g,b);cZ[c[(c[e>>2]|0)+48>>2]&127](b,(c[g>>2]|0)-(c[(c[j>>2]|0)+752>>2]|0)|0,c[g+4>>2]|0);g=b;cG[c[(c[g>>2]|0)+124>>2]&1023](b);j=d+8|0;e=d+4|0;d=c[e>>2]|0;if(((c[j>>2]|0)-d|0)>0){k=0;l=d}else{m=c[g>>2]|0;n=m+128|0;o=c[n>>2]|0;cG[o&1023](b);i=f;return}do{k9(a,b,c[l+(k<<2)>>2]|0);k=k+1|0;l=c[e>>2]|0;}while((k|0)<((c[j>>2]|0)-l>>2|0));m=c[g>>2]|0;n=m+128|0;o=c[n>>2]|0;cG[o&1023](b);i=f;return}function k9(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=i;i=i+32|0;g=f|0;h=f+16|0;if((e|0)==0){cd(11832,16008,83,20536)}j=c[(c[d>>2]|0)+116>>2]|0;k=e|0;l=g;m=g;a[m]=12;n=l+1|0;a[n]=a[11832]|0;a[n+1|0]=a[11833]|0;a[n+2|0]=a[11834]|0;a[n+3|0]=a[11835]|0;a[n+4|0]=a[11836]|0;a[n+5|0]=a[11837]|0;a[l+7|0]=0;l=e|0;n=e+32|0;if((a[n]&1)==0){o=h;c[o>>2]=c[n>>2];c[o+4>>2]=c[n+4>>2];c[o+8>>2]=c[n+8>>2]}else{n=c[e+40>>2]|0;o=c[e+36>>2]|0;if(o>>>0>4294967279>>>0){qo(0)}if(o>>>0<11>>>0){a[h]=o<<1&255;p=h+1|0}else{q=o+16&-16;r=yp(q)|0;c[h+8>>2]=r;c[h>>2]=q|1;c[h+4>>2]=o;p=r}yA(p|0,n|0,o)|0;a[p+o|0]=0}c0[j&63](d,k,g,h);if((a[h]&1)!=0){yr(c[h+8>>2]|0)}if((a[m]&1)!=0){yr(c[g+8>>2]|0)}g=c[e+168>>2]|0;m=c[(c[b+4>>2]|0)+772>>2]|0;do{if((g|0)==-2147483647){if((m|0)==0){c[e+176>>2]=c[e+172>>2];c[e+188>>2]=c[e+184>>2];break}else{cd(10848,16008,92,20536)}}else{if((m|0)==2){c[e+176>>2]=g;c[e+188>>2]=c[e+180>>2];break}else{cd(10104,16008,98,20536)}}}while(0);g=e+8|0;m=e+4|0;h=c[m>>2]|0;if(((c[g>>2]|0)-h|0)>0){j=0;o=h;do{la(b,d,c[o+(j<<2)>>2]|0,e);j=j+1|0;o=c[m>>2]|0;}while((j|0)<((c[g>>2]|0)-o>>2|0))}o=jz(l,36952)|0;if((o|0)==0){s=d;t=c[s>>2]|0;u=t+120|0;v=c[u>>2]|0;cZ[v&127](d,k,b);i=f;return}l=yc(o,37064,36952,-1)|0;if((l|0)==0){s=d;t=c[s>>2]|0;u=t+120|0;v=c[u>>2]|0;cZ[v&127](d,k,b);i=f;return}lb(b,d,b+64|0,l,c[e+188>>2]|0,0);s=d;t=c[s>>2]|0;u=t+120|0;v=c[u>>2]|0;cZ[v&127](d,k,b);i=f;return}function la(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+32|0;h=g|0;j=g+16|0;if((d|0)==0){cd(9584,16008,510,20456)}k=e+112|0;do{if((a[k]&1)!=0){l=c[(c[d>>2]|0)+116>>2]|0;m=h;a[m]=14;n=h+1|0;a[n]=a[8544]|0;a[n+1|0]=a[8545]|0;a[n+2|0]=a[8546]|0;a[n+3|0]=a[8547]|0;a[n+4|0]=a[8548]|0;a[n+5|0]=a[8549]|0;a[n+6|0]=a[8550]|0;n=h+8|0;a[n]=0;o=e+32|0;if((a[o]&1)==0){p=j;c[p>>2]=c[o>>2];c[p+4>>2]=c[o+4>>2];c[p+8>>2]=c[o+8>>2]}else{o=c[e+40>>2]|0;p=c[e+36>>2]|0;if(p>>>0>4294967279>>>0){qo(0)}if(p>>>0<11>>>0){a[j]=p<<1&255;q=j+1|0}else{r=p+16&-16;s=yp(r)|0;c[j+8>>2]=s;c[j>>2]=r|1;c[j+4>>2]=p;q=s}yA(q|0,o|0,p)|0;a[q+p|0]=0}c0[l&63](d,e|0,h,j);if((a[j]&1)!=0){yr(c[j+8>>2]|0)}if((a[m]&1)==0){break}yr(c[n>>2]|0)}}while(0);j=c[e+100>>2]|0;h=c[(c[b+4>>2]|0)+772>>2]|0;do{if((j|0)==-2147483647){if((h|0)==0){c[e+108>>2]=(c[f+188>>2]|0)+(c[e+104>>2]|0);break}else{cd(10848,16008,521,20456)}}else{if((h|0)==2){c[e+108>>2]=j;break}else{cd(10104,16008,526,20456)}}}while(0);j=e+8|0;h=e+4|0;q=c[h>>2]|0;if(((c[j>>2]|0)-q|0)>0){n=0;m=q;do{lj(b,d,c[m+(n<<2)>>2]|0,e,f);n=n+1|0;m=c[h>>2]|0;}while((n|0)<((c[j>>2]|0)-m>>2|0))}if((c[e+328>>2]|0)!=0){lb(b,d,b+64|0,e,c[e+108>>2]|0,e+184|0)}if((c[e+480>>2]|0)!=0){m=c[e+108>>2]|0;lb(b,d,b+64|0,e,(eB(e)|0)+m|0,e+336|0)}if((a[k]&1)==0){i=g;return}cZ[c[(c[d>>2]|0)+120>>2]&127](d,e|0,b);i=g;return}function lb(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=j|0;l=j+16|0;if((e|0)==0){cd(9272,16008,127,20376)}if((f|0)==0){cd(8544,16008,130,20376)}m=jz(e|0,36784)|0;if((m|0)==0){i=j;return}e=yc(m,37064,36784,-1)|0;m=e;if((e|0)==0){i=j;return}if((h|0)==0){lc(b,d,f,m,g);i=j;return}e=c[(c[d>>2]|0)+116>>2]|0;n=h|0;o=k;a[o]=14;p=k+1|0;a[p]=a[8040]|0;a[p+1|0]=a[8041]|0;a[p+2|0]=a[8042]|0;a[p+3|0]=a[8043]|0;a[p+4|0]=a[8044]|0;a[p+5|0]=a[8045]|0;a[p+6|0]=a[8046]|0;p=k+8|0;a[p]=0;q=h+32|0;if((a[q]&1)==0){r=l;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2]}else{q=c[h+40>>2]|0;r=c[h+36>>2]|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[l]=r<<1&255;s=l+1|0}else{t=r+16&-16;u=yp(t)|0;c[l+8>>2]=u;c[l>>2]=t|1;c[l+4>>2]=r;s=u}yA(s|0,q|0,r)|0;a[s+r|0]=0}c0[e&63](d,n,k,l);if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[o]&1)!=0){yr(c[p>>2]|0)}ld(b,d,f,m,g,h);cZ[c[(c[d>>2]|0)+120>>2]&127](d,n,b);i=j;return}function lc(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;if((e|0)==0){cd(8544,16008,153,20360)}if((f|0)==0){cd(7408,16008,154,20360)}j=f|0;k=jM(f+60|0,j)|0;if((c[k+8>>2]|0)==0){i=h;return}l=c[(c[k+4>>2]|0)+8>>2]|0;if((l|0)==0){m=0}else{m=yc(l,37064,36816,-1)|0}l=c[(c[k>>2]|0)+8>>2]|0;do{if((l|0)!=0){k=yc(l,37064,36816,-1)|0;if((m|0)==0|(k|0)==0){break}n=m+76|0;o=eA(e,c[n>>2]|0)|0;p=k+76|0;k=eA(e,c[p>>2]|0)|0;if((o|0)==0|(k|0)==0){q=c[p>>2]|0;dr(17928,(r=i,i=i+16|0,c[r>>2]=c[n>>2],c[r+8>>2]=q,r)|0);i=r;i=h;return}q=c[o+116>>2]|0;o=d[k+105|0]|0;n=a+4|0;p=c[n>>2]|0;s=(c[k+116>>2]|0)-(ai(c[p+252+(o<<2)>>2]|0,(d[k+106|0]|0)-1|0)|0)|0;k=c[f+76>>2]|0;if((k|0)==1){k$(a,b,q,s,g,d[p+83|0]|0);t=g}else if((k|0)==2){le(a,b,g,q,s,o);t=g}else if((k|0)==3){lf(a,b,g,q,s,o);o=c[n>>2]|0;t=g-(c[o+312>>2]<<1)+(c[o+320>>2]|0)|0}else{t=g}o=f+8|0;n=f+4|0;if(((c[o>>2]|0)-(c[n>>2]|0)|0)>0){u=0}else{i=h;return}do{s=jt(j,u)|0;do{if((s|0)!=0){q=yc(s,37064,36784,-1)|0;if((q|0)==0){break}lc(a,b,e,q,t)}}while(0);u=u+1|0;}while((u|0)<((c[o>>2]|0)-(c[n>>2]|0)>>2|0));i=h;return}}while(0);dr(18712,(r=i,i=i+1|0,i=i+7&-8,c[r>>2]=0,r)|0);i=r;i=h;return}function ld(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;k=i;if((f|0)==0){cd(8544,16008,331,20424)}if((g|0)==0){cd(7408,16008,332,20424)}if((a[g+80|0]&1)==0){l=g|0;m=g+8|0;n=g+4|0;if(((c[m>>2]|0)-(c[n>>2]|0)|0)<=0){i=k;return}o=b+4|0;p=0;do{q=jt(l,p)|0;if((q|0)==0){r=0}else{r=yc(q,37064,36784,-1)|0}q=jt(l,p)|0;if((q|0)==0){s=0}else{s=yc(q,37064,36816,-1)|0}do{if((r|0)==0){if((s|0)==0){break}q=s+76|0;t=eA(f,c[q>>2]|0)|0;if((t|0)==0){dr(17488,(u=i,i=i+8|0,c[u>>2]=c[q>>2],u)|0);i=u;break}q=c[t+116>>2]|0;lg(b,e,h,q,q-(ai(c[(c[o>>2]|0)+252+((d[t+105|0]|0)<<2)>>2]|0,(d[t+106|0]|0)-1|0)|0)|0,j);if(!(es(j)|0)){break}lh(b,e,h,t,j)}else{ld(b,e,f,r,h,j)}}while(0);p=p+1|0;}while((p|0)<((c[m>>2]|0)-(c[n>>2]|0)>>2|0));i=k;return}n=g|0;m=jM(g+60|0,n)|0;if((c[m+8>>2]|0)==0){i=k;return}p=c[(c[m+4>>2]|0)+8>>2]|0;if((p|0)==0){v=0}else{v=yc(p,37064,36816,-1)|0}p=c[(c[m>>2]|0)+8>>2]|0;do{if((p|0)!=0){m=yc(p,37064,36816,-1)|0;if((v|0)==0|(m|0)==0){break}r=v+76|0;o=eA(f,c[r>>2]|0)|0;s=m+76|0;m=eA(f,c[s>>2]|0)|0;if((o|0)==0|(m|0)==0){l=c[s>>2]|0;dr(17928,(u=i,i=i+16|0,c[u>>2]=c[r>>2],c[u+8>>2]=l,u)|0);i=u;i=k;return}lg(b,e,h,c[o+116>>2]|0,(c[m+116>>2]|0)-(ai(c[(c[b+4>>2]|0)+252+((d[m+105|0]|0)<<2)>>2]|0,(d[m+106|0]|0)-1|0)|0)|0,j);if(!(es(j)|0)){i=k;return}m=g+8|0;o=g+4|0;if(((c[m>>2]|0)-(c[o>>2]|0)|0)>0){w=0}else{i=k;return}do{l=jt(n,w)|0;do{if((l|0)!=0){r=yc(l,37064,36816,-1)|0;if((r|0)==0){break}s=r+76|0;r=eA(f,c[s>>2]|0)|0;if((r|0)==0){dr(17488,(u=i,i=i+8|0,c[u>>2]=c[s>>2],u)|0);i=u;break}else{lh(b,e,h,r,j);break}}}while(0);w=w+1|0;}while((w|0)<((c[m>>2]|0)-(c[o>>2]|0)>>2|0));i=k;return}}while(0);dr(18712,(u=i,i=i+1|0,i=i+7&-8,c[u>>2]=0,u)|0);i=u;i=k;return}function le(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;j=i;i=i+48|0;k=j|0;if((b|0)==0){cd(9584,16008,245,19800)}else{l=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[l>>2]|0,1,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[l>>2]|0,100);l=a+4|0;m=c[l>>2]|0;n=e-(c[m+320+(h<<2)>>2]|0)|0;e=kj(a,(c[m+312+(h<<2)>>2]|0)-1+(d[m+83|0]|0)|0)|0;c[14184]=kj(a,n)|0;c[14185]=kl(a,g)|0;c[14186]=kj(a,n-(c[(c[l>>2]|0)+236>>2]|0)|0)|0;m=c[14185]|0;c[14187]=m-(kj(a,(c[(c[l>>2]|0)+252+(h<<2)>>2]|0)*3|0)|0);c[14190]=kj(a,n-(c[(c[l>>2]|0)+232>>2]<<1)|0)|0;c[14191]=kl(a,(g+f|0)/2|0)|0;c[14188]=kj(a,(c[(c[l>>2]|0)+232>>2]|0)+n|0)|0;m=c[14191]|0;o=(kj(a,c[(c[l>>2]|0)+252+(h<<2)>>2]|0)|0)+m|0;c[14189]=o;m=k|0;c[m>>2]=c[14186];p=k+4|0;c[p>>2]=c[14187];q=k+8|0;c[q>>2]=c[14188];r=k+12|0;c[r>>2]=o;o=k+16|0;c[o>>2]=c[14190];s=k+20|0;c[s>>2]=c[14191];kx(56736,56760);kx(56744,56752);c[14186]=(c[14186]|0)+e;c[14188]=(c[14188]|0)+e;t=c[14185]|0;u=(kj(a,c[(c[l>>2]|0)+252+(h<<2)>>2]<<1)|0)+t|0;c[14187]=u;t=k+24|0;c[t>>2]=c[14186];v=k+28|0;c[v>>2]=u;u=k+32|0;c[u>>2]=c[14188];w=k+36|0;c[w>>2]=c[14189];x=k+40|0;c[x>>2]=c[14190];y=k+44|0;c[y>>2]=c[14191];k=b;z=c[(c[k>>2]|0)+64>>2]|0;A=kj(a,n)|0;n=kl(a,g)|0;cF[z&31](b,A,n,m,t);n=c[14185]|0;c[14187]=n-(kj(a,c[(c[l>>2]|0)+252+(h<<2)>>2]<<1)|0);n=kl(a,f)|0;c[14191]=n;f=(kj(a,(c[(c[l>>2]|0)+252+(h<<2)>>2]|0)*3|0)|0)+n|0;c[14189]=f;c[m>>2]=c[14186];c[p>>2]=c[14187];c[q>>2]=c[14188];c[r>>2]=f;c[o>>2]=c[14190];c[s>>2]=c[14191];kx(56736,56760);kx(56744,56752);c[14186]=(c[14186]|0)-e;c[14188]=(c[14188]|0)-e;e=c[14191]|0;s=e-(kj(a,c[(c[l>>2]|0)+252+(h<<2)>>2]|0)|0)|0;c[14189]=s;c[t>>2]=c[14186];c[v>>2]=c[14187];c[u>>2]=c[14188];c[w>>2]=s;s=c[14190]|0;c[x>>2]=s;x=c[14191]|0;c[y>>2]=x;cF[c[(c[k>>2]|0)+64>>2]&31](b,s,x,m,t);t=b;cG[c[(c[t>>2]|0)+44>>2]&1023](b);cG[c[(c[t>>2]|0)+40>>2]&1023](b);i=j;return}}function lf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=a+28|0;c0[c[(c[b>>2]|0)+24>>2]&63](b,c[h>>2]|0,2,100);cZ[c[(c[b>>2]|0)+8>>2]&127](b,c[h>>2]|0,106);h=a+4|0;i=c[h>>2]|0;j=(c[i+320>>2]|0)+(c[i+312>>2]|0)|0;k=d-j|0;l=j<<1;j=k-l|0;m=c[i+252+(g<<2)>>2]<<1;i=b;n=c[(c[i>>2]|0)+76>>2]|0;o=kj(a,j)|0;p=kl(a,e)|0;q=k+l-j|0;l=kj(a,q)|0;k=kj(a,-m|0)|0;cQ[n&7](b,o,p,l,k,90.0,40.0);k=c[(c[h>>2]|0)+252+(g<<2)>>2]<<1;g=c[(c[i>>2]|0)+76>>2]|0;i=kj(a,j)|0;j=kl(a,f-k|0)|0;l=kj(a,q)|0;q=kj(a,-k|0)|0;cQ[g&7](b,i,j,l,q,320.0,270.0);q=b;cG[c[(c[q>>2]|0)+44>>2]&1023](b);cG[c[(c[q>>2]|0)+40>>2]&1023](b);q=c[h>>2]|0;k0(a,b,e,f,d-1-(c[q+320>>2]|0)|0,c[q+312>>2]|0);return}function lg(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;if((b|0)==0){cd(9584,16008,413,20488)}i=a+4|0;j=c[i>>2]|0;k=c[j+312>>2]|0;l=e-k|0;m=d[j+83|0]|0;j=l-m|0;n=k+e+m|0;switch(c[h+144>>2]|0){case 6:{k$(a,b,f,g,e,m);k$(a,b,f,g,l,d[(c[i>>2]|0)+83|0]|0);return};case 4:{k$(a,b,f,g,e,k);k$(a,b,f,g,n,d[(c[i>>2]|0)+83|0]|0);return};case 1:{k$(a,b,f,g,e,m);return};case 2:{k$(a,b,f,g,j,m);k$(a,b,f,g,e,c[(c[i>>2]|0)+312>>2]|0);return};case 5:{k$(a,b,f,g,j,m);k$(a,b,f,g,e,c[(c[i>>2]|0)+312>>2]|0);return};case 3:{k$(a,b,f,g,j,m);k$(a,b,f,g,e,c[(c[i>>2]|0)+312>>2]|0);k$(a,b,f,g,n,d[(c[i>>2]|0)+83|0]|0);return};default:{return}}}function lh(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==0){cd(9584,16008,455,20264)}h=c[a+4>>2]|0;i=c[h+312>>2]<<1;j=d[h+83|0]|0;k=e-i-j|0;l=i+e+j|0;j=d[f+105|0]|0;e=(c[f+116>>2]|0)-(ai(c[h+244+(j<<2)>>2]|0,d[f+106|0]|0)|0)|0;f=e+(c[h+252+(j<<2)>>2]|0)|0;j=g+144|0;g=c[j>>2]|0;if((g-3|0)>>>0<2>>>0){k4(a,b,l,e)|0;k4(a,b,l,f)|0;m=c[j>>2]|0}else{m=g}if(!((m|0)==5|(m|0)==3)){return}k4(a,b,k,e)|0;k4(a,b,k,f)|0;return}function li(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if((b|0)==0){cd(9584,16008,481,20032)}else{return}}function lj(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;h=i;i=i+32|0;j=h|0;k=h+16|0;if((d|0)==0){cd(9584,16008,660,19768)}l=c[(c[d>>2]|0)+116>>2]|0;m=e;n=j;o=j;a[o]=10;p=n+1|0;a[p]=a[17088]|0;a[p+1|0]=a[17089]|0;a[p+2|0]=a[17090]|0;a[p+3|0]=a[17091]|0;a[p+4|0]=a[17092]|0;a[n+6|0]=0;n=e+32|0;if((a[n]&1)==0){p=k;c[p>>2]=c[n>>2];c[p+4>>2]=c[n+4>>2];c[p+8>>2]=c[n+8>>2]}else{n=c[e+40>>2]|0;p=c[e+36>>2]|0;if(p>>>0>4294967279>>>0){qo(0)}if(p>>>0<11>>>0){a[k]=p<<1&255;q=k+1|0}else{r=p+16&-16;s=yp(r)|0;c[k+8>>2]=s;c[k>>2]=r|1;c[k+4>>2]=p;q=s}yA(q|0,n|0,p)|0;a[q+p|0]=0}c0[l&63](d,m,j,k);if((a[k]&1)!=0){yr(c[k+8>>2]|0)}if((a[o]&1)!=0){yr(c[j+8>>2]|0)}j=c[e+112>>2]|0;o=c[(c[b+4>>2]|0)+772>>2]|0;do{if((j|0)==-2147483647){if((o|0)==0){k=mo(e)|0;c[e+116>>2]=(c[g+176>>2]|0)+k;break}else{cd(10848,16008,668,19768)}}else{if((o|0)==2){c[e+116>>2]=j;break}else{cd(10104,16008,673,19768)}}}while(0);lm(b,d,e,0,g);g=e+8|0;j=e+4|0;o=c[j>>2]|0;if(((c[g>>2]|0)-o|0)>0){t=0;u=o}else{v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,m,b);i=h;return}do{ln(b,d,c[u+(t<<2)>>2]|0,e,f);t=t+1|0;u=c[j>>2]|0;}while((t|0)<((c[g>>2]|0)-u>>2|0));v=d;w=c[v>>2]|0;x=w+120|0;y=c[x>>2]|0;cZ[y&127](d,m,b);i=h;return}function lk(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;if((e|0)==0){cd(17088,16008,577,20056);return 0}i=c[(c[b+4>>2]|0)+244+(d[e+105|0]<<2)>>2]|0;b=ai(i,g-9+(h*7|0)|0)|0;h=a[e+106|0]|0;if((h&255)>>>0>5>>>0){j=b-(ai(((h&255)<<1)-10|0,i)|0)|0}else{j=b}b=0;while(1){k=b<<24>>24;if(b<<24>>24>=7){l=0;m=2812;break}if((a[21264+k|0]|0)==f<<24>>24){break}else{b=b+1&255}}if((m|0)==2812){return l|0}l=(ai(i,k+1|0)|0)+j|0;return l|0}function ll(a,b,e){a=a|0;b=b|0;e=e|0;var f=0;if((b|0)==0){cd(17088,16008,599,20128);return 0}switch(e<<24>>24|0){case 4:{f=-6;break};case 6:{f=-6;break};case 1:{f=-4;break};case 8:{f=-7;break};case 2:{f=-2;break};case 9:{f=-7;break};case 3:{f=-4;break};case 7:{f=-6;break};case 5:{f=-6;break};case 15:{f=-2;break};case 10:{f=-8;break};default:{f=-5}}return ai(f,c[(c[a+4>>2]|0)+244+((d[b+105|0]|0)<<2)>>2]|0)|0}function lm(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((e|0)==0){cd(9584,16008,626,20280)}if((a[f+102|0]|0)!=0){return}g=c[f+116>>2]|0;i=c[h+160>>2]|0;j=b+4|0;k=c[j>>2]|0;l=(c[k+748>>2]|0)-(c[k+752>>2]|0)-(c[k+756>>2]|0)-(c[h+164>>2]|0)|0;h=c[(c[e>>2]|0)+24>>2]|0;m=b+28|0;n=c[m>>2]|0;o=kj(b,d[k+81|0]|0)|0;c0[h&63](e,n,o,100);cZ[c[(c[e>>2]|0)+8>>2]&127](e,c[m>>2]|0,100);m=kj(b,i)|0;i=kj(b,l)|0;l=f+106|0;if((a[l]|0)!=0){o=e;n=f+105|0;f=0;h=g;while(1){g=c[(c[o>>2]|0)+80>>2]|0;k=kl(b,h)|0;p=kl(b,h)|0;cF[g&31](e,m,k,i,p);p=f+1|0;if((p|0)<(d[l]|0)){f=p;h=h-(c[(c[j>>2]|0)+252+(d[n]<<2)>>2]|0)|0}else{break}}}n=e;cG[c[(c[n>>2]|0)+44>>2]&1023](e);cG[c[(c[n>>2]|0)+40>>2]&1023](e);return}function ln(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((d|0)==0){cd(9584,16008,861,19784)}im(e);h=c[e+116>>2]|0;if((h|0)!=0){kz(b,d,h|0,e,g,f)}h=c[e+120>>2]|0;if((h|0)!=0){kz(b,d,h|0,e,g,f)}h=c[e+124>>2]|0;if((h|0)!=0){kz(b,d,h|0,e,g,f)}h=e+8|0;i=c[h>>2]|0;j=e+4|0;k=c[j>>2]|0;if((i-k|0)>0){l=0;m=k;k=i;while(1){i=c[m+(l<<2)>>2]|0;if((a[i+108|0]&1)==0){kz(b,d,i,e,g,f);n=c[h>>2]|0;o=c[j>>2]|0}else{n=k;o=m}i=l+1|0;if((i|0)<(n-o>>2|0)){l=i;m=o;k=n}else{break}}}lo(b,d,e,f,g,37272);lo(b,d,e,f,g,36984);lo(b,d,e,f,g,37304);return}function lo(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;if((b|0)==0){cd(9584,16008,900,20344)}h=il(d)|0;i=c[h+4>>2]|0;j=h;if((i|0)==(j|0)){return}h=g+4|0;g=i;do{i=c[g+8>>2]|0;do{if((i|0)!=0){k=yc(i,37064,37496,-1)|0;if((k|0)==0){break}l=c[(c[(c[k>>2]|0)-4>>2]|0)+4>>2]|0;if((l|0)!=(c[h>>2]|0)){break}if((l|0)==(c[9319]|0)){kw(a,b,d,yc(k,37496,37272,-1)|0,e);break}if((l|0)==(c[9247]|0)){ls(a,b,yc(k,37496,36984,-1)|0,d,e);break}if((l|0)!=(c[9327]|0)){break}kI(a,b,yc(k,37496,37304,-1)|0,d,e,f)}}while(0);g=c[g+4>>2]|0;}while((g|0)!=(j|0));return}function lp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+16|0;f=d|0;g=f|0;yC(g|0,0,16);bq(g|0,9360,(h=i,i=i+8|0,c[h>>2]=e>>>0>255>>>0?255:e,h)|0)|0;i=h;h=yz(g|0)|0;if(h>>>0>=15>>>0){cd(15944,13416,48,19984)}do{if((h|0)==0){j=0}else{e=0;do{k=f+e|0;a[k]=(a[k]|0)+82&255;e=e+1|0;l=yz(g|0)|0;}while(e>>>0<l>>>0);if(l>>>0>4294967279>>>0){qo(0)}if(l>>>0<11>>>0){j=l;break}e=l+16&-16;k=yp(e)|0;c[b+8>>2]=k;c[b>>2]=e|1;c[b+4>>2]=l;m=k;n=l;yA(m|0,g|0,n)|0;o=m+n|0;a[o]=0;i=d;return}}while(0);a[b]=j<<1&255;m=b+1|0;n=j;yA(m|0,g|0,n)|0;o=m+n|0;a[o]=0;i=d;return}function lq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a=jy(b|0,37272,3)|0;do{if((a|0)!=0){if((yc(a,37064,37272,-1)|0)==0){break}if((c[b+4>>2]|0)==(c[b+8>>2]|0)){break}else{d=1}return d|0}}while(0);a=b+8|0;e=b+4|0;b=c[e>>2]|0;if((c[a>>2]|0)==(b|0)){cd(11816,13416,96,20200);return 0}else{f=0;g=0;h=b}L3317:while(1){b=c[h+(g<<2)>>2]|0;do{if((b|0)==0){i=f;j=0}else{if((yc(b,37064,37216,-1)|0)!=0){d=0;k=2895;break L3317}l=c[(c[e>>2]|0)+(g<<2)>>2]|0;if((l|0)==0){i=f;j=0;break}m=yc(l,37064,37272,-1)|0;l=m;if((m|0)==0){i=f;j=0;break}if((((f|0)==0?l:f)|0)==(l|0)){i=l;j=l}else{d=0;k=2898;break L3317}}}while(0);b=g+1|0;l=c[e>>2]|0;if(b>>>0<(c[a>>2]|0)-l>>2>>>0){f=i;g=b;h=l}else{k=2890;break}}if((k|0)==2895){return d|0}else if((k|0)==2898){return d|0}else if((k|0)==2890){if((j|0)==0){cd(11816,13416,96,20200);return 0}else{d=1;return d|0}}return 0}function lr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=lq(0,d)|0;b=d+148|0;i=d+152|0;d=c[(c[i>>2]|0)+8>>2]|0;j=(d|0)==0;if(e){if(j){k=0}else{k=yc(d,37064,37496,-1)|0}e=yc(c[(c[b>>2]|0)+8>>2]|0,37064,37496,-1)|0;l=c[k+120>>2]|0;m=(((c[e+120>>2]|0)-l|0)/2|0)+l|0;l=k+136|0;n=c[e+132>>2]|0;e=(((c[k+132>>2]|0)-n|0)/2|0)+n+((a[l]&1)==0?-20:20)|0;c[h>>2]=m;c[h+4>>2]=e;o=m;p=e;q=(a[l]&1)!=0;r=h|0;c[r>>2]=o;s=h+4|0;c[s>>2]=p;return q|0}if(j){t=0}else{t=yc(d,37064,37496,-1)|0}d=c[(c[b>>2]|0)+8>>2]|0;if((d|0)==0){u=0}else{u=yc(d,37064,37496,-1)|0}d=c[t+100>>2]|0;j=(((c[u+100>>2]|0)-d|0)/2|0)+d|0;c[f>>2]=c[t+76>>2];c[g>>2]=c[u+84>>2];d=c[i>>2]|0;l=b;do{if((d|0)==(l|0)){v=0}else{b=0;e=0;m=d;do{n=(a[(yc(c[m+8>>2]|0,37064,37496,-1)|0)+136|0]&1^1)&255;b=(n^1)+b|0;e=n+e|0;m=c[m+4>>2]|0;}while((m|0)!=(l|0));m=(b|0)>(e|0);if((b|0)==0|(e|0)==0){v=m;break}n=c[i>>2]|0;if((n|0)==(l|0)){w=0}else{k=m&1;if(m){x=0;y=n;while(1){z=c[y+8>>2]|0;if((z|0)==0){A=0}else{A=yc(z,37064,37496,-1)|0}do{if((a[A+136|0]&1|0)==(k|0)){z=c[A+132>>2]|0;if((x|0)!=0){if((z+20|0)<(x|0)){B=x;break}}B=z+20|0}else{B=x}}while(0);z=c[y+4>>2]|0;if((z|0)==(l|0)){w=B;break}else{x=B;y=z}}}else{y=0;x=n;while(1){e=c[x+8>>2]|0;if((e|0)==0){C=0}else{C=yc(e,37064,37496,-1)|0}do{if((a[C+136|0]&1|0)==(k|0)){e=c[C+132>>2]|0;if((y|0)!=0){if((e-20|0)>(y|0)){D=y;break}}D=e-20|0}else{D=y}}while(0);e=c[x+4>>2]|0;if((e|0)==(l|0)){w=D;break}else{y=D;x=e}}}}c[f+4>>2]=w;c[g+4>>2]=w;o=j;p=w;q=m;r=h|0;c[r>>2]=o;s=h+4|0;c[s>>2]=p;return q|0}}while(0);w=u+132|0;u=c[w>>2]|0;D=c[t+132>>2]|0;t=((D-u|0)/2|0)+u|0;if(v){c[f+4>>2]=D+20;c[g+4>>2]=(c[w>>2]|0)+20;E=t+20|0}else{c[f+4>>2]=D-20;c[g+4>>2]=(c[w>>2]|0)-20;E=t-20|0}t=c[i>>2]|0;if((t|0)==(l|0)){o=j;p=E;q=v;r=h|0;c[r>>2]=o;s=h+4|0;c[s>>2]=p;return q|0}i=g+4|0;g=f+4|0;if(v){f=E;w=t;while(1){D=(c[(yc(c[w+8>>2]|0,37064,37496,-1)|0)+132>>2]|0)+20|0;if((D|0)>(f|0)){u=f-D|0;c[i>>2]=(c[i>>2]|0)-u;c[g>>2]=(c[g>>2]|0)-u;F=D}else{F=f}D=c[w+4>>2]|0;if((D|0)==(l|0)){o=j;p=F;q=v;break}else{f=F;w=D}}r=h|0;c[r>>2]=o;s=h+4|0;c[s>>2]=p;return q|0}else{w=E;E=t;while(1){t=(c[(yc(c[E+8>>2]|0,37064,37496,-1)|0)+132>>2]|0)-20|0;if((t|0)<(w|0)){F=w-t|0;c[i>>2]=(c[i>>2]|0)-F;c[g>>2]=(c[g>>2]|0)-F;G=t}else{G=w}t=c[E+4>>2]|0;if((t|0)==(l|0)){o=j;p=G;q=v;break}else{w=G;E=t}}r=h|0;c[r>>2]=o;s=h+4|0;c[s>>2]=p;return q|0}return 0}function ls(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0;h=i;i=i+72|0;j=h|0;k=h+16|0;l=h+32|0;m=h+40|0;n=h+48|0;o=h+56|0;if((f|0)==0){cd(10840,13416,293,20520)}if((g|0)==0){cd(10088,13416,294,20520)}jL(e+144|0,e|0);lp(k,0,(c[e+8>>2]|0)-(c[e+4>>2]|0)>>2);c0[c[(c[d>>2]|0)+52>>2]&63](d,k,j,h+8|0);g=l|0;c[g>>2]=0;f=l+4|0;c[f>>2]=0;p=m|0;c[p>>2]=0;q=m+4|0;c[q>>2]=0;r=n|0;c[r>>2]=0;s=n+4|0;c[s>>2]=0;t=lr(0,e,0,l,m,n)|0;n=(c[r>>2]|0)-((c[j>>2]|0)/2|0)|0;r=n-4|0;m=c[s>>2]|0;s=k;if((a[s]&1)==0){l=o;c[l>>2]=c[s>>2];c[l+4>>2]=c[s+4>>2];c[l+8>>2]=c[s+8>>2]}else{l=c[k+8>>2]|0;e=c[k+4>>2]|0;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[o]=e<<1&255;u=o+1|0}else{v=e+16&-16;w=yp(v)|0;c[o+8>>2]=w;c[o>>2]=v|1;c[o+4>>2]=e;u=w}yA(u|0,l|0,e)|0;a[u+e|0]=0}k6(b,d,r,m,o,0,0);if((a[o]&1)!=0){yr(c[o+8>>2]|0)}c0[c[(c[d>>2]|0)+24>>2]&63](d,0,2,100);o=c[g>>2]|0;do{if((o|0)>0){g=c[f>>2]|0;m=c[q>>2]|0;r=c[p>>2]|0;x=+(g-m|0)/+(o-r|0);e=n-8|0;u=n-2+(c[j>>2]|0)|0;y=+(g|0);z=+(o|0);l=d;w=c[(c[l>>2]|0)+80>>2]|0;v=kl(b,g)|0;A=kl(b,~~(y+(+(e|0)-z)*x))|0;cF[w&31](d,o,v,e,A);A=c[(c[l>>2]|0)+80>>2]|0;e=kl(b,~~(y+x*(+(u|0)-z)))|0;v=kl(b,m)|0;cF[A&31](d,u,e,r,v);v=c[(c[l>>2]|0)+80>>2]|0;if(t){e=kl(b,g)|0;u=kl(b,g-10|0)|0;cF[v&31](d,o,e,o,u);u=c[(c[l>>2]|0)+80>>2]|0;e=kl(b,m)|0;A=kl(b,m-10|0)|0;cF[u&31](d,r,e,r,A);break}else{A=kl(b,g)|0;e=kl(b,g+10|0)|0;cF[v&31](d,o,A,o,e);e=c[(c[l>>2]|0)+80>>2]|0;l=kl(b,m)|0;A=kl(b,m+10|0)|0;cF[e&31](d,r,l,r,A);break}}}while(0);if((a[s]&1)==0){i=h;return}yr(c[k+8>>2]|0);i=h;return}function lt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=10;h=f+1|0;a[h]=a[9264]|0;a[h+1|0]=a[9265]|0;a[h+2|0]=a[9266]|0;a[h+3|0]=a[9267]|0;a[h+4|0]=a[9268]|0;a[f+6|0]=0;iv(b|0,e);if((a[g]&1)!=0){yr(c[e+8>>2]|0)}go(b+144|0);j9(b+172|0);c[b>>2]=27040;c[b+144>>2]=27188;c[b+172>>2]=27212;a[b+177|0]=-1;i=d;return}function lu(a){a=a|0;kb(a+172|0);gq(a+144|0);ix(a|0);yr(a);return}function lv(a){a=a|0;var b=0;b=a-184+40|0;kb(b+172|0);gq(b+144|0);ix(b);yr(b);return}function lw(a){a=a|0;var b=0;b=a-184+12|0;kb(b+172|0);gq(b+144|0);ix(b);yr(b);return}function lx(a){a=a|0;kb(a+172|0);gq(a+144|0);ix(a|0);return}function ly(a){a=a|0;var b=0;b=a-184+40|0;kb(b+172|0);gq(b+144|0);ix(b);return}function lz(a){a=a|0;var b=0;b=a-184+12|0;kb(b+172|0);gq(b+144|0);ix(b);return}function lA(a,b){a=a|0;b=b|0;var c=0;if((b|0)==0){return 0}c=yc(b,37064,37160,-1)|0;if((c|0)==0){return 0}if(ke(a+172|0,c+172|0)|0){return gt(a+144|0,c+144|0)|0}else{return 0}return 0}function lB(b,c){b=b|0;c=c|0;c=b;a[b]=8;b=c+1|0;E=1953719634;a[b]=E&255;E=E>>8;a[b+1|0]=E&255;E=E>>8;a[b+2|0]=E&255;E=E>>8;a[b+3|0]=E&255;a[c+5|0]=0;return}function lC(a){a=a|0;c[a>>2]=28224;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;return}function lD(a){a=a|0;var b=0,d=0;c[a>>2]=28224;b=c[a+4>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+8>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+12>>2]|0;if((b|0)==0){d=a;yr(d);return}cG[c[(c[b>>2]|0)+4>>2]&1023](b);d=a;yr(d);return}function lE(a){a=a|0;var b=0;c[a>>2]=28224;b=c[a+4>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+8>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+12>>2]|0;if((b|0)==0){return}cG[c[(c[b>>2]|0)+4>>2]&1023](b);return}function lF(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((d|0)==0){return}e=b+4|0;b=c[e>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=yp(148)|0;ji(b,d|0);c[b+60>>2]=c[d+60>>2];c[b+64>>2]=c[d+64>>2];c[b+68>>2]=c[d+68>>2];c[b+72>>2]=c[d+72>>2];c[b+76>>2]=c[d+76>>2];c[b+80>>2]=c[d+80>>2];c[b+84>>2]=c[d+84>>2];c[b+88>>2]=c[d+88>>2];a[b+92|0]=a[d+92|0]&1;c[b+96>>2]=c[d+96>>2];c[b+100>>2]=c[d+100>>2];c[b+104>>2]=c[d+104>>2];a[b+108|0]=a[d+108|0]&1;a[b+109|0]=a[d+109|0]&1;c[b+112>>2]=c[d+112>>2];a[b+116|0]=a[d+116|0]|0;a[b+117|0]=a[d+117|0]&1;f=d+120|0;g=b+120|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;h=d+128|0;g=b+128|0;f=c[h+4>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;a[b+136|0]=a[d+136|0]&1;c[b+140>>2]=c[d+140>>2];c[b>>2]=27584;c[b+144>>2]=c[d+144>>2];c[e>>2]=b;return}function lG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((d|0)==0){return}e=b+8|0;b=c[e>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=yp(160)|0;ji(b,d|0);c[b+60>>2]=c[d+60>>2];c[b+64>>2]=c[d+64>>2];c[b+68>>2]=c[d+68>>2];c[b+72>>2]=c[d+72>>2];c[b+76>>2]=c[d+76>>2];c[b+80>>2]=c[d+80>>2];c[b+84>>2]=c[d+84>>2];c[b+88>>2]=c[d+88>>2];a[b+92|0]=a[d+92|0]&1;c[b+96>>2]=c[d+96>>2];c[b+100>>2]=c[d+100>>2];c[b+104>>2]=c[d+104>>2];a[b+108|0]=a[d+108|0]&1;a[b+109|0]=a[d+109|0]&1;c[b+112>>2]=c[d+112>>2];a[b+116|0]=a[d+116|0]|0;a[b+117|0]=a[d+117|0]&1;f=d+120|0;g=b+120|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;h=d+128|0;g=b+128|0;f=c[h+4>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;a[b+136|0]=a[d+136|0]&1;c[b+140>>2]=c[d+140>>2];a[b+148|0]=a[d+148|0]|0;a[b+149|0]=a[d+149|0]|0;c[b>>2]=29320;c[b+144>>2]=29468;c[b+152>>2]=c[d+152>>2];a[b+156|0]=a[d+156|0]|0;c[e>>2]=b;return}function lH(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((d|0)==0){return}e=b+12|0;b=c[e>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=yp(172)|0;ji(b,d|0);c[b+60>>2]=c[d+60>>2];c[b+64>>2]=c[d+64>>2];c[b+68>>2]=c[d+68>>2];c[b+72>>2]=c[d+72>>2];c[b+76>>2]=c[d+76>>2];c[b+80>>2]=c[d+80>>2];c[b+84>>2]=c[d+84>>2];c[b+88>>2]=c[d+88>>2];a[b+92|0]=a[d+92|0]&1;c[b+96>>2]=c[d+96>>2];c[b+100>>2]=c[d+100>>2];c[b+104>>2]=c[d+104>>2];a[b+108|0]=a[d+108|0]&1;a[b+109|0]=a[d+109|0]&1;c[b+112>>2]=c[d+112>>2];a[b+116|0]=a[d+116|0]|0;a[b+117|0]=a[d+117|0]&1;f=d+120|0;g=b+120|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;h=d+128|0;g=b+128|0;f=c[h+4>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;a[b+136|0]=a[d+136|0]&1;c[b+140>>2]=c[d+140>>2];c[b>>2]=26528;a[b+144|0]=a[d+144|0]|0;c[b+148>>2]=c[d+148>>2];c[b+152>>2]=c[d+152>>2];c[b+156>>2]=c[d+156>>2];a[b+160|0]=a[d+160|0]&1;c[b+164>>2]=c[d+164>>2];a[b+168|0]=a[d+168|0]|0;c[e>>2]=b;return}function lI(a,b){a=a|0;b=b|0;if((a|0)==(b|0)){return a|0}c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;lF(a,c[b+4>>2]|0);lG(a,c[b+8>>2]|0);lH(a,c[b+12>>2]|0);return a|0}function lJ(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=b|0;g=e;h=e;a[h]=18;j=g+1|0;yA(j|0,9184,9)|0;a[g+10|0]=0;jg(f,e);if((a[h]&1)!=0){yr(c[e+8>>2]|0)}c[b+64>>2]=0;c[b+68>>2]=0;c[b+72>>2]=0;e=b+80|0;h=e;c[e>>2]=h;c[b+84>>2]=h;c[b+88>>2]=0;c[b>>2]=25048;c[b+60>>2]=25164;c[b+76>>2]=25180;i=d;return}function lK(a){a=a|0;lN(a);yr(a);return}function lL(a){a=a|0;var b=0;b=a-92+32|0;lN(b);yr(b);return}function lM(a){a=a|0;var b=0;b=a-92+16|0;lN(b);yr(b);return}function lN(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a+76>>2]=28248;b=a+80|0;d=a+88|0;do{if((c[d>>2]|0)!=0){e=c[a+84>>2]|0;f=b;g=(c[b>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);c[a+60>>2]=28224;i=c[a+64>>2]|0;if((i|0)!=0){cG[c[(c[i>>2]|0)+4>>2]&1023](i)}i=c[a+68>>2]|0;if((i|0)!=0){cG[c[(c[i>>2]|0)+4>>2]&1023](i)}i=c[a+72>>2]|0;if((i|0)==0){j=a|0;jo(j);return}cG[c[(c[i>>2]|0)+4>>2]&1023](i);j=a|0;jo(j);return}function lO(a){a=a|0;lN(a-92+32|0);return}function lP(a){a=a|0;lN(a-92+16|0);return}function lQ(a){a=a|0;jj(a|0);return}function lR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=a|0;g=a+4|0;h=a+8|0;if((c[g>>2]|0)!=(c[h>>2]|0)){cd(15872,13384,133,19384)}j=b|0;jl(j,f);c[e>>2]=j;b=c[h>>2]|0;if((b|0)==(c[a+12>>2]|0)){eb(g,e);jk(f,1);i=d;return}if((b|0)==0){k=0}else{c[b>>2]=j;k=c[h>>2]|0}c[h>>2]=k+4;jk(f,1);i=d;return}function lS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=c[b+76>>2]|0;jL(a+76|0,a|0);e=c[a+84>>2]|0;f=a+80|0;if((e|0)==(f|0)){return}else{g=e}L3591:while(1){e=c[g+8>>2]|0;do{if((e|0)==0){h=0}else{a=yc(e,37064,36816,-1)|0;i=a;if((a|0)==0){h=0;break}if((c[a+76>>2]|0)==(d|0)){j=i;break L3591}else{h=i}}}while(0);e=c[g+4>>2]|0;if((e|0)==(f|0)){j=h;break}else{g=e}}if((j|0)==0){return}g=j+60|0;lF(g,c[b+64>>2]|0);lG(g,c[b+68>>2]|0);lH(g,c[b+72>>2]|0);return}function lT(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;jL(a+76|0,a|0);d=c[a+84>>2]|0;e=a+80|0;if((d|0)==(e|0)){f=0;return f|0}else{g=d}L3605:while(1){d=c[g+8>>2]|0;do{if((d|0)==0){h=0}else{a=yc(d,37064,36816,-1)|0;i=a;if((a|0)==0){h=0;break}if((c[a+76>>2]|0)==(b|0)){f=i;j=3189;break L3605}else{h=i}}}while(0);d=c[g+4>>2]|0;if((d|0)==(e|0)){f=h;j=3187;break}else{g=d}}if((j|0)==3189){return f|0}else if((j|0)==3187){return f|0}return 0}function lU(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=c[a+84>>2]|0;d=a+80|0;if((b|0)==(d|0)){return}e=a+88|0;a=b;while(1){b=c[a+8>>2]|0;do{if((b|0)==0){f=3194}else{if((yc(b,37064,36816,-1)|0)==0){f=3194;break}g=c[a+4>>2]|0}}while(0);if((f|0)==3194){f=0;b=a+4|0;h=c[b>>2]|0;i=a|0;c[(c[i>>2]|0)+4>>2]=h;c[c[b>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(a);g=h}if((g|0)==(d|0)){break}else{a=g}}return}function lV(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a-92+16|0;a=b+80|0;d=c[b+84>>2]|0;e=a;if((d|0)==(a|0)){return}a=b+88|0;b=a;f=d;while(1){d=c[f+8>>2]|0;do{if((d|0)==0){g=3204}else{if((yc(d,37064,36816,-1)|0)==0){g=3204;break}h=c[f+4>>2]|0}}while(0);if((g|0)==3204){g=0;d=f+4|0;i=c[d>>2]|0;j=f|0;c[(c[j>>2]|0)+4>>2]=i;c[c[d>>2]>>2]=c[j>>2];c[a>>2]=(c[b>>2]|0)-1;yr(f);h=i}if((h|0)==(e|0)){break}else{f=h}}return}function lW(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+72|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=g+48|0;n=g+56|0;a[h]=d&1;a[j]=e&1;a[k]=f&1;f=yp(4)|0;e=(f|0)==0;if(!e){c[f>>2]=h}d=yp(8)|0;o=d+4|0;if((o|0)!=0){c[o>>2]=j}c[d>>2]=h;if(!e){yr(f)}f=yp(16)|0;e=f;h=f+8|0;if((h|0)!=0){c[h>>2]=k}k=f+12|0;h=d;j=f;o=c[h+4>>2]|0;c[j>>2]=c[h>>2];c[j+4>>2]=o;if((d|0)!=0){yr(d)}c[m>>2]=73;c[m+4>>2]=0;jP(l,m);m=c[(c[b>>2]|0)+20>>2]|0;d=n|0;c[d>>2]=0;o=n+4|0;c[o>>2]=0;j=n+8|0;c[j>>2]=0;do{if(!0){if(0){vf(0)}h=yp(12)|0;p=h;c[o>>2]=p;c[d>>2]=p;c[j>>2]=h+12;if(0){break}else{q=e;r=p}do{if((r|0)==0){s=0}else{c[r>>2]=c[q>>2];s=c[o>>2]|0}r=s+4|0;c[o>>2]=r;q=q+4|0;}while((q|0)!=(k|0))}}while(0);c0[m&63](b|0,l,n,0);n=c[d>>2]|0;d=n;if((n|0)!=0){l=c[o>>2]|0;if((n|0)!=(l|0)){c[o>>2]=l+(~((l-4+(-d|0)|0)>>>2)<<2)}yr(n)}if((f|0)==0){i=g;return}yr(f);i=g;return}function lX(b){b=b|0;var d=0,e=0;jf(b|0);d=b+64|0;e=d;c[d>>2]=e;c[b+68>>2]=e;c[b+72>>2]=0;c[b>>2]=24768;c[b+60>>2]=24884;c[b+76>>2]=0;a[b+80|0]=0;return}function lY(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+60>>2]=28248;b=a+64|0;d=a+72|0;do{if((c[d>>2]|0)!=0){e=c[a+68>>2]|0;f=b;g=(c[b>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);jo(a|0);yr(a);return}function lZ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-84+24|0;c[b+60>>2]=28248;a=b+64|0;d=b+72|0;do{if((c[d>>2]|0)!=0){e=c[b+68>>2]|0;f=a;g=(c[a>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);jo(b);yr(b);return}function l_(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+60>>2]=28248;b=a+64|0;d=a+72|0;if((c[d>>2]|0)==0){e=a|0;jo(e);return}f=c[a+68>>2]|0;g=b;h=(c[b>>2]|0)+4|0;b=f|0;c[(c[b>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[b>>2];c[d>>2]=0;if((f|0)==(g|0)){e=a|0;jo(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=a|0;jo(e);return}function l$(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-84+24|0;c[b+60>>2]=28248;a=b+64|0;d=b+72|0;if((c[d>>2]|0)==0){e=b;jo(e);return}f=c[b+68>>2]|0;g=a;h=(c[a>>2]|0)+4|0;a=f|0;c[(c[a>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[a>>2];c[d>>2]=0;if((f|0)==(g|0)){e=b;jo(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=b;jo(e);return}function l0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function l1(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function l2(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+24>>2]&255](d,a)|0;return(b?0:2)|0}function l3(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=c[a+68>>2]|0;d=a+64|0;if((b|0)==(d|0)){return}e=a+72|0;a=b;while(1){b=c[a+8>>2]|0;do{if((b|0)==0){f=3304}else{if((yc(b,37064,36816,-1)|0)==0){f=3304;break}g=c[a+4>>2]|0}}while(0);if((f|0)==3304){f=0;b=a+4|0;h=c[b>>2]|0;i=a|0;c[(c[i>>2]|0)+4>>2]=h;c[c[b>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(a);g=h}if((g|0)==(d|0)){break}else{a=g}}return}function l4(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-84+24|0;a=c[b+68>>2]|0;d=b+64|0;if((a|0)==(d|0)){return}e=b+72|0;b=a;while(1){a=c[b+8>>2]|0;do{if((a|0)==0){f=3314}else{if((yc(a,37064,36816,-1)|0)==0){f=3314;break}g=c[b+4>>2]|0}}while(0);if((f|0)==3314){f=0;a=b+4|0;h=c[a>>2]|0;i=b|0;c[(c[i>>2]|0)+4>>2]=h;c[c[a>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(b);g=h}if((g|0)==(d|0)){break}else{b=g}}return}function l5(a){a=a|0;jf(a|0);c[a+64>>2]=0;c[a+68>>2]=0;c[a+72>>2]=0;c[a>>2]=24912;c[a+60>>2]=25024;return}function l6(a){a=a|0;var b=0;c[a+60>>2]=28224;b=c[a+64>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+68>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+72>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}jo(a|0);yr(a);return}function l7(a){a=a|0;var b=0;b=a-84+24|0;c[b+60>>2]=28224;a=c[b+64>>2]|0;if((a|0)!=0){cG[c[(c[a>>2]|0)+4>>2]&1023](a)}a=c[b+68>>2]|0;if((a|0)!=0){cG[c[(c[a>>2]|0)+4>>2]&1023](a)}a=c[b+72>>2]|0;if((a|0)!=0){cG[c[(c[a>>2]|0)+4>>2]&1023](a)}jo(b);yr(b);return}function l8(a){a=a|0;var b=0,d=0;c[a+60>>2]=28224;b=c[a+64>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+68>>2]|0;if((b|0)!=0){cG[c[(c[b>>2]|0)+4>>2]&1023](b)}b=c[a+72>>2]|0;if((b|0)==0){d=a|0;jo(d);return}cG[c[(c[b>>2]|0)+4>>2]&1023](b);d=a|0;jo(d);return}function l9(a){a=a|0;var b=0,d=0;b=a-84+24|0;c[b+60>>2]=28224;a=c[b+64>>2]|0;if((a|0)!=0){cG[c[(c[a>>2]|0)+4>>2]&1023](a)}a=c[b+68>>2]|0;if((a|0)!=0){cG[c[(c[a>>2]|0)+4>>2]&1023](a)}a=c[b+72>>2]|0;if((a|0)==0){d=b;jo(d);return}cG[c[(c[a>>2]|0)+4>>2]&1023](a);d=b;jo(d);return}function ma(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+28>>2]&255](d,a)|0;return(b?0:2)|0}function mb(a,b){a=a|0;b=b|0;lS(c[c[b>>2]>>2]|0,a);return 0}function mc(b,d){b=b|0;d=d|0;var e=0,f=0;e=c[d>>2]|0;d=c[e+4>>2]|0;f=c[e+8>>2]|0;if((a[c[e>>2]|0]&1)!=0){a[b+80|0]=1}if((a[d]&1)!=0){a[b+81|0]=1}if((a[f]&1)==0){return 0}a[b+80|0]=1;return 0}function md(b){b=b|0;var d=0,e=0,f=0;d=yp(84)|0;e=d;ji(e,b|0);f=d+60|0;jJ(f,b+60|0);c[d>>2]=24768;c[f>>2]=24884;c[d+76>>2]=c[b+76>>2];a[d+80|0]=a[b+80|0]&1;return e|0}function me(b,c){b=b|0;c=c|0;var d=0;c=b;a[b]=16;b=c+1|0;d=b|0;E=1717662803;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;d=b+4|0;E=1886537574;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;a[c+9|0]=0;return}function mf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=yp(84)|0;e=d;ji(e,b|0);f=d+60|0;g=f;h=f;c[h>>2]=28224;c[d+64>>2]=0;c[d+68>>2]=0;c[d+72>>2]=0;lF(g,c[b+64>>2]|0);lG(g,c[b+68>>2]|0);lH(g,c[b+72>>2]|0);c[d>>2]=24912;c[h>>2]=25024;c[d+76>>2]=c[b+76>>2];a[d+80|0]=a[b+80|0]&1;a[d+81|0]=a[b+81|0]&1;a[d+82|0]=a[b+82|0]&1;return e|0}function mg(b,c){b=b|0;c=c|0;var d=0;c=b;a[b]=16;b=c+1|0;d=b|0;E=1717662803;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;d=b+4|0;E=1717912678;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;a[c+9|0]=0;return}function mh(b,c){b=b|0;c=c|0;var d=0;c=b;a[b]=16;b=c+1|0;d=b|0;E=1919902547;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;d=b+4|0;E=1717912677;a[d]=E&255;E=E>>8;a[d+1|0]=E&255;E=E>>8;a[d+2|0]=E&255;E=E>>8;a[d+3|0]=E&255;a[c+9|0]=0;return}function mi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e|0;g=f;h=f;a[h]=12;j=g+1|0;a[j]=a[8800]|0;a[j+1|0]=a[8801]|0;a[j+2|0]=a[8802]|0;a[j+3|0]=a[8803]|0;a[j+4|0]=a[8804]|0;a[j+5|0]=a[8805]|0;a[g+7|0]=0;jE(b,f);if((a[h]&1)!=0){yr(c[f+8>>2]|0)}c[b>>2]=26688;jj(b);c[b+16>>2]=0;yC(b+94|0,0,12);a[b+106|0]=5;a[b+107|0]=0;a[b+108|0]=0;c[b+112>>2]=-2147483647;c[b+116>>2]=0;c[b+128>>2]=0;c[b+124>>2]=d;i=e;return}function mj(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;jl(f,a);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e)}else{if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4}j=b+144|0;if((c[j>>2]|0)!=-1){i=d;return}c[j>>2]=(c[g>>2]|0)-(c[a+4>>2]|0)>>2;i=d;return}function mk(a){a=a|0;jo(a);yr(a|0);return}function ml(a){a=a|0;jo(a);return}function mm(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+36>>2]&255](d,a)|0;return(b?0:2)|0}function mn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=c[d>>2]|0;d=c[e+4>>2]|0;f=c[e+8>>2]|0;if((a[f]&1)!=0){g=1;return g|0}h=c[e>>2]|0;c[d>>2]=(c[d>>2]|0)+1;if((h|0)!=(b|0)){g=0;return g|0}a[f]=1;g=1;return g|0}function mo(a){a=a|0;var b=0,d=0;b=c[a+128>>2]|0;if((b|0)==0){d=0;return d|0}d=c[b+60>>2]|0;return d|0}function mp(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[b>>2]|0;b=c[d+12>>2]|0;e=dC(c[c[d+8>>2]>>2]|0,c[b>>2]|0)|0;if((e|0)==0){cd(15752,13288,244,19736);return 0}else{c[a+128>>2]=e;c[b>>2]=(c[b>>2]|0)+1;return 0}return 0}function mq(b,c){b=b|0;c=c|0;c=b;a[b]=10;b=c+1|0;a[b]=a[10024]|0;a[b+1|0]=a[10025]|0;a[b+2|0]=a[10026]|0;a[b+3|0]=a[10027]|0;a[b+4|0]=a[10028]|0;a[c+6|0]=0;return}function mr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+16|0;g=f|0;j=g;k=i;i=i+12|0;i=i+7&-8;l=k;m=i;i=i+12|0;i=i+7&-8;n=b+4|0;a[n]=1;a[b+5|0]=0;c[b>>2]=28528;o=b+8|0;p=o;q=o|0;r=b+16|0;c[r>>2]=23096;s=b+20|0;t=o;c[q>>2]=37900;c[b+72>>2]=37920;c[b+12>>2]=0;qS(b+72|0,s);c[b+144>>2]=0;c[b+148>>2]=-1;c[q>>2]=23076;c[b+72>>2]=23116;c[r>>2]=23096;r=s|0;c[r>>2]=23400;vl(b+24|0);yC(b+28|0,0,24);c[r>>2]=23256;yC(b+52|0,0,16);c[b+68>>2]=24;yC(l|0,0,12);gb(s,k);if((a[l]&1)!=0){yr(c[k+8>>2]|0)}k=b+152|0;l=k;s=k|0;r=b+160|0;c[r>>2]=23096;q=b+164|0;o=k;c[s>>2]=37900;c[b+216>>2]=37920;c[b+156>>2]=0;qS(b+216|0,q);c[b+288>>2]=0;c[b+292>>2]=-1;c[s>>2]=23076;c[b+216>>2]=23116;c[r>>2]=23096;r=q|0;c[r>>2]=23400;vl(b+168|0);yC(b+172|0,0,24);c[r>>2]=23256;yC(b+196|0,0,16);c[b+212>>2]=24;yC(j|0,0,12);gb(q,g);if((a[j]&1)!=0){yr(c[g+8>>2]|0)}c[b+344>>2]=28688;g=b+368|0;yC(b+368|0,0,12);yC(b+348|0,0,17);a[g+1|0]=0;a[g]=0;g=b+388|0;a[n]=0;yC(b+380|0,0,76);c[b+308>>2]=d;c[b+312>>2]=e;h[b+328>>3]=1.0;h[b+336>>3]=1.0;c[b+316>>2]=0;c[b+320>>2]=0;cZ[c[(c[b>>2]|0)+8>>2]&127](b,0,100);c0[c[(c[b>>2]|0)+24>>2]&63](b,0,1,100);c[b+300>>2]=0;c[b+304>>2]=1;e=c[b+384>>2]|0;d=c[g>>2]|0;if((e|0)!=(d|0)){n=d;while(1){d=n-12|0;c[g>>2]=d;if((a[d]&1)==0){u=d}else{yr(c[n-12+8>>2]|0);u=c[g>>2]|0}if((e|0)==(u|0)){break}else{n=u}}}a[b+296|0]=0;b=m;a[b]=0;a[m+1|0]=0;gb(q,m);if((a[b]&1)!=0){yr(c[m+8>>2]|0)}qN(l+(c[(c[o>>2]|0)-12>>2]|0)|0,0);qN(p+(c[(c[t>>2]|0)-12>>2]|0)|0,0);i=f;return}function ms(a){a=a|0;mt(a);yr(a);return}function mt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[b>>2]=28528;if((a[b+444|0]&1)!=0){yr(c[b+452>>2]|0)}if((a[b+432|0]&1)!=0){yr(c[b+440>>2]|0)}if((a[b+420|0]&1)!=0){yr(c[b+428>>2]|0)}if((a[b+408|0]&1)!=0){yr(c[b+416>>2]|0)}if((a[b+396|0]&1)!=0){yr(c[b+404>>2]|0)}d=b+384|0;e=c[d>>2]|0;if((e|0)!=0){f=b+388|0;g=c[f>>2]|0;if((e|0)==(g|0)){h=e}else{i=g;while(1){g=i-12|0;c[f>>2]=g;if((a[g]&1)==0){j=g}else{yr(c[i-12+8>>2]|0);j=c[f>>2]|0}if((e|0)==(j|0)){break}else{i=j}}h=c[d>>2]|0}yr(h)}c[b+344>>2]=28688;if((a[b+368|0]&1)!=0){yr(c[b+376>>2]|0)}c[b+152>>2]=23076;c[b+216>>2]=23116;c[b+160>>2]=23096;h=b+164|0;c[h>>2]=23256;if((a[b+196|0]&1)!=0){yr(c[b+204>>2]|0)}c[h>>2]=23400;vn(b+168|0);qO(b+216|0);c[b+8>>2]=23076;c[b+72>>2]=23116;c[b+16>>2]=23096;h=b+20|0;c[h>>2]=23256;if((a[b+52|0]&1)!=0){yr(c[b+60>>2]|0)}c[h>>2]=23400;vn(b+24|0);qO(b+72|0);return}function mu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;i=i+192|0;f=b|0;if((a[d]&1)==0){g=d+1|0}else{g=c[d+8>>2]|0}d=f;h=f|0;j=f+8|0;k=j|0;l=f;c[h>>2]=37940;m=f+108|0;c[m>>2]=37960;c[f+4>>2]=0;qS(f+108|0,j);c[f+180>>2]=0;c[f+184>>2]=-1;c[h>>2]=23476;c[f+108>>2]=23496;fZ(j);n=f+72|0;do{if((c[n>>2]|0)==0){o=bN(g|0,17728)|0;c[n>>2]=o;if((o|0)==0){p=3570;break}c[f+96>>2]=12}else{p=3570}}while(0);if((p|0)==3570){g=c[(c[l>>2]|0)-12>>2]|0;qN(d+g|0,c[d+(g+16)>>2]|4)}rI(e,k)|0;k=c[n>>2]|0;do{if((k|0)==0){p=3583}else{e=cJ[c[(c[j>>2]|0)+24>>2]&255](j)|0;if((aQ(k|0)|0)!=0){p=3583;break}c[n>>2]=0;if((e|0)!=0){p=3583}}}while(0);if((p|0)==3583){p=c[(c[l>>2]|0)-12>>2]|0;qN(d+p|0,c[d+(p+16)>>2]|4)}c[h>>2]=23476;c[m>>2]=23496;fP(j);qO(f+108|0);i=b;return 1}function mv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;i=i+64|0;f=e|0;g=e+16|0;j=e+32|0;k=e+48|0;l=k;m=i;i=i+12|0;i=i+7&-8;n=i;i=i+12|0;i=i+7&-8;o=i;i=i+12|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+12|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=b+296|0;if((a[s]&1)!=0){i=e;return}t=b+300|0;if((c[t>>2]|0)<0){u=f+8|0;v=f|0;w=f+4|0;x=f;y=g;z=g;A=y+1|0;B=y+5|0;y=b+304|0;C=g+8|0;while(1){D=yp(64)|0;c[u>>2]=D;c[v>>2]=65;c[w>>2]=49;yA(D|0,15664,49)|0;a[D+49|0]=0;mw(b,f);if((a[x]&1)!=0){yr(c[u>>2]|0)}a[z]=8;E=1046949692;a[A]=E&255;E=E>>8;a[A+1|0]=E&255;E=E>>8;a[A+2|0]=E&255;E=E>>8;a[A+3|0]=E&255;a[B]=0;mw(b,g);if((a[z]&1)!=0){yr(c[C>>2]|0)}c[y>>2]=(c[y>>2]|0)-1;c[t>>2]=(c[t>>2]|0)-1}}c[b+304>>2]=0;t=j;a[t]=14;y=j+1|0;a[y]=a[11752]|0;a[y+1|0]=a[11753]|0;a[y+2|0]=a[11754]|0;a[y+3|0]=a[11755]|0;a[y+4|0]=a[11756]|0;a[y+5|0]=a[11757]|0;a[y+6|0]=a[11758]|0;y=j+8|0;a[y]=0;mw(b,j);if((a[t]&1)!=0){yr(c[y>>2]|0)}yC(l|0,0,12);if(d){qw(k,10736)|0}d=~~(+(c[b+312>>2]|0)*+h[b+336>>3]);dp(m,9992,(y=i,i=i+16|0,c[y>>2]=~~(+(c[b+308>>2]|0)*+h[b+328>>3]),c[y+8>>2]=d,y)|0);i=y;y=m;d=a[y]|0;if((d&1)==0){F=m+1|0}else{F=c[m+8>>2]|0}t=d&255;if((t&1|0)==0){G=t>>>1}else{G=c[m+4>>2]|0}qB(k,F,G)|0;if((a[y]&1)!=0){yr(c[m+8>>2]|0)}qB(k,9088,95)|0;m=b+16|0;fJ(m,k)|0;y=b+388|0;G=b+384|0;if((c[y>>2]|0)!=(c[G>>2]|0)){hC(m,8472)|0;F=c[G>>2]|0;L4003:do{if((F|0)!=(c[y>>2]|0)){G=p;t=q;d=q+1|0;j=p+1|0;C=n;z=o;g=o+1|0;B=n+1|0;A=q+8|0;u=p+8|0;x=o+8|0;f=n+8|0;w=n|0;v=n+4|0;D=o+4|0;H=p|0;I=p+4|0;J=q+4|0;K=F;while(1){hC(m,7992)|0;dk(q);yC(G|0,0,12);L=a[t]|0;M=L&255;N=(M&1|0)==0?M>>>1:c[J>>2]|0;M=(L&1)==0?d:c[A>>2]|0;L=N+5|0;if(L>>>0>4294967279>>>0){O=3640;break}if(L>>>0<11>>>0){a[G]=N<<1&255;P=j}else{L=N+21&-16;Q=yp(L)|0;c[u>>2]=Q;c[H>>2]=L|1;c[I>>2]=N;P=Q}yA(P|0,M|0,N)|0;a[P+N|0]=0;qB(p,7352,5)|0;hj(o,p,K);yC(C|0,0,12);N=a[z]|0;M=N&255;Q=(M&1|0)==0?M>>>1:c[D>>2]|0;M=(N&1)==0?g:c[x>>2]|0;N=Q+4|0;if(N>>>0>4294967279>>>0){O=3653;break}if(N>>>0<11>>>0){a[C]=Q<<1&255;R=B}else{N=Q+20&-16;L=yp(N)|0;c[f>>2]=L;c[w>>2]=N|1;c[v>>2]=Q;R=L}yA(R|0,M|0,Q)|0;a[R+Q|0]=0;qB(n,18608,4)|0;mu(0,n,m)|0;if((a[C]&1)!=0){yr(c[f>>2]|0)}if((a[z]&1)!=0){yr(c[x>>2]|0)}if((a[G]&1)!=0){yr(c[u>>2]|0)}if((a[t]&1)!=0){yr(c[A>>2]|0)}K=K+12|0;if((K|0)==(c[y>>2]|0)){break L4003}}if((O|0)==3640){qo(0)}else if((O|0)==3653){qo(0)}}}while(0);hC(m,17872)|0}hn(r,b+164|0);fJ(m,r)|0;if((a[r]&1)!=0){yr(c[r+8>>2]|0)}a[s]=1;if((a[l]&1)==0){i=e;return}yr(c[k+8>>2]|0);i=e;return}function mw(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e|0;g=f;h=i;i=i+12|0;i=i+7&-8;yC(g|0,0,12);qy(f,c[b+304>>2]|0,9)|0;mx(h,d,17456);d=h;j=a[d]|0;if((j&1)==0){k=h+1|0}else{k=c[h+8>>2]|0}l=j&255;if((l&1|0)==0){m=l>>>1}else{m=c[h+4>>2]|0}qB(f,k,m)|0;if((a[d]&1)!=0){yr(c[h+8>>2]|0)}fJ(b+160|0,f)|0;if((a[g]&1)==0){i=e;return}yr(c[f+8>>2]|0);i=e;return}function mx(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;yC(f|0,0,12);g=a[d]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[d+4>>2]|0}h=yz(e|0)|0;if((g&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}d=h+i|0;if(d>>>0>4294967279>>>0){qo(0)}if(d>>>0<11>>>0){a[f]=i<<1&255;k=b+1|0}else{f=d+16&-16;d=yp(f)|0;c[b+8>>2]=d;c[b>>2]=f|1;c[b+4>>2]=i;k=d}yA(k|0,j|0,i)|0;a[k+i|0]=0;qB(b,e,h)|0;return}function my(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;g=d|0;if((a[e]&1)==0){h=e+1|0}else{h=c[e+8>>2]|0}if((a[f]&1)==0){j=f+1|0}else{j=c[f+8>>2]|0}f=b+420|0;if((a[f]&1)==0){k=f+1|0}else{k=c[b+428>>2]|0}f=b+444|0;if((a[f]&1)==0){l=f+1|0}else{l=c[b+452>>2]|0}f=b+396|0;if((a[f]&1)==0){m=f+1|0}else{m=c[b+404>>2]|0}f=b+408|0;if((a[f]&1)==0){n=f+1|0}else{n=c[b+416>>2]|0}dp(g,17032,(f=i,i=i+48|0,c[f>>2]=h,c[f+8>>2]=j,c[f+16>>2]=k,c[f+24>>2]=l,c[f+32>>2]=m,c[f+40>>2]=n,f)|0);i=f;mw(b,g);if((a[g]&1)==0){o=b+300|0;p=c[o>>2]|0;q=p+1|0;c[o>>2]=q;r=b+304|0;s=c[r>>2]|0;t=s+1|0;c[r>>2]=t;i=d;return}yr(c[g+8>>2]|0);o=b+300|0;p=c[o>>2]|0;q=p+1|0;c[o>>2]=q;r=b+304|0;s=c[r>>2]|0;t=s+1|0;c[r>>2]=t;i=d;return}function mz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;e=i;i=i+16|0;d=e|0;f=b+300|0;c[f>>2]=(c[f>>2]|0)-1;f=b+304|0;c[f>>2]=(c[f>>2]|0)-1;f=d;g=d;a[g]=8;h=f+1|0;E=1046949692;a[h]=E&255;E=E>>8;a[h+1|0]=E&255;E=E>>8;a[h+2|0]=E&255;E=E>>8;a[h+3|0]=E&255;a[f+5|0]=0;mw(b,d);if((a[g]&1)==0){i=e;return}yr(c[d+8>>2]|0);i=e;return}function mA(b){b=b|0;var d=0,e=0,f=0.0,g=0.0,j=0,k=0;d=i;i=i+16|0;e=d|0;f=+h[b+328>>3];g=+h[b+336>>3];j=~~(+(c[b+320>>2]|0)*g);dp(e,16656,(k=i,i=i+32|0,c[k>>2]=~~(+(c[b+316>>2]|0)*f),c[k+8>>2]=j,h[k+16>>3]=f,h[k+24>>3]=g,k)|0);i=k;mw(b,e);if((a[e]&1)!=0){yr(c[e+8>>2]|0)}e=b+300|0;c[e>>2]=(c[e>>2]|0)+1;e=b+304|0;c[e>>2]=(c[e>>2]|0)+1;i=d;return}function mB(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=b+300|0;c[f>>2]=(c[f>>2]|0)-1;f=b+304|0;c[f>>2]=(c[f>>2]|0)-1;f=e;g=e;a[g]=8;h=f+1|0;E=1046949692;a[h]=E&255;E=E>>8;a[h+1|0]=E&255;E=E>>8;a[h+2|0]=E&255;E=E>>8;a[h+3|0]=E&255;a[f+5|0]=0;mw(b,e);if((a[g]&1)==0){i=d;return}yr(c[e+8>>2]|0);i=d;return}function mC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+48|0;g=f|0;h=f+16|0;j=f+32|0;k=b+396|0;mD(j,0,d);d=h;yC(d|0,0,12);l=j;m=a[l]|0;n=m&255;if((n&1|0)==0){o=n>>>1}else{o=c[j+4>>2]|0}n=o+6|0;if(n>>>0>4294967279>>>0){qo(0)}if(n>>>0<11>>>0){a[d]=12;p=h+1|0}else{n=o+22&-16;q=yp(n)|0;c[h+8>>2]=q;c[h>>2]=n|1;c[h+4>>2]=6;p=q}a[p]=a[16264]|0;a[p+1|0]=a[16265]|0;a[p+2|0]=a[16266]|0;a[p+3|0]=a[16267]|0;a[p+4|0]=a[16268]|0;a[p+5|0]=a[16269]|0;a[p+6|0]=0;if((m&1)==0){r=j+1|0}else{r=c[j+8>>2]|0}qB(h,r,o)|0;o=g;yC(o|0,0,12);r=a[d]|0;m=r&255;if((m&1|0)==0){s=m>>>1}else{s=c[h+4>>2]|0}if((r&1)==0){t=h+1|0}else{t=c[h+8>>2]|0}r=s+1|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[o]=s<<1&255;u=g+1|0}else{r=s+17&-16;m=yp(r)|0;c[g+8>>2]=m;c[g>>2]=r|1;c[g+4>>2]=s;u=m}yA(u|0,t|0,s)|0;a[u+s|0]=0;qB(g,15864,1)|0;qv(k,g)|0;if((a[o]&1)!=0){yr(c[g+8>>2]|0)}if((a[d]&1)!=0){yr(c[h+8>>2]|0)}if((a[l]&1)!=0){yr(c[j+8>>2]|0)}if((e|0)==100){j=b+408|0;qw(j,15536)|0;i=f;return}else if((e|0)==106){qw(b+408|0,15240)|0;i=f;return}else{qw(b+408|0,15536)|0;i=f;return}}function mD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;f=d|0;g=f;h=i;i=i+144|0;j=h|0;k=h+8|0;l=k|0;c[l>>2]=23096;m=h+12|0;c[j>>2]=37900;n=h+64|0;c[n>>2]=37920;c[h+4>>2]=0;qS(h+64|0,m);c[h+136>>2]=0;c[h+140>>2]=-1;o=h+8|0;c[j>>2]=23076;c[h+64>>2]=23116;c[l>>2]=23096;l=m|0;c[l>>2]=23400;p=h+16|0;vl(p);yC(h+20|0,0,24);c[l>>2]=23256;l=h+44|0;yC(h+44|0,0,16);c[h+60>>2]=24;yC(g|0,0,12);gb(m,f);if((a[g]&1)!=0){yr(c[f+8>>2]|0)}f=k+((c[(c[k>>2]|0)-12>>2]|0)+4)|0;c[f>>2]=c[f>>2]&-75|8;if((e|0)==16711680){f=b;a[b]=12;g=f+1|0;a[g]=a[18704]|0;a[g+1|0]=a[18705]|0;a[g+2|0]=a[18706]|0;a[g+3|0]=a[18707]|0;a[g+4|0]=a[18708]|0;a[g+5|0]=a[18709]|0;a[f+7|0]=0}else if((e|0)==8355711){f=b;a[b]=12;g=f+1|0;a[g]=a[18376]|0;a[g+1|0]=a[18377]|0;a[g+2|0]=a[18378]|0;a[g+3|0]=a[18379]|0;a[g+4|0]=a[18380]|0;a[g+5|0]=a[18381]|0;a[f+7|0]=0}else if((e|0)==0){f=b;a[b]=12;g=f+1|0;a[g]=a[18872]|0;a[g+1|0]=a[18873]|0;a[g+2|0]=a[18874]|0;a[g+3|0]=a[18875]|0;a[g+4|0]=a[18876]|0;a[g+5|0]=a[18877]|0;a[f+7|0]=0}else if((e|0)==255){f=b;a[b]=12;g=f+1|0;a[g]=a[18552]|0;a[g+1|0]=a[18553]|0;a[g+2|0]=a[18554]|0;a[g+3|0]=a[18555]|0;a[g+4|0]=a[18556]|0;a[g+5|0]=a[18557]|0;a[f+7|0]=0}else if((e|0)==65280){f=b;a[b]=12;g=f+1|0;a[g]=a[18600]|0;a[g+1|0]=a[18601]|0;a[g+2|0]=a[18602]|0;a[g+3|0]=a[18603]|0;a[g+4|0]=a[18604]|0;a[g+5|0]=a[18605]|0;a[f+7|0]=0}else if((e|0)==65535){f=b;a[b]=12;g=f+1|0;a[g]=a[18496]|0;a[g+1|0]=a[18497]|0;a[g+2|0]=a[18498]|0;a[g+3|0]=a[18499]|0;a[g+4|0]=a[18500]|0;a[g+5|0]=a[18501]|0;a[f+7|0]=0}else if((e|0)==16777215){f=b;a[b]=12;g=f+1|0;a[g]=a[18856]|0;a[g+1|0]=a[18857]|0;a[g+2|0]=a[18858]|0;a[g+3|0]=a[18859]|0;a[g+4|0]=a[18860]|0;a[g+5|0]=a[18861]|0;a[f+7|0]=0}else{rH(rH(rH(k,e>>>16&255)|0,e>>>8&255)|0,e&255)|0;hn(b,m)}c[j>>2]=23076;c[n>>2]=23116;c[o>>2]=23096;o=h+12|0;c[o>>2]=23256;if((a[l]&1)!=0){yr(c[h+52>>2]|0)}c[o>>2]=23400;vn(p);qO(h+64|0);i=d;return}function mE(a,b,c){a=a|0;b=b|0;c=c|0;return}function mF(a,b,c){a=a|0;b=b|0;c=+c;return}function mG(a,b){a=a|0;b=b|0;return}function mH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0;g=i;i=i+96|0;h=g|0;j=g+16|0;k=g+32|0;l=g+48|0;m=g+64|0;n=g+80|0;o=b+420|0;mD(k,0,d);d=j;yC(d|0,0,12);p=k;q=a[p]|0;r=q&255;if((r&1|0)==0){s=r>>>1}else{s=c[k+4>>2]|0}r=s+8|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[d]=16;t=j+1|0}else{r=s+24&-16;u=yp(r)|0;c[j+8>>2]=u;c[j>>2]=r|1;c[j+4>>2]=8;t=u}u=t;r=u|0;E=1869771891;a[r]=E&255;E=E>>8;a[r+1|0]=E&255;E=E>>8;a[r+2|0]=E&255;E=E>>8;a[r+3|0]=E&255;r=u+4|0;E=591029611;a[r]=E&255;E=E>>8;a[r+1|0]=E&255;E=E>>8;a[r+2|0]=E&255;E=E>>8;a[r+3|0]=E&255;a[t+8|0]=0;if((q&1)==0){v=k+1|0}else{v=c[k+8>>2]|0}qB(j,v,s)|0;s=h;yC(s|0,0,12);v=a[d]|0;q=v&255;if((q&1|0)==0){w=q>>>1}else{w=c[j+4>>2]|0}if((v&1)==0){x=j+1|0}else{x=c[j+8>>2]|0}v=w+1|0;if(v>>>0>4294967279>>>0){qo(0)}if(v>>>0<11>>>0){a[s]=w<<1&255;y=h+1|0}else{v=w+17&-16;q=yp(v)|0;c[h+8>>2]=q;c[h>>2]=v|1;c[h+4>>2]=w;y=q}yA(y|0,x|0,w)|0;a[y+w|0]=0;qB(h,15864,1)|0;qv(o,h)|0;if((a[s]&1)!=0){yr(c[h+8>>2]|0)}if((a[d]&1)!=0){yr(c[j+8>>2]|0)}if((a[p]&1)!=0){yr(c[k+8>>2]|0)}k=b+432|0;dp(n,14480,(p=i,i=i+8|0,c[p>>2]=e,p)|0);i=p;p=m;yC(p|0,0,12);e=n;j=n;d=a[j]|0;h=d&255;if((h&1|0)==0){z=h>>>1}else{z=c[n+4>>2]|0}h=z+13|0;if(h>>>0>4294967279>>>0){qo(0)}if(h>>>0<11>>>0){a[p]=26;A=m+1|0}else{h=z+29&-16;s=yp(h)|0;c[m+8>>2]=s;c[m>>2]=h|1;c[m+4>>2]=13;A=s}yA(A|0,14736,13)|0;a[A+13|0]=0;if((d&1)==0){B=e+1|0}else{B=c[n+8>>2]|0}qB(m,B,z)|0;z=l;yC(z|0,0,12);B=a[p]|0;e=B&255;if((e&1|0)==0){C=e>>>1}else{C=c[m+4>>2]|0}if((B&1)==0){D=m+1|0}else{D=c[m+8>>2]|0}B=C+1|0;if(B>>>0>4294967279>>>0){qo(0)}if(B>>>0<11>>>0){a[z]=C<<1&255;F=l+1|0}else{B=C+17&-16;e=yp(B)|0;c[l+8>>2]=e;c[l>>2]=B|1;c[l+4>>2]=C;F=e}yA(F|0,D|0,C)|0;a[F+C|0]=0;qB(l,15864,1)|0;qv(k,l)|0;if((a[z]&1)!=0){yr(c[l+8>>2]|0)}if((a[p]&1)!=0){yr(c[m+8>>2]|0)}if((a[j]&1)!=0){yr(c[n+8>>2]|0)}if((f|0)==100){n=b+444|0;qw(n,14272)|0;i=g;return}else if((f|0)==106){qw(b+444|0,14080)|0;i=g;return}else{qw(b+444|0,14272)|0;i=g;return}}function mI(b,d){b=b|0;d=d|0;c[b+348>>2]=c[d+4>>2];c[b+352>>2]=c[d+8>>2];c[b+356>>2]=c[d+12>>2];c[b+360>>2]=c[d+16>>2];a[b+364|0]=a[d+20|0]&1;qv(b+368|0,d+24|0)|0;c[b+380>>2]=c[d+36>>2];return}function mJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e|0;g=e+16|0;mD(g,0,d);d=f;yC(d|0,0,12);h=g;j=a[h]|0;k=j&255;if((k&1|0)==0){l=k>>>1}else{l=c[g+4>>2]|0}k=l+6|0;if(k>>>0>4294967279>>>0){qo(0)}if(k>>>0<11>>>0){a[d]=12;m=f+1|0}else{k=l+22&-16;n=yp(k)|0;c[f+8>>2]=n;c[f>>2]=k|1;c[f+4>>2]=6;m=n}a[m]=a[16264]|0;a[m+1|0]=a[16265]|0;a[m+2|0]=a[16266]|0;a[m+3|0]=a[16267]|0;a[m+4|0]=a[16268]|0;a[m+5|0]=a[16269]|0;a[m+6|0]=0;if((j&1)==0){o=g+1|0}else{o=c[g+8>>2]|0}qB(f,o,l)|0;qv(b+396|0,f)|0;if((a[d]&1)!=0){yr(c[f+8>>2]|0)}if((a[h]&1)==0){i=e;return}yr(c[g+8>>2]|0);i=e;return}function mK(a,b){a=a|0;b=b|0;return}function mL(a){a=a|0;cZ[c[(c[a>>2]|0)+8>>2]&127](a,0,100);return}function mM(a){a=a|0;c0[c[(c[a>>2]|0)+24>>2]&63](a,0,1,100);return}function mN(a,b,d){a=a|0;b=b|0;d=d|0;c[a+316>>2]=-b;c[a+320>>2]=-d;return}function mO(a,b,c){a=a|0;b=+b;c=+c;h[a+328>>3]=b;h[a+336>>3]=c;return}function mP(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;g=i;i=i+32|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;c[e>>2]=0;c[f>>2]=0;m=d;n=d+1|0;o=b+348|0;b=d+8|0;p=d+4|0;d=0;while(1){q=a[m]|0;r=q&255;if((r&1|0)==0){s=r>>>1}else{s=c[p>>2]|0}if(d>>>0>=s>>>0){break}if((q&1)==0){t=n}else{t=c[b>>2]|0}iN(a[t+d|0]|0,h,j,k,l);u=+(c[o>>2]|0)*.00048828125;q=~~(+(c[k>>2]|0)*u);c[k>>2]=q;r=~~(+(c[l>>2]|0)*u);c[l>>2]=r;c[e>>2]=(c[e>>2]|0)+q;c[f>>2]=(c[f>>2]|0)+r;d=d+1|0}i=g;return}function mQ(a,b){a=a|0;b=b|0;var d=0;d=c[b+320>>2]|0;c[a>>2]=c[b+316>>2];c[a+4>>2]=d;return}function mR(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+16|0;j=h|0;k=c[f>>2]|0;l=c[f+4>>2]|0;m=c[f+8>>2]|0;n=c[f+12>>2]|0;o=c[f+16>>2]|0;p=c[f+20>>2]|0;f=c[g>>2]|0;q=c[g+4>>2]|0;r=c[g+8>>2]|0;s=c[g+12>>2]|0;t=c[g+16>>2]|0;u=c[g+20>>2]|0;dp(j,13736,(g=i,i=i+112|0,c[g>>2]=d,c[g+8>>2]=e,c[g+16>>2]=k,c[g+24>>2]=l,c[g+32>>2]=m,c[g+40>>2]=n,c[g+48>>2]=o,c[g+56>>2]=p,c[g+64>>2]=f,c[g+72>>2]=q,c[g+80>>2]=r,c[g+88>>2]=s,c[g+96>>2]=t,c[g+104>>2]=u,g)|0);i=g;mw(b,j);if((a[j]&1)==0){i=h;return}yr(c[j+8>>2]|0);i=h;return}function mS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=e<<1;cF[c[(c[a>>2]|0)+72>>2]&31](a,b-e|0,d-e|0,f,f);return}function mT(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h|0;k=(g|0)/2|0;g=(f|0)/2|0;dp(j,13552,(f=i,i=i+32|0,c[f>>2]=g+d,c[f+8>>2]=k+e,c[f+16>>2]=g,c[f+24>>2]=k,f)|0);i=f;mw(b,j);if((a[j]&1)==0){i=h;return}yr(c[j+8>>2]|0);i=h;return}function mU(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;j=+j;var k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;k=i;i=i+16|0;l=k|0;m=(f|0)/2|0;n=+(m|0);f=(g|0)/2|0;o=+(f|0);p=+(d|0)+n;q=+(e|0)+o;r=h*3.141592653589793/180.0;h=p+n*+_(r);s=j*3.141592653589793/180.0;j=p+n*+_(s);n=q-o*+$(r);r=q-o*+$(s);s=+ae(+(r-q),+(j-p))- +ae(+(n-q),+(h-p));e=+X(+s)>3.141592653589793|0;d=X(m|0)|0;m=X(f|0)|0;dp(l,13336,(f=i,i=i+64|0,c[f>>2]=~~h,c[f+8>>2]=~~n,c[f+16>>2]=d,c[f+24>>2]=m,c[f+32>>2]=s>0.0,c[f+40>>2]=e,c[f+48>>2]=~~j,c[f+56>>2]=~~r,f)|0);i=f;mw(b,l);if((a[l]&1)==0){i=k;return}yr(c[l+8>>2]|0);i=k;return}function mV(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h|0;k=b+432|0;if((a[k]&1)==0){l=k+1|0}else{l=c[b+440>>2]|0}dp(j,13216,(k=i,i=i+40|0,c[k>>2]=d,c[k+8>>2]=e,c[k+16>>2]=f,c[k+24>>2]=g,c[k+32>>2]=l,k)|0);i=k;mw(b,j);if((a[j]&1)==0){i=h;return}yr(c[j+8>>2]|0);i=h;return}function mW(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+16|0;j=h|0;k=j;l=i;i=i+12|0;i=i+7&-8;m=i;i=i+12|0;i=i+7&-8;yC(k|0,0,12);qw(j,13056)|0;qB(j,12920,19)|0;qB(j,12800,10)|0;if((d|0)>0){n=l;o=l+1|0;p=l+8|0;q=l+4|0;r=0;do{s=(c[e+(r<<3)+4>>2]|0)+g|0;dp(l,12624,(t=i,i=i+16|0,c[t>>2]=(c[e+(r<<3)>>2]|0)+f,c[t+8>>2]=s,t)|0);i=t;t=a[n]|0;s=t&255;qB(j,(t&1)==0?o:c[p>>2]|0,(s&1|0)==0?s>>>1:c[q>>2]|0)|0;if((a[n]&1)!=0){yr(c[p>>2]|0)}r=r+1|0;}while((r|0)<(d|0))}qB(j,12544,5)|0;if((a[k]&1)==0){d=m;c[d>>2]=c[k>>2];c[d+4>>2]=c[k+4>>2];c[d+8>>2]=c[k+8>>2]}else{d=c[j+8>>2]|0;r=c[j+4>>2]|0;if(r>>>0>4294967279>>>0){qo(0)}if(r>>>0<11>>>0){a[m]=r<<1&255;u=m+1|0}else{p=r+16&-16;n=yp(p)|0;c[m+8>>2]=n;c[m>>2]=p|1;c[m+4>>2]=r;u=n}yA(u|0,d|0,r)|0;a[u+r|0]=0}mw(b,m);if((a[m]&1)!=0){yr(c[m+8>>2]|0)}if((a[k]&1)==0){i=h;return}yr(c[j+8>>2]|0);i=h;return}function mX(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;cN[c[(c[a>>2]|0)+96>>2]&15](a,b,d,e,f,0.0);return}function mY(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0;k=i;i=i+16|0;l=k|0;if((g|0)<0){m=-g|0;n=g+e|0}else{m=g;n=e}if((f|0)<0){o=-f|0;p=f+d|0}else{o=f;p=d}dp(l,12336,(d=i,i=i+40|0,c[d>>2]=p,c[d+8>>2]=n,c[d+16>>2]=o,c[d+24>>2]=m,h[d+32>>3]=j,d)|0);i=d;mw(b,l);if((a[l]&1)==0){i=k;return}yr(c[l+8>>2]|0);i=k;return}function mZ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c0[c[(c[a>>2]|0)+104>>2]&63](a,b,d,e);return}function m_(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var h=0;f=i;i=i+16|0;e=f|0;d=yp(80)|0;h=e+8|0;c[h>>2]=d;c[e>>2]=81;c[e+4>>2]=64;yA(d|0,12104,64)|0;a[d+64|0]=0;mw(b,e);if((a[e]&1)==0){i=f;return}yr(c[h>>2]|0);i=f;return}function m$(a,b){a=a|0;b=b|0;yC(a|0,0,12);switch(b&255|0){case 135:{qw(a,10496)|0;return};case 136:{qw(a,10368)|0;return};case 48:{qw(a,11960)|0;return};case 220:{qw(a,8200)|0;return};case 235:{qw(a,8152)|0;return};case 236:{qw(a,8120)|0;return};case 237:{qw(a,8080)|0;return};case 210:{qw(a,9768)|0;return};case 208:{qw(a,9920)|0;return};case 227:{qw(a,9656)|0;return};case 54:{qw(a,11200)|0;return};case 57:{qw(a,11008)|0;return};case 50:{qw(a,11656)|0;return};case 55:{qw(a,11152)|0;return};case 211:{qw(a,8928)|0;return};case 212:{qw(a,8888)|0;return};case 213:{qw(a,8784)|0;return};case 209:{qw(a,9840)|0;return};case 214:{qw(a,8736)|0;return};case 231:{qw(a,8672)|0;return};case 204:{qw(a,7616)|0;return};case 221:{qw(a,7544)|0;return};case 222:{qw(a,7512)|0;return};case 223:{qw(a,7472)|0;return};case 224:{qw(a,7376)|0;return};case 205:{qw(a,7336)|0;return};case 131:{qw(a,10816)|0;return};case 238:{qw(a,8016)|0;return};case 139:{qw(a,10176)|0;return};case 215:{qw(a,8464)|0;return};case 132:{qw(a,10712)|0;return};case 56:{qw(a,11072)|0;return};case 137:{qw(a,10288)|0;return};case 49:{qw(a,11800)|0;return};case 140:{qw(a,9336)|0;return};case 183:{qw(a,9248)|0;return};case 229:{qw(a,9512)|0;return};case 230:{qw(a,9416)|0;return};case 52:{qw(a,11400)|0;return};case 53:{qw(a,11336)|0;return};case 206:{qw(a,7304)|0;return};case 225:{qw(a,7256)|0;return};case 226:{qw(a,19192)|0;return};case 35:{qw(a,19096)|0;return};case 116:{qw(a,19064)|0;return};case 130:{qw(a,10952)|0;return};case 228:{qw(a,9608)|0;return};case 134:{qw(a,10568)|0;return};case 138:{qw(a,10232)|0;return};case 64:{qw(a,10072)|0;return};case 232:{qw(a,8624)|0;return};case 233:{qw(a,8576)|0;return};case 234:{qw(a,8512)|0;return};case 63:{qw(a,10144)|0;return};case 127:{qw(a,9064)|0;return};case 249:{qw(a,8984)|0;return};case 239:{qw(a,7968)|0;return};case 240:{qw(a,7920)|0;return};case 201:{qw(a,7880)|0;return};case 202:{qw(a,7792)|0;return};case 203:{qw(a,7648)|0;return};case 216:{qw(a,8424)|0;return};case 217:{qw(a,8384)|0;return};case 218:{qw(a,8344)|0;return};case 219:{qw(a,8240)|0;return};case 207:{qw(a,9984)|0;return};case 133:{qw(a,10608)|0;return};case 51:{qw(a,11544)|0;return};default:{qw(a,9416)|0;return}}}function m0(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0.0;g=i;i=i+64|0;j=g|0;k=g+8|0;l=g+16|0;m=g+24|0;n=g+32|0;o=g+48|0;p=d;q=d+1|0;r=b+384|0;s=r|0;t=b+388|0;u=b+392|0;v=n;w=n+8|0;x=n+4|0;y=n+1|0;z=b+348|0;A=o;B=o+8|0;C=d+8|0;D=d+4|0;d=0;E=e;L4596:while(1){e=a[p]|0;F=e&255;if((F&1|0)==0){G=F>>>1}else{G=c[D>>2]|0}if(d>>>0>=G>>>0){H=4365;break}if((e&1)==0){I=q}else{I=c[C>>2]|0}e=a[I+d|0]|0;m$(n,e);F=c[s>>2]|0;J=c[t>>2]|0;L4606:do{if((F|0)==(J|0)){K=F;H=4335}else{L=a[v]|0;M=L&255;N=M>>>1;O=c[w>>2]|0;P=c[x>>2]|0;if((M&1|0)==0){M=F;while(1){Q=M;R=a[M]|0;S=R&255;if((S&1|0)==0){T=S>>>1}else{T=c[M+4>>2]|0}L4615:do{if((T|0)==(N|0)){S=(R&1)==0;if(S){U=Q+1|0}else{U=c[M+8>>2]|0}V=(L&1)==0?y:O;if(!S){if((yD(U|0,V|0,T|0)|0)==0){K=M;H=4335;break L4606}else{break}}if((T|0)==0){K=M;H=4335;break L4606}else{W=V;X=U;Y=T}while(1){if((a[X]|0)!=(a[W]|0)){break L4615}V=Y-1|0;if((V|0)==0){K=M;H=4335;break L4606}else{W=W+1|0;X=X+1|0;Y=V}}}}while(0);Q=M+12|0;if((Q|0)==(J|0)){H=4336;break}else{M=Q}}}else{M=F;while(1){N=M;Q=a[M]|0;R=Q&255;if((R&1|0)==0){Z=R>>>1}else{Z=c[M+4>>2]|0}L4634:do{if((Z|0)==(P|0)){R=(Q&1)==0;if(R){_=N+1|0}else{_=c[M+8>>2]|0}V=(L&1)==0?y:O;if(!R){if((yD(_|0,V|0,Z|0)|0)==0){K=M;H=4335;break L4606}else{break}}if((Z|0)==0){K=M;H=4335;break L4606}else{$=V;aa=_;ab=Z}while(1){if((a[aa]|0)!=(a[$]|0)){break L4634}V=ab-1|0;if((V|0)==0){K=M;H=4335;break L4606}else{$=$+1|0;aa=aa+1|0;ab=V}}}}while(0);N=M+12|0;if((N|0)==(J|0)){H=4336;break}else{M=N}}}}}while(0);if((H|0)==4335){H=0;if((K|0)==(J|0)){H=4336}}do{if((H|0)==4336){H=0;if((J|0)==(c[u>>2]|0)){m4(r,n);break}do{if((J|0)!=0){if((a[v]&1)==0){F=J;c[F>>2]=c[v>>2];c[F+4>>2]=c[v+4>>2];c[F+8>>2]=c[v+8>>2];break}F=c[w>>2]|0;M=c[x>>2]|0;if(M>>>0>4294967279>>>0){break L4596}if(M>>>0<11>>>0){a[J]=M<<1&255;ac=J+1|0}else{O=M+16&-16;L=yp(O)|0;c[J+8>>2]=L;c[J>>2]=O|1;c[J+4>>2]=M;ac=L}yA(ac|0,F|0,M)|0;a[ac+M|0]=0}}while(0);c[t>>2]=(c[t>>2]|0)+12}}while(0);ad=+(c[z>>2]|0)*.00048828125;dp(o,18896,(J=i,i=i+40|0,c[J>>2]=(a[v]&1)==0?y:c[w>>2]|0,c[J+8>>2]=E,c[J+16>>2]=f,h[J+24>>3]=ad,h[J+32>>3]=ad,J)|0);i=J;mw(b,o);if((a[A]&1)!=0){yr(c[B>>2]|0)}iN(e,l,m,j,k);J=~~(+(E|0)+ +(c[j>>2]|0)*+(c[z>>2]|0)*.00048828125);if((a[v]&1)!=0){yr(c[w>>2]|0)}d=d+1|0;E=J}if((H|0)==4365){i=g;return}qo(0)}function m1(a,b,c){a=a|0;b=b|0;c=c|0;return}function m2(a,b,c){a=a|0;b=b|0;c=c|0;return}function m3(b,c,d){b=b|0;c=c|0;d=d|0;if((a[c+296|0]&1)==0){mv(c,d)}hn(b,c+20|0);return}function m4(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=b+4|0;f=c[e>>2]|0;g=b|0;h=c[g>>2]|0;i=h;j=(f-i|0)/12|0;k=j+1|0;if(k>>>0>357913941>>>0){vf(0)}l=b+8|0;b=((c[l>>2]|0)-i|0)/12|0;if(b>>>0>178956969>>>0){m=357913941;n=4376}else{i=b<<1;b=i>>>0<k>>>0?k:i;if((b|0)==0){o=0;p=0}else{m=b;n=4376}}if((n|0)==4376){o=yp(m*12|0)|0;p=m}m=o+(j*12|0)|0;b=o+(p*12|0)|0;do{if((m|0)==0){q=f}else{p=d;if((a[p]&1)==0){i=m;c[i>>2]=c[p>>2];c[i+4>>2]=c[p+4>>2];c[i+8>>2]=c[p+8>>2];q=f;break}p=c[d+8>>2]|0;i=c[d+4>>2]|0;if(i>>>0>4294967279>>>0){qo(0)}if(i>>>0<11>>>0){a[m]=i<<1&255;r=m+1|0}else{s=i+16&-16;t=yp(s)|0;c[o+(j*12|0)+8>>2]=t;c[m>>2]=s|1;c[o+(j*12|0)+4>>2]=i;r=t}yA(r|0,p|0,i)|0;a[r+i|0]=0;q=c[e>>2]|0}}while(0);r=o+(k*12|0)|0;do{if((q|0)==(h|0)){c[g>>2]=m;c[e>>2]=r;c[l>>2]=b;u=h}else{k=q;o=m;L4712:while(1){v=o-12|0;j=k-12|0;do{if((v|0)!=0){d=j;if((a[d]&1)==0){f=v;c[f>>2]=c[d>>2];c[f+4>>2]=c[d+4>>2];c[f+8>>2]=c[d+8>>2];break}d=c[k-12+8>>2]|0;f=c[k-12+4>>2]|0;if(f>>>0>4294967279>>>0){n=4394;break L4712}if(f>>>0<11>>>0){a[v]=f<<1&255;w=v+1|0}else{i=f+16&-16;p=yp(i)|0;c[o-12+8>>2]=p;c[v>>2]=i|1;c[o-12+4>>2]=f;w=p}yA(w|0,d|0,f)|0;a[w+f|0]=0}}while(0);if((j|0)==(h|0)){break}else{k=j;o=v}}if((n|0)==4394){qo(0)}o=c[g>>2]|0;k=c[e>>2]|0;c[g>>2]=v;c[e>>2]=r;c[l>>2]=b;if((o|0)==(k|0)){u=o;break}else{x=k}while(1){k=x-12|0;if((a[k]&1)!=0){yr(c[x-12+8>>2]|0)}if((o|0)==(k|0)){u=o;break}else{x=k}}}}while(0);if((u|0)==0){return}yr(u);return}function m5(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e|0;g=f;h=f;a[h]=10;j=g+1|0;a[j]=a[15296]|0;a[j+1|0]=a[15297]|0;a[j+2|0]=a[15298]|0;a[j+3|0]=a[15299]|0;a[j+4|0]=a[15300]|0;a[g+6|0]=0;iv(b|0,f);if((a[h]&1)!=0){yr(c[f+8>>2]|0)}j9(b+144|0);c[b>>2]=26200;c[b+144>>2]=26348;c[b+152>>2]=d;a[b+156|0]=0;a[b+157|0]=0;i=e;return}function m6(a){a=a|0;kb(a+144|0);ix(a|0);yr(a);return}function m7(a){a=a|0;var b=0;b=a-160+16|0;kb(b+144|0);ix(b);yr(b);return}function m8(a){a=a|0;kb(a+144|0);ix(a|0);return}function m9(a){a=a|0;var b=0;b=a-160+16|0;kb(b+144|0);ix(b);return}function na(b,d){b=b|0;d=d|0;var e=0;if((d|0)==0){return 0}e=yc(d,37064,37032,-1)|0;if((e|0)==0){return 0}if((c[b+152>>2]|0)!=(c[e+152>>2]|0)){return 0}if((a[b+156|0]|0)!=(a[e+156|0]|0)){return 0}if((a[b+157|0]|0)==(a[e+157|0]|0)){return ke(b+144|0,e+144|0)|0}else{return 0}return 0}function nb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+152|0;c[f>>2]=0;g=b+156|0;a[g]=0;h=b+157|0;a[h]=0;L4773:do{if((e&1|0)==0){switch(d|0){case 78:{i=4472;break L4773;break};case 83:{c[f>>2]=2;a[h]=1;return};case 67:{i=4476;break L4773;break};case 70:{c[f>>2]=2;a[h]=2;return};case 46:{i=4475;break L4773;break};case 88:{i=4473;break L4773;break};case 68:{i=4474;break L4773;break};default:{return}}}else{switch(d|0){case 78:{i=4472;break L4773;break};case 67:{i=4476;break L4773;break};case 46:{i=4475;break L4773;break};case 83:case 88:{i=4473;break L4773;break};case 70:case 68:{i=4474;break L4773;break};default:{}}return}}while(0);if((i|0)==4472){c[f>>2]=2;a[h]=3;return}else if((i|0)==4476){c[f>>2]=3;return}else if((i|0)==4475){c[f>>2]=1;a[g]=0;return}else if((i|0)==4473){c[f>>2]=2;a[h]=4;return}else if((i|0)==4474){c[f>>2]=2;a[h]=5;return}}function nc(b,c){b=b|0;c=c|0;c=b;a[b]=12;b=c+1|0;a[b]=a[11600]|0;a[b+1|0]=a[11601]|0;a[b+2|0]=a[11602]|0;a[b+3|0]=a[11603]|0;a[b+4|0]=a[11604]|0;a[b+5|0]=a[11605]|0;a[c+7|0]=0;return}function nd(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=e;a[f]=14;g=e+1|0;a[g]=a[8064]|0;a[g+1|0]=a[8065]|0;a[g+2|0]=a[8066]|0;a[g+3|0]=a[8067]|0;a[g+4|0]=a[8068]|0;a[g+5|0]=a[8069]|0;a[g+6|0]=a[8070]|0;g=e+8|0;a[g]=0;jE(b|0,e);if((a[f]&1)!=0){yr(c[g>>2]|0)}c[b>>2]=26072;dy(b+96|0);jj(b|0);c[b+160>>2]=50;c[b+164>>2]=50;c[b+180>>2]=-2147483647;c[b+184>>2]=0;c[b+188>>2]=0;c[b+168>>2]=-2147483647;c[b+172>>2]=0;c[b+176>>2]=0;c[b+192>>2]=0;i=d;return}function ne(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function nf(a){a=a|0;c[a>>2]=26072;dA(a+96|0);jo(a|0);yr(a);return}function ng(a){a=a|0;c[a>>2]=26072;dA(a+96|0);jo(a|0);return}function nh(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+20>>2]&255](d,a)|0;return(b?0:2)|0}function ni(a,d){a=a|0;d=d|0;var e=0,f=0,g=0;d=a+16|0;e=c[d>>2]|0;if((e|0)==0){f=0;return f|0}if((yc(e,37064,37200,-1)|0)==0){f=0;return f|0}e=c[d>>2]|0;if((e|0)==0){g=0}else{g=yc(e,37064,37200,-1)|0}e=(b[g+106>>1]|0)+((c[a+68>>2]|0)-(c[a+60>>2]|0))|0;a=g+96|0;if((c[a>>2]|0)>=(e|0)){f=1;return f|0}c[a>>2]=e;f=1;return f|0}function nj(a,b){a=a|0;b=b|0;var d=0;d=c[(c[b>>2]|0)+8>>2]|0;c[a+184>>2]=0;b=a+96|0;dB(b);c[d>>2]=b;return 0}function nk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d|0;f=b|0;g=c[f>>2]|0;h=c[g+12>>2]|0;c[c[g>>2]>>2]=0;g=a+96|0;a=c[(c[g>>2]|0)+20>>2]|0;j=e|0;c[j>>2]=0;k=e+4|0;c[k>>2]=0;l=e+8|0;c[l>>2]=0;m=c[b+4>>2]|0;b=c[f>>2]|0;f=m-b|0;n=f>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0);return 0}o=yp(f)|0;c[k>>2]=o;c[j>>2]=o;c[l>>2]=o+(n<<2);if((b|0)==(m|0)){break}else{p=b;q=o}do{if((q|0)==0){r=0}else{c[q>>2]=c[p>>2];r=c[k>>2]|0}q=r+4|0;c[k>>2]=q;p=p+4|0;}while((p|0)!=(m|0))}}while(0);c0[a&63](g,h,e,0);e=c[j>>2]|0;if((e|0)==0){i=d;return 1}j=c[k>>2]|0;if((e|0)!=(j|0)){c[k>>2]=j+(~((j-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 1}function nl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d|0;f=b|0;g=c[f>>2]|0;h=c[g>>2]|0;j=c[g+4>>2]|0;c[a+184>>2]=c[a+160>>2];c[h>>2]=0;h=a+96|0;a=c[(c[h>>2]|0)+20>>2]|0;g=e|0;c[g>>2]=0;k=e+4|0;c[k>>2]=0;l=e+8|0;c[l>>2]=0;m=c[b+4>>2]|0;b=c[f>>2]|0;f=m-b|0;n=f>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0);return 0}o=yp(f)|0;c[k>>2]=o;c[g>>2]=o;c[l>>2]=o+(n<<2);if((b|0)==(m|0)){break}else{p=b;q=o}do{if((q|0)==0){r=0}else{c[q>>2]=c[p>>2];r=c[k>>2]|0}q=r+4|0;c[k>>2]=q;p=p+4|0;}while((p|0)!=(m|0))}}while(0);c0[a&63](h,j,e,0);e=c[g>>2]|0;if((e|0)==0){i=d;return 1}g=c[k>>2]|0;if((e|0)!=(g|0)){c[k>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 1}function nm(a,b){a=a|0;b=b|0;c[c[c[b>>2]>>2]>>2]=0;return 0}function nn(a,b){a=a|0;b=b|0;c[a+192>>2]=c[c[c[b>>2]>>2]>>2];return 0}function no(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[b>>2]|0;b=c[d>>2]|0;e=c[d+4>>2]|0;c[a+172>>2]=c[b>>2];d=c[a+156>>2]|0;if((d|0)==0){cd(13096,11576,284,19648);return 0}else{c[b>>2]=(c[d+60>>2]|0)-(c[e>>2]|0)+(c[b>>2]|0);return 1}return 0}function np(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0;d=i;e=c[b>>2]|0;f=+((c[c[e+4>>2]>>2]|0)-(c[a+160>>2]|0)-(c[a+164>>2]|0)|0)/+(c[a+192>>2]|0);h[c[e>>2]>>3]=f;if(f>=.8){g=0;i=d;return g|0}dt(10632,(e=i,i=i+1|0,i=i+7&-8,c[e>>2]=0,e)|0);i=e;g=1;i=d;return g|0}function nq(b,c){b=b|0;c=c|0;c=b;a[b]=12;b=c+1|0;a[b]=a[8432]|0;a[b+1|0]=a[8433]|0;a[b+2|0]=a[8434]|0;a[b+3|0]=a[8435]|0;a[b+4|0]=a[8436]|0;a[b+5|0]=a[8437]|0;a[c+7|0]=0;return}function nr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=8;h=f+1|0;E=761620852;a[h]=E&255;E=E>>8;a[h+1|0]=E&255;E=E>>8;a[h+2|0]=E&255;E=E>>8;a[h+3|0]=E&255;a[f+5|0]=0;iv(b|0,e);if((a[g]&1)!=0){yr(c[e+8>>2]|0)}c[b>>2]=27928;c[b+144>>2]=0;c[b+148>>2]=0;i=d;return}function ns(a){a=a|0;var b=0,d=0;c[a>>2]=27928;b=c[a+144>>2]|0;do{if((b|0)!=0){if((c[b+184>>2]|0)!=(a|0)){break}i5(b)}}while(0);b=c[a+148>>2]|0;do{if((b|0)!=0){d=b+184|0;if((c[d>>2]|0)!=(a|0)){break}c[d>>2]=0}}while(0);ix(a|0);yr(a);return}function nt(a){a=a|0;var b=0,d=0;c[a>>2]=27928;b=c[a+144>>2]|0;do{if((b|0)!=0){if((c[b+184>>2]|0)!=(a|0)){break}i5(b)}}while(0);b=c[a+148>>2]|0;do{if((b|0)!=0){d=b+184|0;if((c[d>>2]|0)!=(a|0)){break}c[d>>2]=0}}while(0);ix(a|0);return}function nu(a,b){a=a|0;b=b|0;var d=0;d=a+144|0;if((c[d>>2]|0)==0){c[d>>2]=b;return}else{cd(15264,13080,41,20624)}}function nv(a,b){a=a|0;b=b|0;var d=0;d=a+148|0;if((c[d>>2]|0)==0){c[d>>2]=b;return}else{cd(11560,13080,47,20608)}}function nw(b,c){b=b|0;c=c|0;a[b]=6;c=b+1|0;a[c]=a[9912]|0;a[c+1|0]=a[9913]|0;a[c+2|0]=a[9914]|0;a[b+4|0]=0;return}function nx(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=e;a[f]=14;g=e+1|0;a[g]=a[7944]|0;a[g+1|0]=a[7945]|0;a[g+2|0]=a[7946]|0;a[g+3|0]=a[7947]|0;a[g+4|0]=a[7948]|0;a[g+5|0]=a[7949]|0;a[g+6|0]=a[7950]|0;g=e+8|0;a[g]=0;iv(b|0,e);if((a[f]&1)!=0){yr(c[g>>2]|0)}g=b+148|0;f=g;c[g>>2]=f;c[b+152>>2]=f;c[b+156>>2]=0;c[b>>2]=25888;c[b+144>>2]=26040;c[b+160>>2]=1;c[b+164>>2]=1;i=d;return}function ny(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+144>>2]=28248;b=a+148|0;d=a+156|0;do{if((c[d>>2]|0)!=0){e=c[a+152>>2]|0;f=b;g=(c[b>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);ix(a|0);yr(a);return}function nz(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-168+24|0;c[b+144>>2]=28248;a=b+148|0;d=b+156|0;do{if((c[d>>2]|0)!=0){e=c[b+152>>2]|0;f=a;g=(c[a>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);ix(b);yr(b);return}function nA(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+144>>2]=28248;b=a+148|0;d=a+156|0;if((c[d>>2]|0)==0){e=a|0;ix(e);return}f=c[a+152>>2]|0;g=b;h=(c[b>>2]|0)+4|0;b=f|0;c[(c[b>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[b>>2];c[d>>2]=0;if((f|0)==(g|0)){e=a|0;ix(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=a|0;ix(e);return}function nB(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-168+24|0;c[b+144>>2]=28248;a=b+148|0;d=b+156|0;if((c[d>>2]|0)==0){e=b;ix(e);return}f=c[b+152>>2]|0;g=a;h=(c[a>>2]|0)+4|0;a=f|0;c[(c[a>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[a>>2];c[d>>2]=0;if((f|0)==(g|0)){e=b;ix(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=b;ix(e);return}function nC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function nD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=c[a+152>>2]|0;d=a+148|0;if((b|0)==(d|0)){return}e=a+156|0;a=b;while(1){b=c[a+8>>2]|0;do{if((b|0)==0){f=4682}else{g=yc(b,37064,37496,-1)|0;if((g|0)==0){f=4682;break}if(iG(g)|0){f=4682;break}g=a+4|0;h=c[g>>2]|0;i=a|0;c[(c[i>>2]|0)+4>>2]=h;c[c[g>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(a);j=h}}while(0);if((f|0)==4682){f=0;j=c[a+4>>2]|0}if((j|0)==(d|0)){break}else{a=j}}return}function nE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a-168+24|0;a=c[b+152>>2]|0;d=b+148|0;if((a|0)==(d|0)){return}e=b+156|0;b=a;while(1){a=c[b+8>>2]|0;do{if((a|0)==0){f=4693}else{g=yc(a,37064,37496,-1)|0;if((g|0)==0){f=4693;break}if(iG(g)|0){f=4693;break}g=b+4|0;h=c[g>>2]|0;i=b|0;c[(c[i>>2]|0)+4>>2]=h;c[c[g>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(b);j=h}}while(0);if((f|0)==4693){f=0;j=c[b+4>>2]|0}if((j|0)==(d|0)){break}else{b=j}}return}function nF(b,c){b=b|0;c=c|0;c=b;a[b]=12;b=c+1|0;a[b]=a[11536]|0;a[b+1|0]=a[11537]|0;a[b+2|0]=a[11538]|0;a[b+3|0]=a[11539]|0;a[b+4|0]=a[11540]|0;a[b+5|0]=a[11541]|0;a[c+7|0]=0;return}function nG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b|0;g=c[f>>2]|0;h=c[g+4>>2]|0;do{if(h>>>0>=e>>>0){if(h>>>0>((e*3|0)+24|0)>>>0){break}yB(g+8|0,d|0,e|0);c[c[f>>2]>>2]=e;a[(c[f>>2]|0)+8+e|0]=0;return b|0}}while(0);if((e|0)==0){i=40072}else{g=yq(e+15&-4)|0;h=g;c[g>>2]=e;a[h+8+e|0]=0;c[g+4>>2]=e;i=h}h=i+8|0;yA(h|0,d|0,e)|0;e=c[f>>2]|0;c[f>>2]=i;if((e|0)==40072|(e|0)==0){return b|0}ys(e);return b|0}function nH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=b|0;g=c[f>>2]|0;h=g|0;i=c[h>>2]|0;j=i+e|0;k=c[g+4>>2]|0;do{if(j>>>0>k>>>0){l=j+k|0;if(k>>>0>=l>>>0){m=g;break}if((l|0)==0){n=40072;o=i}else{p=yq(l+15&-4)|0;q=p;c[p>>2]=i;a[q+8+i|0]=0;c[p+4>>2]=l;n=q;o=c[h>>2]|0}q=n+8|0;l=g+8|0;yA(q|0,l|0,o)|0;l=c[f>>2]|0;c[f>>2]=n;if((l|0)==40072|(l|0)==0){m=n;break}ys(l);m=c[f>>2]|0}else{m=g}}while(0);yB((c[m>>2]|0)+(m+8)|0,d|0,e|0);c[c[f>>2]>>2]=j;a[(c[f>>2]|0)+8+j|0]=0;return b|0}function nI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+40|0;f=e|0;g=b|0;b=c[g>>2]|0;h=c[b>>2]|0;if((h|0)<=0){i=e;return}j=e+8|0;k=0;l=b;b=h;L5022:while(1){if(b>>>0<=k>>>0){m=4720;break}h=a[l+8+k|0]|0;n=h&255;L5025:do{switch(h<<24>>24){case 38:{o=k+1|0;do{if((k|0)<(b-2|0)){if(b>>>0<=o>>>0){m=4724;break L5022}if((a[l+8+o|0]|0)!=35){break}p=k+2|0;if(b>>>0<=p>>>0){m=4727;break L5022}if((a[l+8+p|0]|0)==120){q=k;r=l;s=b}else{break}while(1){if((q|0)>=(s-1|0)){t=q;break L5025}nH(d,r+8+q|0,1)|0;p=q+1|0;u=c[g>>2]|0;v=c[u>>2]|0;if(v>>>0<=p>>>0){m=4731;break L5022}if((a[u+8+p|0]|0)==59){t=p;break L5025}else{q=p;r=u;s=v}}}}while(0);nH(d,c[9586]|0,c[9587]|0)|0;t=o;break};case 60:{nH(d,c[9589]|0,c[9590]|0)|0;t=k+1|0;break};case 62:{nH(d,c[9592]|0,c[9593]|0)|0;t=k+1|0;break};case 34:{nH(d,c[9595]|0,c[9596]|0)|0;t=k+1|0;break};case 39:{nH(d,c[9598]|0,c[9599]|0)|0;t=k+1|0;break};default:{if((h&255)>>>0<32>>>0){be(j|0,32,7864,(v=i,i=i+8|0,c[v>>2]=n,v)|0)|0;i=v;v=yz(j|0)|0;nH(d,j,v)|0;t=k+1|0;break L5025}else{a[f]=h;nH(d,f,1)|0;t=k+1|0;break L5025}}}}while(0);h=c[g>>2]|0;n=c[h>>2]|0;if((t|0)<(n|0)){k=t;l=h;b=n}else{m=4744;break}}if((m|0)==4727){cd(9888,9816,156,19288)}else if((m|0)==4731){cd(9888,9816,156,19288)}else if((m|0)==4724){cd(9888,9816,156,19288)}else if((m|0)==4720){cd(9888,9816,156,19288)}else if((m|0)==4744){i=e;return}}function nJ(a,b){a=a|0;b=b|0;c[a+8>>2]=-1;c[a+4>>2]=-1;c[a+12>>2]=0;c[a>>2]=29712;c[a+32>>2]=40072;c[a+16>>2]=0;c[a+20>>2]=b;c[a+24>>2]=0;c[a+28>>2]=0;c[a+36>>2]=0;c[a+40>>2]=0;return}function nK(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){e=a;yr(e);return}ys(b);e=a;yr(e);return}function nL(a){a=a|0;var b=0,d=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function nM(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=b+16|0;e=c[d>>2]|0;if((e|0)==0|(e|0)==(a|0)){f=b}else{cd(15104,13016,188,19304);return 0}while(1){g=f;if((cJ[c[(c[g>>2]|0)+16>>2]&255](f)|0)!=0){h=4772;break}e=c[f+16>>2]|0;if((e|0)==0){break}else{f=e}}do{if((h|0)==4772){if((cJ[c[(c[g>>2]|0)+16>>2]&255](f)|0)==0){break}else{i=b}while(1){j=i;if((cJ[c[(c[j>>2]|0)+16>>2]&255](i)|0)!=0){h=4774;break}e=c[i+16>>2]|0;if((e|0)==0){k=0;break}else{i=e}}if((h|0)==4774){k=cJ[c[(c[j>>2]|0)+16>>2]&255](i)|0}L5085:do{if((a|0)==0){l=0}else{e=a;while(1){m=e;if((cJ[c[(c[m>>2]|0)+16>>2]&255](e)|0)!=0){break}n=c[e+16>>2]|0;if((n|0)==0){l=0;break L5085}else{e=n}}l=cJ[c[(c[m>>2]|0)+16>>2]&255](e)|0}}while(0);if((k|0)==(l|0)){break}cd(11448,13016,189,19304);return 0}}while(0);if((c[b+20>>2]|0)!=0){c[d>>2]=a;d=a+28|0;c[b+36>>2]=c[d>>2];c[b+40>>2]=0;l=c[d>>2]|0;if((l|0)==0){c[a+24>>2]=b}else{c[l+40>>2]=b}c[d>>2]=b;o=b;return o|0}cG[c[(c[b>>2]|0)+4>>2]&1023](b);if((a|0)==0){o=0;return o|0}else{p=a}while(1){q=p;if((cJ[c[(c[q>>2]|0)+16>>2]&255](p)|0)!=0){break}b=c[p+16>>2]|0;if((b|0)==0){o=0;h=4800;break}else{p=b}}if((h|0)==4800){return o|0}if((cJ[c[(c[q>>2]|0)+16>>2]&255](p)|0)==0){o=0;return o|0}else{r=a}while(1){s=r;if((cJ[c[(c[s>>2]|0)+16>>2]&255](r)|0)!=0){h=4788;break}a=c[r+16>>2]|0;if((a|0)==0){t=0;break}else{r=a}}if((h|0)==4788){t=cJ[c[(c[s>>2]|0)+16>>2]&255](r)|0}o$(t,15,0,0,0);o=0;return o|0}function nN(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a|0;e=a+32|0;while(1){a=c[e>>2]|0;if((a|0)==(d|0)){f=0;g=4806;break}if((ba((c[a+20>>2]|0)+8|0,b|0)|0)==0){f=a;g=4805;break}else{e=a+32|0}}if((g|0)==4806){return f|0}else if((g|0)==4805){return f|0}return 0}function nO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+24|0;while(1){d=c[b>>2]|0;if((d|0)==0){e=0;f=4812;break}g=d;if((cJ[c[(c[g>>2]|0)+20>>2]&255](d)|0)==0){b=d+40|0}else{break}}if((f|0)==4812){return e|0}e=cJ[c[(c[g>>2]|0)+20>>2]&255](d)|0;return e|0}function nP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a+24|0;while(1){a=c[d>>2]|0;if((a|0)==0){e=0;f=4824;break}if((ba((c[a+32>>2]|0)+8|0,b|0)|0)==0){g=a;break}else{d=a+40|0}}if((f|0)==4824){return e|0}L5139:while(1){h=g;if((cJ[c[(c[h>>2]|0)+20>>2]&255](g)|0)==0){i=g}else{break}while(1){d=c[i+40>>2]|0;if((d|0)==0){e=0;f=4823;break L5139}if((ba((c[d+32>>2]|0)+8|0,b|0)|0)==0){g=d;continue L5139}else{i=d}}}if((f|0)==4823){return e|0}e=cJ[c[(c[h>>2]|0)+20>>2]&255](g)|0;return e|0}function nQ(a){a=a|0;var b=0,d=0,e=0,f=0;b=a;do{b=c[b+40>>2]|0;if((b|0)==0){d=0;e=4830;break}f=b;}while((cJ[c[(c[f>>2]|0)+20>>2]&255](b)|0)==0);if((e|0)==4830){return d|0}d=cJ[c[(c[f>>2]|0)+20>>2]&255](b)|0;return d|0}function nR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a;while(1){a=c[d+40>>2]|0;if((a|0)==0){e=0;f=4842;break}if((ba((c[a+32>>2]|0)+8|0,b|0)|0)==0){g=a;break}else{d=a}}if((f|0)==4842){return e|0}L5162:while(1){h=g;if((cJ[c[(c[h>>2]|0)+20>>2]&255](g)|0)==0){i=g}else{break}while(1){d=c[i+40>>2]|0;if((d|0)==0){e=0;f=4841;break L5162}if((ba((c[d+32>>2]|0)+8|0,b|0)|0)==0){g=d;continue L5162}else{i=d}}}if((f|0)==4841){return e|0}e=cJ[c[(c[h>>2]|0)+20>>2]&255](g)|0;return e|0}function nS(a){a=a|0;var b=0,d=0,e=0,f=0;if((a|0)==0){b=0;return b|0}else{d=a}while(1){e=d;if((cJ[c[(c[e>>2]|0)+16>>2]&255](d)|0)!=0){break}a=c[d+16>>2]|0;if((a|0)==0){b=0;f=4849;break}else{d=a}}if((f|0)==4849){return b|0}b=cJ[c[(c[e>>2]|0)+16>>2]&255](d)|0;return b|0}function nT(a,b){a=a|0;b=b|0;var d=0,e=0;c[a+8>>2]=-1;c[a+4>>2]=-1;c[a+12>>2]=0;c[a+32>>2]=40072;c[a+16>>2]=0;c[a+20>>2]=1;c[a+36>>2]=0;c[a+40>>2]=0;c[a>>2]=30104;d=a+44|0;e=d|0;c[a+52>>2]=-1;c[a+48>>2]=-1;c[a+56>>2]=0;c[d>>2]=29896;c[a+64>>2]=40072;c[a+68>>2]=40072;c[a+60>>2]=0;c[a+76>>2]=e;c[a+72>>2]=e;c[a+28>>2]=0;c[a+24>>2]=0;nG(a+32|0,b,yz(b|0)|0)|0;return}function nU(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=b|0;e=(c[a+32>>2]|0)+8|0;nG(b+32|0,e,yz(e|0)|0)|0;c[b+12>>2]=c[a+12>>2];e=a+4|0;f=b+4|0;g=c[e+4>>2]|0;c[f>>2]=c[e>>2];c[f+4>>2]=g;g=c[a+76>>2]|0;f=(g|0)==(a+44|0)?0:g;if((f|0)!=0){g=b+44|0;b=f;while(1){f=(c[b+24>>2]|0)+8|0;e=nY(g,(c[b+20>>2]|0)+8|0)|0;if((e|0)!=0){h=e+24|0;e=yz(f|0)|0;nG(h,f,e)|0}e=c[b+32>>2]|0;if((c[c[e+24>>2]>>2]|0)==0){if((c[c[e+20>>2]>>2]|0)==0){break}else{b=e;continue}}else{if((e|0)==0){break}else{b=e;continue}}}}b=c[a+24>>2]|0;if((b|0)==0){return}else{i=b}do{nM(d,cJ[c[(c[i>>2]|0)+64>>2]&255](i)|0)|0;i=c[i+40>>2]|0;}while((i|0)!=0);return}function nV(a){a=a|0;nW(a);yr(a);return}function nW(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a|0;c[b>>2]=30104;d=a+24|0;e=c[d>>2]|0;if((e|0)!=0){f=e;while(1){e=c[f+40>>2]|0;cG[c[(c[f>>2]|0)+4>>2]&1023](f);if((e|0)==0){break}else{f=e}}}c[d>>2]=0;c[a+28>>2]=0;f=a+44|0;e=a+76|0;g=c[e>>2]|0;h=(g|0)==(f|0)?0:g;L5208:do{if((h|0)!=0){i=g;j=h;L5209:while(1){k=i;while(1){if((k|0)==(f|0)){break L5209}l=k+32|0;m=c[l>>2]|0;if((k|0)==(j|0)){break}else{k=m}}k=j+28|0;c[(c[k>>2]|0)+32>>2]=m;c[(c[l>>2]|0)+28>>2]=c[k>>2];c[l>>2]=0;c[k>>2]=0;cG[c[(c[j>>2]|0)+4>>2]&1023](j);i=c[e>>2]|0;j=(i|0)==(f|0)?0:i;if((j|0)==0){break L5208}}cd(8968,13016,1544,20752)}}while(0);om(a+44|0);c[b>>2]=29712;b=c[d>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function nX(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a+44|0;e=a+76|0;while(1){f=c[e>>2]|0;if((f|0)==(d|0)){g=0;h=4924;break}if((ba((c[f+20>>2]|0)+8|0,b|0)|0)==0){break}else{e=f+32|0}}if((h|0)==4924){return g|0}if((f|0)==0){g=0;return g|0}g=(c[f+24>>2]|0)+8|0;return g|0}function nY(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=a|0;e=a+32|0;f=e;while(1){g=c[f>>2]|0;if((g|0)==(d|0)){break}if((ba((c[g+20>>2]|0)+8|0,b|0)|0)==0){h=4929;break}else{f=g+32|0}}do{if((h|0)==4929){if((g|0)==0){break}else{i=g}return i|0}}while(0);g=yp(36)|0;f=g;c[g+8>>2]=-1;c[g+4>>2]=-1;c[g+12>>2]=0;c[g>>2]=29896;j=g+20|0;c[j>>2]=40072;c[g+24>>2]=40072;c[g+16>>2]=0;k=g+32|0;c[k>>2]=0;l=g+28|0;c[l>>2]=0;g=e;while(1){m=c[g>>2]|0;if((m|0)==(d|0)){break}if((ba((c[m+20>>2]|0)+8|0,40080)|0)==0){h=4933;break}else{g=m+32|0}}do{if((h|0)==4933){if((m|0)==0){break}cd(10344,13016,1519,20760);return 0}}while(0);c[k>>2]=d;d=a+28|0;a=c[d>>2]|0;c[l>>2]=a;c[a+32>>2]=f;c[d>>2]=f;nG(j,b,yz(b|0)|0)|0;i=f;return i|0}function nZ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;if((b|0)==0){cd(17008,13016,803,19280)}f=(d|0)>0;if(f){g=0;do{aY(16640,4,1,b|0)|0;g=g+1|0;}while((g|0)<(d|0))}g=a+32|0;ch(b|0,16192,(h=i,i=i+8|0,c[h>>2]=(c[g>>2]|0)+8,h)|0)|0;i=h;j=c[a+76>>2]|0;k=(j|0)==(a+44|0)?0:j;if((k|0)!=0){j=k;while(1){aW(32,b|0)|0;cZ[c[(c[j>>2]|0)+8>>2]&127](j,b,d);k=c[j+32>>2]|0;if((c[c[k+24>>2]>>2]|0)==0){if((c[c[k+20>>2]>>2]|0)==0){break}else{j=k;continue}}else{if((k|0)==0){break}else{j=k;continue}}}}j=a+24|0;k=c[j>>2]|0;if((k|0)==0){aY(15488,3,1,b|0)|0;i=e;return}do{if((k|0)==(c[a+28>>2]|0)){if((cJ[c[(c[k>>2]|0)+56>>2]&255](k)|0)==0){break}aW(62,b|0)|0;l=c[j>>2]|0;cZ[c[(c[l>>2]|0)+8>>2]&127](l|0,b,d+1|0);l=(c[g>>2]|0)+8|0;ch(b|0,14976,(h=i,i=i+8|0,c[h>>2]=l,h)|0)|0;i=h;i=e;return}}while(0);aW(62,b|0)|0;k=c[j>>2]|0;if((k|0)!=0){j=d+1|0;a=k;do{if((cJ[c[(c[a>>2]|0)+56>>2]&255](a)|0)==0){aW(10,b|0)|0}cZ[c[(c[a>>2]|0)+8>>2]&127](a|0,b,j);a=c[a+40>>2]|0;}while((a|0)!=0)}aW(10,b|0)|0;if(f){f=0;do{aY(16640,4,1,b|0)|0;f=f+1|0;}while((f|0)<(d|0))}ch(b|0,14976,(h=i,i=i+8|0,c[h>>2]=(c[g>>2]|0)+8,h)|0)|0;i=h;i=e;return}function n_(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a+76>>2]|0;L5293:do{if(cM[c[(c[b>>2]|0)+16>>2]&63](b,a,(d|0)==(a+44|0)?0:d)|0){e=a+24|0;while(1){f=c[e>>2]|0;if((f|0)==0){break L5293}if(cW[c[(c[f>>2]|0)+68>>2]&255](f,b)|0){e=f+40|0}else{break}}}}while(0);return cW[c[(c[b>>2]|0)+20>>2]&255](b,a)|0}function n$(a){a=a|0;var b=0,d=0,e=0;b=yp(80)|0;d=b;nT(d,(c[a+32>>2]|0)+8|0);if((b|0)==0){e=0;return e|0}nU(a,d);e=b;return e|0}function n0(b){b=b|0;var d=0,e=0,f=0;c[b+8>>2]=-1;c[b+4>>2]=-1;c[b+12>>2]=0;c[b+32>>2]=40072;c[b+36>>2]=0;c[b+40>>2]=0;yC(b+16|0,0,16);c[b>>2]=29928;d=b+52|0;c[d>>2]=40072;e=b+64|0;c[e>>2]=-1;f=b+60|0;c[f>>2]=-1;c[b+56>>2]=4;a[b+68|0]=0;a[b+44|0]=0;c[b+48>>2]=0;nG(d,40152,0)|0;c[e>>2]=0;c[f>>2]=0;return}function n1(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b+8>>2]=-1;c[b+4>>2]=-1;c[b+12>>2]=0;c[b+32>>2]=40072;c[b+36>>2]=0;c[b+40>>2]=0;yC(b+16|0,0,16);c[b>>2]=29928;e=b+52|0;c[e>>2]=40072;f=b+64|0;c[f>>2]=-1;g=b+60|0;c[g>>2]=-1;c[b+56>>2]=4;a[b+68|0]=0;nG(b+32|0,d,yz(d|0)|0)|0;a[b+44|0]=0;c[b+48>>2]=0;nG(e,40152,0)|0;c[f>>2]=0;c[g>>2]=0;return}function n2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=d|0;f=(c[b+32>>2]|0)+8|0;nG(d+32|0,f,yz(f|0)|0)|0;c[d+12>>2]=c[b+12>>2];f=b+4|0;g=d+4|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;a[d+44|0]=a[b+44|0]&1;c[d+48>>2]=c[b+48>>2];h=c[b+52>>2]|0;nG(d+52|0,h+8|0,c[h>>2]|0)|0;c[d+56>>2]=c[b+56>>2];h=b+60|0;g=d+60|0;f=c[h+4>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;a[d+68|0]=a[b+68|0]&1;d=c[b+24>>2]|0;if((d|0)==0){return}else{i=d}do{nM(e,cJ[c[(c[i>>2]|0)+64>>2]&255](i)|0)|0;i=c[i+40>>2]|0;}while((i|0)!=0);return}function n3(a,b){a=a|0;b=b|0;return n4(a,(c[a+32>>2]|0)+8|0,b)|0}function n4(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=yz(d|0)|0;if((f|0)==0){g=40072}else{h=yq(f+15&-4)|0;i=h;c[h>>2]=f;a[i+8+f|0]=0;c[h+4>>2]=f;g=i}i=g+8|0;f=c[g>>2]|0;yA(i|0,d|0,f)|0;d=b+32|0;nG(d,i,f)|0;f=bN((c[d>>2]|0)+8|0,14448)|0;if((f|0)==0){o$(b,2,0,0,0);j=0}else{d=n5(b,f,e)|0;aQ(f|0)|0;j=d}if((g|0)==40072|(g|0)==0){return j|0}ys(g);return j|0}function n5(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((d|0)==0){o$(b,2,0,0,0);f=0;return f|0}g=b+24|0;h=c[g>>2]|0;if((h|0)!=0){i=h;while(1){h=c[i+40>>2]|0;cG[c[(c[i>>2]|0)+4>>2]&1023](i);if((h|0)==0){break}else{i=h}}}c[g>>2]=0;c[b+28>>2]=0;c[b+8>>2]=-1;c[b+4>>2]=-1;co(d|0,0,2)|0;g=bn(d|0)|0;co(d|0,0,0)|0;if((g|0)<1){o$(b,12,0,0,0);f=0;return f|0}i=g+1|0;h=yq((i|0)>-1?i:-1)|0;a[h]=0;if((bW(h|0,g|0,1,d|0)|0)!=1){if((h|0)!=0){ys(h)}o$(b,2,0,0,0);f=0;return f|0}d=h+g|0;a[d]=0;g=a[h]|0;L5351:do{if(g<<24>>24==0){j=h}else{i=h;k=h;l=g;while(1){if(i>>>0>=d>>>0){m=5036;break}if(k>>>0>d>>>0){m=5038;break}if(k>>>0>i>>>0){m=5040;break}if(l<<24>>24==13){a[k]=10;n=i+1|0;o=(a[n]|0)==10?i+2|0:n}else{a[k]=l;o=i+1|0}n=k+1|0;p=a[o]|0;if(p<<24>>24==0){j=n;break L5351}else{i=o;k=n;l=p}}if((m|0)==5038){cd(14056,13016,1060,20792);return 0}else if((m|0)==5036){cd(14248,13016,1059,20792);return 0}else if((m|0)==5040){cd(13728,13016,1061,20792);return 0}}}while(0);if(j>>>0>d>>>0){cd(14056,13016,1074,20792);return 0}a[j]=0;cY[c[(c[b>>2]|0)+12>>2]&31](b,h,0,e)|0;if((h|0)!=0){ys(h)}f=(a[b+44|0]&1)==0;return f|0}function n6(a){a=a|0;var b=0,c=0,d=0;b=yp(72)|0;c=b;n0(c);if((b|0)==0){d=0;return d|0}n2(a,c);d=b;return d|0}function n7(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((b|0)==0){cd(17008,13016,1147,19280)}e=c[a+24>>2]|0;if((e|0)==0){return}else{f=e}do{cZ[c[(c[f>>2]|0)+8>>2]&127](f|0,b,d);aW(10,b|0)|0;f=c[f+40>>2]|0;}while((f|0)!=0);return}function n8(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=b;L5389:do{if(cW[c[(c[d>>2]|0)+8>>2]&255](b,a)|0){e=a+24|0;while(1){f=c[e>>2]|0;if((f|0)==0){break L5389}if(cW[c[(c[f>>2]|0)+68>>2]&255](f,b)|0){e=f+40|0}else{break}}}}while(0);return cW[c[(c[d>>2]|0)+12>>2]&255](b,a)|0}function n9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+16|0;g=e|0;h=e+8|0;j=g|0;c[j>>2]=40072;k=h|0;c[k>>2]=40072;nI(b+20|0,g);g=b+24|0;nI(g,h);h=c[g>>2]|0;L5398:do{if((c[h>>2]|0)==0){l=5080}else{g=h+8|0;b=g;while(1){m=a[b]|0;if(m<<24>>24==0){l=5080;break L5398}if(m<<24>>24==34){break}else{b=b+1|0}}m=(d|0)!=0;if((b-g|0)==(c[10022]|0)){if(m){l=5083;break}else{l=5086;break}}if(m){m=(c[j>>2]|0)+8|0;n=(c[k>>2]|0)+8|0;ch(d|0,12912,(o=i,i=i+16|0,c[o>>2]=m,c[o+8>>2]=n,o)|0)|0;i=o}if((f|0)==0){break}n=c[j>>2]|0;nH(f,n+8|0,c[n>>2]|0)|0;nH(f,12792,2)|0;n=c[k>>2]|0;nH(f,n+8|0,c[n>>2]|0)|0;nH(f,12576,1)|0}}while(0);if((l|0)==5080){if((d|0)==0){l=5086}else{l=5083}}if((l|0)==5083){h=(c[j>>2]|0)+8|0;n=(c[k>>2]|0)+8|0;ch(d|0,13328,(o=i,i=i+16|0,c[o>>2]=h,c[o+8>>2]=n,o)|0)|0;i=o;l=5086}do{if((l|0)==5086){if((f|0)==0){break}o=c[j>>2]|0;n=o+8|0;h=c[o>>2]|0;nH(f,n,h)|0;nH(f,13208,2)|0;h=c[k>>2]|0;n=h+8|0;o=c[h>>2]|0;nH(f,n,o)|0;nH(f,13048,1)|0}}while(0);f=c[k>>2]|0;if(!((f|0)==40072|(f|0)==0)){ys(f)}f=c[j>>2]|0;if((f|0)==40072|(f|0)==0){i=e;return}ys(f);i=e;return}function oa(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((b|0)==0){cd(17008,13016,1299,19280)}if((d|0)>0){f=0;do{aY(16640,4,1,b|0)|0;f=f+1|0;}while((f|0)<(d|0))}ch(b|0,11920,(b=i,i=i+8|0,c[b>>2]=(c[a+32>>2]|0)+8,b)|0)|0;i=b;i=e;return}function ob(a,b){a=a|0;b=b|0;return cW[c[(c[b>>2]|0)+32>>2]&255](b,a)|0}function oc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=yp(44)|0;c[b+8>>2]=-1;d=b+4|0;c[d>>2]=-1;e=b+12|0;c[e>>2]=0;f=b+32|0;c[f>>2]=40072;c[b+16>>2]=0;c[b+20>>2]=2;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b>>2]=30192;if((b|0)==0){g=0;return g|0}h=(c[a+32>>2]|0)+8|0;nG(f,h,yz(h|0)|0)|0;c[e>>2]=c[a+12>>2];e=a+4|0;a=d;d=c[e+4>>2]|0;c[a>>2]=c[e>>2];c[a+4>>2]=d;g=b;return g|0}function od(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+8|0;g=f|0;if((d|0)==0){cd(17008,13016,1334,19280)}if((a[b+44|0]&1)!=0){aW(10,d|0)|0;if((e|0)>0){h=0;do{aY(16640,4,1,d|0)|0;h=h+1|0;}while((h|0)<(e|0))}e=(c[b+32>>2]|0)+8|0;ch(d|0,11784,(h=i,i=i+8|0,c[h>>2]=e,h)|0)|0;i=h;i=f;return}h=g|0;c[h>>2]=40072;nI(b+32|0,g);a_((c[h>>2]|0)+8|0,d|0)|0;d=c[h>>2]|0;if((d|0)==40072|(d|0)==0){i=f;return}ys(d);i=f;return}function oe(a,b){a=a|0;b=b|0;return cW[c[(c[b>>2]|0)+28>>2]&255](b,a)|0}function of(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=yp(48)|0;oU(d,40152);if((d|0)==0){e=0;return e|0}f=(c[b+32>>2]|0)+8|0;nG(d+32|0,f,yz(f|0)|0)|0;c[d+12>>2]=c[b+12>>2];f=b+4|0;g=d+4|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;a[d+44|0]=a[b+44|0]&1;e=d;return e|0}function og(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;f=(b|0)!=0;if(f){aY(11392,6,1,b|0)|0}g=(e|0)!=0;if(g){nH(e,11392,6)|0}h=a+44|0;j=c[h>>2]|0;do{if((c[j>>2]|0)!=0){if(f){k=j+8|0;ch(b|0,11320,(l=i,i=i+8|0,c[l>>2]=k,l)|0)|0;i=l}if(!g){break}nH(e,11184,9)|0;k=c[h>>2]|0;m=k+8|0;n=c[k>>2]|0;nH(e,m,n)|0;nH(e,11144,2)|0}}while(0);h=a+48|0;j=c[h>>2]|0;do{if((c[j>>2]|0)!=0){if(f){n=j+8|0;ch(b|0,11056,(l=i,i=i+8|0,c[l>>2]=n,l)|0)|0;i=l}if(!g){break}nH(e,10992,10)|0;n=c[h>>2]|0;m=n+8|0;k=c[n>>2]|0;nH(e,m,k)|0;nH(e,11144,2)|0}}while(0);h=a+52|0;a=c[h>>2]|0;do{if((c[a>>2]|0)!=0){if(f){j=a+8|0;ch(b|0,10888,(l=i,i=i+8|0,c[l>>2]=j,l)|0)|0;i=l}if(!g){break}nH(e,10800,12)|0;j=c[h>>2]|0;k=j+8|0;m=c[j>>2]|0;nH(e,k,m)|0;nH(e,11144,2)|0}}while(0);if(f){aY(10704,2,1,b|0)|0}if(!g){i=d;return}nH(e,10704,2)|0;i=d;return}function oh(a,b){a=a|0;b=b|0;return cW[c[(c[b>>2]|0)+24>>2]&255](b,a)|0}function oi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=yp(56)|0;c[b+8>>2]=-1;d=b+4|0;c[d>>2]=-1;e=b+12|0;c[e>>2]=0;f=b+32|0;c[f>>2]=40072;c[b+16>>2]=0;c[b+20>>2]=5;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b>>2]=29800;g=b+44|0;c[g>>2]=40072;h=b+48|0;c[h>>2]=40072;i=b+52|0;c[i>>2]=40072;if((b|0)==0){j=0;return j|0}k=(c[a+32>>2]|0)+8|0;nG(f,k,yz(k|0)|0)|0;c[e>>2]=c[a+12>>2];e=a+4|0;k=d;d=c[e+4>>2]|0;c[k>>2]=c[e>>2];c[k+4>>2]=d;d=c[a+44>>2]|0;nG(g,d+8|0,c[d>>2]|0)|0;d=c[a+48>>2]|0;nG(h,d+8|0,c[d>>2]|0)|0;d=c[a+52>>2]|0;nG(i,d+8|0,c[d>>2]|0)|0;j=b;return j|0}function oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;if((d|0)>0){f=0;do{aY(16640,4,1,b|0)|0;f=f+1|0;}while((f|0)<(d|0))}ch(b|0,10600,(b=i,i=i+8|0,c[b>>2]=(c[a+32>>2]|0)+8,b)|0)|0;i=b;i=e;return}function ok(a,b){a=a|0;b=b|0;return cW[c[(c[b>>2]|0)+36>>2]&255](b,a)|0}function ol(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=yp(44)|0;c[b+8>>2]=-1;d=b+4|0;c[d>>2]=-1;e=b+12|0;c[e>>2]=0;f=b+32|0;c[f>>2]=40072;c[b+16>>2]=0;c[b+20>>2]=3;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b>>2]=30016;if((b|0)==0){g=0;return g|0}h=(c[a+32>>2]|0)+8|0;nG(f,h,yz(h|0)|0)|0;c[e>>2]=c[a+12>>2];e=a+4|0;a=d;d=c[e+4>>2]|0;c[a>>2]=c[e>>2];c[a+4>>2]=d;g=b;return g|0}function om(a){a=a|0;var b=0;b=a|0;if((c[a+32>>2]|0)!=(b|0)){cd(10536,13016,1509,20728)}if((c[a+28>>2]|0)!=(b|0)){cd(10464,13016,1510,20728)}c[a>>2]=29896;b=c[a+24>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}b=c[a+20>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function on(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=(c[b+20>>2]|0)+8|0;e=a|0;f=a+32|0;while(1){g=c[f>>2]|0;if((g|0)==(e|0)){break}if((ba((c[g+20>>2]|0)+8|0,d|0)|0)==0){h=5205;break}else{f=g+32|0}}do{if((h|0)==5205){if((g|0)==0){break}cd(10344,13016,1519,20760)}}while(0);c[b+32>>2]=e;e=a+28|0;c[b+28>>2]=c[e>>2];c[(c[e>>2]|0)+32>>2]=b;c[e>>2]=b;return}function oo(a){a=a|0;return 0}function op(a){a=a|0;return 0}function oq(a){a=a|0;return 0}function or(a){a=a|0;return 0}function os(a){a=a|0;return 0}function ot(a){a=a|0;return 0}function ou(a){a=a|0;return 0}function ov(a){a=a|0;return 0}function ow(a){a=a|0;return 0}function ox(a){a=a|0;return 0}function oy(a){a=a|0;return 0}function oz(a){a=a|0;return 0}function oA(a){a=a|0;var b=0,d=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function oB(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){e=a;yr(e);return}ys(b);e=a;yr(e);return}function oC(a){a=a|0;return a|0}function oD(a){a=a|0;return a|0}function oE(a){a=a|0;var b=0,d=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function oF(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){e=a;yr(e);return}ys(b);e=a;yr(e);return}function oG(a){a=a|0;return a|0}function oH(a){a=a|0;return a|0}function oI(a){a=a|0;oT(a);return}function oJ(a){a=a|0;oT(a);yr(a);return}function oK(a,b,d){a=a|0;b=b|0;d=d|0;c0[c[(c[a>>2]|0)+72>>2]&63](a,b,d,0);return}function oL(a){a=a|0;return a|0}function oM(a){a=a|0;return a|0}function oN(a){a=a|0;var b=0,d=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function oO(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){e=a;yr(e);return}ys(b);e=a;yr(e);return}function oP(a){a=a|0;return a|0}function oQ(a){a=a|0;return a|0}function oR(a){a=a|0;return a|0}function oS(a){a=a|0;return a|0}function oT(a){a=a|0;var b=0,d=0;b=a|0;c[b>>2]=29800;d=c[a+52>>2]|0;if(!((d|0)==40072|(d|0)==0)){ys(d)}d=c[a+48>>2]|0;if(!((d|0)==40072|(d|0)==0)){ys(d)}d=c[a+44>>2]|0;if(!((d|0)==40072|(d|0)==0)){ys(d)}c[b>>2]=29712;b=c[a+24>>2]|0;while(1){if((b|0)==0){break}d=c[b+40>>2]|0;cG[c[(c[b>>2]|0)+4>>2]&1023](b);b=d}b=c[a+32>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function oU(b,d){b=b|0;d=d|0;c[b+8>>2]=-1;c[b+4>>2]=-1;c[b+12>>2]=0;c[b+32>>2]=40072;c[b+16>>2]=0;c[b+20>>2]=4;c[b+24>>2]=0;c[b+28>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;c[b>>2]=29624;nG(b+32|0,d,yz(d|0)|0)|0;a[b+44|0]=0;return}function oV(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;if((e|0)==0){cd(10424,9696,198,20768)}g=c[b+12>>2]|0;if((g|0)<1){return}h=b|0;i=c[h>>2]|0;j=b+4|0;k=c[j>>2]|0;l=b+8|0;b=c[l>>2]|0;if((b|0)==0){cd(8848,9696,210,20768)}L5656:do{if(b>>>0<e>>>0){if((f|0)==1){m=k;n=b;o=i}else{p=k;q=b;r=i;L5659:while(1){switch(d[q]|0){case 13:{s=q+1|0;t=r+1|0;u=(a[s]|0)==10?q+2|0:s;v=0;break};case 239:{t=r;u=q+1|0;v=p+1|0;break};case 0:{break L5659;break};case 10:{s=q+1|0;t=r+1|0;u=(a[s]|0)==13?q+2|0:s;v=0;break};case 9:{t=r;u=q+1|0;v=ai(((p|0)/(g|0)|0)+1|0,g)|0;break};default:{t=r;u=q+1|0;v=p+1|0}}if(u>>>0<e>>>0){p=v;q=u;r=t}else{w=v;x=u;y=t;break L5656}}return}L5669:while(1){r=d[n]|0;L5671:do{switch(r|0){case 13:{q=n+1|0;z=o+1|0;A=(a[q]|0)==10?n+2|0:q;B=0;break};case 0:{break L5669;break};case 9:{z=o;A=n+1|0;B=ai(((m|0)/(g|0)|0)+1|0,g)|0;break};case 10:{q=n+1|0;z=o+1|0;A=(a[q]|0)==13?n+2|0:q;B=0;break};case 239:{q=a[n+1|0]|0;if(q<<24>>24==0){z=o;A=n;B=m;break L5671}p=a[n+2|0]|0;if(p<<24>>24==0){z=o;A=n;B=m;break L5671}s=p<<24>>24==-65;if(q<<24>>24==-69&s){z=o;A=n+3|0;B=m;break L5671}C=q<<24>>24==-65;if(C&p<<24>>24==-66){z=o;A=n+3|0;B=m;break L5671}else{z=o;A=n+3|0;B=m+(C&s&1^1)|0;break L5671}break};default:{z=o;A=n+(c[38416+(r<<2)>>2]|0)|0;B=m+1|0}}}while(0);if(A>>>0<e>>>0){m=B;n=A;o=z}else{w=B;x=A;y=z;break L5656}}return}else{w=k;x=b;y=i}}while(0);c[h>>2]=y;c[j>>2]=w;if((y|0)<=-2){cd(8288,9696,307,20768)}if((w|0)<=-2){cd(7736,9696,308,20768)}c[l>>2]=x;if((x|0)==0){cd(19152,9696,310,20768)}else{return}}function oW(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;nG(c,40160,0)|0;if((b|0)==0){cd(8848,9696,407,19336);return 0}d=a[b]|0;if(d<<24>>24==0){e=0;return e|0}do{if((d&255)>>>0<127>>>0){if((bU(d&255|0)|0)!=0){f=b;break}if((a[b]|0)==95){f=b;break}else{e=0}return e|0}else{f=b}}while(0);L5708:while(1){d=a[f]|0;if(d<<24>>24==0){g=f;break}do{if((d&255)>>>0<127>>>0){if((bR(d&255|0)|0)!=0){break}h=a[f]|0;if(!((h<<24>>24|0)==95|(h<<24>>24|0)==45|(h<<24>>24|0)==46|(h<<24>>24|0)==58)){g=f;break L5708}}}while(0);d=f+1|0;if((d|0)==0){g=0;break}else{f=d}}f=g-b|0;if((f|0)<=0){e=g;return e|0}nG(c,b,f)|0;e=g;return e|0}function oX(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;c[e>>2]=0;g=b+1|0;L5721:do{if((a[g]|0)==35){h=b+2|0;i=a[h]|0;L5723:do{if((i<<24>>24|0)==120){j=b+3|0;if((a[j]|0)==0){k=0;return k|0}l=bk(j|0,59)|0;if((l|0)==0){k=0;return k|0}if((a[l]|0)==0){k=0;return k|0}j=l-b|0;m=l-1|0;l=a[m]|0;if(l<<24>>24==120){n=j;o=0;break}else{p=0;q=1;r=m;s=l}L5745:while(1){l=s<<24>>24;do{if((s-48&255)>>>0<10>>>0){t=l-48|0}else{if((s-97&255)>>>0<6>>>0){t=l-87|0;break}if((s-65&255)>>>0>=6>>>0){k=0;break L5745}t=l-55|0}}while(0);l=(ai(t,q)|0)+p|0;m=r-1|0;u=a[m]|0;if(u<<24>>24==120){n=j;o=l;break L5723}else{p=l;q=q<<4;r=m;s=u}}return k|0}else if((i<<24>>24|0)==0){v=0;break L5721}else{j=bk(h|0,59)|0;if((j|0)==0){k=0;return k|0}if((a[j]|0)==0){k=0;return k|0}u=j-b|0;m=j-1|0;j=a[m]|0;if(j<<24>>24==35){n=u;o=0;break}else{w=0;x=1;y=m;z=j}while(1){if((z-48&255)>>>0>=10>>>0){k=0;break}j=(ai((z<<24>>24)-48|0,x)|0)+w|0;m=y-1|0;l=a[m]|0;if(l<<24>>24==35){n=u;o=j;break L5723}else{w=j;x=x*10|0;y=m;z=l}}return k|0}}while(0);L5757:do{if((f|0)==1){if(o>>>0<128>>>0){c[e>>2]=1;A=o;B=d+1|0;C=1}else{if(o>>>0<2048>>>0){c[e>>2]=2;D=o;E=d+2|0}else{do{if(o>>>0<65536>>>0){c[e>>2]=3;F=o;G=d+3|0}else{if(o>>>0<2097152>>>0){c[e>>2]=4;h=d+3|0;a[h]=(o&63|128)&255;F=o>>>6;G=h;break}else{c[e>>2]=0;break L5757}}}while(0);h=G-1|0;a[h]=(F&63|128)&255;D=F>>>6;E=h}h=E-1|0;a[h]=(D&63|128)&255;A=D>>>6;B=h;C=c[e>>2]|0}a[B-1|0]=(c[21232+(C<<2)>>2]|A)&255}else{a[d]=o&255;c[e>>2]=1}}while(0);k=b+(n+1)|0;return k|0}else{v=0}}while(0);while(1){if((v|0)>=5){H=5423;break}I=c[38344+(v*12|0)>>2]|0;J=38348+(v*12|0)|0;K=c[J>>2]|0;if((bI(I|0,b|0,K|0)|0)==0){break}else{v=v+1|0}}if((H|0)==5423){a[d]=a[b]|0;k=g;return k|0}if((yz(I|0)|0)!=(K|0)){cd(17752,9696,519,19320);return 0}a[d]=a[38352+(v*12|0)|0]|0;c[e>>2]=1;k=b+(c[J>>2]|0)|0;return k|0}function oY(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((b|0)==0){cd(8848,9696,539,19352);return 0}if((c|0)==0){cd(17328,9696,540,19352);return 0}e=a[b]|0;if(e<<24>>24==0){cd(16952,9696,543,19352);return 0}do{if(d){f=c;g=b;h=e;while(1){if((a[f]|0)==0){i=1;j=5452;break}k=yE(h<<24>>24|0)|0;if((k|0)!=(yE(a[f]|0)|0)){l=f;break}k=g+1|0;m=f+1|0;n=a[k]|0;if(n<<24>>24==0){l=m;break}else{f=m;g=k;h=n}}if((j|0)==5452){return i|0}if((a[l]|0)==0){i=1}else{break}return i|0}else{h=c;g=b;f=e;n=a[c]|0;while(1){if(!(n<<24>>24!=0&f<<24>>24==n<<24>>24)){o=n;break}k=g+1|0;m=h+1|0;p=a[k]|0;q=a[m]|0;if(p<<24>>24==0){o=q;break}else{h=m;g=k;f=p;n=q}}if(o<<24>>24==0){i=1}else{break}return i|0}}while(0);i=0;return i|0}function oZ(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;k=i;i=i+48|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;q=k+40|0;nG(e,40160,0)|0;L5816:do{if(f){if((a[38408]&1)==0){r=5458;break}if((b|0)==0){i=k;return 0}s=a[b]|0;if(s<<24>>24==0){i=k;return 0}L5825:do{if((j|0)==1){t=b;u=s;while(1){do{if((u<<24>>24|0)==(-17|0)){v=a[t+1|0]|0;if((v<<24>>24|0)==(-69|0)){if((a[t+2|0]|0)!=-65){w=-17;r=5485;break}x=t+3|0;break}else if((v<<24>>24|0)!=(-65|0)){w=-17;r=5485;break}v=a[t+2|0]|0;if((v<<24>>24|0)==(-66|0)){x=t+3|0;break}else if((v<<24>>24|0)==(-65|0)){x=t+3|0;break}else{w=-17;r=5485;break}}else if((u<<24>>24|0)==0){y=t;break L5825}else{w=u;r=5485}}while(0);if((r|0)==5485){r=0;if((a$(w&255|0)|0)==0){if(!((w<<24>>24|0)==13|(w<<24>>24|0)==10)){y=t;break L5825}}x=t+1|0}t=x;u=a[x]|0}}else{u=b;t=s;while(1){if((a$(t&255|0)|0)==0){if(!((t<<24>>24|0)==13|(t<<24>>24|0)==10)){y=u;break L5825}}v=u+1|0;z=a[v]|0;if(z<<24>>24==0){y=v;break}else{u=v;t=z}}}}while(0);if((y|0)==0){i=k;return 0}s=q;t=(j|0)==1;u=y;z=0;while(1){if((a[u]|0)==0){A=u;break L5816}if(oY(u,g,h,j)|0){B=u;r=5515;break L5816}v=a[u]|0;do{if((v<<24>>24|0)==13|(v<<24>>24|0)==10){C=1;D=u+1|0}else{if((a$(v&255|0)|0)!=0|v<<24>>24==13){C=1;D=u+1|0;break}if(z){a[m]=32;nH(e,m,1)|0}c[q>>2]=0;do{if(t){E=c[38416+(d[u]<<2)>>2]|0;c[p>>2]=E;if((E|0)==1){r=5506;break}else if((E|0)==0){F=0;G=0;r=5514;break}H=a[u]|0;L5869:do{if(H<<24>>24!=0){I=0;J=H;do{if((I|0)>=(E|0)){break L5869}a[s+I|0]=J;I=I+1|0;J=a[u+I|0]|0;}while(J<<24>>24!=0)}}while(0);K=u+E|0;L=E;r=5512}else{c[p>>2]=1;r=5506}}while(0);do{if((r|0)==5506){r=0;H=a[u]|0;if(H<<24>>24==38){J=oX(u,s,p,j)|0;K=J;L=c[p>>2]|0;r=5512;break}else{a[s]=H;M=u+1|0;r=5513;break}}}while(0);if((r|0)==5512){r=0;if((L|0)==1){M=K;r=5513}else{F=L;G=K;r=5514}}if((r|0)==5513){r=0;a[l]=a[s]|0;nH(e,l,1)|0;C=0;D=M;break}else if((r|0)==5514){r=0;nH(e,s,F)|0;C=0;D=G;break}}}while(0);if((D|0)==0){break}else{u=D;z=C}}i=k;return 0}else{r=5458}}while(0);L5886:do{if((r|0)==5458){if((b|0)==0){i=k;return 0}C=o;D=(j|0)==1;G=b;L5891:while(1){if((a[G]|0)==0){A=G;break L5886}if(oY(G,g,h,j)|0){B=G;r=5515;break L5886}c[o>>2]=0;do{if(D){F=c[38416+(d[G]<<2)>>2]|0;c[n>>2]=F;if((F|0)==0){break L5891}else if((F|0)==1){r=5467;break}M=a[G]|0;L5899:do{if(M<<24>>24!=0){l=0;K=M;do{if((l|0)>=(F|0)){break L5899}a[C+l|0]=K;l=l+1|0;K=a[G+l|0]|0;}while(K<<24>>24!=0)}}while(0);N=G+F|0;O=F}else{c[n>>2]=1;r=5467}}while(0);do{if((r|0)==5467){r=0;M=a[G]|0;if(M<<24>>24==38){K=oX(G,C,n,j)|0;N=K;O=c[n>>2]|0;break}else{a[C]=M;N=G+1|0;O=1;break}}}while(0);nH(e,C,O)|0;if((N|0)==0){r=5526;break}else{G=N}}if((r|0)==5526){i=k;return 0}nH(e,C,0)|0;i=k;return 0}}while(0);do{if((r|0)==5515){if((B|0)==0){i=k;return 0}if((a[B]|0)==0){P=B;Q=a[P]|0;R=Q<<24>>24!=0;S=R?P:0;i=k;return S|0}else{A=B+(yz(g|0)|0)|0;break}}}while(0);if((A|0)==0){i=k;return 0}else{P=A;Q=a[P]|0;R=Q<<24>>24!=0;S=R?P:0;i=k;return S|0}return 0}function o_(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;g=i;i=i+16|0;h=g|0;j=h|0;k=h;l=b+44|0;a[l]=0;m=b+48|0;c[m>>2]=0;n=b+52|0;nG(n,40160,0)|0;o=b+64|0;c[o>>2]=0;p=b+60|0;c[p>>2]=0;do{if((d|0)!=0){if((a[d]|0)==0){break}q=b+4|0;c[b+8>>2]=-1;r=q|0;c[r>>2]=-1;if((e|0)==0){c[r>>2]=0;s=0;t=0}else{u=c[e>>2]|0;c[r>>2]=u;s=u;t=c[e+4>>2]|0}u=c[b+56>>2]|0;c[h+8>>2]=d;c[k+12>>2]=u;c[h>>2]=s;c[k+4>>2]=t;u=q;q=c[j+4>>2]|0;c[u>>2]=c[j>>2];c[u+4>>2]=q;do{if((f|0)==0){q=a[d]|0;if(q<<24>>24!=-17){v=0;w=q;break}if((a[d+1|0]|0)!=-69){x=0;y=5544;break}if((a[d+2|0]|0)!=-65){x=0;y=5544;break}a[b+68|0]=1;x=1;y=5544}else{x=f;y=5544}}while(0);if((y|0)==5544){v=x;w=a[d]|0}do{if(w<<24>>24!=0){L5944:do{if((v|0)==1){q=d;u=w;while(1){do{if((u<<24>>24|0)==(-17|0)){r=a[q+1|0]|0;if((r<<24>>24|0)==(-69|0)){if((a[q+2|0]|0)!=-65){z=-17;y=5555;break}A=q+3|0;break}else if((r<<24>>24|0)!=(-65|0)){z=-17;y=5555;break}r=a[q+2|0]|0;if((r<<24>>24|0)==(-66|0)){A=q+3|0;break}else if((r<<24>>24|0)==(-65|0)){A=q+3|0;break}else{z=-17;y=5555;break}}else if((u<<24>>24|0)==0){B=q;break L5944}else{z=u;y=5555}}while(0);if((y|0)==5555){y=0;if((a$(z&255|0)|0)==0){if(!((z<<24>>24|0)==13|(z<<24>>24|0)==10)){B=q;break L5944}}A=q+1|0}q=A;u=a[A]|0}}else{u=d;q=w;while(1){if((a$(q&255|0)|0)==0){if(!((q<<24>>24|0)==13|(q<<24>>24|0)==10)){B=u;break L5944}}r=u+1|0;C=a[r]|0;if(C<<24>>24==0){B=r;break}else{u=r;q=C}}}}while(0);if((B|0)==0){break}q=b|0;u=v;C=B;L5969:while(1){if((a[C]|0)==0){D=C;y=5600;break}r=o0(q,C,u)|0;if((r|0)==0){D=C;y=5600;break}E=cY[c[(c[r>>2]|0)+12>>2]&31](r|0,C,k,u)|0;nM(q,r)|0;L5973:do{if((u|0)==0){F=r;if((cJ[c[(c[F>>2]|0)+60>>2]&255](r)|0)==0){G=0;break}H=(c[(cJ[c[(c[F>>2]|0)+60>>2]&255](r)|0)+48>>2]|0)+8|0;if((H|0)==0){y=5570;break L5969}F=a[H]|0;if(F<<24>>24==0){G=1;break}else{I=16088;J=H;K=F}while(1){if((a[I]|0)==0){G=1;break L5973}F=yE(K<<24>>24|0)|0;if((F|0)!=(yE(a[I]|0)|0)){L=I;break}F=J+1|0;M=I+1|0;N=a[F]|0;if(N<<24>>24==0){L=M;break}else{I=M;J=F;K=N}}if((a[L]|0)==0){G=1;break}N=a[H]|0;if(N<<24>>24==0){y=5577;break L5969}else{O=15776;P=H;Q=N}while(1){if((a[O]|0)==0){G=1;break L5973}N=yE(Q<<24>>24|0)|0;if((N|0)!=(yE(a[O]|0)|0)){R=O;break}N=P+1|0;F=O+1|0;M=a[N]|0;if(M<<24>>24==0){R=F;break}else{O=F;P=N;Q=M}}G=(a[R]|0)==0?1:2}else{G=u}}while(0);if((E|0)==0){D=0;y=5600;break}r=a[E]|0;if(r<<24>>24==0){D=0;y=5600;break}L5991:do{if((G|0)==1){H=E;M=r;while(1){do{if((M<<24>>24|0)==0){S=H;break L5991}else if((M<<24>>24|0)==(-17|0)){N=a[H+1|0]|0;if((N<<24>>24|0)==(-69|0)){if((a[H+2|0]|0)!=-65){T=-17;y=5594;break}U=H+3|0;break}else if((N<<24>>24|0)!=(-65|0)){T=-17;y=5594;break}N=a[H+2|0]|0;if((N<<24>>24|0)==(-66|0)){U=H+3|0;break}else if((N<<24>>24|0)==(-65|0)){U=H+3|0;break}else{T=-17;y=5594;break}}else{T=M;y=5594}}while(0);if((y|0)==5594){y=0;if((a$(T&255|0)|0)==0){if(!((T<<24>>24|0)==13|(T<<24>>24|0)==10)){S=H;break L5991}}U=H+1|0}H=U;M=a[U]|0}}else{M=E;H=r;while(1){if((a$(H&255|0)|0)==0){if(!((H<<24>>24|0)==13|(H<<24>>24|0)==10)){S=M;break L5991}}N=M+1|0;F=a[N]|0;if(F<<24>>24==0){S=N;break}else{M=N;H=F}}}}while(0);if((S|0)==0){D=0;y=5600;break}else{u=G;C=S}}if((y|0)==5600){if((c[b+24>>2]|0)!=0){V=D;i=g;return V|0}if((a[l]&1)!=0){V=0;i=g;return V|0}a[l]=1;c[m>>2]=12;C=c[9872]|0;u=yz(C|0)|0;nG(n,C,u)|0;c[o>>2]=-1;c[p>>2]=-1;V=0;i=g;return V|0}else if((y|0)==5577){cd(16952,9696,543,19352);return 0}else if((y|0)==5570){cd(16528,9696,773,20808);return 0}}}while(0);if((a[l]&1)!=0){V=0;i=g;return V|0}a[l]=1;c[m>>2]=12;u=c[9872]|0;C=yz(u|0)|0;nG(n,u,C)|0;c[o>>2]=-1;c[p>>2]=-1;V=0;i=g;return V|0}}while(0);if((a[l]&1)!=0){V=0;i=g;return V|0}a[l]=1;c[m>>2]=12;m=c[9872]|0;nG(n,m,yz(m|0)|0)|0;c[o>>2]=-1;c[p>>2]=-1;V=0;i=g;return V|0}function o$(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=b+44|0;if((a[h]&1)!=0){return}if((d-1|0)>>>0>=15>>>0){cd(15376,9696,804,20776)}a[h]=1;c[b+48>>2]=d;h=c[39440+(d<<2)>>2]|0;nG(b+52|0,h,yz(h|0)|0)|0;h=b+60|0;c[b+64>>2]=-1;c[h>>2]=-1;if((e|0)==0|(f|0)==0){return}oV(f,e,g);g=f;f=h;h=c[g+4>>2]|0;c[f>>2]=c[g>>2];c[f+4>>2]=h;return}function o0(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;if((d|0)==0){f=0;return f|0}g=a[d]|0;if(g<<24>>24==0){f=0;return f|0}h=(e|0)==1;L6054:do{if(h){e=d;i=g;while(1){do{if((i<<24>>24|0)==(-17|0)){j=a[e+1|0]|0;if((j<<24>>24|0)==(-69|0)){if((a[e+2|0]|0)!=-65){k=-17;l=5631;break}m=e+3|0;break}else if((j<<24>>24|0)!=(-65|0)){k=-17;l=5631;break}j=a[e+2|0]|0;if((j<<24>>24|0)==(-65|0)){m=e+3|0;break}else if((j<<24>>24|0)==(-66|0)){m=e+3|0;break}else{k=-17;l=5631;break}}else if((i<<24>>24|0)==0){n=e;break L6054}else{k=i;l=5631}}while(0);if((l|0)==5631){l=0;if((a$(k&255|0)|0)==0){if(!((k<<24>>24|0)==13|(k<<24>>24|0)==10)){n=e;break L6054}}m=e+1|0}e=m;i=a[m]|0}}else{i=d;e=g;while(1){if((a$(e&255|0)|0)==0){if(!((e<<24>>24|0)==13|(e<<24>>24|0)==10)){n=i;break L6054}}j=i+1|0;o=a[j]|0;if(o<<24>>24==0){n=j;break}else{i=j;e=o}}}}while(0);if((n|0)==0){f=0;return f|0}if((a[n]|0)!=60){f=0;return f|0}L6084:do{if(h){g=n;d=60;while(1){do{if((d<<24>>24|0)==(-17|0)){m=a[g+1|0]|0;if((m<<24>>24|0)==(-69|0)){if((a[g+2|0]|0)!=-65){p=-17;l=5648;break}q=g+3|0;break}else if((m<<24>>24|0)!=(-65|0)){p=-17;l=5648;break}m=a[g+2|0]|0;if((m<<24>>24|0)==(-66|0)){q=g+3|0;break}else if((m<<24>>24|0)==(-65|0)){q=g+3|0;break}else{p=-17;l=5648;break}}else if((d<<24>>24|0)==0){r=g;break L6084}else{p=d;l=5648}}while(0);if((l|0)==5648){l=0;if((a$(p&255|0)|0)==0){if(!((p<<24>>24|0)==13|(p<<24>>24|0)==10)){r=g;break L6084}}q=g+1|0}g=q;d=a[q]|0}}else{d=n;g=60;while(1){if((a$(g&255|0)|0)==0){if(!((g<<24>>24|0)==13|(g<<24>>24|0)==10)){r=d;break L6084}}m=d+1|0;k=a[m]|0;if(k<<24>>24==0){r=m;break}else{d=m;g=k}}}}while(0);if((r|0)==0){f=0;return f|0}n=a[r]|0;if(n<<24>>24==0){f=0;return f|0}else{s=15088;t=r;u=n}while(1){if((a[s]|0)==0){l=5660;break}n=yE(u<<24>>24|0)|0;if((n|0)!=(yE(a[s]|0)|0)){v=s;l=5659;break}n=t+1|0;q=s+1|0;p=a[n]|0;if(p<<24>>24==0){v=q;l=5659;break}else{s=q;t=n;u=p}}L6117:do{if((l|0)==5659){if((a[v]|0)==0){l=5660;break}u=a[r]|0;if(u<<24>>24==0){cd(16952,9696,543,19352);return 0}else{w=14880;x=r;y=u;z=60}while(1){if(!(z<<24>>24!=0&y<<24>>24==z<<24>>24)){A=z;break}t=x+1|0;s=w+1|0;p=a[t]|0;n=a[s]|0;if(p<<24>>24==0){A=n;break}else{w=s;x=t;y=p;z=n}}if(A<<24>>24==0){n=yp(44)|0;nJ(n,2);c[n>>2]=30192;B=n;break}else{C=14400;D=r;E=u;F=60}while(1){if(!(F<<24>>24!=0&E<<24>>24==F<<24>>24)){G=F;break}n=D+1|0;p=C+1|0;t=a[n]|0;s=a[p]|0;if(t<<24>>24==0){G=s;break}else{C=p;D=n;E=t;F=s}}if(G<<24>>24==0){s=yp(48)|0;nJ(s,4);c[s>>2]=29624;t=s+32|0;nG(t,40160,0)|0;a[s+44|0]=1;B=s;break}else{H=14600;I=r;J=u;K=60}while(1){if(!(K<<24>>24!=0&J<<24>>24==K<<24>>24)){L=K;break}s=I+1|0;t=H+1|0;n=a[s]|0;p=a[t]|0;if(n<<24>>24==0){L=p;break}else{H=t;I=s;J=n;K=p}}if(L<<24>>24==0){u=yp(44)|0;nJ(u,3);c[u>>2]=30016;B=u;break}u=r+1|0;p=a[u]|0;do{if((p&255)>>>0<127>>>0){if((bU(p&255|0)|0)!=0){break}if((a[u]|0)==95){break}n=yp(44)|0;nJ(n,3);c[n>>2]=30016;B=n;break L6117}}while(0);u=yp(80)|0;nT(u,40160);B=u}}while(0);if((l|0)==5660){l=yp(56)|0;nJ(l,5);c[l>>2]=29800;c[l+44>>2]=40072;c[l+48>>2]=40072;c[l+52>>2]=40072;B=l}l=B;if((B|0)==0){f=l;return f|0}c[B+16>>2]=b;f=l;return f|0}function o1(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;g=i;i=i+8|0;h=g|0;do{if((d|0)==0){j=5724}else{k=a[d]|0;if(k<<24>>24==0){j=5724;break}l=(f|0)==1;L6163:do{if(l){m=d;n=k;while(1){do{if((n<<24>>24|0)==(-17|0)){o=a[m+1|0]|0;if((o<<24>>24|0)==(-69|0)){if((a[m+2|0]|0)!=-65){p=-17;j=5718;break}q=m+3|0;break}else if((o<<24>>24|0)!=(-65|0)){p=-17;j=5718;break}o=a[m+2|0]|0;if((o<<24>>24|0)==(-65|0)){q=m+3|0;break}else if((o<<24>>24|0)==(-66|0)){q=m+3|0;break}else{p=-17;j=5718;break}}else if((n<<24>>24|0)==0){r=m;break L6163}else{p=n;j=5718}}while(0);if((j|0)==5718){j=0;if((a$(p&255|0)|0)==0){if(!((p<<24>>24|0)==13|(p<<24>>24|0)==10)){r=m;break L6163}}q=m+1|0}m=q;n=a[q]|0}}else{n=d;m=k;while(1){if((a$(m&255|0)|0)==0){if(!((m<<24>>24|0)==13|(m<<24>>24|0)==10)){r=n;break L6163}}o=n+1|0;s=a[o]|0;if(s<<24>>24==0){r=o;break}else{n=o;m=s}}}}while(0);k=nS(b|0)|0;if((r|0)==0){t=k;break}m=a[r]|0;if(m<<24>>24==0){t=k;break}n=(e|0)==0;if(n){u=m}else{oV(e,r,f);m=e;s=b+4|0;o=c[m+4>>2]|0;c[s>>2]=c[m>>2];c[s+4>>2]=o;u=a[r]|0}if(u<<24>>24!=60){if((k|0)==0){v=0;i=g;return v|0}o=k+44|0;if((a[o]&1)!=0){v=0;i=g;return v|0}a[o]=1;c[k+48>>2]=3;o=k+52|0;s=c[9863]|0;m=yz(s|0)|0;nG(o,s,m)|0;m=k+60|0;c[k+64>>2]=-1;c[m>>2]=-1;if(n){v=0;i=g;return v|0}oV(e,r,f);s=e;o=m;m=c[s+4>>2]|0;c[o>>2]=c[s>>2];c[o+4>>2]=m;v=0;i=g;return v|0}m=r+1|0;L6205:do{if((m|0)==0){w=0}else{o=a[m]|0;if(o<<24>>24==0){w=0;break}if(l){x=m;y=o}else{s=m;z=o;while(1){if((a$(z&255|0)|0)==0){if(!((z<<24>>24|0)==13|(z<<24>>24|0)==10)){w=s;break L6205}}o=s+1|0;A=a[o]|0;if(A<<24>>24==0){w=o;break L6205}else{s=o;z=A}}}while(1){do{if((y<<24>>24|0)==(-17|0)){z=a[x+1|0]|0;if((z<<24>>24|0)==(-69|0)){if((a[x+2|0]|0)!=-65){B=-17;j=5748;break}C=x+3|0;break}else if((z<<24>>24|0)!=(-65|0)){B=-17;j=5748;break}z=a[x+2|0]|0;if((z<<24>>24|0)==(-65|0)){C=x+3|0;break}else if((z<<24>>24|0)==(-66|0)){C=x+3|0;break}else{B=-17;j=5748;break}}else if((y<<24>>24|0)==0){w=x;break L6205}else{B=y;j=5748}}while(0);if((j|0)==5748){j=0;if((a$(B&255|0)|0)==0){if(!((B<<24>>24|0)==13|(B<<24>>24|0)==10)){w=x;break L6205}}C=x+1|0}x=C;y=a[C]|0}}}while(0);m=b+32|0;z=oW(w,m,0)|0;do{if((z|0)!=0){if((a[z]|0)==0){break}s=h|0;A=yq(16)|0;c[s>>2]=A;c[A>>2]=2;a[A+10|0]=0;c[A+4>>2]=2;o=A+8|0;E=12092;a[o]=E&255;E=E>>8;a[o+1|0]=E&255;o=c[m>>2]|0;A=o+8|0;D=c[o>>2]|0;nH(h,A,D)|0;D=b+44|0;A=z;while(1){if((A|0)==0){F=0;break}o=a[A]|0;if(o<<24>>24==0){F=A;break}L6240:do{if(l){G=A;H=o;while(1){do{if((H<<24>>24|0)==0){I=G;break L6240}else if((H<<24>>24|0)==(-17|0)){J=a[G+1|0]|0;if((J<<24>>24|0)==(-69|0)){if((a[G+2|0]|0)!=-65){K=-17;j=5773;break}L=G+3|0;break}else if((J<<24>>24|0)!=(-65|0)){K=-17;j=5773;break}J=a[G+2|0]|0;if((J<<24>>24|0)==(-66|0)){L=G+3|0;break}else if((J<<24>>24|0)==(-65|0)){L=G+3|0;break}else{K=-17;j=5773;break}}else{K=H;j=5773}}while(0);if((j|0)==5773){j=0;if((a$(K&255|0)|0)==0){if(!((K<<24>>24|0)==13|(K<<24>>24|0)==10)){I=G;break L6240}}L=G+1|0}G=L;H=a[L]|0}}else{H=A;G=o;while(1){if((a$(G&255|0)|0)==0){if(!((G<<24>>24|0)==13|(G<<24>>24|0)==10)){I=H;break L6240}}J=H+1|0;M=a[J]|0;if(M<<24>>24==0){I=J;break}else{H=J;G=M}}}}while(0);if((I|0)==0){j=5783;break}o=a[I]|0;if((o<<24>>24|0)==62){j=5797;break}else if((o<<24>>24|0)==47){j=5789;break}else if((o<<24>>24|0)==0){j=5783;break}N=yp(36)|0;O=N;c[N+8>>2]=-1;c[N+4>>2]=-1;c[N+12>>2]=0;c[N>>2]=29896;o=N+20|0;c[o>>2]=40072;c[N+24>>2]=40072;G=N+16|0;c[G>>2]=0;c[N+32>>2]=0;c[N+28>>2]=0;if((N|0)==0){F=0;break}c[G>>2]=k;G=o5(O,I,e,f)|0;if((G|0)==0){j=5852;break}if((a[G]|0)==0){j=5852;break}if((nN(D,(c[o>>2]|0)+8|0)|0)!=0){j=5861;break}on(D,O);A=G}L6275:do{if((j|0)==5797){D=o2(b,I+1|0,e,f)|0;G=(D|0)==0;do{if(!G){o=a[D]|0;if(o<<24>>24==0){break}H=c[s>>2]|0;M=H+8|0;if((M|0)==0){cd(17328,9696,540,19352);return 0}J=M;P=D;Q=o;o=a[M]|0;while(1){if(!(o<<24>>24!=0&Q<<24>>24==o<<24>>24)){R=o;break}M=P+1|0;S=J+1|0;T=a[M]|0;U=a[S]|0;if(T<<24>>24==0){R=U;break}else{J=S;P=M;Q=T;o=U}}if(R<<24>>24!=0){if((k|0)==0){F=0;break L6275}o=k+44|0;if((a[o]&1)!=0){F=0;break L6275}a[o]=1;c[k+48>>2]=8;o=k+52|0;Q=c[9868]|0;P=yz(Q|0)|0;nG(o,Q,P)|0;P=k+60|0;c[k+64>>2]=-1;c[P>>2]=-1;if(n){F=0;break L6275}oV(e,D,f);Q=e;o=P;P=c[Q+4>>2]|0;c[o>>2]=c[Q>>2];c[o+4>>2]=P;F=0;break L6275}P=D+(c[H>>2]|0)|0;do{if((P|0)==0){V=0;W=1}else{o=a[P]|0;if(o<<24>>24==0){V=0;W=1;break}L6300:do{if(l){Q=P;J=o;while(1){do{if((J<<24>>24|0)==(-17|0)){U=a[Q+1|0]|0;if((U<<24>>24|0)==(-69|0)){if((a[Q+2|0]|0)!=-65){X=-17;j=5824;break}Y=Q+3|0;break}else if((U<<24>>24|0)!=(-65|0)){X=-17;j=5824;break}U=a[Q+2|0]|0;if((U<<24>>24|0)==(-66|0)){Y=Q+3|0;break}else if((U<<24>>24|0)==(-65|0)){Y=Q+3|0;break}else{X=-17;j=5824;break}}else if((J<<24>>24|0)==0){Z=Q;break L6300}else{X=J;j=5824}}while(0);if((j|0)==5824){j=0;if((a$(X&255|0)|0)==0){if(!((X<<24>>24|0)==13|(X<<24>>24|0)==10)){Z=Q;break L6300}}Y=Q+1|0}Q=Y;J=a[Y]|0}}else{J=P;Q=o;while(1){if((a$(Q&255|0)|0)==0){if(!((Q<<24>>24|0)==13|(Q<<24>>24|0)==10)){Z=J;break L6300}}U=J+1|0;T=a[U]|0;if(T<<24>>24==0){Z=U;break}else{J=U;Q=T}}}}while(0);if((Z|0)==0){V=0;W=1;break}if((a[Z]|0)!=62){V=Z;W=0;break}F=Z+1|0;break L6275}}while(0);if((k|0)==0){F=0;break L6275}P=k+44|0;if((a[P]&1)!=0){F=0;break L6275}a[P]=1;c[k+48>>2]=8;P=c[9868]|0;nG(k+52|0,P,yz(P|0)|0)|0;P=k+60|0;c[k+64>>2]=-1;c[P>>2]=-1;if(W|n){F=0;break L6275}oV(e,V,f);H=e;o=P;P=c[H+4>>2]|0;c[o>>2]=c[H>>2];c[o+4>>2]=P;F=0;break L6275}}while(0);if((k|0)==0){F=0;break}P=k+44|0;if((a[P]&1)!=0){F=0;break}a[P]=1;c[k+48>>2]=8;P=k+52|0;o=c[9868]|0;H=yz(o|0)|0;nG(P,o,H)|0;H=k+60|0;c[k+64>>2]=-1;c[H>>2]=-1;if(G|n){F=0;break}oV(e,D,f);o=e;P=H;H=c[o+4>>2]|0;c[P>>2]=c[o>>2];c[P+4>>2]=H;F=0}else if((j|0)==5789){H=I+1|0;if((a[H]|0)==62){F=I+2|0;break}if((k|0)==0){F=0;break}P=k+44|0;if((a[P]&1)!=0){F=0;break}a[P]=1;c[k+48>>2]=7;P=c[9867]|0;nG(k+52|0,P,yz(P|0)|0)|0;P=k+60|0;c[k+64>>2]=-1;c[P>>2]=-1;if((H|0)==0|n){F=0;break}oV(e,H,f);H=e;o=P;P=c[H+4>>2]|0;c[o>>2]=c[H>>2];c[o+4>>2]=P;F=0}else if((j|0)==5852){do{if((k|0)!=0){P=k+44|0;if((a[P]&1)!=0){break}a[P]=1;c[k+48>>2]=3;P=k+52|0;o=c[9863]|0;H=yz(o|0)|0;nG(P,o,H)|0;H=k+60|0;c[k+64>>2]=-1;c[H>>2]=-1;if(n){break}oV(e,I,f);o=e;P=H;H=c[o+4>>2]|0;c[P>>2]=c[o>>2];c[P+4>>2]=H}}while(0);cG[c[(c[N>>2]|0)+4>>2]&1023](O);F=0}else if((j|0)==5861){do{if((k|0)!=0){D=k+44|0;if((a[D]&1)!=0){break}a[D]=1;c[k+48>>2]=3;D=k+52|0;G=c[9863]|0;H=yz(G|0)|0;nG(D,G,H)|0;H=k+60|0;c[k+64>>2]=-1;c[H>>2]=-1;if(n){break}oV(e,I,f);G=e;D=H;H=c[G+4>>2]|0;c[D>>2]=c[G>>2];c[D+4>>2]=H}}while(0);cG[c[(c[N>>2]|0)+4>>2]&1023](O);F=0}else if((j|0)==5783){if((k|0)==0){F=0;break}H=k+44|0;if((a[H]&1)!=0){F=0;break}a[H]=1;c[k+48>>2]=6;H=c[9866]|0;nG(k+52|0,H,yz(H|0)|0)|0;H=k+60|0;c[k+64>>2]=-1;c[H>>2]=-1;if(n){F=0;break}oV(e,A,f);D=e;G=H;H=c[D+4>>2]|0;c[G>>2]=c[D>>2];c[G+4>>2]=H;F=0}}while(0);A=c[s>>2]|0;if((A|0)==40072|(A|0)==0){v=F;i=g;return v|0}ys(A);v=F;i=g;return v|0}}while(0);if((k|0)==0){v=0;i=g;return v|0}l=k+44|0;if((a[l]&1)!=0){v=0;i=g;return v|0}a[l]=1;c[k+48>>2]=4;l=k+52|0;z=c[9864]|0;m=yz(z|0)|0;nG(l,z,m)|0;m=k+60|0;c[k+64>>2]=-1;c[m>>2]=-1;if((w|0)==0|n){v=0;i=g;return v|0}oV(e,w,f);z=e;l=m;m=c[z+4>>2]|0;c[l>>2]=c[z>>2];c[l+4>>2]=m;v=0;i=g;return v|0}}while(0);if((j|0)==5724){t=nS(b|0)|0}if((t|0)==0){v=0;i=g;return v|0}b=t+44|0;if((a[b]&1)!=0){v=0;i=g;return v|0}a[b]=1;c[t+48>>2]=3;b=c[9863]|0;nG(t+52|0,b,yz(b|0)|0)|0;c[t+64>>2]=-1;c[t+60>>2]=-1;v=0;i=g;return v|0}function o2(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=b|0;b=nS(g)|0;L6398:do{if((d|0)!=0){h=a[d]|0;if(h<<24>>24==0){break}L6401:do{if((f|0)==1){i=d;j=h;while(1){do{if((j<<24>>24|0)==0){k=i;break L6401}else if((j<<24>>24|0)==(-17|0)){l=a[i+1|0]|0;if((l<<24>>24|0)==(-69|0)){if((a[i+2|0]|0)!=-65){m=-17;n=5905;break}o=i+3|0;break}else if((l<<24>>24|0)!=(-65|0)){m=-17;n=5905;break}l=a[i+2|0]|0;if((l<<24>>24|0)==(-66|0)){o=i+3|0;break}else if((l<<24>>24|0)==(-65|0)){o=i+3|0;break}else{m=-17;n=5905;break}}else{m=j;n=5905}}while(0);if((n|0)==5905){n=0;if((a$(m&255|0)|0)==0){if(!((m<<24>>24|0)==13|(m<<24>>24|0)==10)){k=i;break L6401}}o=i+1|0}i=o;j=a[o]|0}}else{j=d;i=h;while(1){if((a$(i&255|0)|0)==0){if(!((i<<24>>24|0)==13|(i<<24>>24|0)==10)){k=j;break L6401}}l=j+1|0;p=a[l]|0;if(p<<24>>24==0){k=l;break}else{j=l;i=p}}}}while(0);if((k|0)==0){break}h=(f|0)==1;i=d;j=k;L6426:while(1){p=a[j]|0;L6428:do{if((p<<24>>24|0)==60){if((j|0)==0){n=5931;break L6426}else{q=14200;r=j;s=60;t=60}while(1){if(!(t<<24>>24!=0&s<<24>>24==t<<24>>24)){u=t;break}l=r+1|0;v=q+1|0;w=a[l]|0;x=a[v]|0;if(w<<24>>24==0){u=x;break}else{q=v;r=l;s=w;t=x}}if(u<<24>>24==0){y=j;n=5964;break L6426}x=o0(g,j,f)|0;if((x|0)==0){y=0;n=5965;break L6426}w=cY[c[(c[x>>2]|0)+12>>2]&31](x|0,j,e,f)|0;nM(g,x)|0;z=w}else if((p<<24>>24|0)==0){y=j;n=5963;break L6426}else{w=yp(48)|0;x=w;l=w;nJ(l,4);c[w>>2]=29624;v=w+32|0;nG(v,40160,0)|0;a[w+44|0]=0;if((w|0)==0){y=0;n=5961;break L6426}A=c[(c[w>>2]|0)+12>>2]|0;if((a[38408]&1)==0){B=cY[A&31](x,i,e,f)|0}else{B=cY[A&31](x,j,e,f)|0}A=v;v=c[A>>2]|0;L6444:do{if((c[v>>2]|0)!=0){C=0;D=v;while(1){E=a[D+8+C|0]|0;if((a$(E&255|0)|0)==0){if(!((E<<24>>24|0)==13|(E<<24>>24|0)==10)){break}}C=C+1|0;D=c[A>>2]|0;if(C>>>0>=(c[D>>2]|0)>>>0){break L6444}}nM(g,l)|0;z=B;break L6428}}while(0);cG[c[(c[w>>2]|0)+4>>2]&1023](x);z=B}}while(0);if((z|0)==0){break L6398}p=a[z]|0;if(p<<24>>24==0){break L6398}L6455:do{if(h){l=z;A=p;while(1){do{if((A<<24>>24|0)==0){F=l;break L6455}else if((A<<24>>24|0)==(-17|0)){v=a[l+1|0]|0;if((v<<24>>24|0)==(-69|0)){if((a[l+2|0]|0)!=-65){G=-17;n=5949;break}H=l+3|0;break}else if((v<<24>>24|0)!=(-65|0)){G=-17;n=5949;break}v=a[l+2|0]|0;if((v<<24>>24|0)==(-66|0)){H=l+3|0;break}else if((v<<24>>24|0)==(-65|0)){H=l+3|0;break}else{G=-17;n=5949;break}}else{G=A;n=5949}}while(0);if((n|0)==5949){n=0;if((a$(G&255|0)|0)==0){if(!((G<<24>>24|0)==13|(G<<24>>24|0)==10)){F=l;break L6455}}H=l+1|0}l=H;A=a[H]|0}}else{A=z;l=p;while(1){if((a$(l&255|0)|0)==0){if(!((l<<24>>24|0)==13|(l<<24>>24|0)==10)){F=A;break L6455}}x=A+1|0;w=a[x]|0;if(w<<24>>24==0){F=x;break}else{A=x;l=w}}}}while(0);if((F|0)==0){break L6398}else{i=z;j=F}}if((n|0)==5931){cd(8848,9696,539,19352);return 0}else if((n|0)==5961){return y|0}else if((n|0)==5963){return y|0}else if((n|0)==5964){return y|0}else if((n|0)==5965){return y|0}}}while(0);if((b|0)==0){y=0;return y|0}n=b+44|0;if((a[n]&1)!=0){y=0;return y|0}a[n]=1;c[b+48>>2]=5;n=c[9865]|0;nG(b+52|0,n,yz(n|0)|0)|0;c[b+64>>2]=-1;c[b+60>>2]=-1;y=0;return y|0}function o3(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=i;i=i+8|0;h=g|0;j=nS(b|0)|0;L6494:do{if((d|0)==0){k=0}else{l=a[d]|0;if(l<<24>>24==0){k=0;break}if((f|0)==1){m=d;n=l}else{o=d;p=l;while(1){if((a$(p&255|0)|0)==0){if(!((p<<24>>24|0)==13|(p<<24>>24|0)==10)){k=o;break L6494}}l=o+1|0;q=a[l]|0;if(q<<24>>24==0){k=l;break L6494}else{o=l;p=q}}}while(1){do{if((n<<24>>24|0)==(-17|0)){p=a[m+1|0]|0;if((p<<24>>24|0)==(-69|0)){if((a[m+2|0]|0)!=-65){r=-17;s=5977;break}t=m+3|0;break}else if((p<<24>>24|0)!=(-65|0)){r=-17;s=5977;break}p=a[m+2|0]|0;if((p<<24>>24|0)==(-66|0)){t=m+3|0;break}else if((p<<24>>24|0)==(-65|0)){t=m+3|0;break}else{r=-17;s=5977;break}}else if((n<<24>>24|0)==0){k=m;break L6494}else{r=n;s=5977}}while(0);if((s|0)==5977){s=0;if((a$(r&255|0)|0)==0){if(!((r<<24>>24|0)==13|(r<<24>>24|0)==10)){k=m;break L6494}}t=m+1|0}m=t;n=a[t]|0}}}while(0);t=(e|0)==0;if(!t){oV(e,k,f);n=e;m=b+4|0;r=c[n+4>>2]|0;c[m>>2]=c[n>>2];c[m+4>>2]=r}r=(k|0)==0;do{if(!r){if((a[k]|0)!=60){break}m=b+32|0;nG(m,40160,0)|0;n=k+1|0;L6527:do{if((n|0)!=0){s=k;d=n;while(1){u=a[d]|0;if((u<<24>>24|0)==0|(u<<24>>24|0)==62){break}a[h]=u;nH(m,h,1)|0;p=d+1|0;if((p|0)==0){break L6527}else{s=d;d=p}}i=g;return(u<<24>>24==62?s+2|0:d)|0}}while(0);if((j|0)==0){i=g;return 0}m=j+44|0;if((a[m]&1)!=0){i=g;return 0}a[m]=1;c[j+48>>2]=9;m=j+52|0;n=c[9869]|0;p=yz(n|0)|0;nG(m,n,p)|0;c[j+64>>2]=-1;c[j+60>>2]=-1;i=g;return 0}}while(0);if((j|0)==0){i=g;return 0}u=j+44|0;if((a[u]&1)!=0){i=g;return 0}a[u]=1;c[j+48>>2]=9;u=c[9869]|0;nG(j+52|0,u,yz(u|0)|0)|0;u=j+60|0;c[j+64>>2]=-1;c[u>>2]=-1;if(r|t){i=g;return 0}oV(e,k,f);f=e;e=u;u=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=u;i=g;return 0}function o4(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;g=nS(b|0)|0;h=b+32|0;nG(h,40160,0)|0;L6552:do{if((d|0)==0){i=0}else{j=a[d]|0;if(j<<24>>24==0){i=0;break}if((f|0)==1){k=d;l=j}else{m=d;n=j;while(1){if((a$(n&255|0)|0)==0){if(!((n<<24>>24|0)==13|(n<<24>>24|0)==10)){i=m;break L6552}}j=m+1|0;o=a[j]|0;if(o<<24>>24==0){i=j;break L6552}else{m=j;n=o}}}while(1){do{if((l<<24>>24|0)==(-17|0)){n=a[k+1|0]|0;if((n<<24>>24|0)==(-69|0)){if((a[k+2|0]|0)!=-65){p=-17;q=6017;break}r=k+3|0;break}else if((n<<24>>24|0)!=(-65|0)){p=-17;q=6017;break}n=a[k+2|0]|0;if((n<<24>>24|0)==(-66|0)){r=k+3|0;break}else if((n<<24>>24|0)==(-65|0)){r=k+3|0;break}else{p=-17;q=6017;break}}else if((l<<24>>24|0)==0){i=k;break L6552}else{p=l;q=6017}}while(0);if((q|0)==6017){q=0;if((a$(p&255|0)|0)==0){if(!((p<<24>>24|0)==13|(p<<24>>24|0)==10)){i=k;break L6552}}r=k+1|0}k=r;l=a[r]|0}}}while(0);r=(e|0)==0;if(!r){oV(e,i,f);l=e;k=b+4|0;b=c[l+4>>2]|0;c[k>>2]=c[l>>2];c[k+4>>2]=b}if((i|0)==0){cd(8848,9696,539,19352);return 0}b=a[i]|0;if(b<<24>>24==0){cd(16952,9696,543,19352);return 0}else{s=14880;t=i;u=b;v=60}while(1){if(!(v<<24>>24!=0&u<<24>>24==v<<24>>24)){w=v;break}b=t+1|0;k=s+1|0;l=a[b]|0;p=a[k]|0;if(l<<24>>24==0){w=p;break}else{s=k;t=b;u=l;v=p}}if(w<<24>>24!=0){if((g|0)==0){return 0}w=g+44|0;if((a[w]&1)!=0){return 0}a[w]=1;c[g+48>>2]=10;w=g+52|0;v=c[9870]|0;u=yz(v|0)|0;nG(w,v,u)|0;u=g+60|0;c[g+64>>2]=-1;c[u>>2]=-1;if(r){return 0}oV(e,i,f);f=e;e=u;u=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=u;return 0}u=i+4|0;nG(h,40160,0)|0;if((u|0)==0){return 0}else{x=u}while(1){u=a[x]|0;y=u<<24>>24==0;if(y){q=6045;break}else{z=14040;A=x;B=u;C=45}while(1){if(!(C<<24>>24!=0&B<<24>>24==C<<24>>24)){D=C;break}u=A+1|0;i=z+1|0;e=a[u]|0;f=a[i]|0;if(e<<24>>24==0){D=f;break}else{z=i;A=u;B=e;C=f}}if(D<<24>>24==0){q=6044;break}nH(h,x,1)|0;f=x+1|0;if((f|0)==0){q=6047;break}else{x=f}}if((q|0)==6045){E=x+3|0;F=y?x:E;return F|0}else if((q|0)==6044){E=x+3|0;F=y?x:E;return F|0}else if((q|0)==6047){return 0}return 0}function o5(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;g=i;i=i+8|0;h=g|0;if((d|0)==0){j=0;i=g;return j|0}k=a[d]|0;if(k<<24>>24==0){j=0;i=g;return j|0}l=(f|0)==1;L6624:do{if(l){m=d;n=k;while(1){do{if((n<<24>>24|0)==(-17|0)){o=a[m+1|0]|0;if((o<<24>>24|0)==(-69|0)){if((a[m+2|0]|0)!=-65){p=-17;q=6063;break}r=m+3|0;break}else if((o<<24>>24|0)!=(-65|0)){p=-17;q=6063;break}o=a[m+2|0]|0;if((o<<24>>24|0)==(-66|0)){r=m+3|0;break}else if((o<<24>>24|0)==(-65|0)){r=m+3|0;break}else{p=-17;q=6063;break}}else if((n<<24>>24|0)==0){s=m;break L6624}else{p=n;q=6063}}while(0);if((q|0)==6063){q=0;if((a$(p&255|0)|0)==0){if(!((p<<24>>24|0)==13|(p<<24>>24|0)==10)){s=m;break L6624}}r=m+1|0}m=r;n=a[r]|0}}else{n=d;m=k;while(1){if((a$(m&255|0)|0)==0){if(!((m<<24>>24|0)==13|(m<<24>>24|0)==10)){s=n;break L6624}}o=n+1|0;t=a[o]|0;if(t<<24>>24==0){s=o;break}else{n=o;m=t}}}}while(0);if((s|0)==0){j=0;i=g;return j|0}if((a[s]|0)==0){j=0;i=g;return j|0}k=(e|0)==0;if(!k){oV(e,s,f);d=e;r=b+4|0;p=c[d+4>>2]|0;c[r>>2]=c[d>>2];c[r+4>>2]=p}p=oW(s,b+20|0,0)|0;do{if((p|0)!=0){r=a[p]|0;if(r<<24>>24==0){break}L6660:do{if(l){d=p;m=r;while(1){do{if((m<<24>>24|0)==0){u=d;break L6660}else if((m<<24>>24|0)==(-17|0)){n=a[d+1|0]|0;if((n<<24>>24|0)==(-69|0)){if((a[d+2|0]|0)!=-65){v=-17;q=6088;break}w=d+3|0;break}else if((n<<24>>24|0)!=(-65|0)){v=-17;q=6088;break}n=a[d+2|0]|0;if((n<<24>>24|0)==(-65|0)){w=d+3|0;break}else if((n<<24>>24|0)==(-66|0)){w=d+3|0;break}else{v=-17;q=6088;break}}else{v=m;q=6088}}while(0);if((q|0)==6088){q=0;if((a$(v&255|0)|0)==0){if(!((v<<24>>24|0)==13|(v<<24>>24|0)==10)){u=d;break L6660}}w=d+1|0}d=w;m=a[w]|0}}else{m=p;d=r;while(1){if((a$(d&255|0)|0)==0){if(!((d<<24>>24|0)==13|(d<<24>>24|0)==10)){u=m;break L6660}}n=m+1|0;t=a[n]|0;if(t<<24>>24==0){u=n;break}else{m=n;d=t}}}}while(0);r=(u|0)==0;do{if(!r){if((a[u]|0)!=61){break}d=u+1|0;do{if((d|0)==0){x=0;y=1}else{m=a[d]|0;if(m<<24>>24==0){x=0;y=1;break}L6690:do{if(l){t=d;n=m;while(1){do{if((n<<24>>24|0)==(-17|0)){o=a[t+1|0]|0;if((o<<24>>24|0)==(-69|0)){if((a[t+2|0]|0)!=-65){z=-17;q=6111;break}A=t+3|0;break}else if((o<<24>>24|0)!=(-65|0)){z=-17;q=6111;break}o=a[t+2|0]|0;if((o<<24>>24|0)==(-66|0)){A=t+3|0;break}else if((o<<24>>24|0)==(-65|0)){A=t+3|0;break}else{z=-17;q=6111;break}}else if((n<<24>>24|0)==0){B=t;break L6690}else{z=n;q=6111}}while(0);if((q|0)==6111){q=0;if((a$(z&255|0)|0)==0){if(!((z<<24>>24|0)==13|(z<<24>>24|0)==10)){B=t;break L6690}}A=t+1|0}t=A;n=a[A]|0}}else{n=d;t=m;while(1){if((a$(t&255|0)|0)==0){if(!((t<<24>>24|0)==13|(t<<24>>24|0)==10)){B=n;break L6690}}o=n+1|0;C=a[o]|0;if(C<<24>>24==0){B=o;break}else{n=o;t=C}}}}while(0);if((B|0)==0){x=0;y=1;break}m=a[B]|0;if((m<<24>>24|0)==34){j=oZ(B+1|0,b+24|0,0,13536,0,f)|0;i=g;return j|0}else if((m<<24>>24|0)==0){x=B;y=0;break}else if((m<<24>>24|0)==39){j=oZ(B+1|0,b+24|0,0,13688,0,f)|0;i=g;return j|0}else{m=b+24|0;nG(m,40160,0)|0;t=B;while(1){n=a[t]|0;if(n<<24>>24==0){j=t;q=6162;break}if((a$(n&255|0)|0)!=0){j=t;q=6138;break}if((n<<24>>24|0)==13|(n<<24>>24|0)==10){j=t;q=6139;break}n=a[t]|0;if((n<<24>>24|0)==39|(n<<24>>24|0)==34){q=6130;break}else if((n<<24>>24|0)==47|(n<<24>>24|0)==62){j=t;q=6149;break}a[h]=n;nH(m,h,1)|0;n=t+1|0;if((n|0)==0){j=0;q=6154;break}else{t=n}}if((q|0)==6130){m=c[b+16>>2]|0;if((m|0)==0){j=0;i=g;return j|0}n=m+44|0;if((a[n]&1)!=0){j=0;i=g;return j|0}a[n]=1;c[m+48>>2]=6;n=m+52|0;C=c[9866]|0;o=yz(C|0)|0;nG(n,C,o)|0;o=m+60|0;c[m+64>>2]=-1;c[o>>2]=-1;if(k){j=0;i=g;return j|0}oV(e,t,f);m=e;C=o;o=c[m+4>>2]|0;c[C>>2]=c[m>>2];c[C+4>>2]=o;j=0;i=g;return j|0}else if((q|0)==6149){i=g;return j|0}else if((q|0)==6154){i=g;return j|0}else if((q|0)==6138){i=g;return j|0}else if((q|0)==6139){i=g;return j|0}else if((q|0)==6162){i=g;return j|0}}}}while(0);d=c[b+16>>2]|0;if((d|0)==0){j=0;i=g;return j|0}o=d+44|0;if((a[o]&1)!=0){j=0;i=g;return j|0}a[o]=1;c[d+48>>2]=6;o=d+52|0;C=c[9866]|0;m=yz(C|0)|0;nG(o,C,m)|0;m=d+60|0;c[d+64>>2]=-1;c[m>>2]=-1;if(y|k){j=0;i=g;return j|0}oV(e,x,f);d=e;C=m;m=c[d+4>>2]|0;c[C>>2]=c[d>>2];c[C+4>>2]=m;j=0;i=g;return j|0}}while(0);m=c[b+16>>2]|0;if((m|0)==0){j=0;i=g;return j|0}C=m+44|0;if((a[C]&1)!=0){j=0;i=g;return j|0}a[C]=1;c[m+48>>2]=6;C=m+52|0;d=c[9866]|0;o=yz(d|0)|0;nG(C,d,o)|0;o=m+60|0;c[m+64>>2]=-1;c[o>>2]=-1;if(r|k){j=0;i=g;return j|0}oV(e,u,f);m=e;d=o;o=c[m+4>>2]|0;c[d>>2]=c[m>>2];c[d+4>>2]=o;j=0;i=g;return j|0}}while(0);u=c[b+16>>2]|0;if((u|0)==0){j=0;i=g;return j|0}b=u+44|0;if((a[b]&1)!=0){j=0;i=g;return j|0}a[b]=1;c[u+48>>2]=6;b=c[9866]|0;nG(u+52|0,b,yz(b|0)|0)|0;b=u+60|0;c[u+64>>2]=-1;c[b>>2]=-1;if(k){j=0;i=g;return j|0}oV(e,s,f);f=e;e=b;b=c[f+4>>2]|0;c[e>>2]=c[f>>2];c[e+4>>2]=b;j=0;i=g;return j|0}function o6(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=b+32|0;nG(k,40160,0)|0;l=nS(b|0)|0;m=(e|0)==0;if(!m){oV(e,d,f);n=e;o=b+4|0;p=c[n+4>>2]|0;c[o>>2]=c[n>>2];c[o+4>>2]=p}p=b+44|0;do{if((a[p]&1)==0){if((d|0)==0){cd(8848,9696,539,19352);return 0}b=a[d]|0;if(b<<24>>24==0){cd(16952,9696,543,19352);return 0}else{q=14400;r=d;s=b;t=60}while(1){if(!(t<<24>>24!=0&s<<24>>24==t<<24>>24)){u=t;break}b=r+1|0;o=q+1|0;n=a[b]|0;v=a[o]|0;if(n<<24>>24==0){u=v;break}else{q=o;r=b;s=n;t=v}}if(u<<24>>24==0){break}v=oZ(d,k,1,13200,0,f)|0;if((v|0)==0){w=0;i=g;return w|0}else{i=g;return((a[v]|0)==0?0:v-1|0)|0}}}while(0);a[p]=1;if((d|0)==0){cd(8848,9696,539,19352);return 0}p=a[d]|0;if(p<<24>>24==0){cd(16952,9696,543,19352);return 0}else{x=14400;y=d;z=p;A=60}while(1){if(!(A<<24>>24!=0&z<<24>>24==A<<24>>24)){B=A;break}p=y+1|0;u=x+1|0;t=a[p]|0;s=a[u]|0;if(t<<24>>24==0){B=s;break}else{x=u;y=p;z=t;A=s}}if(B<<24>>24!=0){if((l|0)==0){w=0;i=g;return w|0}B=l+44|0;if((a[B]&1)!=0){w=0;i=g;return w|0}a[B]=1;c[l+48>>2]=14;B=l+52|0;A=c[9874]|0;z=yz(A|0)|0;nG(B,A,z)|0;z=l+60|0;c[l+64>>2]=-1;c[z>>2]=-1;if(m){w=0;i=g;return w|0}oV(e,d,f);m=e;e=z;z=c[m+4>>2]|0;c[e>>2]=c[m>>2];c[e+4>>2]=z;w=0;i=g;return w|0}z=d+9|0;L6819:do{if((z|0)==0){C=0}else{d=z;while(1){e=a[d]|0;if(e<<24>>24==0){C=d;break L6819}else{D=13312;E=d;F=e;G=93}while(1){if(!(G<<24>>24!=0&F<<24>>24==G<<24>>24)){H=G;break}m=E+1|0;l=D+1|0;A=a[m]|0;B=a[l]|0;if(A<<24>>24==0){H=B;break}else{D=l;E=m;F=A;G=B}}if(H<<24>>24==0){C=d;break L6819}a[h]=e;nH(k,h,1)|0;B=d+1|0;if((B|0)==0){C=0;break}else{d=B}}}}while(0);h=j|0;c[h>>2]=40072;k=oZ(C,j,0,13312,0,f)|0;f=c[h>>2]|0;if((f|0)==40072|(f|0)==0){w=k;i=g;return w|0}ys(f);w=k;i=g;return w|0}function o7(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0;g=i;i=i+120|0;h=g|0;j=g+40|0;k=g+80|0;do{if((d|0)==0){l=6223}else{m=a[d]|0;if(m<<24>>24==0){l=6223;break}n=(f|0)==1;L6837:do{if(n){o=d;p=m;while(1){do{if((p<<24>>24|0)==(-17|0)){q=a[o+1|0]|0;if((q<<24>>24|0)==(-69|0)){if((a[o+2|0]|0)!=-65){r=-17;l=6217;break}s=o+3|0;break}else if((q<<24>>24|0)!=(-65|0)){r=-17;l=6217;break}q=a[o+2|0]|0;if((q<<24>>24|0)==(-66|0)){s=o+3|0;break}else if((q<<24>>24|0)==(-65|0)){s=o+3|0;break}else{r=-17;l=6217;break}}else if((p<<24>>24|0)==0){t=o;break L6837}else{r=p;l=6217}}while(0);if((l|0)==6217){l=0;if((a$(r&255|0)|0)==0){if(!((r<<24>>24|0)==13|(r<<24>>24|0)==10)){t=o;break L6837}}s=o+1|0}o=s;p=a[s]|0}}else{p=d;o=m;while(1){if((a$(o&255|0)|0)==0){if(!((o<<24>>24|0)==13|(o<<24>>24|0)==10)){t=p;break L6837}}q=p+1|0;u=a[q]|0;if(u<<24>>24==0){t=q;break}else{p=q;o=u}}}}while(0);m=nS(b|0)|0;if((t|0)==0){v=m;break}o=a[t]|0;if(o<<24>>24==0){v=m;break}else{w=15088;x=t;y=o}while(1){if((a[w]|0)==0){break}o=yE(y<<24>>24|0)|0;if((o|0)!=(yE(a[w]|0)|0)){z=w;l=6229;break}o=x+1|0;p=w+1|0;u=a[o]|0;if(u<<24>>24==0){z=p;l=6229;break}else{w=p;x=o;y=u}}if((l|0)==6229){if((a[z]|0)!=0){v=m;break}}if((e|0)!=0){oV(e,t,f);u=e;o=b+4|0;p=c[u+4>>2]|0;c[o>>2]=c[u>>2];c[o+4>>2]=p}p=t+5|0;o=b+44|0;nG(o,40160,0)|0;u=b+48|0;nG(u,40160,0)|0;q=b+52|0;nG(q,40160,0)|0;if((p|0)==0){A=0;i=g;return A|0}B=h|0;C=h+8|0;D=h+4|0;E=h+12|0;F=h+20|0;G=h+24|0;H=h+16|0;I=h+32|0;J=h+28|0;K=j|0;L=j+8|0;M=j+4|0;N=j+12|0;O=j+20|0;P=j+24|0;Q=j+16|0;R=j+32|0;S=j+28|0;T=k|0;U=k+8|0;V=k+4|0;W=k+12|0;X=k+20|0;Y=k+24|0;Z=k+16|0;_=k+32|0;$=k+28|0;aa=p;L6875:while(1){p=a[aa]|0;if((p<<24>>24|0)==62){l=6238;break}else if((p<<24>>24|0)==0){A=0;l=6314;break}L6878:do{if(n){ab=aa;ac=p;while(1){do{if((ac<<24>>24|0)==0){ad=ab;break L6878}else if((ac<<24>>24|0)==(-17|0)){ae=a[ab+1|0]|0;if((ae<<24>>24|0)==(-69|0)){if((a[ab+2|0]|0)!=-65){af=-17;l=6248;break}ag=ab+3|0;break}else if((ae<<24>>24|0)!=(-65|0)){af=-17;l=6248;break}ae=a[ab+2|0]|0;if((ae<<24>>24|0)==(-66|0)){ag=ab+3|0;break}else if((ae<<24>>24|0)==(-65|0)){ag=ab+3|0;break}else{af=-17;l=6248;break}}else{af=ac;l=6248}}while(0);if((l|0)==6248){l=0;if((a$(af&255|0)|0)==0){if(!((af<<24>>24|0)==13|(af<<24>>24|0)==10)){ad=ab;break L6878}}ag=ab+1|0}ab=ag;ac=a[ag]|0}}else{ac=aa;ab=p;while(1){if((a$(ab&255|0)|0)==0){if(!((ab<<24>>24|0)==13|(ab<<24>>24|0)==10)){ad=ac;break L6878}}ae=ac+1|0;ah=a[ae]|0;if(ah<<24>>24==0){ad=ae;break}else{ac=ae;ab=ah}}}}while(0);if((ad|0)==0){l=6255;break}p=a[ad]|0;if(p<<24>>24==0){l=6257;break}else{ai=13008;aj=ad;ak=p}while(1){if((a[ai]|0)==0){l=6262;break}p=yE(ak<<24>>24|0)|0;if((p|0)!=(yE(a[ai]|0)|0)){al=ai;l=6261;break}p=aj+1|0;ab=ai+1|0;ac=a[p]|0;if(ac<<24>>24==0){al=ab;l=6261;break}else{ai=ab;aj=p;ak=ac}}L6907:do{if((l|0)==6261){l=0;if((a[al]|0)==0){l=6262;break}ac=a[ad]|0;if(ac<<24>>24==0){l=6274;break L6875}else{am=12848;an=ad;ao=ac}while(1){if((a[am]|0)==0){break}ac=yE(ao<<24>>24|0)|0;if((ac|0)!=(yE(a[am]|0)|0)){ap=am;l=6278;break}ac=an+1|0;p=am+1|0;ab=a[ac]|0;if(ab<<24>>24==0){ap=p;l=6278;break}else{am=p;an=ac;ao=ab}}do{if((l|0)==6278){l=0;if((a[ap]|0)==0){break}ab=a[ad]|0;if(ab<<24>>24==0){l=6290;break L6875}else{aq=12720;ar=ad;as=ab}while(1){if((a[aq]|0)==0){break}ab=yE(as<<24>>24|0)|0;if((ab|0)!=(yE(a[aq]|0)|0)){at=aq;l=6294;break}ab=ar+1|0;ac=aq+1|0;p=a[ab]|0;if(p<<24>>24==0){at=ac;l=6294;break}else{aq=ac;ar=ab;as=p}}do{if((l|0)==6294){l=0;if((a[at]|0)==0){break}else{au=ad}while(1){p=a[au]|0;if((p<<24>>24|0)==0|(p<<24>>24|0)==62){av=au;break L6907}if((a$(p&255|0)|0)!=0){av=au;break L6907}if((p<<24>>24|0)==13|(p<<24>>24|0)==10){av=au;break L6907}p=au+1|0;if((p|0)==0){A=0;l=6313;break L6875}else{au=p}}}}while(0);c[U>>2]=-1;c[V>>2]=-1;c[W>>2]=0;c[T>>2]=29896;c[X>>2]=40072;c[Y>>2]=40072;c[Z>>2]=0;c[_>>2]=0;c[$>>2]=0;p=o5(k,ad,e,f)|0;ab=(c[Y>>2]|0)+8|0;nG(q,ab,yz(ab|0)|0)|0;c[T>>2]=29896;ab=c[Y>>2]|0;if(!((ab|0)==40072|(ab|0)==0)){ys(ab)}ab=c[X>>2]|0;if((ab|0)==40072|(ab|0)==0){av=p;break L6907}ys(ab);av=p;break L6907}}while(0);c[L>>2]=-1;c[M>>2]=-1;c[N>>2]=0;c[K>>2]=29896;c[O>>2]=40072;c[P>>2]=40072;c[Q>>2]=0;c[R>>2]=0;c[S>>2]=0;p=o5(j,ad,e,f)|0;ab=(c[P>>2]|0)+8|0;nG(u,ab,yz(ab|0)|0)|0;c[K>>2]=29896;ab=c[P>>2]|0;if(!((ab|0)==40072|(ab|0)==0)){ys(ab)}ab=c[O>>2]|0;if((ab|0)==40072|(ab|0)==0){av=p;break}ys(ab);av=p}}while(0);do{if((l|0)==6262){l=0;c[C>>2]=-1;c[D>>2]=-1;c[E>>2]=0;c[B>>2]=29896;c[F>>2]=40072;c[G>>2]=40072;c[H>>2]=0;c[I>>2]=0;c[J>>2]=0;p=o5(h,ad,e,f)|0;ab=(c[G>>2]|0)+8|0;ac=yz(ab|0)|0;nG(o,ab,ac)|0;c[B>>2]=29896;ac=c[G>>2]|0;if(!((ac|0)==40072|(ac|0)==0)){ys(ac)}ac=c[F>>2]|0;if((ac|0)==40072|(ac|0)==0){av=p;break}ys(ac);av=p}}while(0);if((av|0)==0){A=0;l=6312;break}else{aa=av}}if((l|0)==6238){A=aa+1|0;i=g;return A|0}else if((l|0)==6290){cd(16952,9696,543,19352);return 0}else if((l|0)==6314){i=g;return A|0}else if((l|0)==6255){cd(8848,9696,539,19352);return 0}else if((l|0)==6274){cd(16952,9696,543,19352);return 0}else if((l|0)==6312){i=g;return A|0}else if((l|0)==6313){i=g;return A|0}else if((l|0)==6257){cd(16952,9696,543,19352);return 0}}}while(0);if((l|0)==6223){v=nS(b|0)|0}if((v|0)==0){A=0;i=g;return A|0}b=v+44|0;if((a[b]&1)!=0){A=0;i=g;return A|0}a[b]=1;c[v+48>>2]=11;b=c[9871]|0;nG(v+52|0,b,yz(b|0)|0)|0;c[v+64>>2]=-1;c[v+60>>2]=-1;A=0;i=g;return A|0}function o8(a){a=a|0;var b=0;c[a>>2]=29896;b=c[a+24>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}b=c[a+20>>2]|0;if((b|0)==40072|(b|0)==0){return}ys(b);return}function o9(a){a=a|0;var b=0,d=0;c[a>>2]=29896;b=c[a+24>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}b=c[a+20>>2]|0;if((b|0)==40072|(b|0)==0){d=a;yr(d);return}ys(b);d=a;yr(d);return}function pa(a,b,c){a=a|0;b=b|0;c=c|0;n9(a,b,c,0);return}function pb(a){a=a|0;var b=0;c[a>>2]=29928;b=c[a+52>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}nL(a|0);return}function pc(a){a=a|0;var b=0;c[a>>2]=29928;b=c[a+52>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}nL(a|0);yr(a);return}function pd(a){a=a|0;return a|0}function pe(a){a=a|0;return a|0}function pf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(e){i=i;return}else{e=c[w>>2]|0;ch(e|0,18656,(e=i,i=i+24|0,c[e>>2]=d,c[e+8>>2]=a,c[e+16>>2]=b,e)|0)|0;i=e;cd(18384,14608,29,19368)}}function pg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;ph(d)|0;e=d;f=d;g=b;h=0;L7004:while(1){i=h;while(1){j=(a[g]|0)==0;k=(c[f+((c[(c[e>>2]|0)-12>>2]|0)+16)>>2]&7|0)!=0;if(k|j){l=j|k^1;m=6356;break L7004}k=rs(d)|0;i=(k|0)==-1?i:k&255;if(i<<24>>24==(a[g]|0)){break}rv(d,i)|0;if(!(pi(d)|0)){break L7004}}g=g+1|0;h=i}if((m|0)==6356){return l|0}if(g>>>0>b>>>0){n=g}else{l=0;return l|0}while(1){g=n-1|0;rv(d,a[g]|0)|0;if(g>>>0>b>>>0){n=g}else{l=0;break}}return l|0}function ph(a){a=a|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+8|0;f=e|0;g=a;h=c[(c[g>>2]|0)-12>>2]|0;j=a;k=c[j+(h+16)>>2]|0;if((k|0)!=0){qN(j+h|0,k|4);i=e;return a|0}k=c[j+(h+72)>>2]|0;if((k|0)==0){l=h}else{ro(k)|0;l=c[(c[g>>2]|0)-12>>2]|0}if((c[j+(l+16)>>2]|0)!=0){i=e;return a|0}qR(f,j+l|0);l=vp(f,43928)|0;vn(f);f=l+8|0;while(1){l=c[j+((c[(c[g>>2]|0)-12>>2]|0)+24)>>2]|0;k=c[l+12>>2]|0;if((k|0)==(c[l+16>>2]|0)){h=cJ[c[(c[l>>2]|0)+36>>2]&255](l)|0;if((h|0)==-1){m=15;break}else{n=h}}else{n=d[k]|0}k=n<<24>>24;if((b$(k|0)|0)==0){m=35;break}if((b[(c[f>>2]|0)+(k<<1)>>1]&8192)==0){m=36;break}k=c[j+((c[(c[g>>2]|0)-12>>2]|0)+24)>>2]|0;h=k+12|0;l=c[h>>2]|0;if((l|0)==(c[k+16>>2]|0)){o=k;p=c[(c[k>>2]|0)+40>>2]|0;cJ[p&255](o)|0;continue}else{c[h>>2]=l+1;continue}}if((m|0)==15){f=c[(c[g>>2]|0)-12>>2]|0;qN(j+f|0,c[j+(f+16)>>2]|2);i=e;return a|0}else if((m|0)==35){i=e;return a|0}else if((m|0)==36){i=e;return a|0}return 0}function pi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a;d=a;if((c[d+((c[(c[b>>2]|0)-12>>2]|0)+16)>>2]&2|0)!=0){e=0;return e|0}f=rs(a)|0;if((f|0)==-1){g=0}else{g=f<<24>>24}if((c[d+((c[(c[b>>2]|0)-12>>2]|0)+16)>>2]&2|0)==0){f=rs(a)|0;do{if((f|0)!=-1){if(!((g|0)==47&(f&255|0)==47)){break}h=c[(c[b>>2]|0)-12>>2]|0;L45:do{if((c[d+(h+16)>>2]&2|0)==0){while(1){if((ru(a)|0)==13){break}if((ru(a)|0)==10){break}rs(a)|0;i=c[(c[b>>2]|0)-12>>2]|0;if((c[d+(i+16)>>2]&2|0)!=0){j=i;break L45}}j=c[(c[b>>2]|0)-12>>2]|0}else{j=h}}while(0);if((c[d+(j+16)>>2]&2|0)!=0){e=1;return e|0}ph(a)|0;e=1;return e|0}}while(0);rw(a)|0;qN(d+(c[(c[b>>2]|0)-12>>2]|0)|0,0)}rw(a)|0;qN(d+(c[(c[b>>2]|0)-12>>2]|0)|0,0);e=0;return e|0}function pj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0;e=i;i=i+16|0;f=e|0;g=f;h=i;i=i+4|0;i=i+7&-8;j=i;i=i+144|0;do{if(pg(12736,b)|0){k=34;l=0}else{if((ru(b)|0)==39){m=rs(b)|0;k=39;l=(m|0)==-1?0:m&255;break}else{n=0;i=e;return n|0}}}while(0);m=b;o=c[(c[m>>2]|0)-12>>2]|0;p=b;L66:do{if((c[p+(o+16)>>2]|0)==0){q=d;r=d+1|0;s=d+8|0;t=d+4|0;u=d|0;v=j+64|0;w=j|0;x=j+8|0;y=x|0;z=j+12|0;A=j+64|0;B=j+4|0;C=z;D=j+8|0;E=z|0;F=j+16|0;G=j+20|0;H=j+60|0;I=f+8|0;J=j;K=j+12|0;L=j+44|0;M=j+64|0;N=j+52|0;O=x;x=j+44|0;P=l;while(1){Q=rs(b)|0;R=(Q|0)==-1?P:Q&255;if((R<<24>>24|0)==(k|0)){break}L71:do{if(R<<24>>24==92){Q=rs(b)|0;S=(Q|0)==-1?92:Q&255;Q=S<<24>>24;switch(Q|0){case 102:{T=a[q]|0;if((T&1)==0){U=(T&255)>>>1;V=10}else{U=c[t>>2]|0;V=(c[u>>2]&-2)-1|0}if((U|0)==(V|0)){qD(d,V,1,V,V,0,0);W=a[q]|0}else{W=T}if((W&1)==0){a[q]=(U<<1)+2&255;X=r;Y=U+1|0}else{T=c[s>>2]|0;Z=U+1|0;c[t>>2]=Z;X=T;Y=Z}a[X+U|0]=12;a[X+Y|0]=0;_=S;break L71;break};case 98:{Z=a[q]|0;if((Z&1)==0){$=(Z&255)>>>1;aa=10}else{$=c[t>>2]|0;aa=(c[u>>2]&-2)-1|0}if(($|0)==(aa|0)){qD(d,aa,1,aa,aa,0,0);ab=a[q]|0}else{ab=Z}if((ab&1)==0){a[q]=($<<1)+2&255;ac=r;ad=$+1|0}else{Z=c[s>>2]|0;T=$+1|0;c[t>>2]=T;ac=Z;ad=T}a[ac+$|0]=8;a[ac+ad|0]=0;_=S;break L71;break};case 92:case 47:{T=a[q]|0;if((T&1)==0){ae=(T&255)>>>1;af=10}else{ae=c[t>>2]|0;af=(c[u>>2]&-2)-1|0}if((ae|0)==(af|0)){qD(d,af,1,af,af,0,0);ag=a[q]|0}else{ag=T}if((ag&1)==0){a[q]=(ae<<1)+2&255;ah=r;ai=ae+1|0}else{T=c[s>>2]|0;Z=ae+1|0;c[t>>2]=Z;ah=T;ai=Z}a[ah+ae|0]=S;a[ah+ai|0]=0;_=S;break L71;break};case 110:{Z=a[q]|0;if((Z&1)==0){aj=(Z&255)>>>1;ak=10}else{aj=c[t>>2]|0;ak=(c[u>>2]&-2)-1|0}if((aj|0)==(ak|0)){qD(d,ak,1,ak,ak,0,0);al=a[q]|0}else{al=Z}if((al&1)==0){a[q]=(aj<<1)+2&255;am=r;an=aj+1|0}else{Z=c[s>>2]|0;T=aj+1|0;c[t>>2]=T;am=Z;an=T}a[am+aj|0]=10;a[am+an|0]=0;_=S;break L71;break};case 114:{T=a[q]|0;if((T&1)==0){ao=(T&255)>>>1;ap=10}else{ao=c[t>>2]|0;ap=(c[u>>2]&-2)-1|0}if((ao|0)==(ap|0)){qD(d,ap,1,ap,ap,0,0);aq=a[q]|0}else{aq=T}if((aq&1)==0){a[q]=(ao<<1)+2&255;ar=r;as=ao+1|0}else{T=c[s>>2]|0;Z=ao+1|0;c[t>>2]=Z;ar=T;as=Z}a[ar+ao|0]=13;a[ar+as|0]=0;_=S;break L71;break};case 116:{Z=a[q]|0;if((Z&1)==0){at=(Z&255)>>>1;au=10}else{at=c[t>>2]|0;au=(c[u>>2]&-2)-1|0}if((at|0)==(au|0)){qD(d,au,1,au,au,0,0);av=a[q]|0}else{av=Z}if((av&1)==0){a[q]=(at<<1)+2&255;aw=r;ax=at+1|0}else{Z=c[s>>2]|0;T=at+1|0;c[t>>2]=T;aw=Z;ax=T}a[aw+at|0]=9;a[aw+ax|0]=0;_=S;break L71;break};case 117:{c[y>>2]=23096;c[w>>2]=37900;c[A>>2]=37920;c[B>>2]=0;qS(j+64|0,C);c[j+136>>2]=0;c[j+140>>2]=-1;c[w>>2]=23076;c[v>>2]=23116;c[y>>2]=23096;c[E>>2]=23400;vl(F);yC(G|0,0,24);c[E>>2]=23256;yC(x|0,0,16);c[H>>2]=24;yC(g|0,0,12);gb(z,f);if((a[g]&1)!=0){yr(c[I>>2]|0)}c[h>>2]=0;do{if((c[p+((c[(c[m>>2]|0)-12>>2]|0)+16)>>2]|0)==0){T=S;Z=0;do{ay=rs(b)|0;T=(ay|0)==-1?T:ay&255;hm(O,T)|0;Z=Z+1|0;c[h>>2]=Z;az=c[p+((c[(c[m>>2]|0)-12>>2]|0)+16)>>2]|0;}while((az|0)==0&(Z|0)<4);if((az|0)!=0){aA=T;break}Z=rq(J,h)|0;if((c[Z+((c[(c[Z>>2]|0)-12>>2]|0)+16)>>2]&5|0)!=0){aA=T;break}Z=c[h>>2]&255;ay=a[q]|0;if((ay&1)==0){aB=(ay&255)>>>1;aC=10}else{aB=c[t>>2]|0;aC=(c[u>>2]&-2)-1|0}if((aB|0)==(aC|0)){qD(d,aC,1,aC,aC,0,0);aD=a[q]|0}else{aD=ay}if((aD&1)==0){a[q]=(aB<<1)+2&255;aE=r;aF=aB+1|0}else{ay=c[s>>2]|0;aG=aB+1|0;c[t>>2]=aG;aE=ay;aF=aG}a[aE+aB|0]=Z;a[aE+aF|0]=0;aA=T}else{aA=S}}while(0);c[w>>2]=23076;c[A>>2]=23116;c[D>>2]=23096;c[K>>2]=23256;if((a[L]&1)!=0){yr(c[N>>2]|0)}c[K>>2]=23400;vn(F);qO(M);_=aA;break L71;break};default:{Z=a[q]|0;aG=(Z&1)==0;if((Q|0)==(k|0)){if(aG){aH=(Z&255)>>>1;aI=10}else{aH=c[t>>2]|0;aI=(c[u>>2]&-2)-1|0}if((aH|0)==(aI|0)){qD(d,aI,1,aI,aI,0,0);aJ=a[q]|0}else{aJ=Z}if((aJ&1)==0){a[q]=(aH<<1)+2&255;aK=r;aL=aH+1|0}else{ay=c[s>>2]|0;aM=aH+1|0;c[t>>2]=aM;aK=ay;aL=aM}a[aK+aH|0]=S;a[aK+aL|0]=0;_=S;break L71}if(aG){aN=(Z&255)>>>1;aO=10}else{aN=c[t>>2]|0;aO=(c[u>>2]&-2)-1|0}if((aN|0)==(aO|0)){qD(d,aO,1,aO,aO,0,0);aP=a[q]|0}else{aP=Z}if((aP&1)==0){a[q]=(aN<<1)+2&255;aQ=r;aR=aN+1|0}else{Z=c[s>>2]|0;aG=aN+1|0;c[t>>2]=aG;aQ=Z;aR=aG}a[aQ+aN|0]=92;a[aQ+aR|0]=0;aG=a[q]|0;if((aG&1)==0){aS=(aG&255)>>>1;aT=10}else{aS=c[t>>2]|0;aT=(c[u>>2]&-2)-1|0}if((aS|0)==(aT|0)){qD(d,aT,1,aT,aT,0,0);aU=a[q]|0}else{aU=aG}if((aU&1)==0){a[q]=(aS<<1)+2&255;aV=r;aW=aS+1|0}else{aG=c[s>>2]|0;Z=aS+1|0;c[t>>2]=Z;aV=aG;aW=Z}a[aV+aS|0]=S;a[aV+aW|0]=0;_=S;break L71}}}else{Z=a[q]|0;if((Z&1)==0){aX=(Z&255)>>>1;aY=10}else{aX=c[t>>2]|0;aY=(c[u>>2]&-2)-1|0}if((aX|0)==(aY|0)){qD(d,aY,1,aY,aY,0,0);aZ=a[q]|0}else{aZ=Z}if((aZ&1)==0){a[q]=(aX<<1)+2&255;a_=r;a$=aX+1|0}else{Z=c[s>>2]|0;aG=aX+1|0;c[t>>2]=aG;a_=Z;a$=aG}a[a_+aX|0]=R;a[a_+a$|0]=0;_=R}}while(0);aG=c[(c[m>>2]|0)-12>>2]|0;if((c[p+(aG+16)>>2]|0)==0){P=_}else{a0=_;a1=aG;break L66}}a0=R;a1=c[(c[m>>2]|0)-12>>2]|0}else{a0=l;a1=o}}while(0);do{if((c[p+(a1+16)>>2]&5|0)==0){if((a0<<24>>24|0)==(k|0)){n=1}else{break}i=e;return n|0}}while(0);n=0;i=e;return n|0}function pk(a){a=a|0;var b=0;b=a+4|0;c[b>>2]=0;c[a+8>>2]=0;c[a>>2]=b;yC(a+12|0,0,12);return}function pl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=b|0;e=b|0;f=c[e>>2]|0;g=b+4|0;h=g;if((f|0)!=(h|0)){i=f;while(1){f=c[i+28>>2]|0;if((f|0)!=0){po(f);yr(f)}f=c[i+4>>2]|0;if((f|0)==0){j=i|0;while(1){k=c[j+8>>2]|0;if((j|0)==(c[k>>2]|0)){l=k;break}else{j=k}}}else{j=f;while(1){k=c[j>>2]|0;if((k|0)==0){l=j;break}else{j=k}}}if((l|0)==(g|0)){break}else{i=l}}}l=g|0;pt(d,c[l>>2]|0);c[b+8>>2]=0;c[e>>2]=h;c[l>>2]=0;if((a[b+12|0]&1)==0){m=0;pt(d,m);return}yr(c[b+20>>2]|0);m=c[b+4>>2]|0;pt(d,m);return}function pm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+16|0;f=e|0;g=f;h=d|0;j=d|0;k=c[j>>2]|0;l=d+4|0;m=l;if((k|0)!=(m|0)){n=l;o=k;while(1){k=c[o+28>>2]|0;if((k|0)!=0){po(k);yr(k)}k=c[o+4>>2]|0;if((k|0)==0){p=o|0;while(1){q=c[p+8>>2]|0;if((p|0)==(c[q>>2]|0)){r=q;break}else{p=q}}}else{p=k;while(1){q=c[p>>2]|0;if((q|0)==0){r=p;break}else{p=q}}}if((r|0)==(n|0)){break}else{o=r}}}r=l|0;pt(h,c[r>>2]|0);c[d+8>>2]=0;c[j>>2]=m;c[r>>2]=0;if(!(pg(8840,b)|0)){s=0;i=e;return s|0}if(pg(8280,b)|0){s=1;i=e;return s|0}r=d|0;d=f+8|0;do{yC(g|0,0,12);do{if(pj(b,f)|0){if(!(pg(7728,b)|0)){t=1;break}m=yp(16)|0;j=m;c[m>>2]=6;if(pp(b,j)|0){c[(pn(r,f)|0)>>2]=j;t=0;break}if((m|0)==0){t=2;break}po(j);yr(m);t=2}else{m=(ru(b)|0)==125;t=m?2:1}}while(0);if((a[g]&1)!=0){yr(c[d>>2]|0)}if((t|0)==1){s=0;u=272;break}else if((t|0)==2){break}}while(pg(19144,b)|0);if((u|0)==272){i=e;return s|0}s=pg(8280,b)|0;i=e;return s|0}function pn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;g=pv(b,f,d)|0;h=c[g>>2]|0;if((h|0)!=0){j=h;k=j+28|0;i=e;return k|0}h=yp(32)|0;l=h;m=h+16|0;do{if((m|0)!=0){n=d;if((a[n]&1)==0){c[m>>2]=c[n>>2];c[m+4>>2]=c[n+4>>2];c[m+8>>2]=c[n+8>>2];break}n=c[d+8>>2]|0;o=c[d+4>>2]|0;if(o>>>0>4294967279>>>0){qo(0);return 0}if(o>>>0<11>>>0){a[m]=o<<1&255;p=h+17|0}else{q=o+16&-16;r=yp(q)|0;c[h+24>>2]=r;c[m>>2]=q|1;c[h+20>>2]=o;p=r}yA(p|0,n|0,o)|0;a[p+o|0]=0}}while(0);p=h+28|0;if((p|0)!=0){c[p>>2]=0}p=c[f>>2]|0;f=h;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=p;c[g>>2]=f;p=b|0;h=c[c[p>>2]>>2]|0;if((h|0)==0){s=f}else{c[p>>2]=h;s=c[g>>2]|0}pw(c[b+4>>2]|0,s);s=b+8|0;c[s>>2]=(c[s>>2]|0)+1;j=l;k=j+28|0;i=e;return k|0}function po(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=c[b>>2]|0;if((d|0)==5){e=b+8|0;f=c[e>>2]|0;if((f|0)!=0){pl(f);yr(f)}c[e>>2]=0;return}else if((d|0)==1){e=b+8|0;f=c[e>>2]|0;if((f|0)!=0){g=f;if((a[g]&1)!=0){yr(c[f+8>>2]|0)}yr(g)}c[e>>2]=0;return}else if((d|0)==4){d=b+8|0;b=c[d>>2]|0;if((b|0)!=0){e=b|0;g=c[e>>2]|0;f=b+4|0;h=c[f>>2]|0;do{if((g|0)==(h|0)){i=g;j=g;k=g}else{l=g;m=h;while(1){n=c[l>>2]|0;if((n|0)==0){o=m}else{po(n);yr(n);o=c[f>>2]|0}n=l+4|0;if((n|0)==(o|0)){break}else{l=n;m=o}}m=c[e>>2]|0;l=m;if((m|0)==(o|0)){i=o;j=m;k=l;break}n=o+(~((o-4+(-l|0)|0)>>>2)<<2)|0;c[f>>2]=n;i=n;j=m;k=l}}while(0);if((j|0)!=0){if((j|0)!=(i|0)){c[f>>2]=i+(~((i-4+(-k|0)|0)>>>2)<<2)}yr(j)}yr(b)}c[d>>2]=0;return}else{return}}function pp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+32|0;f=e+16|0;g=f;po(d);yC(g|0,0,12);L372:do{if(pj(b,f)|0){h=yp(12)|0;yC(h|0,0,12);c[d+8>>2]=h;j=e|0;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];c[h>>2]=c[g>>2];c[h+4>>2]=c[g+4>>2];c[h+8>>2]=c[g+8>>2];c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];c[g+8>>2]=c[j+8>>2];c[d>>2]=1;k=1}else{j=d+8|0;ph(b)|0;h=j|0;rr(b,h)|0;h=c[(c[b>>2]|0)-12>>2]|0;l=b;if((c[l+(h+16)>>2]&5|0)==0){c[d>>2]=0;k=1;break}qN(l+h|0,0);h=j;do{if(pg(11256,b)|0){m=1}else{if(pg(10416,b)|0){m=0;break}do{if(!(pg(9688,b)|0)){if((ru(b)|0)==44){break}do{if((ru(b)|0)==91){l=yp(12)|0;n=l;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;l=j;c[l>>2]=n;if(pr(b,n)|0){c[d>>2]=4;k=1;break L372}n=c[l>>2]|0;if((n|0)==0){break}pq(n);yr(n)}}while(0);n=yp(24)|0;l=n;o=n+4|0;c[o>>2]=0;c[n+8>>2]=0;c[n>>2]=o;yC(n+12|0,0,12);n=j;c[n>>2]=l;if(pm(b,l)|0){c[d>>2]=5;k=1;break L372}l=c[n>>2]|0;if((l|0)==0){k=0;break L372}pl(l);yr(l);k=0;break L372}}while(0);c[d>>2]=3;k=1;break L372}}while(0);a[h]=m;c[d>>2]=2;k=1}}while(0);if((a[g]&1)==0){i=e;return k|0}yr(c[f+8>>2]|0);i=e;return k|0}function pq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=a|0;d=c[b>>2]|0;e=a+4|0;a=c[e>>2]|0;do{if((d|0)==(a|0)){f=d;g=d;h=d}else{i=d;j=a;while(1){k=c[i>>2]|0;if((k|0)==0){l=j}else{po(k);yr(k);l=c[e>>2]|0}k=i+4|0;if((k|0)==(l|0)){break}else{i=k;j=l}}j=c[b>>2]|0;i=j;if((j|0)==(l|0)){f=l;g=j;h=i;break}k=l+(~((l-4+(-i|0)|0)>>>2)<<2)|0;c[e>>2]=k;f=k;g=j;h=i}}while(0);if((g|0)==0){return}if((g|0)!=(f|0)){c[e>>2]=f+(~((f-4+(-h|0)|0)>>>2)<<2)}yr(g);return}function pr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+8|0;e=d|0;f=b|0;g=c[f>>2]|0;h=b+4|0;j=c[h>>2]|0;do{if((g|0)!=(j|0)){k=g;l=j;while(1){m=c[k>>2]|0;if((m|0)==0){n=l}else{po(m);yr(m);n=c[h>>2]|0}m=k+4|0;if((m|0)==(n|0)){break}else{k=m;l=n}}l=c[f>>2]|0;if((l|0)==(n|0)){break}c[h>>2]=n+(~((n-4+(-l|0)|0)>>>2)<<2)}}while(0);if(!(pg(18328,a)|0)){o=0;i=d;return o|0}n=b+8|0;f=b|0;do{p=yp(16)|0;q=p;c[p>>2]=6;c[e>>2]=q;if(!(pp(a,q)|0)){r=411;break}b=c[h>>2]|0;if((b|0)==(c[n>>2]|0)){pu(f,e)}else{if((b|0)==0){s=0}else{c[b>>2]=q;s=c[h>>2]|0}c[h>>2]=s+4}}while(pg(19144,a)|0);do{if((r|0)==411){if((p|0)==0){break}po(q);yr(p)}}while(0);o=pg(17744,a)|0;i=d;return o|0}function ps(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+144|0;f=e|0;g=f|0;h=f+8|0;c[g>>2]=37860;j=f+60|0;c[j>>2]=37880;c[f+4>>2]=0;qS(f+60|0,h);c[f+132>>2]=0;c[f+136>>2]=-1;c[g>>2]=22980;c[f+60>>2]=23e3;k=h|0;c[k>>2]=23400;l=f+12|0;vl(l);yC(f+16|0,0,24);c[k>>2]=23256;yC(f+40|0,0,16);c[f+56>>2]=8;gb(h,d);d=pm(f,b)|0;c[g>>2]=22980;c[j>>2]=23e3;j=f+8|0;c[j>>2]=23256;if((a[f+40|0]&1)!=0){yr(c[f+48>>2]|0)}c[j>>2]=23400;vn(l);qO(f+60|0);i=e;return d|0}function pt(b,d){b=b|0;d=d|0;if((d|0)==0){return}pt(b,c[d>>2]|0);pt(b,c[d+4>>2]|0);if((a[d+16|0]&1)!=0){yr(c[d+24>>2]|0)}yr(d);return}function pu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){vf(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=463}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=463}}if((m|0)==463){n=yp(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;yA(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}yr(l);return}function pv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=b+4|0;b=f|0;g=c[b>>2]|0;if((g|0)==0){c[d>>2]=f;h=b;return h|0}b=a[e]|0;f=b&255;i=f>>>1;j=(b&1)==0;b=e+1|0;k=e+8|0;l=e+4|0;L503:do{if((f&1|0)==0){e=g;while(1){m=e+16|0;n=m;o=a[m]|0;m=o&255;p=(m&1|0)==0;if(p){q=m>>>1}else{q=c[e+20>>2]|0}if(j){r=b}else{r=c[k>>2]|0}s=(o&1)==0;if(s){t=n+1|0}else{t=c[e+24>>2]|0}o=yD(r|0,t|0,(q>>>0<i>>>0?q:i)|0)|0;if((o|0)==0){if(i>>>0<q>>>0){u=496}}else{if((o|0)<0){u=496}}if((u|0)==496){u=0;o=e|0;v=c[o>>2]|0;if((v|0)==0){w=e;x=o;u=509;break}else{e=v;continue}}if(p){y=m>>>1}else{y=c[e+20>>2]|0}if(s){z=n+1|0}else{z=c[e+24>>2]|0}if(j){A=b}else{A=c[k>>2]|0}n=yD(z|0,A|0,(i>>>0<y>>>0?i:y)|0)|0;if((n|0)==0){if(y>>>0>=i>>>0){B=e;u=523;break L503}}else{if((n|0)>=0){B=e;u=523;break L503}}n=e+4|0;s=c[n>>2]|0;if((s|0)==0){C=e;D=n;u=522;break}else{e=s}}}else{e=g;while(1){s=e+16|0;n=c[l>>2]|0;m=s;p=a[s]|0;s=p&255;v=(s&1|0)==0;if(v){E=s>>>1}else{E=c[e+20>>2]|0}if(j){F=b}else{F=c[k>>2]|0}o=(p&1)==0;if(o){G=m+1|0}else{G=c[e+24>>2]|0}p=yD(F|0,G|0,(E>>>0<n>>>0?E:n)|0)|0;if((p|0)==0){if(n>>>0<E>>>0){u=508}}else{if((p|0)<0){u=508}}if((u|0)==508){u=0;p=e|0;n=c[p>>2]|0;if((n|0)==0){w=e;x=p;u=509;break}else{e=n;continue}}if(v){H=s>>>1}else{H=c[e+20>>2]|0}s=c[l>>2]|0;if(o){I=m+1|0}else{I=c[e+24>>2]|0}if(j){J=b}else{J=c[k>>2]|0}m=yD(I|0,J|0,(s>>>0<H>>>0?s:H)|0)|0;if((m|0)==0){if(H>>>0>=s>>>0){B=e;u=523;break L503}}else{if((m|0)>=0){B=e;u=523;break L503}}m=e+4|0;s=c[m>>2]|0;if((s|0)==0){C=e;D=m;u=522;break}else{e=s}}}}while(0);if((u|0)==522){c[d>>2]=C;h=D;return h|0}else if((u|0)==523){c[d>>2]=B;h=d;return h|0}else if((u|0)==509){c[d>>2]=w;h=x;return h|0}return 0}function pw(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=(d|0)==(b|0);a[d+12|0]=e&1;if(e){return}else{f=d}while(1){g=f+8|0;h=c[g>>2]|0;d=h+12|0;if((a[d]&1)!=0){i=571;break}j=h+8|0;k=c[j>>2]|0;e=c[k>>2]|0;if((h|0)==(e|0)){l=c[k+4>>2]|0;if((l|0)==0){i=536;break}m=l+12|0;if((a[m]&1)!=0){i=536;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}else{if((e|0)==0){i=553;break}m=e+12|0;if((a[m]&1)!=0){i=553;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}if((k|0)==(b|0)){i=569;break}else{f=k}}if((i|0)==536){if((f|0)==(c[h>>2]|0)){n=h;o=k}else{b=h+4|0;m=c[b>>2]|0;d=m|0;e=c[d>>2]|0;c[b>>2]=e;if((e|0)==0){p=k}else{c[e+8>>2]=h;p=c[j>>2]|0}e=m+8|0;c[e>>2]=p;p=c[j>>2]|0;b=p|0;if((c[b>>2]|0)==(h|0)){c[b>>2]=m}else{c[p+4>>2]=m}c[d>>2]=h;c[j>>2]=m;n=m;o=c[e>>2]|0}a[n+12|0]=1;a[o+12|0]=0;n=o|0;e=c[n>>2]|0;m=e+4|0;d=c[m>>2]|0;c[n>>2]=d;if((d|0)!=0){c[d+8>>2]=o}d=o+8|0;c[e+8>>2]=c[d>>2];n=c[d>>2]|0;p=n|0;if((c[p>>2]|0)==(o|0)){c[p>>2]=e}else{c[n+4>>2]=e}c[m>>2]=o;c[d>>2]=e;return}else if((i|0)==553){e=h|0;if((f|0)==(c[e>>2]|0)){d=f+4|0;o=c[d>>2]|0;c[e>>2]=o;if((o|0)==0){q=k}else{c[o+8>>2]=h;q=c[j>>2]|0}c[g>>2]=q;q=c[j>>2]|0;o=q|0;if((c[o>>2]|0)==(h|0)){c[o>>2]=f}else{c[q+4>>2]=f}c[d>>2]=h;c[j>>2]=f;r=f;s=c[g>>2]|0}else{r=h;s=k}a[r+12|0]=1;a[s+12|0]=0;r=s+4|0;k=c[r>>2]|0;h=k|0;g=c[h>>2]|0;c[r>>2]=g;if((g|0)!=0){c[g+8>>2]=s}g=s+8|0;c[k+8>>2]=c[g>>2];r=c[g>>2]|0;f=r|0;if((c[f>>2]|0)==(s|0)){c[f>>2]=k}else{c[r+4>>2]=k}c[h>>2]=s;c[g>>2]=k;return}else if((i|0)==569){return}else if((i|0)==571){return}}function px(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[u>>2]|0;pT(43296,h,43424);c[11072]=23668;c[11074]=23688;c[11073]=0;qS(44296,43296);c[11092]=0;c[11093]=-1;j=c[r>>2]|0;c[10800]=23400;vl(43204);yC(43208,0,24);c[10800]=23888;c[10808]=j;vm(g,43204);k=vp(g,43624)|0;l=k;vn(g);c[10809]=l;c[10810]=43432;a[43244]=(cJ[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[11006]=23572;c[11007]=23592;qS(44028,43200);c[11025]=0;c[11026]=-1;l=c[w>>2]|0;c[10812]=23400;vl(43252);yC(43256,0,24);c[10812]=23888;c[10820]=l;vm(f,43252);k=vp(f,43624)|0;g=k;vn(f);c[10821]=g;c[10822]=43440;a[43292]=(cJ[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[11050]=23572;c[11051]=23592;qS(44204,43248);c[11069]=0;c[11070]=-1;g=c[(c[(c[11050]|0)-12>>2]|0)+44224>>2]|0;c[11028]=23572;c[11029]=23592;qS(44116,g);c[11047]=0;c[11048]=-1;c[(c[(c[11072]|0)-12>>2]|0)+44360>>2]=44024;g=(c[(c[11050]|0)-12>>2]|0)+44204|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[11050]|0)-12>>2]|0)+44272>>2]=44024;pF(43144,h,43448);c[10984]=23620;c[10986]=23640;c[10985]=0;qS(43944,43144);c[11004]=0;c[11005]=-1;c[10762]=23328;vl(43052);yC(43056,0,24);c[10762]=23816;c[10770]=j;vm(e,43052);j=vp(e,43616)|0;h=j;vn(e);c[10771]=h;c[10772]=43456;a[43092]=(cJ[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[10914]=23524;c[10915]=23544;qS(43660,43048);c[10933]=0;c[10934]=-1;c[10774]=23328;vl(43100);yC(43104,0,24);c[10774]=23816;c[10782]=l;vm(d,43100);l=vp(d,43616)|0;h=l;vn(d);c[10783]=h;c[10784]=43464;a[43140]=(cJ[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[10958]=23524;c[10959]=23544;qS(43836,43096);c[10977]=0;c[10978]=-1;h=c[(c[(c[10958]|0)-12>>2]|0)+43856>>2]|0;c[10936]=23524;c[10937]=23544;qS(43748,h);c[10955]=0;c[10956]=-1;c[(c[(c[10984]|0)-12>>2]|0)+44008>>2]=43656;h=(c[(c[10958]|0)-12>>2]|0)+43836|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[10958]|0)-12>>2]|0)+43904>>2]=43656;i=b;return}function py(a){a=a|0;ro(44024)|0;ro(44112)|0;rB(43656)|0;rB(43744)|0;return}function pz(a){a=a|0;c[a>>2]=23328;vn(a+4|0);return}function pA(a){a=a|0;c[a>>2]=23328;vn(a+4|0);yr(a);return}function pB(b,d){b=b|0;d=d|0;var e=0;cJ[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=vp(d,43616)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(cJ[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function pC(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=cK[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((aY(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=613;break}if((l|0)==2){m=-1;n=612;break}else if((l|0)!=1){n=609;break}}if((n|0)==609){m=((aU(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==612){i=b;return m|0}else if((n|0)==613){i=b;return m|0}return 0}function pD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]&1)!=0){f=aY(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((cW[c[(c[g>>2]|0)+52>>2]&255](b,c[h>>2]|0)|0)==-1){f=i;j=621;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=622;break}}if((j|0)==621){return f|0}else if((j|0)==622){return f|0}return 0}function pE(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L678:do{if(!k){c[g>>2]=d;if((a[b+44|0]&1)!=0){if((aY(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=c$[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=637;break}if((v|0)==3){w=630;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=639;break}v=(c[h>>2]|0)-r|0;if((aY(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=640;break}if(u){t=u?c[j>>2]|0:t}else{break L678}}if((w|0)==630){if((aY(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==637){i=e;return l|0}else if((w|0)==639){i=e;return l|0}else if((w|0)==640){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function pF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=23328;j=b+4|0;vl(j);yC(b+8|0,0,24);c[h>>2]=24216;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;vm(g,j);j=vp(g,43616)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=cJ[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(cJ[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){vn(g);i=f;return}uH(7680);vn(g);i=f;return}function pG(a){a=a|0;c[a>>2]=23328;vn(a+4|0);return}function pH(a){a=a|0;c[a>>2]=23328;vn(a+4|0);yr(a);return}function pI(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=vp(d,43616)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=cJ[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(cJ[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}uH(7680);return}function pJ(a){a=a|0;return pM(a,0)|0}function pK(a){a=a|0;return pM(a,1)|0}function pL(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L721:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=c$[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L721}r=o-1|0;c[g>>2]=r;if((b9(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function pM(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]&1)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;L741:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=bf(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o&255;l=l+1|0;if((l|0)>=(k|0)){break L741}}i=e;return n|0}}while(0);L748:do{if((a[b+53|0]&1)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=c$[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=687;break}else if((x|0)==2){n=-1;y=698;break}else if((x|0)!=1){z=r;break L748}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=699;break}v=bf(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=700;break}a[w]=v&255;r=r+1|0}if((y|0)==687){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==698){i=e;return n|0}else if((y|0)==699){i=e;return n|0}else if((y|0)==700){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((b9(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=701;break}else{b=z}}if((y|0)==701){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function pN(a){a=a|0;c[a>>2]=23400;vn(a+4|0);return}function pO(a){a=a|0;c[a>>2]=23400;vn(a+4|0);yr(a);return}function pP(b,d){b=b|0;d=d|0;var e=0;cJ[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=vp(d,43624)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(cJ[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function pQ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=cK[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((aY(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=715;break}if((l|0)==2){m=-1;n=714;break}else if((l|0)!=1){n=711;break}}if((n|0)==711){m=((aU(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==714){i=b;return m|0}else if((n|0)==715){i=b;return m|0}return 0}function pR(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]&1)!=0){g=aY(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((cW[c[(c[h>>2]|0)+52>>2]&255](b,d[i]|0)|0)==-1){g=j;k=723;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=724;break}}if((k|0)==723){return g|0}else if((k|0)==724){return g|0}return 0}function pS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L799:do{if(!k){a[g]=d&255;if((a[b+44|0]&1)!=0){if((aY(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=c$[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=739;break}if((v|0)==3){w=732;break}u=(v|0)==1;if(v>>>0>=2>>>0){l=-1;w=741;break}v=(c[h>>2]|0)-r|0;if((aY(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=742;break}if(u){t=u?c[j>>2]|0:t}else{break L799}}if((w|0)==732){if((aY(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==739){i=e;return l|0}else if((w|0)==741){i=e;return l|0}else if((w|0)==742){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function pT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=23400;j=b+4|0;vl(j);yC(b+8|0,0,24);c[h>>2]=24288;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;vm(g,j);j=vp(g,43624)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=cJ[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(cJ[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){vn(g);i=f;return}uH(7680);vn(g);i=f;return}function pU(a){a=a|0;c[a>>2]=23400;vn(a+4|0);return}function pV(a){a=a|0;c[a>>2]=23400;vn(a+4|0);yr(a);return}function pW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=vp(d,43624)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=cJ[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(cJ[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}uH(7680);return}function pX(a){a=a|0;return p_(a,0)|0}function pY(a){a=a|0;return p_(a,1)|0}function pZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L842:do{if(l){a[h]=c[n>>2]&255;o=c[b+36>>2]|0;p=f|0;q=c$[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L842}r=o-1|0;c[g>>2]=r;if((b9(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function p_(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]&1)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;L862:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=bf(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p&255;m=m+1|0;if((m|0)>=(l|0)){break L862}}i=f;return o|0}}while(0);L869:do{if((a[b+53|0]&1)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=c$[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==2){o=-1;z=799;break}else if((y|0)==3){z=789;break}else if((y|0)!=1){A=s;break L869}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=800;break}w=bf(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=804;break}a[x]=w&255;s=s+1|0}if((z|0)==799){i=f;return o|0}else if((z|0)==800){i=f;return o|0}else if((z|0)==789){a[h]=a[p]|0;A=s;break}else if((z|0)==804){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=796;break}j=k-1|0;if((b9(d[g+j|0]|0|0,c[l>>2]|0)|0)==-1){o=-1;z=801;break}else{k=j}}if((z|0)==796){B=a[h]|0;break}else if((z|0)==801){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function p$(){px(0);bh(394,44376,t|0)|0;return}function p0(a){a=a|0;return}function p1(a){a=a|0;var b=0;b=a+4|0;K=c[b>>2]|0,c[b>>2]=K+1,K;return}function p2(a){a=a|0;var b=0,d=0;b=a+4|0;if(((K=c[b>>2]|0,c[b>>2]=K+ -1,K)|0)!=0){d=0;return d|0}cG[c[(c[a>>2]|0)+8>>2]&1023](a);d=1;return d|0}function p3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=21440;d=a+4|0;if((d|0)==0){return}a=yz(b|0)|0;e=a+1|0;f=yq(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;yA(a|0,b|0,e)|0;return}function p4(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=21440;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((K=c[d>>2]|0,c[d>>2]=K+ -1,K)-1|0)>=0){e=a;yr(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;yr(e);return}ys(d);e=a;yr(e);return}function p5(a){a=a|0;var b=0;c[a>>2]=21440;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((K=c[a>>2]|0,c[a>>2]=K+ -1,K)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}ys(a);return}function p6(a){a=a|0;return c[a+4>>2]|0}function p7(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=21344;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=yz(f|0)|0;b=d+1|0;g=yq(d+13|0)|0;c[g+4>>2]=d;c[g>>2]=d;d=g+12|0;c[e>>2]=d;c[g+8>>2]=0;yA(d|0,f|0,b)|0;return}function p8(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=21344;d=a+4|0;if((d|0)==0){return}a=yz(b|0)|0;e=a+1|0;f=yq(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;yA(a|0,b|0,e)|0;return}function p9(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=21344;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((K=c[d>>2]|0,c[d>>2]=K+ -1,K)-1|0)>=0){e=a;yr(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;yr(e);return}ys(d);e=a;yr(e);return}function qa(a){a=a|0;var b=0;c[a>>2]=21344;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((K=c[a>>2]|0,c[a>>2]=K+ -1,K)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}ys(a);return}function qb(a){a=a|0;return c[a+4>>2]|0}function qc(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=21440;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((K=c[d>>2]|0,c[d>>2]=K+ -1,K)-1|0)>=0){e=a;yr(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;yr(e);return}ys(d);e=a;yr(e);return}function qd(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=21440;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((K=c[d>>2]|0,c[d>>2]=K+ -1,K)-1|0)>=0){e=a;yr(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;yr(e);return}ys(d);e=a;yr(e);return}function qe(a){a=a|0;return}function qf(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function qg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;cZ[c[(c[a>>2]|0)+12>>2]&127](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function qh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function qi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=b4(e|0)|0;e=yz(d|0)|0;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;f=b+1|0;yA(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=yp(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;yA(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function qj(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;h=f;j=i;i=i+12|0;i=i+7&-8;k=e|0;l=c[k>>2]|0;do{if((l|0)!=0){m=d[h]|0;if((m&1|0)==0){n=m>>>1}else{n=c[f+4>>2]|0}if((n|0)==0){o=l}else{qB(f,14048,2)|0;o=c[k>>2]|0}m=c[e+4>>2]|0;cZ[c[(c[m>>2]|0)+24>>2]&127](j,m,o);m=j;p=a[m]|0;if((p&1)==0){q=j+1|0}else{q=c[j+8>>2]|0}r=p&255;if((r&1|0)==0){s=r>>>1}else{s=c[j+4>>2]|0}qB(f,q,s)|0;if((a[m]&1)==0){break}yr(c[j+8>>2]|0)}}while(0);j=b;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2];yC(h|0,0,12);i=g;return}function qk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=yz(e|0)|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){a[h]=j<<1&255;k=h+1|0}else{l=j+16&-16;m=yp(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}yA(k|0,e|0,j)|0;a[k+j|0]=0;qj(g,d,h);p7(b|0,g);if((a[g]&1)!=0){yr(c[g+8>>2]|0)}if((a[h]&1)!=0){yr(c[h+8>>2]|0)}c[b>>2]=23784;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function ql(a){a=a|0;qa(a|0);yr(a);return}function qm(a){a=a|0;qa(a|0);return}function qn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{a7(43376,43352)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;cG[d&1023](b);h;c[a>>2]=-1;i;bY(43376)|0;return}function qo(a){a=a|0;a=cr(8)|0;p3(a,8264);c[a>>2]=21408;bJ(a|0,35144,80)}function qp(a){a=a|0;a=cr(8)|0;p3(a,8264);c[a>>2]=21376;bJ(a|0,35128,16)}function qq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){qo(0)}if(f>>>0<11>>>0){a[b]=f<<1&255;g=b+1|0}else{d=f+16&-16;h=yp(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}yA(g|0,e|0,f)|0;a[g+f|0]=0;return}function qr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;f=b+1|0;yA(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=yp(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;yA(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function qs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){qo(0)}if(d>>>0<11>>>0){a[b]=d<<1&255;f=b+1|0}else{g=d+16&-16;h=yp(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}yC(f|0,e|0,d|0);a[f+d|0]=0;return}function qt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;g=a[d]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[d+4>>2]|0}if(i>>>0<e>>>0){qp(0)}if((g&1)==0){j=d+1|0}else{j=c[d+8>>2]|0}d=j+e|0;j=i-e|0;e=j>>>0<f>>>0?j:f;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;k=b+1|0;yA(k|0,d|0,e)|0;l=k+e|0;a[l]=0;return}else{f=e+16&-16;j=yp(f)|0;c[b+8>>2]=j;c[b>>2]=f|1;c[b+4>>2]=e;k=j;yA(k|0,d|0,e)|0;l=k+e|0;a[l]=0;return}}function qu(b){b=b|0;if((a[b]&1)==0){return}yr(c[b+8>>2]|0);return}function qv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==(d|0)){return b|0}e=a[d]|0;if((e&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}g=e&255;if((g&1|0)==0){h=g>>>1}else{h=c[d+4>>2]|0}d=b;g=b;e=a[g]|0;if((e&1)==0){i=10;j=e}else{e=c[b>>2]|0;i=(e&-2)-1|0;j=e&255}if(i>>>0<h>>>0){e=j&255;if((e&1|0)==0){k=e>>>1}else{k=c[b+4>>2]|0}qC(b,i,h-i|0,k,0,k,h,f);return b|0}if((j&1)==0){l=d+1|0}else{l=c[b+8>>2]|0}yB(l|0,f|0,h|0);a[l+h|0]=0;if((a[g]&1)==0){a[g]=h<<1&255;return b|0}else{c[b+4>>2]=h;return b|0}return 0}function qw(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=yz(d|0)|0;f=b;g=b;h=a[g]|0;if((h&1)==0){i=10;j=h}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255}if(i>>>0<e>>>0){h=j&255;if((h&1|0)==0){k=h>>>1}else{k=c[b+4>>2]|0}qC(b,i,e-i|0,k,0,k,e,d);return b|0}if((j&1)==0){l=f+1|0}else{l=c[b+8>>2]|0}yB(l|0,d|0,e|0);a[l+e|0]=0;if((a[g]&1)==0){a[g]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function qx(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){h=d-i|0;qy(b,h,e)|0;return}if((g&1)==0){a[b+1+d|0]=0;a[f]=d<<1&255;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function qy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){qD(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}yC(l+j|0,e|0,d|0);e=j+d|0;if((a[f]&1)==0){a[f]=e<<1&255}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function qz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(d>>>0>4294967279>>>0){qo(0)}e=b;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}g=j>>>0>d>>>0?j:d;if(g>>>0<11>>>0){k=11}else{k=g+16&-16}g=k-1|0;if((g|0)==(h|0)){return}if((g|0)==10){l=e+1|0;m=c[b+8>>2]|0;n=1;o=0}else{if(g>>>0>h>>>0){p=yp(k)|0}else{p=yp(k)|0}h=i&1;if(h<<24>>24==0){q=e+1|0}else{q=c[b+8>>2]|0}l=p;m=q;n=h<<24>>24!=0;o=1}h=i&255;if((h&1|0)==0){r=h>>>1}else{r=c[b+4>>2]|0}h=r+1|0;yA(l|0,m|0,h)|0;if(n){yr(m)}if(o){c[b>>2]=k|1;c[b+4>>2]=j;c[b+8>>2]=l;return}else{a[f]=j<<1&255;return}}function qA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=10}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){qD(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+1|0;k=g+1|0;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}}function qB(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){qC(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}i=k+j|0;yA(i|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1&255}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function qC(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){qo(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=yp(o)|0;if((g|0)!=0){yA(e|0,k|0,g)|0}if((i|0)!=0){n=e+g|0;yA(n|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g)|0;l=k+(h+g)|0;yA(n|0,l|0,f)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}yr(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function qD(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){qo(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=yp(n)|0;if((g|0)!=0){yA(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g)|0;i=j+(h+g)|0;yA(m|0,i|0,f)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}yr(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function qE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){qo(0)}if(e>>>0<2>>>0){a[b]=e<<1&255;f=b+4|0;g=xS(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=yp(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=xS(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function qF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){qo(0)}if(d>>>0<2>>>0){a[b]=d<<1&255;f=b+4|0;g=xU(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=yp(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=xU(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function qG(b){b=b|0;if((a[b]&1)==0){return}yr(c[b+8>>2]|0);return}function qH(a,b){a=a|0;b=b|0;return qI(a,b,xR(b)|0)|0}function qI(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if(h>>>0<e>>>0){g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}qL(b,h,e-h|0,j,0,j,e,d);return b|0}if((i&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}xT(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function qJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(d>>>0>1073741807>>>0){qo(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}f=h&255;if((f&1|0)==0){i=f>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=2}else{j=f+4&-4}f=j-1|0;if((f|0)==(g|0)){return}if((f|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{d=j<<2;if(f>>>0>g>>>0){o=yp(d)|0}else{o=yp(d)|0}d=h&1;if(d<<24>>24==0){p=b+4|0}else{p=c[b+8>>2]|0}k=o;l=p;m=d<<24>>24!=0;n=1}d=k;k=h&255;if((k&1|0)==0){q=k>>>1}else{q=c[b+4>>2]|0}xS(d,l,q+1|0)|0;if(m){yr(l)}if(n){c[b>>2]=j|1;c[b+4>>2]=i;c[b+8>>2]=d;return}else{a[e]=i<<1&255;return}}function qK(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=1}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){qM(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+4|0;k=g+1|0;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}}function qL(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){qo(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=yp(o<<2)|0;if((g|0)!=0){xS(e,k,g)|0}if((i|0)!=0){n=e+(g<<2)|0;xS(n,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g<<2)|0;l=k+(h+g<<2)|0;xS(n,l,f)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}yr(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function qM(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){qo(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=yp(n<<2)|0;if((g|0)!=0){xS(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g<<2)|0;i=j+(h+g<<2)|0;xS(m,i,f)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}yr(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function qN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=cr(16)|0;do{if((a[60456]|0)==0){if((by(60456)|0)==0){break}c[10542]=23024;bh(358,42168,t|0)|0}}while(0);b=yJ(42168,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=M|0;qk(e,f,14512);c[e>>2]=22112;bJ(e|0,35704,70)}function qO(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=22088;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;cZ[c[(c[d>>2]|0)+(f<<2)>>2]&127](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}vn(a+28|0);yk(c[d>>2]|0);yk(c[e>>2]|0);yk(c[a+48>>2]|0);yk(c[a+60>>2]|0);return}function qP(a){a=a|0;qO(a|0);yr(a);return}function qQ(a){a=a|0;qO(a|0);return}function qR(a,b){a=a|0;b=b|0;vm(a,b+28|0);return}function qS(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;yC(a+32|0,0,40);if((b|0)==0){return}vl(b);return}function qT(a){a=a|0;c[a>>2]=23400;vn(a+4|0);yr(a);return}function qU(a){a=a|0;c[a>>2]=23400;vn(a+4|0);return}function qV(a,b){a=a|0;b=b|0;return}function qW(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function qX(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function qY(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function qZ(a){a=a|0;return 0}function q_(a){a=a|0;return 0}function q$(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=cJ[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=1336;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=1337;break}}if((m|0)==1336){return g|0}else if((m|0)==1337){return g|0}return 0}function q0(a){a=a|0;return-1|0}function q1(a){a=a|0;var b=0,e=0;if((cJ[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function q2(a,b){a=a|0;b=b|0;return-1|0}function q3(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((cW[c[(c[g>>2]|0)+52>>2]&255](b,d[l]|0)|0)==-1){h=k;n=1354;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=1353;break}}if((n|0)==1354){return h|0}else if((n|0)==1353){return h|0}return 0}function q4(a,b){a=a|0;b=b|0;return-1|0}function q5(a){a=a|0;c[a>>2]=23328;vn(a+4|0);yr(a);return}function q6(a){a=a|0;c[a>>2]=23328;vn(a+4|0);return}function q7(a,b){a=a|0;b=b|0;return}function q8(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function q9(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function ra(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function rb(a){a=a|0;return 0}function rc(a){a=a|0;return 0}function rd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=cJ[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=1373;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=1372;break}}if((l|0)==1372){return f|0}else if((l|0)==1373){return f|0}return 0}function re(a){a=a|0;return-1|0}function rf(a){a=a|0;var b=0,d=0;if((cJ[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function rg(a,b){a=a|0;b=b|0;return-1|0}function rh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((cW[c[(c[e>>2]|0)+52>>2]&255](a,c[j>>2]|0)|0)==-1){f=i;l=1391;break}}k=i+1|0;if((k|0)<(d|0)){i=k;j=j+4|0}else{f=k;l=1390;break}}if((l|0)==1390){return f|0}else if((l|0)==1391){return f|0}return 0}function ri(a,b){a=a|0;b=b|0;return-1|0}function rj(a){a=a|0;qO(a+8|0);yr(a);return}function rk(a){a=a|0;qO(a+8|0);return}function rl(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;qO(b+(d+8)|0);yr(b+d|0);return}function rm(a){a=a|0;qO(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function rn(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+8|0;j=h|0;k=e|0;a[k]=0;e=f;l=c[(c[e>>2]|0)-12>>2]|0;m=f;f=c[m+(l+16)>>2]|0;if((f|0)!=0){qN(m+l|0,f|4);i=h;return}f=c[m+(l+72)>>2]|0;if((f|0)!=0){ro(f)|0}do{if(!g){f=c[(c[e>>2]|0)-12>>2]|0;if((c[m+(f+4)>>2]&4096|0)==0){break}vm(j,m+(f+28)|0);f=vp(j,43928)|0;vn(j);l=f+8|0;f=c[m+((c[(c[e>>2]|0)-12>>2]|0)+24)>>2]|0;while(1){if((f|0)==0){break}n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){o=cJ[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{o=d[n]|0}p=(o|0)==-1?0:f;if((p|0)==0){break}q=p+12|0;n=c[q>>2]|0;r=p+16|0;if((n|0)==(c[r>>2]|0)){s=(cJ[c[(c[p>>2]|0)+36>>2]&255](p)|0)&255}else{s=a[n]|0}if(s<<24>>24<0){t=1418;break}if((b[(c[l>>2]|0)+(s<<24>>24<<1)>>1]&8192)==0){t=1418;break}n=c[q>>2]|0;if((n|0)==(c[r>>2]|0)){u=c[(c[p>>2]|0)+40>>2]|0;cJ[u&255](p)|0;f=p;continue}else{c[q>>2]=n+1;f=p;continue}}if((t|0)==1418){f=c[q>>2]|0;if((f|0)==(c[r>>2]|0)){v=cJ[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{v=d[f]|0}if(!((v|0)==-1|(p|0)==0)){break}}f=c[(c[e>>2]|0)-12>>2]|0;qN(m+f|0,c[m+(f+16)>>2]|6)}}while(0);a[k]=(c[m+((c[(c[e>>2]|0)-12>>2]|0)+16)>>2]|0)==0|0;i=h;return}function ro(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){ro(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((cJ[c[(c[k>>2]|0)+24>>2]&255](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;qN(h+k|0,c[h+(k+16)>>2]|1)}}while(0);rG(e);i=d;return b|0}function rp(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{a8()}}function rq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+56|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;rn(h,b,0);if((a[h|0]&1)==0){i=e;return b|0}c[j>>2]=0;h=b;m=b;vm(l,m+((c[(c[h>>2]|0)-12>>2]|0)+28)|0);n=vp(l,43592)|0;o=c[(c[h>>2]|0)-12>>2]|0;p=c[(c[n>>2]|0)+16>>2]|0;c[f>>2]=c[m+(o+24)>>2];c[g>>2]=0;cT[p&127](e+48|0,n,f,g,m+o|0,j,k);vn(l);c[d>>2]=c[k>>2];k=c[(c[h>>2]|0)-12>>2]|0;qN(m+k|0,c[m+(k+16)>>2]|c[j>>2]);i=e;return b|0}function rr(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;rn(h,b,0);if((a[h|0]&1)==0){i=e;return b|0}c[j>>2]=0;h=b;l=b;vm(k,l+((c[(c[h>>2]|0)-12>>2]|0)+28)|0);m=vp(k,43592)|0;n=c[(c[h>>2]|0)-12>>2]|0;o=c[(c[m>>2]|0)+48>>2]|0;c[f>>2]=c[l+(n+24)>>2];c[g>>2]=0;cT[o&127](e+40|0,m,f,g,l+n|0,j,d);vn(k);k=c[(c[h>>2]|0)-12>>2]|0;qN(l+k|0,c[l+(k+16)>>2]|c[j>>2]);i=e;return b|0}function rs(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a+4|0;c[b>>2]=0;e=a;f=c[(c[e>>2]|0)-12>>2]|0;g=a;a=c[g+(f+16)>>2]|0;if((a|0)!=0){qN(g+f|0,a|4);h=-1;return h|0}a=c[g+(f+72)>>2]|0;if((a|0)==0){i=f}else{ro(a)|0;i=c[(c[e>>2]|0)-12>>2]|0}if((c[g+(i+16)>>2]|0)!=0){h=-1;return h|0}a=c[g+(i+24)>>2]|0;i=a+12|0;f=c[i>>2]|0;do{if((f|0)==(c[a+16>>2]|0)){j=cJ[c[(c[a>>2]|0)+40>>2]&255](a)|0;if((j|0)!=-1){k=j;break}j=c[(c[e>>2]|0)-12>>2]|0;qN(g+j|0,c[g+(j+16)>>2]|6);h=-1;return h|0}else{c[i>>2]=f+1;k=d[f]|0}}while(0);c[b>>2]=1;h=k;return h|0}function rt(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=b+4|0;c[g>>2]=0;h=b;i=c[(c[h>>2]|0)-12>>2]|0;j=b;k=c[j+(i+16)>>2]|0;if((k|0)!=0){qN(j+i|0,k|4);return b|0}k=c[j+(i+72)>>2]|0;if((k|0)==0){l=i}else{ro(k)|0;l=c[(c[h>>2]|0)-12>>2]|0}if((c[j+(l+16)>>2]|0)!=0){return b|0}k=e-1|0;i=d;d=l;while(1){l=c[j+(d+24)>>2]|0;m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0)){n=cJ[c[(c[l>>2]|0)+36>>2]&255](l)|0;if((n|0)==-1){o=2;break}else{p=n&255}}else{p=a[m]|0}if(p<<24>>24==f<<24>>24){q=1528;break}if((c[g>>2]|0)>=(k|0)){o=4;break}a[i]=p;m=c[j+((c[(c[h>>2]|0)-12>>2]|0)+24)>>2]|0;n=m+12|0;l=c[n>>2]|0;if((l|0)==(c[m+16>>2]|0)){r=m;s=c[(c[m>>2]|0)+40>>2]|0;cJ[s&255](r)|0}else{c[n>>2]=l+1}c[g>>2]=(c[g>>2]|0)+1;i=i+1|0;d=c[(c[h>>2]|0)-12>>2]|0}if((q|0)==1528){q=c[j+((c[(c[h>>2]|0)-12>>2]|0)+24)>>2]|0;d=q+12|0;p=c[d>>2]|0;if((p|0)==(c[q+16>>2]|0)){k=q;f=c[(c[q>>2]|0)+40>>2]|0;cJ[f&255](k)|0}else{c[d>>2]=p+1}c[g>>2]=(c[g>>2]|0)+1;o=0}if((e|0)>0){a[i]=0}i=c[(c[h>>2]|0)-12>>2]|0;qN(j+i|0,c[j+(i+16)>>2]|((c[g>>2]|0)==0?o|4:o));return b|0}function ru(a){a=a|0;var b=0,e=0,f=0,g=0,h=0;c[a+4>>2]=0;b=a;e=c[(c[b>>2]|0)-12>>2]|0;f=a;a=c[f+(e+16)>>2]|0;if((a|0)!=0){qN(f+e|0,a|4);g=-1;return g|0}a=c[f+(e+72)>>2]|0;if((a|0)==0){h=e}else{ro(a)|0;h=c[(c[b>>2]|0)-12>>2]|0}if((c[f+(h+16)>>2]|0)!=0){g=-1;return g|0}a=c[f+(h+24)>>2]|0;h=c[a+12>>2]|0;if((h|0)!=(c[a+16>>2]|0)){g=d[h]|0;return g|0}h=cJ[c[(c[a>>2]|0)+36>>2]&255](a)|0;if((h|0)!=-1){g=h;return g|0}h=c[(c[b>>2]|0)-12>>2]|0;qN(f+h|0,c[f+(h+16)>>2]|2);g=-1;return g|0}function rv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;c[b+4>>2]=0;e=b;f=c[(c[e>>2]|0)-12>>2]|0;g=b;qN(g+f|0,c[g+(f+16)>>2]&-3);f=c[(c[e>>2]|0)-12>>2]|0;h=c[g+(f+16)>>2]|0;do{if((h|0)==0){i=c[g+(f+72)>>2]|0;if((i|0)==0){j=f}else{ro(i)|0;j=c[(c[e>>2]|0)-12>>2]|0}if((c[g+(j+16)>>2]|0)!=0){k=j;break}i=c[g+(j+24)>>2]|0;l=i;do{if((i|0)==0){m=j}else{n=i+12|0;o=c[n>>2]|0;do{if((c[i+8>>2]|0)!=(o|0)){p=o-1|0;if((a[p]|0)!=d<<24>>24){break}c[n>>2]=p;return b|0}}while(0);if((cW[c[(c[i>>2]|0)+44>>2]&255](l,d&255)|0)==-1){m=c[(c[e>>2]|0)-12>>2]|0;break}else{return b|0}}}while(0);qN(g+m|0,c[g+(m+16)>>2]|1);return b|0}else{qN(g+f|0,h|4);k=c[(c[e>>2]|0)-12>>2]|0}}while(0);qN(g+k|0,c[g+(k+16)>>2]|4);return b|0}function rw(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[a+4>>2]=0;b=a;d=c[(c[b>>2]|0)-12>>2]|0;e=a;qN(e+d|0,c[e+(d+16)>>2]&-3);d=c[(c[b>>2]|0)-12>>2]|0;f=c[e+(d+16)>>2]|0;do{if((f|0)==0){g=c[e+(d+72)>>2]|0;if((g|0)==0){h=d}else{ro(g)|0;h=c[(c[b>>2]|0)-12>>2]|0}if((c[e+(h+16)>>2]|0)!=0){i=h;break}g=c[e+(h+24)>>2]|0;j=g;do{if((g|0)==0){k=h}else{l=g+12|0;m=c[l>>2]|0;if((c[g+8>>2]|0)!=(m|0)){c[l>>2]=m-1;return a|0}if((cW[c[(c[g>>2]|0)+44>>2]&255](j,-1)|0)==-1){k=c[(c[b>>2]|0)-12>>2]|0;break}else{return a|0}}}while(0);qN(e+k|0,c[e+(k+16)>>2]|1);return a|0}else{qN(e+d|0,f|4);i=c[(c[b>>2]|0)-12>>2]|0}}while(0);qN(e+i|0,c[e+(i+16)>>2]|4);return a|0}function rx(a){a=a|0;qO(a+8|0);yr(a);return}function ry(a){a=a|0;qO(a+8|0);return}function rz(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;qO(b+(d+8)|0);yr(b+d|0);return}function rA(a){a=a|0;qO(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function rB(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)!=0){rB(k)|0}a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;if((cJ[c[(c[k>>2]|0)+24>>2]&255](k)|0)!=-1){break}k=c[(c[f>>2]|0)-12>>2]|0;qN(h+k|0,c[h+(k+16)>>2]|1)}}while(0);rO(e);i=d;return b|0}function rC(a){a=a|0;qO(a+4|0);yr(a);return}function rD(a){a=a|0;qO(a+4|0);return}function rE(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;qO(b+(d+4)|0);yr(b+d|0);return}function rF(a){a=a|0;qO(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function rG(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(bC()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((cJ[c[(c[e>>2]|0)+24>>2]&255](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;qN(d+b|0,c[d+(b+16)>>2]|1);return}function rH(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)!=0){ro(p)|0}a[l]=1;vm(j,o+((c[(c[m>>2]|0)-12>>2]|0)+28)|0);p=vp(j,43576)|0;vn(j);q=c[(c[m>>2]|0)-12>>2]|0;r=c[o+(q+24)>>2]|0;s=o+(q+76)|0;t=c[s>>2]|0;if((t|0)==-1){vm(g,o+(q+28)|0);u=vp(g,43928)|0;v=cW[c[(c[u>>2]|0)+28>>2]&255](u,32)|0;vn(g);c[s>>2]=v<<24>>24;w=v}else{w=t&255}t=c[(c[p>>2]|0)+16>>2]|0;c[f>>2]=r;cP[t&63](k,p,f,o+q|0,w,d);if((c[k>>2]|0)!=0){break}q=c[(c[m>>2]|0)-12>>2]|0;qN(o+q|0,c[o+(q+16)>>2]|5)}}while(0);rG(h);i=e;return b|0}function rI(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=i;i=i+8|0;g=f|0;h=g|0;a[h]=0;c[g+4>>2]=b;j=b;k=c[(c[j>>2]|0)-12>>2]|0;l=b;do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;if((m|0)!=0){ro(m)|0}a[h]=1;m=c[(c[j>>2]|0)-12>>2]|0;if((e|0)==0){qN(l+m|0,c[l+(m+16)>>2]|1);break}n=e;o=c[l+(m+24)>>2]|0;m=0;while(1){p=c[n+12>>2]|0;if((p|0)==(c[n+16>>2]|0)){q=cJ[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{q=d[p]|0}p=(q|0)==-1?0:n;if((p|0)==0){break}r=p+12|0;s=c[r>>2]|0;t=p+16|0;if((s|0)==(c[t>>2]|0)){u=(cJ[c[(c[p>>2]|0)+36>>2]&255](p)|0)&255}else{u=a[s]|0}if((o|0)==0){break}s=o+24|0;v=c[s>>2]|0;if((v|0)==(c[o+28>>2]|0)){w=cW[c[(c[o>>2]|0)+52>>2]&255](o,u&255)|0}else{c[s>>2]=v+1;a[v]=u;w=u&255}v=(w|0)==-1?0:o;if((v|0)==0){break}s=c[r>>2]|0;if((s|0)==(c[t>>2]|0)){t=c[(c[p>>2]|0)+40>>2]|0;cJ[t&255](p)|0}else{c[r>>2]=s+1}n=p;o=v;m=m+1|0}if((m|0)!=0){break}o=c[(c[j>>2]|0)-12>>2]|0;qN(l+o|0,c[l+(o+16)>>2]|4)}}while(0);rG(g);i=f;return b|0}function rJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+8|0;f=e|0;g=f|0;a[g]=0;c[f+4>>2]=b;h=b;j=c[(c[h>>2]|0)-12>>2]|0;k=b;do{if((c[k+(j+16)>>2]|0)==0){l=c[k+(j+72)>>2]|0;if((l|0)!=0){ro(l)|0}a[g]=1;l=c[k+((c[(c[h>>2]|0)-12>>2]|0)+24)>>2]|0;m=l;if((l|0)==0){n=m}else{o=l+24|0;p=c[o>>2]|0;if((p|0)==(c[l+28>>2]|0)){q=cW[c[(c[l>>2]|0)+52>>2]&255](m,d&255)|0}else{c[o>>2]=p+1;a[p]=d;q=d&255}n=(q|0)==-1?0:m}if((n|0)!=0){break}m=c[(c[h>>2]|0)-12>>2]|0;qN(k+m|0,c[k+(m+16)>>2]|1)}}while(0);rG(f);i=e;return b|0}function rK(a){a=a|0;qO(a+4|0);yr(a);return}function rL(a){a=a|0;qO(a+4|0);return}function rM(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;qO(b+(d+4)|0);yr(b+d|0);return}function rN(a){a=a|0;qO(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function rO(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(bC()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if((cJ[c[(c[e>>2]|0)+24>>2]&255](e)|0)!=-1){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;qN(d+b|0,c[d+(b+16)>>2]|1);return}function rP(a){a=a|0;return 17200}function rQ(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){qr(a,18136,35);return}else{qi(a,b|0,c);return}}function rR(a){a=a|0;qe(a|0);return}function rS(a){a=a|0;qm(a|0);yr(a);return}function rT(a){a=a|0;qm(a|0);return}function rU(a){a=a|0;qO(a);yr(a);return}function rV(a){a=a|0;qe(a|0);yr(a);return}function rW(a){a=a|0;p0(a|0);yr(a);return}function rX(a){a=a|0;p0(a|0);return}function rY(a){a=a|0;p0(a|0);return}function rZ(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L1924:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=1804;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=1806;break}if(l<<24>>24<k<<24>>24){i=1;j=1805;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break L1924}else{b=k;h=l}}if((j|0)==1806){return i|0}else if((j|0)==1804){return i|0}else if((j|0)==1805){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function r_(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){qo(b)}if(g>>>0<11>>>0){a[b]=g<<1&255;h=b+1|0}else{i=g+16&-16;j=yp(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}j=f+(-d|0)|0;d=h;g=e;while(1){a[d]=a[g]|0;e=g+1|0;if((e|0)==(f|0)){break}else{d=d+1|0;g=e}}k=h+j|0;a[k]=0;return}function r$(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function r0(a){a=a|0;p0(a|0);yr(a);return}function r1(a){a=a|0;p0(a|0);return}function r2(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L1960:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=1834;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=1836;break}if((l|0)<(k|0)){i=1;j=1837;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break L1960}else{a=k;h=l}}if((j|0)==1834){return i|0}else if((j|0)==1836){return i|0}else if((j|0)==1837){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function r3(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){qo(b)}if(h>>>0<2>>>0){a[b]=g>>>1&255;i=b+4|0}else{g=h+4&-4;j=yp(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=(f-4+(-d|0)|0)>>>2;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+(j+1<<2)|0;c[k>>2]=0;return}function r4(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function r5(a){a=a|0;p0(a|0);yr(a);return}function r6(a){a=a|0;p0(a|0);return}function r7(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];cT[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}qR(r,g);q=r|0;r=c[q>>2]|0;if((c[10982]|0)!=-1){c[m>>2]=43928;c[m+4>>2]=30;c[m+8>>2]=0;qn(43928,m,258)}m=(c[10983]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;p2(n)|0;qR(s,g);n=s|0;p=c[n>>2]|0;if((c[10886]|0)!=-1){c[l>>2]=43544;c[l+4>>2]=30;c[l+8>>2]=0;qn(43544,l,258)}d=(c[10887]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;z=c[n>>2]|0;p2(z)|0;z=t|0;A=x;cH[c[(c[A>>2]|0)+24>>2]&255](z,y);cH[c[(c[A>>2]|0)+28>>2]&255](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(r8(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];qu(t+12|0);qu(t|0);i=k;return}}while(0);o=cr(4)|0;xW(o);bJ(o|0,35096,560)}}while(0);k=cr(4)|0;xW(k);bJ(k|0,35096,560)}function r8(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=yj(m)|0;if((o|0)!=0){p=o;q=o;break}yw();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){z=r;break}if((cJ[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){A=z;B=0}else{do{if((c[m+12>>2]|0)==(c[m+16>>2]|0)){if((cJ[c[(c[m>>2]|0)+36>>2]&255](m)|0)!=-1){C=m;break}c[b>>2]=0;C=0}else{C=m}}while(0);A=c[u>>2]|0;B=C}D=(B|0)==0;if(!((r^D)&(s|0)!=0)){break}m=c[A+12>>2]|0;if((m|0)==(c[A+16>>2]|0)){E=(cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{E=a[m]|0}if(k){F=E}else{F=cW[c[(c[e>>2]|0)+12>>2]&255](h,E)|0}do{if(n){G=x;H=s}else{m=t+1|0;L2071:do{if(k){y=s;o=x;w=p;v=0;I=f;while(1){do{if((a[w]|0)==1){J=I;if((a[J]&1)==0){K=I+1|0}else{K=c[I+8>>2]|0}if(F<<24>>24!=(a[K+t|0]|0)){a[w]=0;L=v;M=o;N=y-1|0;break}O=d[J]|0;if((O&1|0)==0){P=O>>>1}else{P=c[I+4>>2]|0}if((P|0)!=(m|0)){L=1;M=o;N=y;break}a[w]=2;L=1;M=o+1|0;N=y-1|0}else{L=v;M=o;N=y}}while(0);O=I+12|0;if((O|0)==(g|0)){Q=N;R=M;S=L;break L2071}y=N;o=M;w=w+1|0;v=L;I=O}}else{I=s;v=x;w=p;o=0;y=f;while(1){do{if((a[w]|0)==1){O=y;if((a[O]&1)==0){T=y+1|0}else{T=c[y+8>>2]|0}if(F<<24>>24!=(cW[c[(c[e>>2]|0)+12>>2]&255](h,a[T+t|0]|0)|0)<<24>>24){a[w]=0;U=o;V=v;W=I-1|0;break}J=d[O]|0;if((J&1|0)==0){X=J>>>1}else{X=c[y+4>>2]|0}if((X|0)!=(m|0)){U=1;V=v;W=I;break}a[w]=2;U=1;V=v+1|0;W=I-1|0}else{U=o;V=v;W=I}}while(0);J=y+12|0;if((J|0)==(g|0)){Q=W;R=V;S=U;break L2071}I=W;v=V;w=w+1|0;o=U;y=J}}}while(0);if(!S){G=R;H=Q;break}m=c[u>>2]|0;y=m+12|0;o=c[y>>2]|0;if((o|0)==(c[m+16>>2]|0)){w=c[(c[m>>2]|0)+40>>2]|0;cJ[w&255](m)|0}else{c[y>>2]=o+1}if((R+Q|0)>>>0<2>>>0|n){G=R;H=Q;break}o=t+1|0;y=R;m=p;w=f;while(1){do{if((a[m]|0)==2){v=d[w]|0;if((v&1|0)==0){Y=v>>>1}else{Y=c[w+4>>2]|0}if((Y|0)==(o|0)){Z=y;break}a[m]=0;Z=y-1|0}else{Z=y}}while(0);v=w+12|0;if((v|0)==(g|0)){G=Z;H=Q;break}else{y=Z;m=m+1|0;w=v}}}}while(0);t=t+1|0;x=G;s=H}do{if((A|0)==0){_=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){_=A;break}if((cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[u>>2]=0;_=0;break}else{_=c[u>>2]|0;break}}}while(0);u=(_|0)==0;do{if(D){$=1980}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){if(u){break}else{$=1982;break}}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[b>>2]=0;$=1980;break}else{if(u^(B|0)==0){break}else{$=1982;break}}}}while(0);if(($|0)==1980){if(u){$=1982}}if(($|0)==1982){c[j>>2]=c[j>>2]|2}L2150:do{if(n){$=1987}else{u=f;B=p;while(1){if((a[B]|0)==2){aa=u;break L2150}b=u+12|0;if((b|0)==(g|0)){$=1987;break L2150}u=b;B=B+1|0}}}while(0);if(($|0)==1987){c[j>>2]=c[j>>2]|4;aa=g}if((q|0)==0){i=l;return aa|0}yk(q);i=l;return aa|0}function r9(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sa(a,0,j,k,f,g,h);i=b;return}function sa(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==64){v=8}else if((u|0)==0){v=0}else{v=10}u=l|0;sS(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L2174:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=2015}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L2174}}if((cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=2015;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L2174}}}}while(0);if((E|0)==2015){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}qx(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}qx(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((ss(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cJ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=w0(H,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L2234:do{if(J){E=2056}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=2056;break L2234}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);do{if((E|0)==2056){if(h){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}function sb(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sc(a,0,j,k,f,g,h);i=b;return}function sc(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==8){v=16}else if((u|0)==64){v=8}else{v=10}u=l|0;sS(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L2259:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=2084}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L2259}}if((cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=2084;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L2259}}}}while(0);if((E|0)==2084){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;N=D>>>1}else{D=c[z>>2]|0;L=D;N=D}qx(o,L<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}qx(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;K=c[D>>2]|0;R=B+16|0;if((K|0)==(c[R>>2]|0)){S=(cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{S=a[K]|0}if((ss(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[R>>2]|0)){R=c[(c[B>>2]|0)+40>>2]|0;cJ[R&255](B)|0;m=Q;w=B;continue}else{c[D>>2]=K+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=w$(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=M;uL(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L2319:do{if(J){E=2125}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=2125;break L2319}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}}while(0);do{if((E|0)==2125){if(h){break}V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}
function sd(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];se(a,0,j,k,f,g,h);i=b;return}function se(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;f=i;i=i+72|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+32|0;o=f+40|0;p=f+56|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==64){w=8}else if((v|0)==0){w=0}else{w=10}v=m|0;sS(o,j,v,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=a[n]|0;n=x;x=c[j>>2]|0;L2344:while(1){do{if((x|0)==0){C=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){C=x;break}if((cJ[c[(c[x>>2]|0)+36>>2]&255](x)|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);D=(C|0)==0;E=c[g>>2]|0;do{if((E|0)==0){F=2153}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(D){G=E;H=0;break}else{I=n;J=E;K=0;break L2344}}if((cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)==-1){c[g>>2]=0;F=2153;break}else{L=(E|0)==0;if(D^L){G=E;H=L;break}else{I=n;J=E;K=L;break L2344}}}}while(0);if((F|0)==2153){F=0;if(D){I=n;J=0;K=1;break}else{G=0;H=1}}E=d[q]|0;L=(E&1|0)==0;if(((c[r>>2]|0)-n|0)==((L?E>>>1:c[A>>2]|0)|0)){if(L){M=E>>>1;N=E>>>1}else{E=c[A>>2]|0;M=E;N=E}qx(p,M<<1,0);if((a[q]&1)==0){O=10}else{O=(c[h>>2]&-2)-1|0}qx(p,O,0);if((a[q]&1)==0){P=y}else{P=c[z>>2]|0}c[r>>2]=P+N;Q=P}else{Q=n}E=C+12|0;L=c[E>>2]|0;R=C+16|0;if((L|0)==(c[R>>2]|0)){S=(cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{S=a[L]|0}if((ss(S,w,Q,r,u,B,o,m,t,v)|0)!=0){I=Q;J=G;K=H;break}L=c[E>>2]|0;if((L|0)==(c[R>>2]|0)){R=c[(c[C>>2]|0)+40>>2]|0;cJ[R&255](C)|0;n=Q;x=C;continue}else{c[E>>2]=L+1;n=Q;x=C;continue}}x=d[o]|0;if((x&1|0)==0){T=x>>>1}else{T=c[o+4>>2]|0}do{if((T|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}Q=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=Q}}while(0);b[l>>1]=w_(I,c[r>>2]|0,k,w)|0;uL(o,m,c[t>>2]|0,k);do{if(D){U=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){U=C;break}if((cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0)!=-1){U=C;break}c[j>>2]=0;U=0}}while(0);j=(U|0)==0;L2404:do{if(K){F=2194}else{do{if((c[J+12>>2]|0)==(c[J+16>>2]|0)){if((cJ[c[(c[J>>2]|0)+36>>2]&255](J)|0)!=-1){break}c[g>>2]=0;F=2194;break L2404}}while(0);if(!(j^(J|0)==0)){break}V=e|0;c[V>>2]=U;qu(p);qu(o);i=f;return}}while(0);do{if((F|0)==2194){if(j){break}V=e|0;c[V>>2]=U;qu(p);qu(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;V=e|0;c[V>>2]=U;qu(p);qu(o);i=f;return}function sf(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sg(a,0,j,k,f,g,h);i=b;return}function sg(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;sS(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L2429:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=2222}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L2429}}if((cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=2222;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L2429}}}}while(0);if((E|0)==2222){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}qx(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}qx(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((ss(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cJ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=wZ(H,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L2489:do{if(J){E=2263}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=2263;break L2489}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);do{if((E|0)==2263){if(h){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}function sh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];si(a,0,j,k,f,g,h);i=b;return}function si(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==64){v=8}else if((u|0)==0){v=0}else{v=10}u=l|0;sS(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L2514:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=2291}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L2514}}if((cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=2291;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L2514}}}}while(0);if((E|0)==2291){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;M=D>>>1}else{D=c[z>>2]|0;L=D;M=D}qx(o,L<<1,0);if((a[p]&1)==0){N=10}else{N=(c[g>>2]&-2)-1|0}qx(o,N,0);if((a[p]&1)==0){O=x}else{O=c[y>>2]|0}c[q>>2]=O+M;P=O}else{P=m}D=B+12|0;K=c[D>>2]|0;Q=B+16|0;if((K|0)==(c[Q>>2]|0)){R=(cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{R=a[K]|0}if((ss(R,v,P,q,t,A,n,l,s,u)|0)!=0){H=P;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[Q>>2]|0)){Q=c[(c[B>>2]|0)+40>>2]|0;cJ[Q&255](B)|0;m=P;w=B;continue}else{c[D>>2]=K+1;m=P;w=B;continue}}w=d[n]|0;if((w&1|0)==0){S=w>>>1}else{S=c[n+4>>2]|0}do{if((S|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}P=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=P}}while(0);c[k>>2]=wY(H,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(C){T=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){T=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){T=B;break}c[h>>2]=0;T=0}}while(0);h=(T|0)==0;L2574:do{if(J){E=2332}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=2332;break L2574}}while(0);if(!(h^(I|0)==0)){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);do{if((E|0)==2332){if(h){break}U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;U=b|0;c[U>>2]=T;qu(o);qu(n);i=e;return}function sj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sk(a,0,j,k,f,g,h);i=b;return}function sk(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l|0;sS(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=w;w=c[h>>2]|0;L2599:while(1){do{if((w|0)==0){B=0}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){B=w;break}if((cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=2360}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;G=0;break}else{H=m;I=D;J=0;break L2599}}if((cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=2360;break}else{K=(D|0)==0;if(C^K){F=D;G=K;break}else{H=m;I=D;J=K;break L2599}}}}while(0);if((E|0)==2360){E=0;if(C){H=m;I=0;J=1;break}else{F=0;G=1}}D=d[p]|0;K=(D&1|0)==0;if(((c[q>>2]|0)-m|0)==((K?D>>>1:c[z>>2]|0)|0)){if(K){L=D>>>1;N=D>>>1}else{D=c[z>>2]|0;L=D;N=D}qx(o,L<<1,0);if((a[p]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}qx(o,O,0);if((a[p]&1)==0){P=x}else{P=c[y>>2]|0}c[q>>2]=P+N;Q=P}else{Q=m}D=B+12|0;K=c[D>>2]|0;R=B+16|0;if((K|0)==(c[R>>2]|0)){S=(cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{S=a[K]|0}if((ss(S,v,Q,q,t,A,n,l,s,u)|0)!=0){H=Q;I=F;J=G;break}K=c[D>>2]|0;if((K|0)==(c[R>>2]|0)){R=c[(c[B>>2]|0)+40>>2]|0;cJ[R&255](B)|0;m=Q;w=B;continue}else{c[D>>2]=K+1;m=Q;w=B;continue}}w=d[n]|0;if((w&1|0)==0){T=w>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}Q=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=Q}}while(0);t=wX(H,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=M;uL(n,l,c[s>>2]|0,j);do{if(C){U=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){U=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){U=B;break}c[h>>2]=0;U=0}}while(0);h=(U|0)==0;L2659:do{if(J){E=2401}else{do{if((c[I+12>>2]|0)==(c[I+16>>2]|0)){if((cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0)!=-1){break}c[f>>2]=0;E=2401;break L2659}}while(0);if(!(h^(I|0)==0)){break}V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}}while(0);do{if((E|0)==2401){if(h){break}V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;qu(o);qu(n);i=e;return}function sl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sm(a,0,j,k,f,g,h);i=b;return}function sm(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sT(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L2679:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=2425}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L2679}}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=2425;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L2679}}}}while(0);if((H|0)==2425){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}qx(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}qx(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((sU(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cJ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);g[l>>2]=+wW(K,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L2740:do{if(M){H=2467}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=2467;break L2740}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);do{if((H|0)==2467){if(j){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}function sn(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];so(a,0,j,k,f,g,h);i=b;return}function so(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sT(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L2760:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=2491}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L2760}}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=2491;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L2760}}}}while(0);if((H|0)==2491){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}qx(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}qx(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((sU(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cJ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+wV(K,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L2821:do{if(M){H=2533}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=2533;break L2821}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);do{if((H|0)==2533){if(j){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}function sp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sq(a,0,j,k,f,g,h);i=b;return}function sq(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sT(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=a[m]|0;m=a[n]|0;n=z;z=c[j>>2]|0;L2841:while(1){do{if((z|0)==0){E=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){E=z;break}if((cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);F=(E|0)==0;G=c[f>>2]|0;do{if((G|0)==0){H=2557}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(F){I=G;J=0;break}else{K=n;L=G;M=0;break L2841}}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[f>>2]=0;H=2557;break}else{N=(G|0)==0;if(F^N){I=G;J=N;break}else{K=n;L=G;M=N;break L2841}}}}while(0);if((H|0)==2557){H=0;if(F){K=n;L=0;M=1;break}else{I=0;J=1}}G=d[q]|0;N=(G&1|0)==0;if(((c[r>>2]|0)-n|0)==((N?G>>>1:c[C>>2]|0)|0)){if(N){O=G>>>1;P=G>>>1}else{G=c[C>>2]|0;O=G;P=G}qx(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}qx(p,Q,0);if((a[q]&1)==0){R=A}else{R=c[B>>2]|0}c[r>>2]=R+P;S=R}else{S=n}G=E+12|0;N=c[G>>2]|0;T=E+16|0;if((N|0)==(c[T>>2]|0)){U=(cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)&255}else{U=a[N]|0}if((sU(U,v,w,S,r,D,m,o,y,t,u,x)|0)!=0){K=S;L=I;M=J;break}N=c[G>>2]|0;if((N|0)==(c[T>>2]|0)){T=c[(c[E>>2]|0)+40>>2]|0;cJ[T&255](E)|0;n=S;z=E;continue}else{c[G>>2]=N+1;n=S;z=E;continue}}z=d[o]|0;if((z&1|0)==0){V=z>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=S}}while(0);h[l>>3]=+wU(K,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(F){W=0}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){W=E;break}if((cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0)!=-1){W=E;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;L2902:do{if(M){H=2599}else{do{if((c[L+12>>2]|0)==(c[L+16>>2]|0)){if((cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0)!=-1){break}c[f>>2]=0;H=2599;break L2902}}while(0);if(!(j^(L|0)==0)){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);do{if((H|0)==2599){if(j){break}X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;X=b|0;c[X>>2]=W;qu(p);qu(o);i=e;return}function sr(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+48|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;yC(n|0,0,12);u=p;qR(o,h);h=o|0;o=c[h>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=w;y=m|0;z=c[(c[w>>2]|0)+32>>2]|0;cY[z&31](x,38304,38330,y)|0;x=c[h>>2]|0;p2(x)|0;yC(u|0,0,12);x=p;qx(p,10,0);if((a[u]&1)==0){z=x+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=x+1|0;C=z}c[q>>2]=A;z=r|0;c[s>>2]=z;c[t>>2]=0;x=f|0;w=g|0;D=p|0;E=p+4|0;F=A;G=c[x>>2]|0;L2929:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)!=-1){H=G;break}c[x>>2]=0;H=0}}while(0);I=(H|0)==0;J=c[w>>2]|0;do{if((J|0)==0){K=2630}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(I){break}else{L=F;break L2929}}if((cJ[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[w>>2]=0;K=2630;break}else{if(I^(J|0)==0){break}else{L=F;break L2929}}}}while(0);if((K|0)==2630){K=0;if(I){L=F;break}}J=d[u]|0;M=(J&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?J>>>1:c[E>>2]|0)|0)){if(M){N=J>>>1;O=J>>>1}else{J=c[E>>2]|0;N=J;O=J}qx(p,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[D>>2]&-2)-1|0}qx(p,P,0);if((a[u]&1)==0){Q=B}else{Q=c[C>>2]|0}c[q>>2]=Q+O;R=Q}else{R=F}J=H+12|0;M=c[J>>2]|0;S=H+16|0;if((M|0)==(c[S>>2]|0)){T=(cJ[c[(c[H>>2]|0)+36>>2]&255](H)|0)&255}else{T=a[M]|0}if((ss(T,16,R,q,t,0,n,z,s,y)|0)!=0){L=R;break}M=c[J>>2]|0;if((M|0)==(c[S>>2]|0)){S=c[(c[H>>2]|0)+40>>2]|0;cJ[S&255](H)|0;F=R;G=H;continue}else{c[J>>2]=M+1;F=R;G=H;continue}}a[L+3|0]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);G=st(L,c[10540]|0,13264,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[x>>2]|0;do{if((G|0)==0){U=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){U=G;break}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)!=-1){U=G;break}c[x>>2]=0;U=0}}while(0);x=(U|0)==0;G=c[w>>2]|0;do{if((G|0)==0){K=2675}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}V=b|0;c[V>>2]=U;qu(p);qu(n);i=e;return}if((cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[w>>2]=0;K=2675;break}if(!(x^(G|0)==0)){break}V=b|0;c[V>>2]=U;qu(p);qu(n);i=e;return}}while(0);do{if((K|0)==2675){if(x){break}V=b|0;c[V>>2]=U;qu(p);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;qu(p);qu(n);i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function ss(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(a[m+24|0]|0)==b<<24>>24;if(!p){if((a[m+25|0]|0)!=b<<24>>24){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&b<<24>>24==i<<24>>24){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+26|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((a[i]|0)==b<<24>>24){s=i;break}else{i=i+1|0}}i=s-m|0;if((i|0)>23){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((i|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<22){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;m=a[38304+i|0]|0;s=c[g>>2]|0;c[g>>2]=s+1;a[s]=m;q=0;return q|0}}while(0);f=a[38304+i|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function st(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=ca(b|0)|0;b=bd(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}ca(h|0)|0;i=f;return b|0}function su(a){a=a|0;p0(a|0);yr(a);return}function sv(a){a=a|0;p0(a|0);return}function sw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];cT[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}qR(r,g);q=r|0;r=c[q>>2]|0;if((c[10980]|0)!=-1){c[m>>2]=43920;c[m+4>>2]=30;c[m+8>>2]=0;qn(43920,m,258)}m=(c[10981]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;p2(n)|0;qR(s,g);n=s|0;p=c[n>>2]|0;if((c[10884]|0)!=-1){c[l>>2]=43536;c[l+4>>2]=30;c[l+8>>2]=0;qn(43536,l,258)}d=(c[10885]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;z=c[n>>2]|0;p2(z)|0;z=t|0;A=x;cH[c[(c[A>>2]|0)+24>>2]&255](z,y);cH[c[(c[A>>2]|0)+28>>2]&255](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(sx(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];qG(t+12|0);qG(t|0);i=k;return}}while(0);o=cr(4)|0;xW(o);bJ(o|0,35096,560)}}while(0);k=cr(4)|0;xW(k);bJ(k|0,35096,560)}function sx(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100>>>0){o=yj(m)|0;if((o|0)!=0){p=o;q=o;break}yw();p=0;q=0}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){r=m;s=0}else{o=m;m=0;t=p;u=f;while(1){v=d[u]|0;if((v&1|0)==0){w=v>>>1}else{w=c[u+4>>2]|0}if((w|0)==0){a[t]=2;x=m+1|0;y=o-1|0}else{a[t]=1;x=m;y=o}v=u+12|0;if((v|0)==(g|0)){r=y;s=x;break}else{o=y;m=x;t=t+1|0;u=v}}}u=b|0;b=e|0;e=h;t=0;x=s;s=r;while(1){r=c[u>>2]|0;do{if((r|0)==0){z=0}else{m=c[r+12>>2]|0;if((m|0)==(c[r+16>>2]|0)){A=cJ[c[(c[r>>2]|0)+36>>2]&255](r)|0}else{A=c[m>>2]|0}if((A|0)==-1){c[u>>2]=0;z=0;break}else{z=c[u>>2]|0;break}}}while(0);r=(z|0)==0;m=c[b>>2]|0;if((m|0)==0){B=z;C=0}else{y=c[m+12>>2]|0;if((y|0)==(c[m+16>>2]|0)){D=cJ[c[(c[m>>2]|0)+36>>2]&255](m)|0}else{D=c[y>>2]|0}if((D|0)==-1){c[b>>2]=0;E=0}else{E=m}B=c[u>>2]|0;C=E}F=(C|0)==0;if(!((r^F)&(s|0)!=0)){break}r=c[B+12>>2]|0;if((r|0)==(c[B+16>>2]|0)){G=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{G=c[r>>2]|0}if(k){H=G}else{H=cW[c[(c[e>>2]|0)+28>>2]&255](h,G)|0}do{if(n){I=x;J=s}else{r=t+1|0;L3136:do{if(k){m=s;y=x;o=p;w=0;v=f;while(1){do{if((a[o]|0)==1){K=v;if((a[K]&1)==0){L=v+4|0}else{L=c[v+8>>2]|0}if((H|0)!=(c[L+(t<<2)>>2]|0)){a[o]=0;M=w;N=y;O=m-1|0;break}P=d[K]|0;if((P&1|0)==0){Q=P>>>1}else{Q=c[v+4>>2]|0}if((Q|0)!=(r|0)){M=1;N=y;O=m;break}a[o]=2;M=1;N=y+1|0;O=m-1|0}else{M=w;N=y;O=m}}while(0);P=v+12|0;if((P|0)==(g|0)){R=O;S=N;T=M;break L3136}m=O;y=N;o=o+1|0;w=M;v=P}}else{v=s;w=x;o=p;y=0;m=f;while(1){do{if((a[o]|0)==1){P=m;if((a[P]&1)==0){U=m+4|0}else{U=c[m+8>>2]|0}if((H|0)!=(cW[c[(c[e>>2]|0)+28>>2]&255](h,c[U+(t<<2)>>2]|0)|0)){a[o]=0;V=y;W=w;X=v-1|0;break}K=d[P]|0;if((K&1|0)==0){Y=K>>>1}else{Y=c[m+4>>2]|0}if((Y|0)!=(r|0)){V=1;W=w;X=v;break}a[o]=2;V=1;W=w+1|0;X=v-1|0}else{V=y;W=w;X=v}}while(0);K=m+12|0;if((K|0)==(g|0)){R=X;S=W;T=V;break L3136}v=X;w=W;o=o+1|0;y=V;m=K}}}while(0);if(!T){I=S;J=R;break}r=c[u>>2]|0;m=r+12|0;y=c[m>>2]|0;if((y|0)==(c[r+16>>2]|0)){o=c[(c[r>>2]|0)+40>>2]|0;cJ[o&255](r)|0}else{c[m>>2]=y+4}if((S+R|0)>>>0<2>>>0|n){I=S;J=R;break}y=t+1|0;m=S;r=p;o=f;while(1){do{if((a[r]|0)==2){w=d[o]|0;if((w&1|0)==0){Z=w>>>1}else{Z=c[o+4>>2]|0}if((Z|0)==(y|0)){_=m;break}a[r]=0;_=m-1|0}else{_=m}}while(0);w=o+12|0;if((w|0)==(g|0)){I=_;J=R;break}else{m=_;r=r+1|0;o=w}}}}while(0);t=t+1|0;x=I;s=J}do{if((B|0)==0){$=1}else{J=c[B+12>>2]|0;if((J|0)==(c[B+16>>2]|0)){aa=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{aa=c[J>>2]|0}if((aa|0)==-1){c[u>>2]=0;$=1;break}else{$=(c[u>>2]|0)==0;break}}}while(0);do{if(F){ab=2850}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){ac=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{ac=c[u>>2]|0}if((ac|0)==-1){c[b>>2]=0;ab=2850;break}else{if($^(C|0)==0){break}else{ab=2852;break}}}}while(0);if((ab|0)==2850){if($){ab=2852}}if((ab|0)==2852){c[j>>2]=c[j>>2]|2}L3217:do{if(n){ab=2857}else{$=f;C=p;while(1){if((a[C]|0)==2){ad=$;break L3217}b=$+12|0;if((b|0)==(g|0)){ab=2857;break L3217}$=b;C=C+1|0}}}while(0);if((ab|0)==2857){c[j>>2]=c[j>>2]|4;ad=g}if((q|0)==0){i=l;return ad|0}yk(q);i=l;return ad|0}function sy(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sz(a,0,j,k,f,g,h);i=b;return}function sz(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;sV(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L3241:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=2886}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=2886;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L3241}}}}while(0);if((F|0)==2886){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}qx(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}qx(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((sR(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cJ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=w0(K,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=2928}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=2928;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);do{if((F|0)==2928){if(h){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}function sA(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sB(a,0,j,k,f,g,h);i=b;return}function sB(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;sV(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L3331:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=2957}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=2957;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;N=G;break L3331}}}}while(0);if((F|0)==2957){F=0;if(E){K=m;L=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}qx(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}qx(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{U=c[G>>2]|0}if((sR(U,v,S,q,t,A,n,l,s,u)|0)!=0){K=S;L=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){T=c[(c[B>>2]|0)+40>>2]|0;cJ[T&255](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=w$(K,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=M;uL(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=2999}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){Y=cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=2999;break}if(!(h^(L|0)==0)){break}Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}}while(0);do{if((F|0)==2999){if(h){break}Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}function sC(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sD(a,0,j,k,f,g,h);i=b;return}function sD(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;f=i;i=i+144|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+104|0;o=f+112|0;p=f+128|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==0){w=0}else if((v|0)==64){w=8}else{w=10}v=m|0;sV(o,j,v,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){m=j+1|0;x=m;y=m;z=p+8|0}else{m=p+8|0;x=c[m>>2]|0;y=j+1|0;z=m}c[r>>2]=x;m=s|0;c[t>>2]=m;c[u>>2]=0;j=g|0;g=h|0;h=p|0;A=p+4|0;B=c[n>>2]|0;n=x;x=c[j>>2]|0;L3421:while(1){do{if((x|0)==0){C=0}else{D=c[x+12>>2]|0;if((D|0)==(c[x+16>>2]|0)){E=cJ[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{E=c[D>>2]|0}if((E|0)!=-1){C=x;break}c[j>>2]=0;C=0}}while(0);F=(C|0)==0;D=c[g>>2]|0;do{if((D|0)==0){G=3028}else{H=c[D+12>>2]|0;if((H|0)==(c[D+16>>2]|0)){I=cJ[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{I=c[H>>2]|0}if((I|0)==-1){c[g>>2]=0;G=3028;break}else{H=(D|0)==0;if(F^H){J=D;K=H;break}else{L=n;M=D;N=H;break L3421}}}}while(0);if((G|0)==3028){G=0;if(F){L=n;M=0;N=1;break}else{J=0;K=1}}D=d[q]|0;H=(D&1|0)==0;if(((c[r>>2]|0)-n|0)==((H?D>>>1:c[A>>2]|0)|0)){if(H){O=D>>>1;P=D>>>1}else{D=c[A>>2]|0;O=D;P=D}qx(p,O<<1,0);if((a[q]&1)==0){Q=10}else{Q=(c[h>>2]&-2)-1|0}qx(p,Q,0);if((a[q]&1)==0){R=y}else{R=c[z>>2]|0}c[r>>2]=R+P;S=R}else{S=n}D=C+12|0;H=c[D>>2]|0;T=C+16|0;if((H|0)==(c[T>>2]|0)){U=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{U=c[H>>2]|0}if((sR(U,w,S,r,u,B,o,m,t,v)|0)!=0){L=S;M=J;N=K;break}H=c[D>>2]|0;if((H|0)==(c[T>>2]|0)){T=c[(c[C>>2]|0)+40>>2]|0;cJ[T&255](C)|0;n=S;x=C;continue}else{c[D>>2]=H+4;n=S;x=C;continue}}x=d[o]|0;if((x&1|0)==0){V=x>>>1}else{V=c[o+4>>2]|0}do{if((V|0)!=0){x=c[t>>2]|0;if((x-s|0)>=160){break}S=c[u>>2]|0;c[t>>2]=x+4;c[x>>2]=S}}while(0);b[l>>1]=w_(L,c[r>>2]|0,k,w)|0;uL(o,m,c[t>>2]|0,k);do{if(F){W=0}else{t=c[C+12>>2]|0;if((t|0)==(c[C+16>>2]|0)){X=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{X=c[t>>2]|0}if((X|0)!=-1){W=C;break}c[j>>2]=0;W=0}}while(0);j=(W|0)==0;do{if(N){G=3070}else{C=c[M+12>>2]|0;if((C|0)==(c[M+16>>2]|0)){Y=cJ[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Y=c[C>>2]|0}if((Y|0)==-1){c[g>>2]=0;G=3070;break}if(!(j^(M|0)==0)){break}Z=e|0;c[Z>>2]=W;qu(p);qu(o);i=f;return}}while(0);do{if((G|0)==3070){if(j){break}Z=e|0;c[Z>>2]=W;qu(p);qu(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;Z=e|0;c[Z>>2]=W;qu(p);qu(o);i=f;return}function sE(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sF(a,0,j,k,f,g,h);i=b;return}function sF(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;sV(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L3511:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=3099}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=3099;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L3511}}}}while(0);if((F|0)==3099){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}qx(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}qx(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((sR(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cJ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=wZ(K,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=3141}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=3141;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);do{if((F|0)==3141){if(h){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}function sG(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sH(a,0,j,k,f,g,h);i=b;return}function sH(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;sV(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L3601:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=3170}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=3170;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;M=G;break L3601}}}}while(0);if((F|0)==3170){F=0;if(E){K=m;L=0;M=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){N=C>>>1;O=C>>>1}else{C=c[z>>2]|0;N=C;O=C}qx(o,N<<1,0);if((a[p]&1)==0){P=10}else{P=(c[g>>2]&-2)-1|0}qx(o,P,0);if((a[p]&1)==0){Q=x}else{Q=c[y>>2]|0}c[q>>2]=Q+O;R=Q}else{R=m}C=B+12|0;G=c[C>>2]|0;S=B+16|0;if((G|0)==(c[S>>2]|0)){T=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{T=c[G>>2]|0}if((sR(T,v,R,q,t,A,n,l,s,u)|0)!=0){K=R;L=I;M=J;break}G=c[C>>2]|0;if((G|0)==(c[S>>2]|0)){S=c[(c[B>>2]|0)+40>>2]|0;cJ[S&255](B)|0;m=R;w=B;continue}else{c[C>>2]=G+4;m=R;w=B;continue}}w=d[n]|0;if((w&1|0)==0){U=w>>>1}else{U=c[n+4>>2]|0}do{if((U|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}R=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=R}}while(0);c[k>>2]=wY(K,c[q>>2]|0,j,v)|0;uL(n,l,c[s>>2]|0,j);do{if(E){V=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){W=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[s>>2]|0}if((W|0)!=-1){V=B;break}c[h>>2]=0;V=0}}while(0);h=(V|0)==0;do{if(M){F=3212}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){X=cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{X=c[B>>2]|0}if((X|0)==-1){c[f>>2]=0;F=3212;break}if(!(h^(L|0)==0)){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);do{if((F|0)==3212){if(h){break}Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=b|0;c[Y>>2]=V;qu(o);qu(n);i=e;return}function sI(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sJ(a,0,j,k,f,g,h);i=b;return}function sJ(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;sV(n,h,u,m);yC(p|0,0,12);h=o;qx(o,10,0);if((a[p]&1)==0){l=h+1|0;w=l;x=l;y=o+8|0}else{l=o+8|0;w=c[l>>2]|0;x=h+1|0;y=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;h=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=w;w=c[h>>2]|0;L3691:while(1){do{if((w|0)==0){B=0}else{C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0)){D=cJ[c[(c[w>>2]|0)+36>>2]&255](w)|0}else{D=c[C>>2]|0}if((D|0)!=-1){B=w;break}c[h>>2]=0;B=0}}while(0);E=(B|0)==0;C=c[f>>2]|0;do{if((C|0)==0){F=3241}else{G=c[C+12>>2]|0;if((G|0)==(c[C+16>>2]|0)){H=cJ[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=3241;break}else{G=(C|0)==0;if(E^G){I=C;J=G;break}else{K=m;L=C;N=G;break L3691}}}}while(0);if((F|0)==3241){F=0;if(E){K=m;L=0;N=1;break}else{I=0;J=1}}C=d[p]|0;G=(C&1|0)==0;if(((c[q>>2]|0)-m|0)==((G?C>>>1:c[z>>2]|0)|0)){if(G){O=C>>>1;P=C>>>1}else{C=c[z>>2]|0;O=C;P=C}qx(o,O<<1,0);if((a[p]&1)==0){Q=10}else{Q=(c[g>>2]&-2)-1|0}qx(o,Q,0);if((a[p]&1)==0){R=x}else{R=c[y>>2]|0}c[q>>2]=R+P;S=R}else{S=m}C=B+12|0;G=c[C>>2]|0;T=B+16|0;if((G|0)==(c[T>>2]|0)){U=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{U=c[G>>2]|0}if((sR(U,v,S,q,t,A,n,l,s,u)|0)!=0){K=S;L=I;N=J;break}G=c[C>>2]|0;if((G|0)==(c[T>>2]|0)){T=c[(c[B>>2]|0)+40>>2]|0;cJ[T&255](B)|0;m=S;w=B;continue}else{c[C>>2]=G+4;m=S;w=B;continue}}w=d[n]|0;if((w&1|0)==0){V=w>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){w=c[s>>2]|0;if((w-r|0)>=160){break}S=c[t>>2]|0;c[s>>2]=w+4;c[w>>2]=S}}while(0);t=wX(K,c[q>>2]|0,j,v)|0;c[k>>2]=t;c[k+4>>2]=M;uL(n,l,c[s>>2]|0,j);do{if(E){W=0}else{s=c[B+12>>2]|0;if((s|0)==(c[B+16>>2]|0)){X=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{X=c[s>>2]|0}if((X|0)!=-1){W=B;break}c[h>>2]=0;W=0}}while(0);h=(W|0)==0;do{if(N){F=3283}else{B=c[L+12>>2]|0;if((B|0)==(c[L+16>>2]|0)){Y=cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0}else{Y=c[B>>2]|0}if((Y|0)==-1){c[f>>2]=0;F=3283;break}if(!(h^(L|0)==0)){break}Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}}while(0);do{if((F|0)==3283){if(h){break}Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;qu(o);qu(n);i=e;return}function sK(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sL(a,0,j,k,f,g,h);i=b;return}function sL(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sW(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=h|0;h=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L3776:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=3308}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cJ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=3308;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L3776}}}}while(0);if((I|0)==3308){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}qx(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[h>>2]&-2)-1|0}qx(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((sX(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cJ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);g[l>>2]=+wW(N,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=3351}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cJ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=3351;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);do{if((I|0)==3351){if(j){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}function sM(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sN(a,0,j,k,f,g,h);i=b;return}function sN(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sW(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L3862:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=3376}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cJ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=3376;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L3862}}}}while(0);if((I|0)==3376){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}qx(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}qx(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((sX(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cJ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+wV(N,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=3419}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cJ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=3419;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);do{if((I|0)==3419){if(j){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}function sO(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sP(a,0,j,k,f,g,h);i=b;return}function sP(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;x=e|0;sW(o,j,x,m,n);yC(q|0,0,12);j=p;qx(p,10,0);if((a[q]&1)==0){y=j+1|0;z=y;A=y;B=p+8|0}else{y=p+8|0;z=c[y>>2]|0;A=j+1|0;B=y}c[r>>2]=z;y=s|0;c[t>>2]=y;c[u>>2]=0;a[v]=1;a[w]=69;j=f|0;f=g|0;g=p|0;C=p+4|0;D=c[m>>2]|0;m=c[n>>2]|0;n=z;z=c[j>>2]|0;L3948:while(1){do{if((z|0)==0){E=0}else{F=c[z+12>>2]|0;if((F|0)==(c[z+16>>2]|0)){G=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[F>>2]|0}if((G|0)!=-1){E=z;break}c[j>>2]=0;E=0}}while(0);H=(E|0)==0;F=c[f>>2]|0;do{if((F|0)==0){I=3444}else{J=c[F+12>>2]|0;if((J|0)==(c[F+16>>2]|0)){K=cJ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{K=c[J>>2]|0}if((K|0)==-1){c[f>>2]=0;I=3444;break}else{J=(F|0)==0;if(H^J){L=F;M=J;break}else{N=n;O=F;P=J;break L3948}}}}while(0);if((I|0)==3444){I=0;if(H){N=n;O=0;P=1;break}else{L=0;M=1}}F=d[q]|0;J=(F&1|0)==0;if(((c[r>>2]|0)-n|0)==((J?F>>>1:c[C>>2]|0)|0)){if(J){Q=F>>>1;R=F>>>1}else{F=c[C>>2]|0;Q=F;R=F}qx(p,Q<<1,0);if((a[q]&1)==0){S=10}else{S=(c[g>>2]&-2)-1|0}qx(p,S,0);if((a[q]&1)==0){T=A}else{T=c[B>>2]|0}c[r>>2]=T+R;U=T}else{U=n}F=E+12|0;J=c[F>>2]|0;V=E+16|0;if((J|0)==(c[V>>2]|0)){W=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{W=c[J>>2]|0}if((sX(W,v,w,U,r,D,m,o,y,t,u,x)|0)!=0){N=U;O=L;P=M;break}J=c[F>>2]|0;if((J|0)==(c[V>>2]|0)){V=c[(c[E>>2]|0)+40>>2]|0;cJ[V&255](E)|0;n=U;z=E;continue}else{c[F>>2]=J+4;n=U;z=E;continue}}z=d[o]|0;if((z&1|0)==0){X=z>>>1}else{X=c[o+4>>2]|0}do{if((X|0)!=0){if((a[v]&1)==0){break}z=c[t>>2]|0;if((z-s|0)>=160){break}U=c[u>>2]|0;c[t>>2]=z+4;c[z>>2]=U}}while(0);h[l>>3]=+wU(N,c[r>>2]|0,k);uL(o,y,c[t>>2]|0,k);do{if(H){Y=0}else{t=c[E+12>>2]|0;if((t|0)==(c[E+16>>2]|0)){Z=cJ[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Z=c[t>>2]|0}if((Z|0)!=-1){Y=E;break}c[j>>2]=0;Y=0}}while(0);j=(Y|0)==0;do{if(P){I=3487}else{E=c[O+12>>2]|0;if((E|0)==(c[O+16>>2]|0)){_=cJ[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{_=c[E>>2]|0}if((_|0)==-1){c[f>>2]=0;I=3487;break}if(!(j^(O|0)==0)){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);do{if((I|0)==3487){if(j){break}$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;$=b|0;c[$>>2]=Y;qu(p);qu(o);i=e;return}function sQ(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+136|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+120|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;yC(n|0,0,12);u=p;qR(o,h);h=o|0;o=c[h>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;v=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-v>>2>>>0>l>>>0){w=c[v+(l<<2)>>2]|0;if((w|0)==0){break}x=w;y=m|0;z=c[(c[w>>2]|0)+48>>2]|0;cY[z&31](x,38304,38330,y)|0;x=c[h>>2]|0;p2(x)|0;yC(u|0,0,12);x=p;qx(p,10,0);if((a[u]&1)==0){z=x+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=x+1|0;C=z}c[q>>2]=A;z=r|0;c[s>>2]=z;c[t>>2]=0;x=f|0;w=g|0;D=p|0;E=p+4|0;F=A;G=c[x>>2]|0;L4041:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{J=c[I>>2]|0}if((J|0)!=-1){H=G;break}c[x>>2]=0;H=0}}while(0);I=(H|0)==0;K=c[w>>2]|0;do{if((K|0)==0){L=3519}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=cJ[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[w>>2]=0;L=3519;break}else{if(I^(K|0)==0){break}else{O=F;break L4041}}}}while(0);if((L|0)==3519){L=0;if(I){O=F;break}}K=d[u]|0;M=(K&1|0)==0;if(((c[q>>2]|0)-F|0)==((M?K>>>1:c[E>>2]|0)|0)){if(M){P=K>>>1;Q=K>>>1}else{K=c[E>>2]|0;P=K;Q=K}qx(p,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[D>>2]&-2)-1|0}qx(p,R,0);if((a[u]&1)==0){S=B}else{S=c[C>>2]|0}c[q>>2]=S+Q;T=S}else{T=F}K=H+12|0;M=c[K>>2]|0;U=H+16|0;if((M|0)==(c[U>>2]|0)){V=cJ[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[M>>2]|0}if((sR(V,16,T,q,t,0,n,z,s,y)|0)!=0){O=T;break}M=c[K>>2]|0;if((M|0)==(c[U>>2]|0)){U=c[(c[H>>2]|0)+40>>2]|0;cJ[U&255](H)|0;F=T;G=H;continue}else{c[K>>2]=M+4;F=T;G=H;continue}}a[O+3|0]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);G=st(O,c[10540]|0,13264,(F=i,i=i+8|0,c[F>>2]=k,F)|0)|0;i=F;if((G|0)!=1){c[j>>2]=4}G=c[x>>2]|0;do{if((G|0)==0){W=0}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){X=cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{X=c[F>>2]|0}if((X|0)!=-1){W=G;break}c[x>>2]=0;W=0}}while(0);x=(W|0)==0;G=c[w>>2]|0;do{if((G|0)==0){L=3564}else{F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0)){Y=cJ[c[(c[G>>2]|0)+36>>2]&255](G)|0}else{Y=c[F>>2]|0}if((Y|0)==-1){c[w>>2]=0;L=3564;break}if(!(x^(G|0)==0)){break}Z=b|0;c[Z>>2]=W;qu(p);qu(n);i=e;return}}while(0);do{if((L|0)==3564){if(x){break}Z=b|0;c[Z>>2]=W;qu(p);qu(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Z=b|0;c[Z>>2]=W;qu(p);qu(n);i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function sR(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(c[m+96>>2]|0)==(b|0);if(!p){if((c[m+100>>2]|0)!=(b|0)){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&(b|0)==(i|0)){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+104|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((c[i>>2]|0)==(b|0)){s=i;break}else{i=i+4|0}}i=s-m|0;m=i>>2;if((i|0)>92){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((m|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<88){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;s=a[38304+m|0]|0;b=c[g>>2]|0;c[g>>2]=b+1;a[b]=s;q=0;return q|0}}while(0);f=a[38304+m|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function sS(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;qR(k,d);d=k|0;k=c[d>>2]|0;if((c[10982]|0)!=-1){c[j>>2]=43928;c[j+4>>2]=30;c[j+8>>2]=0;qn(43928,j,258)}j=(c[10983]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}n=m;o=c[(c[m>>2]|0)+32>>2]|0;cY[o&31](n,38304,38330,e)|0;n=c[d>>2]|0;if((c[10886]|0)!=-1){c[h>>2]=43544;c[h+4>>2]=30;c[h+8>>2]=0;qn(43544,h,258)}o=(c[10887]|0)-1|0;m=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-m>>2>>>0>o>>>0){p=c[m+(o<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=cJ[c[(c[p>>2]|0)+16>>2]&255](q)|0;cH[c[(c[p>>2]|0)+20>>2]&255](b,q);q=c[d>>2]|0;p2(q)|0;i=g;return}}while(0);o=cr(4)|0;xW(o);bJ(o|0,35096,560)}}while(0);g=cr(4)|0;xW(g);bJ(g|0,35096,560)}function sT(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;qR(l,d);d=l|0;l=c[d>>2]|0;if((c[10982]|0)!=-1){c[k>>2]=43928;c[k+4>>2]=30;c[k+8>>2]=0;qn(43928,k,258)}k=(c[10983]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;p=c[(c[n>>2]|0)+32>>2]|0;cY[p&31](o,38304,38336,e)|0;o=c[d>>2]|0;if((c[10886]|0)!=-1){c[j>>2]=43544;c[j+4>>2]=30;c[j+8>>2]=0;qn(43544,j,258)}p=(c[10887]|0)-1|0;n=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-n>>2>>>0>p>>>0){q=c[n+(p<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=cJ[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=cJ[c[(c[s>>2]|0)+16>>2]&255](r)|0;cH[c[(c[q>>2]|0)+20>>2]&255](b,r);r=c[d>>2]|0;p2(r)|0;i=h;return}}while(0);p=cr(4)|0;xW(p);bJ(p|0,35096,560)}}while(0);h=cr(4)|0;xW(h);bJ(h|0,35096,560)}function sU(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if(b<<24>>24==i<<24>>24){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if(b<<24>>24==j<<24>>24){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+32|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((a[j]|0)==b<<24>>24){s=j;break}else{j=j+1|0}}j=s-o|0;if((j|0)>31){p=-1;return p|0}o=a[38304+j|0]|0;if((j|0)==22|(j|0)==23){a[f]=80;s=c[h>>2]|0;c[h>>2]=s+1;a[s]=o;p=0;return p|0}else if((j|0)==25|(j|0)==24){s=c[h>>2]|0;do{if((s|0)!=(g|0)){if((a[s-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=s+1;a[s]=o;p=0;return p|0}else{s=a[f]|0;do{if((o&95|0)==(s<<24>>24|0)){a[f]=s|-128;if((a[e]&1)==0){break}a[e]=0;g=d[k]|0;if((g&1|0)==0){t=g>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}g=c[m>>2]|0;if((g-l|0)>=160){break}b=c[n>>2]|0;c[m>>2]=g+4;c[g>>2]=b}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=o;if((j|0)>21){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}return 0}function sV(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;qR(j,b);b=j|0;j=c[b>>2]|0;if((c[10980]|0)!=-1){c[h>>2]=43920;c[h+4>>2]=30;c[h+8>>2]=0;qn(43920,h,258)}h=(c[10981]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}m=l;n=c[(c[l>>2]|0)+48>>2]|0;cY[n&31](m,38304,38330,d)|0;m=c[b>>2]|0;if((c[10884]|0)!=-1){c[g>>2]=43536;c[g+4>>2]=30;c[g+8>>2]=0;qn(43536,g,258)}n=(c[10885]|0)-1|0;l=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-l>>2>>>0>n>>>0){o=c[l+(n<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=cJ[c[(c[o>>2]|0)+16>>2]&255](p)|0;cH[c[(c[o>>2]|0)+20>>2]&255](a,p);p=c[b>>2]|0;p2(p)|0;i=f;return}}while(0);n=cr(4)|0;xW(n);bJ(n|0,35096,560)}}while(0);f=cr(4)|0;xW(f);bJ(f|0,35096,560)}function sW(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;qR(k,b);b=k|0;k=c[b>>2]|0;if((c[10980]|0)!=-1){c[j>>2]=43920;c[j+4>>2]=30;c[j+8>>2]=0;qn(43920,j,258)}j=(c[10981]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}n=m;o=c[(c[m>>2]|0)+48>>2]|0;cY[o&31](n,38304,38336,d)|0;n=c[b>>2]|0;if((c[10884]|0)!=-1){c[h>>2]=43536;c[h+4>>2]=30;c[h+8>>2]=0;qn(43536,h,258)}o=(c[10885]|0)-1|0;m=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-m>>2>>>0>o>>>0){p=c[m+(o<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=cJ[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=cJ[c[(c[r>>2]|0)+16>>2]&255](q)|0;cH[c[(c[p>>2]|0)+20>>2]&255](a,q);q=c[b>>2]|0;p2(q)|0;i=g;return}}while(0);o=cr(4)|0;xW(o);bJ(o|0,35096,560)}}while(0);g=cr(4)|0;xW(g);bJ(g|0,35096,560)}function sX(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if((b|0)==(i|0)){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if((b|0)==(j|0)){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+128|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((c[j>>2]|0)==(b|0)){s=j;break}else{j=j+4|0}}j=s-o|0;o=j>>2;if((j|0)>124){p=-1;return p|0}s=a[38304+o|0]|0;do{if((o|0)==25|(o|0)==24){b=c[h>>2]|0;do{if((b|0)!=(g|0)){if((a[b-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=b+1;a[b]=s;p=0;return p|0}else if((o|0)==22|(o|0)==23){a[f]=80}else{r=a[f]|0;if((s&95|0)!=(r<<24>>24|0)){break}a[f]=r|-128;if((a[e]&1)==0){break}a[e]=0;r=d[k]|0;if((r&1|0)==0){t=r>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}r=c[m>>2]|0;if((r-l|0)>=160){break}q=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=q}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=s;if((j|0)>84){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}function sY(a){a=a|0;p0(a|0);yr(a);return}function sZ(a){a=a|0;p0(a|0);return}function s_(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];cP[o&63](b,d,l,f,g,h&1);i=j;return}qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10886]|0)!=-1){c[k>>2]=43544;c[k+4>>2]=30;c[k+8>>2]=0;qn(43544,k,258)}k=(c[10887]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;p2(o)|0;o=c[l>>2]|0;if(h){cH[c[o+24>>2]&255](n,d)}else{cH[c[o+28>>2]&255](n,d)}d=n;o=n;l=a[o]|0;if((l&1)==0){p=d+1|0;q=p;r=p;s=n+8|0}else{p=n+8|0;q=c[p>>2]|0;r=d+1|0;s=p}p=e|0;d=n+4|0;t=q;u=l;while(1){if((u&1)==0){v=r}else{v=c[s>>2]|0}l=u&255;if((t|0)==(v+((l&1|0)==0?l>>>1:c[d>>2]|0)|0)){break}l=a[t]|0;w=c[p>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)!=(c[w+28>>2]|0)){c[x>>2]=y+1;a[y]=l;break}if((cW[c[(c[w>>2]|0)+52>>2]&255](w,l&255)|0)!=-1){break}c[p>>2]=0}}while(0);t=t+1|0;u=a[o]|0}c[b>>2]=c[p>>2];qu(n);i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function s$(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[21216]|0;a[q+1|0]=a[21217]|0;a[q+2|0]=a[21218]|0;a[q+3|0]=a[21219]|0;a[q+4|0]=a[21220]|0;a[q+5|0]=a[21221]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);v=s0(u,12,c[10540]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=3827;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=3827;break}w=k+2|0}else if((h|0)==32){w=q}else{x=3827}}while(0);if((x|0)==3827){w=u}x=l|0;qR(o,f);s1(u,w,q,x,m,n,o);p2(c[o>>2]|0)|0;c[p>>2]=c[e>>2];fK(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function s0(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=ca(d|0)|0;d=cb(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}ca(j|0)|0;i=g;return d|0}function s1(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[10982]|0)!=-1){c[n>>2]=43928;c[n+4>>2]=30;c[n+8>>2]=0;qn(43928,n,258)}n=(c[10983]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}r=k;s=c[p>>2]|0;if((c[10886]|0)!=-1){c[m>>2]=43544;c[m+4>>2]=30;c[m+8>>2]=0;qn(43544,m,258)}m=(c[10887]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}t=s;cH[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){p=c[(c[k>>2]|0)+32>>2]|0;cY[p&31](r,b,f,g)|0;c[j>>2]=g+(f-b)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=cW[c[(c[k>>2]|0)+28>>2]&255](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=cW[c[(c[p>>2]|0)+28>>2]&255](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+1;a[y]=q;q=cW[c[(c[p>>2]|0)+28>>2]&255](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+1;a[n]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=cJ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+1;a[I]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=cW[c[(c[p>>2]|0)+28>>2]&255](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+1;a[I]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-1|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=a[J]|0;a[J]=a[K]|0;a[K]=C;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;qu(o);i=l;return}else{L=g+(e-b)|0;c[h>>2]=L;qu(o);i=l;return}}function s2(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);t=s0(u,22,c[10540]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=3910;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=3910;break}w=l+2|0}else if((j|0)==32){w=r}else{x=3910}}while(0);if((x|0)==3910){w=u}x=m|0;qR(p,f);s1(u,w,r,x,n,o,p);p2(c[p>>2]|0)|0;c[q>>2]=c[e>>2];fK(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function s3(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[21216]|0;a[q+1|0]=a[21217]|0;a[q+2|0]=a[21218]|0;a[q+3|0]=a[21219]|0;a[q+4|0]=a[21220]|0;a[q+5|0]=a[21221]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);t=s0(u,12,c[10540]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=3935;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=3935;break}w=k+2|0}else if((h|0)==32){w=q}else{x=3935}}while(0);if((x|0)==3935){w=u}x=l|0;qR(o,f);s1(u,w,q,x,m,n,o);p2(c[o>>2]|0)|0;c[p>>2]=c[e>>2];fK(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function s4(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);t=s0(u,23,c[10540]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=3960;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=3960;break}w=l+2|0}else if((j|0)==32){w=r}else{x=3960}}while(0);if((x|0)==3960){w=u}x=m|0;qR(p,f);s1(u,w,r,x,n,o,p);p2(c[p>>2]|0)|0;c[q>>2]=c[e>>2];fK(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function s5(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=c[10540]|0;if(y){w=s0(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=s0(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[60448]|0)==0;if(y){do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);w=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yw();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=4016;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=4016;break}F=E+2|0}else if((B|0)==32){F=A}else{G=4016}}while(0);if((G|0)==4016){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=yj(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yw();H=0;I=0;J=c[m>>2]|0}}while(0);qR(q,f);s7(J,F,A,H,o,p,q);p2(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];fK(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){yk(I)}if((D|0)==0){i=d;return}yk(D);i=d;return}function s6(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=ca(b|0)|0;b=cv(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}ca(h|0)|0;i=f;return b|0}function s7(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[10982]|0)!=-1){c[n>>2]=43928;c[n+4>>2]=30;c[n+8>>2]=0;qn(43928,n,258)}n=(c[10983]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}r=k;s=c[p>>2]|0;if((c[10886]|0)!=-1){c[m>>2]=43544;c[m+4>>2]=30;c[m+8>>2]=0;qn(43544,m,258)}m=(c[10887]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}t=s;cH[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=cW[c[(c[k>>2]|0)+28>>2]&255](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=m;v=b+1|0}else{v=b}m=f;L4713:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=4082;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=4082;break}p=k;n=cW[c[(c[p>>2]|0)+28>>2]&255](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+1;a[q]=n;n=v+2|0;q=cW[c[(c[p>>2]|0)+28>>2]&255](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+1;a[u]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L4713}u=a[q]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((bm(u<<24>>24|0,c[10540]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=4082}}while(0);L4728:do{if((x|0)==4082){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L4728}q=a[w]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((ci(q<<24>>24|0,c[10540]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=4082}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){v=c[j>>2]|0;u=c[(c[k>>2]|0)+32>>2]|0;cY[u&31](r,z,y,v)|0;c[j>>2]=(c[j>>2]|0)+(y-z)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=cJ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+1;a[J]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=cW[c[(c[p>>2]|0)+28>>2]&255](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+1;a[J]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-1|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=a[K]|0;a[K]=a[L]|0;a[L]=D;K=K+1|0;L=L-1|0;}while(K>>>0<L>>>0)}}while(0);L4767:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=cW[c[(c[L>>2]|0)+28>>2]&255](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+1;a[z]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L4767}}L=cJ[c[(c[s>>2]|0)+12>>2]&255](t)|0;H=c[j>>2]|0;c[j>>2]=H+1;a[H]=L;M=K+1|0}else{M=y}}while(0);cY[c[(c[k>>2]|0)+32>>2]&31](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;qu(o);i=l;return}N=g+(e-b)|0;c[h>>2]=N;qu(o);i=l;return}function s8(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=c[10540]|0;if(y){w=s0(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=s0(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[60448]|0)==0;if(y){do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);w=s6(m,c[10540]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yw();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=4179;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=4179;break}F=E+2|0}else if((B|0)==32){F=A}else{G=4179}}while(0);if((G|0)==4179){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=yj(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yw();H=0;I=0;J=c[m>>2]|0}}while(0);qR(q,f);s7(J,F,A,H,o,p,q);p2(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];fK(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){yk(I)}if((D|0)==0){i=d;return}yk(D);i=d;return}function s9(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[21224]|0;a[o+1|0]=a[21225]|0;a[o+2|0]=a[21226]|0;a[o+3|0]=a[21227]|0;a[o+4|0]=a[21228]|0;a[o+5|0]=a[21229]|0;p=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);q=s0(p,20,c[10540]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=4212;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=4212;break}s=k+2|0}else if((h|0)==32){s=o}else{t=4212}}while(0);if((t|0)==4212){s=p}qR(m,f);t=m|0;m=c[t>>2]|0;if((c[10982]|0)!=-1){c[j>>2]=43928;c[j+4>>2]=30;c[j+8>>2]=0;qn(43928,j,258)}j=(c[10983]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}u=r;v=c[t>>2]|0;p2(v)|0;v=l|0;w=c[(c[r>>2]|0)+32>>2]|0;cY[w&31](u,p,o,v)|0;u=l+q|0;if((s|0)==(o|0)){x=u;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;fK(b,n,v,x,u,f,g);i=d;return}x=l+(s-k)|0;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;fK(b,n,v,x,u,f,g);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function ta(a){a=a|0;p0(a|0);yr(a);return}function tb(a){a=a|0;p0(a|0);return}function tc(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];cP[o&63](b,d,l,f,g,h&1);i=j;return}qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10884]|0)!=-1){c[k>>2]=43536;c[k+4>>2]=30;c[k+8>>2]=0;qn(43536,k,258)}k=(c[10885]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;p2(o)|0;o=c[l>>2]|0;if(h){cH[c[o+24>>2]&255](n,d)}else{cH[c[o+28>>2]&255](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=q}else{u=c[r>>2]|0}o=t&255;if((o&1|0)==0){v=o>>>1}else{v=c[q>>2]|0}if((s|0)==(u+(v<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=cW[c[(c[w>>2]|0)+52>>2]&255](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if((z|0)!=-1){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];qG(n);i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function td(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[21216]|0;a[q+1|0]=a[21217]|0;a[q+2|0]=a[21218]|0;a[q+3|0]=a[21219]|0;a[q+4|0]=a[21220]|0;a[q+5|0]=a[21221]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);v=s0(u,12,c[10540]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=4283;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=4283;break}w=k+2|0}else{x=4283}}while(0);if((x|0)==4283){w=u}x=l|0;qR(o,f);te(u,w,q,x,m,n,o);p2(c[o>>2]|0)|0;c[p>>2]=c[e>>2];tf(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function te(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[10980]|0)!=-1){c[n>>2]=43920;c[n+4>>2]=30;c[n+8>>2]=0;qn(43920,n,258)}n=(c[10981]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}r=k;s=c[p>>2]|0;if((c[10884]|0)!=-1){c[m>>2]=43536;c[m+4>>2]=30;c[m+8>>2]=0;qn(43536,m,258)}m=(c[10885]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}t=s;cH[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}do{if((v|0)==0){p=c[(c[k>>2]|0)+48>>2]|0;cY[p&31](r,b,f,g)|0;c[j>>2]=g+(f-b<<2)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=cW[c[(c[k>>2]|0)+44>>2]&255](r,p)|0;p=c[j>>2]|0;c[j>>2]=p+4;c[p>>2]=n;w=b+1|0}else{w=b}do{if((f-w|0)>1){if((a[w]|0)!=48){x=w;break}n=w+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){x=w;break}p=k;q=cW[c[(c[p>>2]|0)+44>>2]&255](r,48)|0;y=c[j>>2]|0;c[j>>2]=y+4;c[y>>2]=q;q=cW[c[(c[p>>2]|0)+44>>2]&255](r,a[n]|0)|0;n=c[j>>2]|0;c[j>>2]=n+4;c[n>>2]=q;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(f|0)){q=f-1|0;if(x>>>0<q>>>0){z=x;A=q}else{break}do{q=a[z]|0;a[z]=a[A]|0;a[A]=q;z=z+1|0;A=A-1|0;}while(z>>>0<A>>>0)}}while(0);q=cJ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(x>>>0<f>>>0){n=u+1|0;p=k;y=o+4|0;B=o+8|0;C=0;D=0;E=x;while(1){F=(a[m]&1)==0;do{if((a[(F?n:c[B>>2]|0)+D|0]|0)==0){G=D;H=C}else{if((C|0)!=(a[(F?n:c[B>>2]|0)+D|0]|0)){G=D;H=C;break}I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=q;I=d[m]|0;G=(D>>>0<(((I&1|0)==0?I>>>1:c[y>>2]|0)-1|0)>>>0)+D|0;H=0}}while(0);F=cW[c[(c[p>>2]|0)+44>>2]&255](r,a[E]|0)|0;I=c[j>>2]|0;c[j>>2]=I+4;c[I>>2]=F;F=E+1|0;if(F>>>0<f>>>0){C=H+1|0;D=G;E=F}else{break}}}E=g+(x-b<<2)|0;D=c[j>>2]|0;if((E|0)==(D|0)){break}C=D-4|0;if(E>>>0<C>>>0){J=E;K=C}else{break}do{C=c[J>>2]|0;c[J>>2]=c[K>>2];c[K>>2]=C;J=J+4|0;K=K-4|0;}while(J>>>0<K>>>0)}}while(0);if((e|0)==(f|0)){L=c[j>>2]|0;c[h>>2]=L;qu(o);i=l;return}else{L=g+(e-b<<2)|0;c[h>>2]=L;qu(o);i=l;return}}function tf(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((cM[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){qF(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((cM[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){qG(l);break}c[m>>2]=0;c[b>>2]=0;qG(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((cM[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function tg(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);v=s0(u,22,c[10540]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=4384;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=4384;break}w=l+2|0}else{x=4384}}while(0);if((x|0)==4384){w=u}x=m|0;qR(p,f);te(u,w,r,x,n,o,p);p2(c[p>>2]|0)|0;c[q>>2]=c[e>>2];tf(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function th(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[21216]|0;a[q+1|0]=a[21217]|0;a[q+2|0]=a[21218]|0;a[q+3|0]=a[21219]|0;a[q+4|0]=a[21220]|0;a[q+5|0]=a[21221]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);t=s0(u,12,c[10540]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=4409;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=4409;break}w=k+2|0}else if((h|0)==32){w=q}else{x=4409}}while(0);if((x|0)==4409){w=u}x=l|0;qR(o,f);te(u,w,q,x,m,n,o);p2(c[o>>2]|0)|0;c[p>>2]=c[e>>2];tf(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function ti(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);v=s0(u,23,c[10540]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=4434;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=4434;break}w=l+2|0}else if((j|0)==32){w=r}else{x=4434}}while(0);if((x|0)==4434){w=u}x=m|0;qR(p,f);te(u,w,r,x,n,o,p);p2(c[p>>2]|0)|0;c[q>>2]=c[e>>2];tf(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function tj(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=c[10540]|0;if(y){w=s0(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=s0(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[60448]|0)==0;if(y){do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);w=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yw();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=4490;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=4490;break}F=E+2|0}else{G=4490}}while(0);if((G|0)==4490){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=yj(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yw();H=B;I=B;J=c[m>>2]|0}}while(0);qR(q,f);tk(J,F,A,H,o,p,q);p2(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];tf(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){yk(I)}if((D|0)==0){i=d;return}yk(D);i=d;return}function tk(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[10980]|0)!=-1){c[n>>2]=43920;c[n+4>>2]=30;c[n+8>>2]=0;qn(43920,n,258)}n=(c[10981]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=cr(4)|0;s=r;xW(s);bJ(r|0,35096,560)}r=k;s=c[p>>2]|0;if((c[10884]|0)!=-1){c[m>>2]=43536;c[m+4>>2]=30;c[m+8>>2]=0;qn(43536,m,258)}m=(c[10885]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=cr(4)|0;u=t;xW(u);bJ(t|0,35096,560)}t=s;cH[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=cW[c[(c[k>>2]|0)+44>>2]&255](r,u)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=m;v=b+1|0}else{v=b}m=f;L5252:do{if((m-v|0)>1){if((a[v]|0)!=48){w=v;x=4545;break}u=v+1|0;p=a[u]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){w=v;x=4545;break}p=k;n=cW[c[(c[p>>2]|0)+44>>2]&255](r,48)|0;q=c[j>>2]|0;c[j>>2]=q+4;c[q>>2]=n;n=v+2|0;q=cW[c[(c[p>>2]|0)+44>>2]&255](r,a[u]|0)|0;u=c[j>>2]|0;c[j>>2]=u+4;c[u>>2]=q;q=n;while(1){if(q>>>0>=f>>>0){y=q;z=n;break L5252}u=a[q]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((bm(u<<24>>24|0,c[10540]|0)|0)==0){y=q;z=n;break}else{q=q+1|0}}}else{w=v;x=4545}}while(0);L5267:do{if((x|0)==4545){while(1){x=0;if(w>>>0>=f>>>0){y=w;z=v;break L5267}q=a[w]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((ci(q<<24>>24|0,c[10540]|0)|0)==0){y=w;z=v;break}else{w=w+1|0;x=4545}}}}while(0);x=o;w=o;v=d[w]|0;if((v&1|0)==0){A=v>>>1}else{A=c[o+4>>2]|0}do{if((A|0)==0){v=c[j>>2]|0;u=c[(c[k>>2]|0)+48>>2]|0;cY[u&31](r,z,y,v)|0;c[j>>2]=(c[j>>2]|0)+(y-z<<2)}else{do{if((z|0)!=(y|0)){v=y-1|0;if(z>>>0<v>>>0){B=z;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=cJ[c[(c[s>>2]|0)+16>>2]&255](t)|0;if(z>>>0<y>>>0){v=x+1|0;u=o+4|0;n=o+8|0;p=k;D=0;E=0;F=z;while(1){G=(a[w]&1)==0;do{if((a[(G?v:c[n>>2]|0)+E|0]|0)>0){if((D|0)!=(a[(G?v:c[n>>2]|0)+E|0]|0)){H=E;I=D;break}J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=q;J=d[w]|0;H=(E>>>0<(((J&1|0)==0?J>>>1:c[u>>2]|0)-1|0)>>>0)+E|0;I=0}else{H=E;I=D}}while(0);G=cW[c[(c[p>>2]|0)+44>>2]&255](r,a[F]|0)|0;J=c[j>>2]|0;c[j>>2]=J+4;c[J>>2]=G;G=F+1|0;if(G>>>0<y>>>0){D=I+1|0;E=H;F=G}else{break}}}F=g+(z-b<<2)|0;E=c[j>>2]|0;if((F|0)==(E|0)){break}D=E-4|0;if(F>>>0<D>>>0){K=F;L=D}else{break}do{D=c[K>>2]|0;c[K>>2]=c[L>>2];c[L>>2]=D;K=K+4|0;L=L-4|0;}while(K>>>0<L>>>0)}}while(0);L5306:do{if(y>>>0<f>>>0){L=k;K=y;while(1){z=a[K]|0;if(z<<24>>24==46){break}H=cW[c[(c[L>>2]|0)+44>>2]&255](r,z)|0;z=c[j>>2]|0;c[j>>2]=z+4;c[z>>2]=H;H=K+1|0;if(H>>>0<f>>>0){K=H}else{M=H;break L5306}}L=cJ[c[(c[s>>2]|0)+12>>2]&255](t)|0;H=c[j>>2]|0;c[j>>2]=H+4;c[H>>2]=L;M=K+1|0}else{M=y}}while(0);cY[c[(c[k>>2]|0)+48>>2]&31](r,M,f,c[j>>2]|0)|0;r=(c[j>>2]|0)+(m-M<<2)|0;c[j>>2]=r;if((e|0)==(f|0)){N=r;c[h>>2]=N;qu(o);i=l;return}N=g+(e-b<<2)|0;c[h>>2]=N;qu(o);i=l;return}function tl(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=c[10540]|0;if(y){w=s0(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=s0(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[60448]|0)==0;if(y){do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=s6(m,c[10540]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);w=s6(m,c[10540]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yw();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=4642;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=4642;break}F=E+2|0}else if((B|0)==32){F=A}else{G=4642}}while(0);if((G|0)==4642){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=yj(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yw();H=B;I=B;J=c[m>>2]|0}}while(0);qR(q,f);tk(J,F,A,H,o,p,q);p2(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];tf(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){yk(I)}if((D|0)==0){i=d;return}yk(D);i=d;return}function tm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[21224]|0;a[o+1|0]=a[21225]|0;a[o+2|0]=a[21226]|0;a[o+3|0]=a[21227]|0;a[o+4|0]=a[21228]|0;a[o+5|0]=a[21229]|0;p=k|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);q=s0(p,20,c[10540]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=4675;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=4675;break}s=k+2|0}else if((h|0)==32){s=o}else{t=4675}}while(0);if((t|0)==4675){s=p}qR(m,f);t=m|0;m=c[t>>2]|0;if((c[10980]|0)!=-1){c[j>>2]=43920;c[j+4>>2]=30;c[j+8>>2]=0;qn(43920,j,258)}j=(c[10981]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}u=r;v=c[t>>2]|0;p2(v)|0;v=l|0;w=c[(c[r>>2]|0)+48>>2]|0;cY[w&31](u,p,o,v)|0;u=l+(q<<2)|0;if((s|0)==(o|0)){x=u;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;tf(b,n,v,x,u,f,g);i=d;return}x=l+(s-k<<2)|0;y=e|0;z=c[y>>2]|0;A=n|0;c[A>>2]=z;tf(b,n,v,x,u,f,g);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function tn(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;qR(p,h);t=p|0;p=c[t>>2]|0;if((c[10982]|0)!=-1){c[o>>2]=43928;c[o+4>>2]=30;c[o+8>>2]=0;qn(43928,o,258)}o=(c[10983]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;x=c[t>>2]|0;p2(x)|0;c[j>>2]=0;x=f|0;L5436:do{if((l|0)==(m|0)){y=4754}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;L5438:while(1){J=I;while(1){if((J|0)!=0){y=4754;break L5436}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if((cJ[c[(c[K>>2]|0)+36>>2]&255](K)|0)!=-1){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;L5448:do{if((M|0)==0){y=4707}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if((cJ[c[(c[M>>2]|0)+36>>2]&255](M)|0)!=-1){break}c[z>>2]=0;y=4707;break L5448}}while(0);if(K){N=M}else{y=4708;break L5438}}}while(0);if((y|0)==4707){y=0;if(K){y=4708;break L5438}else{N=0}}if((cM[c[(c[A>>2]|0)+36>>2]&63](w,a[H]|0,0)|0)<<24>>24==37){y=4711;break}M=a[H]|0;if(M<<24>>24>=0){O=c[C>>2]|0;if((b[O+(M<<24>>24<<1)>>1]&8192)!=0){P=H;y=4722;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(cJ[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=cW[c[(c[B>>2]|0)+12>>2]&255](w,S)|0;if(M<<24>>24==(cW[c[(c[B>>2]|0)+12>>2]&255](w,a[H]|0)|0)<<24>>24){y=4749;break}c[j>>2]=4;J=4}L5466:do{if((y|0)==4749){y=0;J=c[Q>>2]|0;if((J|0)==(c[R>>2]|0)){M=c[(c[L>>2]|0)+40>>2]|0;cJ[M&255](L)|0}else{c[Q>>2]=J+1}T=H+1|0}else if((y|0)==4722){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){U=m;break}M=a[J]|0;if(M<<24>>24<0){U=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){U=J;break}else{P=J;y=4722}}K=L;J=N;while(1){do{if((K|0)==0){V=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){V=K;break}if((cJ[c[(c[K>>2]|0)+36>>2]&255](K)|0)!=-1){V=K;break}c[x>>2]=0;V=0}}while(0);M=(V|0)==0;do{if((J|0)==0){y=4735}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(M){W=J;break}else{T=U;break L5466}}if((cJ[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;y=4735;break}else{if(M^(J|0)==0){W=J;break}else{T=U;break L5466}}}}while(0);if((y|0)==4735){y=0;if(M){T=U;break L5466}else{W=0}}X=V+12|0;Y=c[X>>2]|0;Z=V+16|0;if((Y|0)==(c[Z>>2]|0)){_=(cJ[c[(c[V>>2]|0)+36>>2]&255](V)|0)&255}else{_=a[Y]|0}if(_<<24>>24<0){T=U;break L5466}if((b[(c[C>>2]|0)+(_<<24>>24<<1)>>1]&8192)==0){T=U;break L5466}Y=c[X>>2]|0;if((Y|0)==(c[Z>>2]|0)){Z=c[(c[V>>2]|0)+40>>2]|0;cJ[Z&255](V)|0;K=V;J=W;continue}else{c[X>>2]=Y+1;K=V;J=W;continue}}}else if((y|0)==4711){y=0;J=H+1|0;if((J|0)==(m|0)){y=4712;break L5438}K=cM[c[(c[A>>2]|0)+36>>2]&63](w,a[J]|0,0)|0;if((K<<24>>24|0)==69|(K<<24>>24|0)==48){Y=H+2|0;if((Y|0)==(m|0)){y=4715;break L5438}$=K;aa=cM[c[(c[A>>2]|0)+36>>2]&63](w,a[Y]|0,0)|0;ab=Y}else{$=0;aa=K;ab=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;cV[J&7](q,e,r,s,h,j,k,aa,$);c[x>>2]=c[G>>2];T=ab+1|0}}while(0);if((T|0)==(m|0)){y=4754;break L5436}H=T;I=c[j>>2]|0}if((y|0)==4708){c[j>>2]=4;ac=L;break}else if((y|0)==4712){c[j>>2]=4;ac=L;break}else if((y|0)==4715){c[j>>2]=4;ac=L;break}}}while(0);if((y|0)==4754){ac=c[x>>2]|0}w=f|0;do{if((ac|0)!=0){if((c[ac+12>>2]|0)!=(c[ac+16>>2]|0)){break}if((cJ[c[(c[ac>>2]|0)+36>>2]&255](ac)|0)!=-1){break}c[w>>2]=0}}while(0);x=c[w>>2]|0;v=(x|0)==0;I=g|0;H=c[I>>2]|0;L5524:do{if((H|0)==0){y=4764}else{do{if((c[H+12>>2]|0)==(c[H+16>>2]|0)){if((cJ[c[(c[H>>2]|0)+36>>2]&255](H)|0)!=-1){break}c[I>>2]=0;y=4764;break L5524}}while(0);if(!v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);do{if((y|0)==4764){if(v){break}ad=d|0;c[ad>>2]=x;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ad=d|0;c[ad>>2]=x;i=n;return}}while(0);n=cr(4)|0;xW(n);bJ(n|0,35096,560)}function to(a){a=a|0;p0(a|0);yr(a);return}function tp(a){a=a|0;p0(a|0);return}function tq(a){a=a|0;return 2}function tr(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];tn(a,b,k,l,f,g,h,21208,21216);i=j;return}function ts(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=cJ[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=o;e=a[o]|0;if((e&1)==0){p=f+1|0;q=f+1|0}else{f=c[o+8>>2]|0;p=f;q=f}f=e&255;if((f&1|0)==0){r=f>>>1}else{r=c[o+4>>2]|0}tn(b,d,l,m,g,h,j,q,p+r|0);i=k;return}function tt(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;p2(o)|0;o=c[e>>2]|0;q=b+8|0;r=cJ[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=o;o=(r8(d,k,r,r+168|0,p,g,0)|0)-r|0;if((o|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((o|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function tu(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;p2(o)|0;o=c[e>>2]|0;q=b+8|0;r=cJ[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=o;o=(r8(d,k,r,r+288|0,p,g,0)|0)-r|0;if((o|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((o|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function tv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;qR(l,f);f=l|0;l=c[f>>2]|0;if((c[10982]|0)!=-1){c[k>>2]=43928;c[k+4>>2]=30;c[k+8>>2]=0;qn(43928,k,258)}k=(c[10983]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[f>>2]|0;p2(n)|0;c[j>>2]=c[e>>2];n=tA(d,j,g,o,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((n|0)<69){s=n+2e3|0}else{s=(n-69|0)>>>0<31>>>0?n+1900|0:n}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=cr(4)|0;xW(b);bJ(b|0,35096,560)}function tw(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;qR(z,g);_=z|0;z=c[_>>2]|0;if((c[10982]|0)!=-1){c[y>>2]=43928;c[y+4>>2]=30;c[y+8>>2]=0;qn(43928,y,258)}y=(c[10983]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;aa=c[_>>2]|0;p2(aa)|0;L5601:do{switch(k<<24>>24|0){case 72:{c[u>>2]=c[f>>2];aa=tA(e,u,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<24){c[j+8>>2]=aa;break L5601}else{c[h>>2]=ac|4;break L5601}break};case 121:{c[n>>2]=c[f>>2];ac=tA(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L5601}if((ac|0)<69){ad=ac+2e3|0}else{ad=(ac-69|0)>>>0<31>>>0?ac+1900|0:ac}c[j+20>>2]=ad-1900;break};case 73:{ac=j+8|0;c[t>>2]=c[f>>2];aa=tA(e,t,h,ab,2)|0;ae=c[h>>2]|0;do{if((ae&4|0)==0){if((aa-1|0)>>>0>=12>>>0){break}c[ac>>2]=aa;break L5601}}while(0);c[h>>2]=ae|4;break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];tn(O,d,P,Q,g,h,j,21168,21173);c[aa>>2]=c[O>>2];break};case 84:{aa=e|0;c[S>>2]=c[aa>>2];c[T>>2]=c[f>>2];tn(R,d,S,T,g,h,j,21160,21168);c[aa>>2]=c[R>>2];break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];cT[aa&127](b,d,U,V,g,h,j);i=l;return};case 88:{aa=d+8|0;ac=cJ[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];af=ac;ag=a[ac]|0;if((ag&1)==0){ah=af+1|0;ai=af+1|0}else{af=c[ac+8>>2]|0;ah=af;ai=af}af=ag&255;if((af&1|0)==0){aj=af>>>1}else{aj=c[ac+4>>2]|0}tn(W,d,X,Y,g,h,j,ai,ah+aj|0);c[aa>>2]=c[W>>2];break};case 98:case 66:case 104:{aa=c[f>>2]|0;ac=d+8|0;af=cJ[c[(c[ac>>2]|0)+4>>2]&255](ac)|0;c[w>>2]=aa;aa=(r8(e,w,af,af+288|0,ab,h,0)|0)-af|0;if((aa|0)>=288){break L5601}c[j+16>>2]=((aa|0)/12|0|0)%12|0;break};case 70:{aa=e|0;c[H>>2]=c[aa>>2];c[I>>2]=c[f>>2];tn(G,d,H,I,g,h,j,21192,21200);c[aa>>2]=c[G>>2];break};case 110:case 116:{c[J>>2]=c[f>>2];tx(0,e,J,h,ab);break};case 99:{aa=d+8|0;af=cJ[c[(c[aa>>2]|0)+12>>2]&255](aa)|0;aa=e|0;c[B>>2]=c[aa>>2];c[C>>2]=c[f>>2];ac=af;ag=a[af]|0;if((ag&1)==0){ak=ac+1|0;al=ac+1|0}else{ac=c[af+8>>2]|0;ak=ac;al=ac}ac=ag&255;if((ac&1|0)==0){am=ac>>>1}else{am=c[af+4>>2]|0}tn(A,d,B,C,g,h,j,al,ak+am|0);c[aa>>2]=c[A>>2];break};case 106:{c[s>>2]=c[f>>2];aa=tA(e,s,h,ab,3)|0;af=c[h>>2]|0;if((af&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break L5601}else{c[h>>2]=af|4;break L5601}break};case 119:{c[o>>2]=c[f>>2];af=tA(e,o,h,ab,1)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(af|0)<7){c[j+24>>2]=af;break L5601}else{c[h>>2]=aa|4;break L5601}break};case 97:case 65:{aa=c[f>>2]|0;af=d+8|0;ac=cJ[c[c[af>>2]>>2]&255](af)|0;c[x>>2]=aa;aa=(r8(e,x,ac,ac+168|0,ab,h,0)|0)-ac|0;if((aa|0)>=168){break L5601}c[j+24>>2]=((aa|0)/12|0|0)%7|0;break};case 77:{c[q>>2]=c[f>>2];aa=tA(e,q,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<60){c[j+4>>2]=aa;break L5601}else{c[h>>2]=ac|4;break L5601}break};case 112:{c[K>>2]=c[f>>2];ty(d,j+8|0,e,K,h,ab);break};case 37:{c[Z>>2]=c[f>>2];tz(0,e,Z,h,ab);break};case 114:{ac=e|0;c[M>>2]=c[ac>>2];c[N>>2]=c[f>>2];tn(L,d,M,N,g,h,j,21176,21187);c[ac>>2]=c[L>>2];break};case 68:{ac=e|0;c[E>>2]=c[ac>>2];c[F>>2]=c[f>>2];tn(D,d,E,F,g,h,j,21200,21208);c[ac>>2]=c[D>>2];break};case 100:case 101:{ac=j+12|0;c[v>>2]=c[f>>2];aa=tA(e,v,h,ab,2)|0;af=c[h>>2]|0;do{if((af&4|0)==0){if((aa-1|0)>>>0>=31>>>0){break}c[ac>>2]=aa;break L5601}}while(0);c[h>>2]=af|4;break};case 89:{c[m>>2]=c[f>>2];aa=tA(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L5601}c[j+20>>2]=aa-1900;break};case 83:{c[p>>2]=c[f>>2];aa=tA(e,p,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<61){c[j>>2]=aa;break L5601}else{c[h>>2]=ac|4;break L5601}break};case 109:{c[r>>2]=c[f>>2];ac=(tA(e,r,h,ab,2)|0)-1|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<12){c[j+16>>2]=ac;break L5601}else{c[h>>2]=aa|4;break L5601}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=cr(4)|0;xW(l);bJ(l|0,35096,560)}function tx(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;L5682:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((cJ[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;L5691:do{if((l|0)==0){m=4904}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if((cJ[c[(c[l>>2]|0)+36>>2]&255](l)|0)!=-1){break}c[e>>2]=0;m=4904;break L5691}}while(0);if(h){n=l;o=0}else{p=l;q=0;break L5682}}}while(0);if((m|0)==4904){m=0;if(h){p=0;q=1;break}else{n=0;o=1}}l=c[j>>2]|0;r=c[l+12>>2]|0;if((r|0)==(c[l+16>>2]|0)){s=(cJ[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{s=a[r]|0}if(s<<24>>24<0){p=n;q=o;break}if((b[(c[f>>2]|0)+(s<<24>>24<<1)>>1]&8192)==0){p=n;q=o;break}r=c[j>>2]|0;l=r+12|0;t=c[l>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;cJ[u&255](r)|0;continue}else{c[l>>2]=t+1;continue}}o=c[j>>2]|0;do{if((o|0)==0){v=0}else{if((c[o+12>>2]|0)!=(c[o+16>>2]|0)){v=o;break}if((cJ[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1){c[j>>2]=0;v=0;break}else{v=c[j>>2]|0;break}}}while(0);j=(v|0)==0;do{if(q){m=4923}else{if((c[p+12>>2]|0)!=(c[p+16>>2]|0)){if(!(j^(p|0)==0)){break}i=d;return}if((cJ[c[(c[p>>2]|0)+36>>2]&255](p)|0)==-1){c[e>>2]=0;m=4923;break}if(!j){break}i=d;return}}while(0);do{if((m|0)==4923){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function ty(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=cJ[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=r8(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function tz(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;L5765:do{if((e|0)==0){k=4961}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((cJ[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[j>>2]=0;k=4961;break L5765}}while(0);if(d){l=e;m=0}else{k=4962}}}while(0);if((k|0)==4961){if(d){k=4962}else{l=0;m=1}}if((k|0)==4962){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){n=(cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{n=a[e]|0}if((cM[c[(c[g>>2]|0)+36>>2]&63](g,n,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;i=b;return}n=c[h>>2]|0;g=n+12|0;e=c[g>>2]|0;if((e|0)==(c[n+16>>2]|0)){d=c[(c[n>>2]|0)+40>>2]|0;cJ[d&255](n)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){o=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){o=e;break}if((cJ[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;o=0;break}else{o=c[h>>2]|0;break}}}while(0);h=(o|0)==0;do{if(m){k=4981}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(!(h^(l|0)==0)){break}i=b;return}if((cJ[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[j>>2]=0;k=4981;break}if(!h){break}i=b;return}}while(0);do{if((k|0)==4981){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function tA(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;L5819:do{if((e|0)==0){m=5001}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((cJ[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[l>>2]=0;m=5001;break L5819}}while(0);if(d){n=e}else{m=5002}}}while(0);if((m|0)==5001){if(d){m=5002}else{n=0}}if((m|0)==5002){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(p<<24>>24>=0){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(cM[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;cJ[u&255](r)|0;v=q;w=h;x=n}else{c[s>>2]=t+1;v=q;w=h;x=n}while(1){y=v-48|0;q=w-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((cJ[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;if((x|0)==0){A=z;B=0}else{do{if((c[x+12>>2]|0)==(c[x+16>>2]|0)){if((cJ[c[(c[x>>2]|0)+36>>2]&255](x)|0)!=-1){C=x;break}c[l>>2]=0;C=0}else{C=x}}while(0);A=c[k>>2]|0;B=C}D=(B|0)==0;if(!((t^D)&(q|0)>0)){m=5031;break}s=c[A+12>>2]|0;if((s|0)==(c[A+16>>2]|0)){E=(cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{E=a[s]|0}if(E<<24>>24<0){o=y;m=5047;break}if((b[(c[e>>2]|0)+(E<<24>>24<<1)>>1]&2048)==0){o=y;m=5044;break}s=((cM[c[(c[d>>2]|0)+36>>2]&63](g,E,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;u=r+12|0;F=c[u>>2]|0;if((F|0)==(c[r+16>>2]|0)){G=c[(c[r>>2]|0)+40>>2]|0;cJ[G&255](r)|0;v=s;w=q;x=B;continue}else{c[u>>2]=F+1;v=s;w=q;x=B;continue}}if((m|0)==5031){do{if((A|0)==0){H=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){H=A;break}if((cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[k>>2]=0;H=0;break}else{H=c[k>>2]|0;break}}}while(0);d=(H|0)==0;L5876:do{if(D){m=5041}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){break}c[l>>2]=0;m=5041;break L5876}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==5041){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==5044){i=j;return o|0}else if((m|0)==5047){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function tB(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;qR(n,f);r=n|0;n=c[r>>2]|0;if((c[10980]|0)!=-1){c[m>>2]=43920;c[m+4>>2]=30;c[m+8>>2]=0;qn(43920,m,258)}m=(c[10981]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;v=c[r>>2]|0;p2(v)|0;c[g>>2]=0;v=d|0;L5899:do{if((j|0)==(k|0)){w=5121}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;L5901:while(1){H=G;while(1){if((H|0)!=0){w=5121;break L5899}I=c[v>>2]|0;do{if((I|0)==0){J=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){L=cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{L=c[K>>2]|0}if((L|0)!=-1){J=I;break}c[v>>2]=0;J=0}}while(0);I=(J|0)==0;K=c[x>>2]|0;do{if((K|0)==0){w=5073}else{M=c[K+12>>2]|0;if((M|0)==(c[K+16>>2]|0)){N=cJ[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{N=c[M>>2]|0}if((N|0)==-1){c[x>>2]=0;w=5073;break}else{if(I^(K|0)==0){O=K;break}else{w=5075;break L5901}}}}while(0);if((w|0)==5073){w=0;if(I){w=5075;break L5901}else{O=0}}if((cM[c[(c[y>>2]|0)+52>>2]&63](u,c[F>>2]|0,0)|0)<<24>>24==37){w=5078;break}if(cM[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[F>>2]|0)|0){P=F;w=5088;break}Q=J+12|0;K=c[Q>>2]|0;R=J+16|0;if((K|0)==(c[R>>2]|0)){S=cJ[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{S=c[K>>2]|0}K=cW[c[(c[A>>2]|0)+28>>2]&255](u,S)|0;if((K|0)==(cW[c[(c[A>>2]|0)+28>>2]&255](u,c[F>>2]|0)|0)){w=5116;break}c[g>>2]=4;H=4}L5933:do{if((w|0)==5116){w=0;H=c[Q>>2]|0;if((H|0)==(c[R>>2]|0)){K=c[(c[J>>2]|0)+40>>2]|0;cJ[K&255](J)|0}else{c[Q>>2]=H+4}T=F+4|0}else if((w|0)==5078){w=0;H=F+4|0;if((H|0)==(k|0)){w=5079;break L5901}K=cM[c[(c[y>>2]|0)+52>>2]&63](u,c[H>>2]|0,0)|0;if((K<<24>>24|0)==69|(K<<24>>24|0)==48){M=F+8|0;if((M|0)==(k|0)){w=5082;break L5901}U=K;V=cM[c[(c[y>>2]|0)+52>>2]&63](u,c[M>>2]|0,0)|0;W=M}else{U=0;V=K;W=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=J;c[D>>2]=O;cV[H&7](o,b,p,q,f,g,h,V,U);c[v>>2]=c[E>>2];T=W+4|0}else if((w|0)==5088){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(cM[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[H>>2]|0)|0){P=H;w=5088}else{X=H;break}}I=J;H=O;while(1){do{if((I|0)==0){Y=0}else{K=c[I+12>>2]|0;if((K|0)==(c[I+16>>2]|0)){Z=cJ[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{Z=c[K>>2]|0}if((Z|0)!=-1){Y=I;break}c[v>>2]=0;Y=0}}while(0);K=(Y|0)==0;do{if((H|0)==0){w=5103}else{M=c[H+12>>2]|0;if((M|0)==(c[H+16>>2]|0)){_=cJ[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{_=c[M>>2]|0}if((_|0)==-1){c[x>>2]=0;w=5103;break}else{if(K^(H|0)==0){$=H;break}else{T=X;break L5933}}}}while(0);if((w|0)==5103){w=0;if(K){T=X;break L5933}else{$=0}}M=Y+12|0;aa=c[M>>2]|0;ab=Y+16|0;if((aa|0)==(c[ab>>2]|0)){ac=cJ[c[(c[Y>>2]|0)+36>>2]&255](Y)|0}else{ac=c[aa>>2]|0}if(!(cM[c[(c[z>>2]|0)+12>>2]&63](u,8192,ac)|0)){T=X;break L5933}aa=c[M>>2]|0;if((aa|0)==(c[ab>>2]|0)){ab=c[(c[Y>>2]|0)+40>>2]|0;cJ[ab&255](Y)|0;I=Y;H=$;continue}else{c[M>>2]=aa+4;I=Y;H=$;continue}}}}while(0);if((T|0)==(k|0)){w=5121;break L5899}F=T;G=c[g>>2]|0}if((w|0)==5082){c[g>>2]=4;ad=J;break}else if((w|0)==5075){c[g>>2]=4;ad=J;break}else if((w|0)==5079){c[g>>2]=4;ad=J;break}}}while(0);if((w|0)==5121){ad=c[v>>2]|0}u=d|0;do{if((ad|0)!=0){t=c[ad+12>>2]|0;if((t|0)==(c[ad+16>>2]|0)){ae=cJ[c[(c[ad>>2]|0)+36>>2]&255](ad)|0}else{ae=c[t>>2]|0}if((ae|0)!=-1){break}c[u>>2]=0}}while(0);v=c[u>>2]|0;t=(v|0)==0;G=e|0;F=c[G>>2]|0;do{if((F|0)==0){w=5134}else{z=c[F+12>>2]|0;if((z|0)==(c[F+16>>2]|0)){af=cJ[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{af=c[z>>2]|0}if((af|0)==-1){c[G>>2]=0;w=5134;break}if(!(t^(F|0)==0)){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);do{if((w|0)==5134){if(t){break}ag=a|0;c[ag>>2]=v;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ag=a|0;c[ag>>2]=v;i=l;return}}while(0);l=cr(4)|0;xW(l);bJ(l|0,35096,560)}function tC(a){a=a|0;p0(a|0);yr(a);return}function tD(a){a=a|0;p0(a|0);return}function tE(a){a=a|0;return 2}function tF(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];tB(a,b,k,l,f,g,h,21128,21160);i=j;return}function tG(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=cJ[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=o+4|0;q=o+4|0}else{e=c[o+8>>2]|0;p=e;q=e}e=f&255;if((e&1|0)==0){r=e>>>1}else{r=c[o+4>>2]|0}tB(b,d,l,m,g,h,j,q,p+(r<<2)|0);i=k;return}function tH(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;p2(o)|0;o=c[e>>2]|0;q=b+8|0;r=cJ[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=o;o=(sx(d,k,r,r+168|0,p,g,0)|0)-r|0;if((o|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((o|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function tI(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;qR(m,f);f=m|0;m=c[f>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}p=o;o=c[f>>2]|0;p2(o)|0;o=c[e>>2]|0;q=b+8|0;r=cJ[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=o;o=(sx(d,k,r,r+288|0,p,g,0)|0)-r|0;if((o|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((o|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=cr(4)|0;xW(j);bJ(j|0,35096,560)}function tJ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;qR(l,f);f=l|0;l=c[f>>2]|0;if((c[10980]|0)!=-1){c[k>>2]=43920;c[k+4>>2]=30;c[k+8>>2]=0;qn(43920,k,258)}k=(c[10981]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[f>>2]|0;p2(n)|0;c[j>>2]=c[e>>2];n=tO(d,j,g,o,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((n|0)<69){s=n+2e3|0}else{s=(n-69|0)>>>0<31>>>0?n+1900|0:n}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=cr(4)|0;xW(b);bJ(b|0,35096,560)}function tK(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;qR(z,g);_=z|0;z=c[_>>2]|0;if((c[10980]|0)!=-1){c[y>>2]=43920;c[y+4>>2]=30;c[y+8>>2]=0;qn(43920,y,258)}y=(c[10981]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ab=aa;aa=c[_>>2]|0;p2(aa)|0;L6076:do{switch(k<<24>>24|0){case 99:{aa=d+8|0;ac=cJ[c[(c[aa>>2]|0)+12>>2]&255](aa)|0;aa=e|0;c[B>>2]=c[aa>>2];c[C>>2]=c[f>>2];ad=a[ac]|0;if((ad&1)==0){ae=ac+4|0;af=ac+4|0}else{ag=c[ac+8>>2]|0;ae=ag;af=ag}ag=ad&255;if((ag&1|0)==0){ah=ag>>>1}else{ah=c[ac+4>>2]|0}tB(A,d,B,C,g,h,j,af,ae+(ah<<2)|0);c[aa>>2]=c[A>>2];break};case 72:{c[u>>2]=c[f>>2];aa=tO(e,u,h,ab,2)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<24){c[j+8>>2]=aa;break L6076}else{c[h>>2]=ac|4;break L6076}break};case 83:{c[p>>2]=c[f>>2];ac=tO(e,p,h,ab,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<61){c[j>>2]=ac;break L6076}else{c[h>>2]=aa|4;break L6076}break};case 98:case 66:case 104:{aa=c[f>>2]|0;ac=d+8|0;ag=cJ[c[(c[ac>>2]|0)+4>>2]&255](ac)|0;c[w>>2]=aa;aa=(sx(e,w,ag,ag+288|0,ab,h,0)|0)-ag|0;if((aa|0)>=288){break L6076}c[j+16>>2]=((aa|0)/12|0|0)%12|0;break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];tB(O,d,P,Q,g,h,j,21024,21044);c[aa>>2]=c[O>>2];break};case 97:case 65:{aa=c[f>>2]|0;ag=d+8|0;ac=cJ[c[c[ag>>2]>>2]&255](ag)|0;c[x>>2]=aa;aa=(sx(e,x,ac,ac+168|0,ab,h,0)|0)-ac|0;if((aa|0)>=168){break L6076}c[j+24>>2]=((aa|0)/12|0|0)%7|0;break};case 70:{aa=e|0;c[H>>2]=c[aa>>2];c[I>>2]=c[f>>2];tB(G,d,H,I,g,h,j,20960,20992);c[aa>>2]=c[G>>2];break};case 100:case 101:{aa=j+12|0;c[v>>2]=c[f>>2];ac=tO(e,v,h,ab,2)|0;ag=c[h>>2]|0;do{if((ag&4|0)==0){if((ac-1|0)>>>0>=31>>>0){break}c[aa>>2]=ac;break L6076}}while(0);c[h>>2]=ag|4;break};case 109:{c[r>>2]=c[f>>2];ac=(tO(e,r,h,ab,2)|0)-1|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<12){c[j+16>>2]=ac;break L6076}else{c[h>>2]=aa|4;break L6076}break};case 73:{aa=j+8|0;c[t>>2]=c[f>>2];ac=tO(e,t,h,ab,2)|0;ad=c[h>>2]|0;do{if((ad&4|0)==0){if((ac-1|0)>>>0>=12>>>0){break}c[aa>>2]=ac;break L6076}}while(0);c[h>>2]=ad|4;break};case 84:{ac=e|0;c[S>>2]=c[ac>>2];c[T>>2]=c[f>>2];tB(R,d,S,T,g,h,j,20992,21024);c[ac>>2]=c[R>>2];break};case 89:{c[m>>2]=c[f>>2];ac=tO(e,m,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L6076}c[j+20>>2]=ac-1900;break};case 106:{c[s>>2]=c[f>>2];ac=tO(e,s,h,ab,3)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<366){c[j+28>>2]=ac;break L6076}else{c[h>>2]=aa|4;break L6076}break};case 119:{c[o>>2]=c[f>>2];aa=tO(e,o,h,ab,1)|0;ac=c[h>>2]|0;if((ac&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break L6076}else{c[h>>2]=ac|4;break L6076}break};case 68:{ac=e|0;c[E>>2]=c[ac>>2];c[F>>2]=c[f>>2];tB(D,d,E,F,g,h,j,21096,21128);c[ac>>2]=c[D>>2];break};case 77:{c[q>>2]=c[f>>2];ac=tO(e,q,h,ab,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ac|0)<60){c[j+4>>2]=ac;break L6076}else{c[h>>2]=aa|4;break L6076}break};case 121:{c[n>>2]=c[f>>2];aa=tO(e,n,h,ab,4)|0;if((c[h>>2]&4|0)!=0){break L6076}if((aa|0)<69){ai=aa+2e3|0}else{ai=(aa-69|0)>>>0<31>>>0?aa+1900|0:aa}c[j+20>>2]=ai-1900;break};case 112:{c[K>>2]=c[f>>2];tM(d,j+8|0,e,K,h,ab);break};case 37:{c[Z>>2]=c[f>>2];tN(0,e,Z,h,ab);break};case 110:case 116:{c[J>>2]=c[f>>2];tL(0,e,J,h,ab);break};case 114:{aa=e|0;c[M>>2]=c[aa>>2];c[N>>2]=c[f>>2];tB(L,d,M,N,g,h,j,21048,21092);c[aa>>2]=c[L>>2];break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];cT[aa&127](b,d,U,V,g,h,j);i=l;return};case 88:{aa=d+8|0;ac=cJ[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];ag=a[ac]|0;if((ag&1)==0){aj=ac+4|0;ak=ac+4|0}else{al=c[ac+8>>2]|0;aj=al;ak=al}al=ag&255;if((al&1|0)==0){am=al>>>1}else{am=c[ac+4>>2]|0}tB(W,d,X,Y,g,h,j,ak,aj+(am<<2)|0);c[aa>>2]=c[W>>2];break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=cr(4)|0;xW(l);bJ(l|0,35096,560)}function tL(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;L6157:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=cJ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=5278}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=cJ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=5278;break}else{k=(h|0)==0;if(j^k){o=h;p=k;break}else{q=h;r=k;break L6157}}}}while(0);if((m|0)==5278){m=0;if(j){q=0;r=1;break}else{o=0;p=1}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){s=cJ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{s=c[k>>2]|0}if(!(cM[c[(c[d>>2]|0)+12>>2]&63](f,8192,s)|0)){q=o;r=p;break}k=c[g>>2]|0;h=k+12|0;t=c[h>>2]|0;if((t|0)==(c[k+16>>2]|0)){u=c[(c[k>>2]|0)+40>>2]|0;cJ[u&255](k)|0;continue}else{c[h>>2]=t+4;continue}}p=c[g>>2]|0;do{if((p|0)==0){v=1}else{o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0)){w=cJ[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{w=c[o>>2]|0}if((w|0)==-1){c[g>>2]=0;v=1;break}else{v=(c[g>>2]|0)==0;break}}}while(0);do{if(r){m=5300}else{g=c[q+12>>2]|0;if((g|0)==(c[q+16>>2]|0)){x=cJ[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{x=c[g>>2]|0}if((x|0)==-1){c[b>>2]=0;m=5300;break}if(!(v^(q|0)==0)){break}i=a;return}}while(0);do{if((m|0)==5300){if(v){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function tM(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=cJ[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=sx(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function tN(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=cJ[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=5340}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=5340;break}else{b=(d|0)==0;if(h^b){n=d;o=b;break}else{l=5342;break}}}}while(0);if((l|0)==5340){if(h){l=5342}else{n=0;o=1}}if((l|0)==5342){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){p=cJ[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{p=c[d>>2]|0}if((cM[c[(c[f>>2]|0)+52>>2]&63](f,p,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;i=a;return}p=c[g>>2]|0;f=p+12|0;d=c[f>>2]|0;if((d|0)==(c[p+16>>2]|0)){h=c[(c[p>>2]|0)+40>>2]|0;cJ[h&255](p)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){q=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){r=cJ[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{r=c[f>>2]|0}if((r|0)==-1){c[g>>2]=0;q=1;break}else{q=(c[g>>2]|0)==0;break}}}while(0);do{if(o){l=5364}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){s=cJ[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{s=c[g>>2]|0}if((s|0)==-1){c[k>>2]=0;l=5364;break}if(!(q^(n|0)==0)){break}i=a;return}}while(0);do{if((l|0)==5364){if(q){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function tO(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=cJ[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=5386}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=cJ[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=5386;break}else{if(j^(b|0)==0){o=b;break}else{m=5388;break}}}}while(0);if((m|0)==5386){if(j){m=5388}else{o=0}}if((m|0)==5388){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=cJ[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(cM[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(cM[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){r=c[(c[q>>2]|0)+40>>2]|0;cJ[r&255](q)|0;s=n;t=f;u=o}else{c[a>>2]=k+4;s=n;t=f;u=o}while(1){v=s-48|0;o=t-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=0}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=cJ[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=0;break}else{w=c[h>>2]|0;break}}}while(0);f=(w|0)==0;if((u|0)==0){y=w;z=0}else{n=c[u+12>>2]|0;if((n|0)==(c[u+16>>2]|0)){A=cJ[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{A=c[n>>2]|0}if((A|0)==-1){c[l>>2]=0;B=0}else{B=u}y=c[h>>2]|0;z=B}C=(z|0)==0;if(!((f^C)&(o|0)>0)){break}f=c[y+12>>2]|0;if((f|0)==(c[y+16>>2]|0)){D=cJ[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{D=c[f>>2]|0}if(!(cM[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=5441;break}f=((cM[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){q=c[(c[n>>2]|0)+40>>2]|0;cJ[q&255](n)|0;s=f;t=o;u=z;continue}else{c[k>>2]=a+4;s=f;t=o;u=z;continue}}if((m|0)==5441){i=g;return p|0}do{if((y|0)==0){E=1}else{u=c[y+12>>2]|0;if((u|0)==(c[y+16>>2]|0)){F=cJ[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if(C){m=5432}else{h=c[z+12>>2]|0;if((h|0)==(c[z+16>>2]|0)){G=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=5432;break}if(E^(z|0)==0){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==5432){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function tP(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((f|0)==(c[10540]|0)){g=b|0;p0(g);yr(d);return}bs(c[e>>2]|0);g=b|0;p0(g);yr(d);return}function tQ(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((e|0)==(c[10540]|0)){f=b|0;p0(f);return}bs(c[d>>2]|0);f=b|0;p0(f);return}function tR(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(k<<24>>24!=0){a[o]=k;a[p]=j}j=bH(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=l;t=m}while(1){m=a[t]|0;if((s|0)==0){u=0}else{l=s+24|0;j=c[l>>2]|0;if((j|0)==(c[s+28>>2]|0)){v=cW[c[(c[s>>2]|0)+52>>2]&255](s,m&255)|0}else{c[l>>2]=j+1;a[j]=m;v=m&255}u=(v|0)==-1?0:s}m=t+1|0;if((m|0)==(d|0)){q=u;break}else{s=u;t=m}}r=b|0;c[r>>2]=q;i=g;return}function tS(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((f|0)==(c[10540]|0)){g=b|0;p0(g);yr(d);return}bs(c[e>>2]|0);g=b|0;p0(g);yr(d);return}function tT(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((e|0)==(c[10540]|0)){f=b|0;p0(f);return}bs(c[d>>2]|0);f=b|0;p0(f);return}function tU(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;tV(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=k;p=l}while(1){l=c[p>>2]|0;if((o|0)==0){q=0}else{k=o+24|0;d=c[k>>2]|0;if((d|0)==(c[o+28>>2]|0)){r=cW[c[(c[o>>2]|0)+52>>2]&255](o,l)|0}else{c[k>>2]=d+4;c[d>>2]=l;r=l}q=(r|0)==-1?0:o}l=p+4|0;if((l|0)==(j|0)){m=q;break}else{o=q;p=l}}n=a|0;c[n>>2]=m;i=f;return}function tV(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(h<<24>>24!=0){a[p]=h;a[q]=g}g=b|0;bH(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=ca(c[g>>2]|0)|0;g=xt(d,m,n,l)|0;if((f|0)!=0){ca(f|0)|0}if((g|0)==-1){uH(11416)}else{c[e>>2]=d+(g<<2);i=j;return}}function tW(a){a=a|0;p0(a|0);yr(a);return}function tX(a){a=a|0;p0(a|0);return}function tY(a){a=a|0;return 127}function tZ(a){a=a|0;return 127}function t_(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function t$(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function t0(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function t1(a,b){a=a|0;b=b|0;qs(a,1,45);return}function t2(a){a=a|0;return 0}function t3(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function t4(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function t5(a){a=a|0;p0(a|0);yr(a);return}function t6(a){a=a|0;p0(a|0);return}function t7(a){a=a|0;return 127}function t8(a){a=a|0;return 127}function t9(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function ua(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function ub(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function uc(a,b){a=a|0;b=b|0;qs(a,1,45);return}function ud(a){a=a|0;return 0}function ue(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function uf(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function ug(a){a=a|0;p0(a|0);yr(a);return}function uh(a){a=a|0;p0(a|0);return}function ui(a){a=a|0;return 2147483647}function uj(a){a=a|0;return 2147483647}function uk(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function ul(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function um(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function un(a,b){a=a|0;b=b|0;qF(a,1,45);return}function uo(a){a=a|0;return 0}function up(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function uq(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function ur(a){a=a|0;p0(a|0);yr(a);return}function us(a){a=a|0;p0(a|0);return}function ut(a){a=a|0;return 2147483647}function uu(a){a=a|0;return 2147483647}function uv(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function uw(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function ux(a,b){a=a|0;b=b|0;yC(a|0,0,12);return}function uy(a,b){a=a|0;b=b|0;qF(a,1,45);return}function uz(a){a=a|0;return 0}function uA(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function uB(b,c){b=b|0;c=c|0;c=b;E=67109634;a[c]=E&255;E=E>>8;a[c+1|0]=E&255;E=E>>8;a[c+2|0]=E&255;E=E>>8;a[c+3|0]=E&255;return}function uC(a){a=a|0;p0(a|0);yr(a);return}function uD(a){a=a|0;p0(a|0);return}function uE(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=456;w=m+100|0;qR(p,h);m=p|0;x=c[m>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(uG(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;D=c[(c[z>>2]|0)+32>>2]|0;cY[D&31](A,20944,20954,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=yj(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}yw();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[20944+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=cc(D|0,17280,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}yk(J);break}M=cr(8)|0;p8(M,16880);bJ(M|0,35112,48)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if((cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=5615}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=5617;break}}if((cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;S=5615;break}else{if(A^(z|0)==0){break}else{S=5617;break}}}}while(0);if((S|0)==5615){if(A){S=5617}}if((S|0)==5617){c[j>>2]=c[j>>2]|2}c[b>>2]=R;z=c[m>>2]|0;p2(z)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}cG[c[v>>2]&1023](z);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function uF(a){a=a|0;return}function uG(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0;q=i;i=i+440|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=r|0;yC(w|0,0,12);E=x;F=y;G=z;H=A;yC(E|0,0,12);yC(F|0,0,12);yC(G|0,0,12);yC(H|0,0,12);uK(g,h,s,t,u,v,x,y,z,B);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=z+1|0;I=z+4|0;J=z+8|0;K=y+1|0;L=y+4|0;M=y+8|0;N=(j&512|0)!=0;j=x+1|0;O=x+4|0;P=x+8|0;Q=A+1|0;R=A+4|0;S=A+8|0;T=s+3|0;U=v+4|0;V=n+4|0;n=p;p=456;W=D;X=D;D=r+400|0;r=0;Y=0;L6589:while(1){Z=c[g>>2]|0;do{if((Z|0)==0){_=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){_=Z;break}if((cJ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;_=0;break}else{_=c[g>>2]|0;break}}}while(0);Z=(_|0)==0;$=c[e>>2]|0;do{if(($|0)==0){aa=5643}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=5902;break L6589}}if((cJ[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1){c[e>>2]=0;aa=5643;break}else{if(Z){ab=$;break}else{ac=p;ad=W;ae=X;af=r;aa=5902;break L6589}}}}while(0);if((aa|0)==5643){aa=0;if(Z){ac=p;ad=W;ae=X;af=r;aa=5902;break}else{ab=0}}L6611:do{switch(a[s+Y|0]|0){case 3:{$=a[F]|0;ag=$&255;ah=(ag&1|0)==0?ag>>>1:c[L>>2]|0;ag=a[G]|0;ai=ag&255;aj=(ai&1|0)==0?ai>>>1:c[I>>2]|0;if((ah|0)==(-aj|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6611}ai=(ah|0)==0;ah=c[g>>2]|0;aq=c[ah+12>>2]|0;ar=c[ah+16>>2]|0;as=(aq|0)==(ar|0);if(!(ai|(aj|0)==0)){if(as){aj=(cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0)&255;at=c[g>>2]|0;au=aj;av=a[F]|0;aw=at;ax=c[at+12>>2]|0;ay=c[at+16>>2]|0}else{au=a[aq]|0;av=$;aw=ah;ax=aq;ay=ar}ar=aw+12|0;at=(ax|0)==(ay|0);if(au<<24>>24==(a[(av&1)==0?K:c[M>>2]|0]|0)){if(at){aj=c[(c[aw>>2]|0)+40>>2]|0;cJ[aj&255](aw)|0}else{c[ar>>2]=ax+1}ar=d[F]|0;ak=((ar&1|0)==0?ar>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;al=D;am=X;an=W;ao=p;ap=n;break L6611}if(at){az=(cJ[c[(c[aw>>2]|0)+36>>2]&255](aw)|0)&255}else{az=a[ax]|0}if(az<<24>>24!=(a[(a[G]&1)==0?m:c[J>>2]|0]|0)){aa=5738;break L6589}at=c[g>>2]|0;ar=at+12|0;aj=c[ar>>2]|0;if((aj|0)==(c[at+16>>2]|0)){aA=c[(c[at>>2]|0)+40>>2]|0;cJ[aA&255](at)|0}else{c[ar>>2]=aj+1}a[l]=1;aj=d[G]|0;ak=((aj&1|0)==0?aj>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;al=D;am=X;an=W;ao=p;ap=n;break L6611}if(ai){if(as){ai=(cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0)&255;aB=ai;aC=a[G]|0}else{aB=a[aq]|0;aC=ag}if(aB<<24>>24!=(a[(aC&1)==0?m:c[J>>2]|0]|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6611}ag=c[g>>2]|0;ai=ag+12|0;aj=c[ai>>2]|0;if((aj|0)==(c[ag+16>>2]|0)){ar=c[(c[ag>>2]|0)+40>>2]|0;cJ[ar&255](ag)|0}else{c[ai>>2]=aj+1}a[l]=1;aj=d[G]|0;ak=((aj&1|0)==0?aj>>>1:c[I>>2]|0)>>>0>1>>>0?z:r;al=D;am=X;an=W;ao=p;ap=n;break L6611}if(as){as=(cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0)&255;aD=as;aE=a[F]|0}else{aD=a[aq]|0;aE=$}if(aD<<24>>24!=(a[(aE&1)==0?K:c[M>>2]|0]|0)){a[l]=1;ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6611}$=c[g>>2]|0;aq=$+12|0;as=c[aq>>2]|0;if((as|0)==(c[$+16>>2]|0)){ah=c[(c[$>>2]|0)+40>>2]|0;cJ[ah&255]($)|0}else{c[aq>>2]=as+1}as=d[F]|0;ak=((as&1|0)==0?as>>>1:c[L>>2]|0)>>>0>1>>>0?y:r;al=D;am=X;an=W;ao=p;ap=n;break};case 0:{aa=5671;break};case 1:{if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=5902;break L6589}as=c[g>>2]|0;aq=c[as+12>>2]|0;if((aq|0)==(c[as+16>>2]|0)){aF=(cJ[c[(c[as>>2]|0)+36>>2]&255](as)|0)&255}else{aF=a[aq]|0}aq=aF<<24>>24;if((b$(aq|0)|0)==0){aa=5670;break L6589}if((b[(c[f>>2]|0)+(aq<<1)>>1]&8192)==0){aa=5670;break L6589}aq=c[g>>2]|0;as=aq+12|0;$=c[as>>2]|0;if(($|0)==(c[aq+16>>2]|0)){aG=(cJ[c[(c[aq>>2]|0)+40>>2]&255](aq)|0)&255}else{c[as>>2]=$+1;aG=a[$]|0}qA(A,aG);aa=5671;break};case 2:{if(!((r|0)!=0|Y>>>0<2>>>0)){if((Y|0)==2){aH=(a[T]|0)!=0}else{aH=0}if(!(N|aH)){ak=0;al=D;am=X;an=W;ao=p;ap=n;break L6611}}$=a[E]|0;as=c[P>>2]|0;aq=($&1)==0?j:as;L6686:do{if((Y|0)==0){aI=aq;aJ=$;aK=as}else{if((d[s+(Y-1)|0]|0)>>>0>=2>>>0){aI=aq;aJ=$;aK=as;break}ah=$&255;L6689:do{if((((ah&1|0)==0?ah>>>1:c[O>>2]|0)|0)==0){aL=aq;aM=$;aN=as}else{aj=aq;while(1){ai=a[aj]|0;if((b$(ai|0)|0)==0){break}if((b[(c[f>>2]|0)+(ai<<1)>>1]&8192)==0){break}ai=aj+1|0;ag=a[E]|0;ar=c[P>>2]|0;at=ag&255;if((ai|0)==(((ag&1)==0?j:ar)+((at&1|0)==0?at>>>1:c[O>>2]|0)|0)){aL=ai;aM=ag;aN=ar;break L6689}else{aj=ai}}aL=aj;aM=a[E]|0;aN=c[P>>2]|0}}while(0);ah=(aM&1)==0?j:aN;ai=aL-ah|0;ar=a[H]|0;ag=ar&255;at=(ag&1|0)==0?ag>>>1:c[R>>2]|0;if(ai>>>0>at>>>0){aI=ah;aJ=aM;aK=aN;break}ag=(ar&1)==0?Q:c[S>>2]|0;ar=ag+at|0;if((aL|0)==(ah|0)){aI=aL;aJ=aM;aK=aN;break}aA=ag+(at-ai)|0;ai=ah;while(1){if((a[aA]|0)!=(a[ai]|0)){aI=ah;aJ=aM;aK=aN;break L6686}at=aA+1|0;if((at|0)==(ar|0)){aI=aL;aJ=aM;aK=aN;break}else{aA=at;ai=ai+1|0}}}}while(0);aq=aJ&255;L6703:do{if((aI|0)==(((aJ&1)==0?j:aK)+((aq&1|0)==0?aq>>>1:c[O>>2]|0)|0)){aO=aI}else{as=ab;$=aI;while(1){ai=c[g>>2]|0;do{if((ai|0)==0){aP=0}else{if((c[ai+12>>2]|0)!=(c[ai+16>>2]|0)){aP=ai;break}if((cJ[c[(c[ai>>2]|0)+36>>2]&255](ai)|0)==-1){c[g>>2]=0;aP=0;break}else{aP=c[g>>2]|0;break}}}while(0);ai=(aP|0)==0;do{if((as|0)==0){aa=5769}else{if((c[as+12>>2]|0)!=(c[as+16>>2]|0)){if(ai){aQ=as;break}else{aO=$;break L6703}}if((cJ[c[(c[as>>2]|0)+36>>2]&255](as)|0)==-1){c[e>>2]=0;aa=5769;break}else{if(ai){aQ=as;break}else{aO=$;break L6703}}}}while(0);if((aa|0)==5769){aa=0;if(ai){aO=$;break L6703}else{aQ=0}}aj=c[g>>2]|0;aA=c[aj+12>>2]|0;if((aA|0)==(c[aj+16>>2]|0)){aR=(cJ[c[(c[aj>>2]|0)+36>>2]&255](aj)|0)&255}else{aR=a[aA]|0}if(aR<<24>>24!=(a[$]|0)){aO=$;break L6703}aA=c[g>>2]|0;aj=aA+12|0;ar=c[aj>>2]|0;if((ar|0)==(c[aA+16>>2]|0)){ah=c[(c[aA>>2]|0)+40>>2]|0;cJ[ah&255](aA)|0}else{c[aj>>2]=ar+1}ar=$+1|0;aj=a[E]|0;aA=aj&255;if((ar|0)==(((aj&1)==0?j:c[P>>2]|0)+((aA&1|0)==0?aA>>>1:c[O>>2]|0)|0)){aO=ar;break}else{as=aQ;$=ar}}}}while(0);if(!N){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6611}aq=a[E]|0;$=aq&255;if((aO|0)==(((aq&1)==0?j:c[P>>2]|0)+(($&1|0)==0?$>>>1:c[O>>2]|0)|0)){ak=r;al=D;am=X;an=W;ao=p;ap=n}else{aa=5782;break L6589}break};case 4:{$=0;aq=D;as=X;ar=W;aA=p;aj=n;L6738:while(1){ah=c[g>>2]|0;do{if((ah|0)==0){aS=0}else{if((c[ah+12>>2]|0)!=(c[ah+16>>2]|0)){aS=ah;break}if((cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0)==-1){c[g>>2]=0;aS=0;break}else{aS=c[g>>2]|0;break}}}while(0);ah=(aS|0)==0;at=c[e>>2]|0;do{if((at|0)==0){aa=5795}else{if((c[at+12>>2]|0)!=(c[at+16>>2]|0)){if(ah){break}else{break L6738}}if((cJ[c[(c[at>>2]|0)+36>>2]&255](at)|0)==-1){c[e>>2]=0;aa=5795;break}else{if(ah){break}else{break L6738}}}}while(0);if((aa|0)==5795){aa=0;if(ah){break}}at=c[g>>2]|0;ag=c[at+12>>2]|0;if((ag|0)==(c[at+16>>2]|0)){aT=(cJ[c[(c[at>>2]|0)+36>>2]&255](at)|0)&255}else{aT=a[ag]|0}ag=aT<<24>>24;do{if((b$(ag|0)|0)==0){aa=5815}else{if((b[(c[f>>2]|0)+(ag<<1)>>1]&2048)==0){aa=5815;break}at=c[o>>2]|0;if((at|0)==(aj|0)){aU=(c[V>>2]|0)!=456;aV=c[h>>2]|0;aW=aj-aV|0;aX=aW>>>0<2147483647>>>0?aW<<1:-1;aY=ym(aU?aV:0,aX)|0;if((aY|0)==0){yw()}do{if(aU){c[h>>2]=aY;aZ=aY}else{aV=c[h>>2]|0;c[h>>2]=aY;if((aV|0)==0){aZ=aY;break}cG[c[V>>2]&1023](aV);aZ=c[h>>2]|0}}while(0);c[V>>2]=568;aY=aZ+aW|0;c[o>>2]=aY;a_=(c[h>>2]|0)+aX|0;a$=aY}else{a_=aj;a$=at}c[o>>2]=a$+1;a[a$]=aT;a0=$+1|0;a1=aq;a2=as;a3=ar;a4=aA;a5=a_}}while(0);if((aa|0)==5815){aa=0;ag=d[w]|0;if((((ag&1|0)==0?ag>>>1:c[U>>2]|0)|0)==0|($|0)==0){break}if(aT<<24>>24!=(a[u]|0)){break}if((as|0)==(aq|0)){ag=as-ar|0;ah=ag>>>0<2147483647>>>0?ag<<1:-1;if((aA|0)==456){a6=0}else{a6=ar}aY=ym(a6,ah)|0;aU=aY;if((aY|0)==0){yw()}a7=aU+(ah>>>2<<2)|0;a8=aU+(ag>>2<<2)|0;a9=aU;ba=568}else{a7=aq;a8=as;a9=ar;ba=aA}c[a8>>2]=$;a0=0;a1=a7;a2=a8+4|0;a3=a9;a4=ba;a5=aj}aU=c[g>>2]|0;ag=aU+12|0;ah=c[ag>>2]|0;if((ah|0)==(c[aU+16>>2]|0)){aY=c[(c[aU>>2]|0)+40>>2]|0;cJ[aY&255](aU)|0;$=a0;aq=a1;as=a2;ar=a3;aA=a4;aj=a5;continue}else{c[ag>>2]=ah+1;$=a0;aq=a1;as=a2;ar=a3;aA=a4;aj=a5;continue}}if((ar|0)==(as|0)|($|0)==0){bb=aq;bc=as;bd=ar;be=aA}else{if((as|0)==(aq|0)){ah=as-ar|0;ag=ah>>>0<2147483647>>>0?ah<<1:-1;if((aA|0)==456){bf=0}else{bf=ar}aU=ym(bf,ag)|0;aY=aU;if((aU|0)==0){yw()}bg=aY+(ag>>>2<<2)|0;bh=aY+(ah>>2<<2)|0;bi=aY;bj=568}else{bg=aq;bh=as;bi=ar;bj=aA}c[bh>>2]=$;bb=bg;bc=bh+4|0;bd=bi;be=bj}if((c[B>>2]|0)>0){aY=c[g>>2]|0;do{if((aY|0)==0){bk=0}else{if((c[aY+12>>2]|0)!=(c[aY+16>>2]|0)){bk=aY;break}if((cJ[c[(c[aY>>2]|0)+36>>2]&255](aY)|0)==-1){c[g>>2]=0;bk=0;break}else{bk=c[g>>2]|0;break}}}while(0);aY=(bk|0)==0;$=c[e>>2]|0;do{if(($|0)==0){aa=5848}else{if((c[$+12>>2]|0)!=(c[$+16>>2]|0)){if(aY){bl=$;break}else{aa=5855;break L6589}}if((cJ[c[(c[$>>2]|0)+36>>2]&255]($)|0)==-1){c[e>>2]=0;aa=5848;break}else{if(aY){bl=$;break}else{aa=5855;break L6589}}}}while(0);if((aa|0)==5848){aa=0;if(aY){aa=5855;break L6589}else{bl=0}}$=c[g>>2]|0;aA=c[$+12>>2]|0;if((aA|0)==(c[$+16>>2]|0)){bm=(cJ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255}else{bm=a[aA]|0}if(bm<<24>>24!=(a[t]|0)){aa=5855;break L6589}aA=c[g>>2]|0;$=aA+12|0;ar=c[$>>2]|0;if((ar|0)==(c[aA+16>>2]|0)){as=c[(c[aA>>2]|0)+40>>2]|0;cJ[as&255](aA)|0;bn=aj;bo=bl}else{c[$>>2]=ar+1;bn=aj;bo=bl}while(1){ar=c[g>>2]|0;do{if((ar|0)==0){bp=0}else{if((c[ar+12>>2]|0)!=(c[ar+16>>2]|0)){bp=ar;break}if((cJ[c[(c[ar>>2]|0)+36>>2]&255](ar)|0)==-1){c[g>>2]=0;bp=0;break}else{bp=c[g>>2]|0;break}}}while(0);ar=(bp|0)==0;do{if((bo|0)==0){aa=5871}else{if((c[bo+12>>2]|0)!=(c[bo+16>>2]|0)){if(ar){bq=bo;break}else{aa=5880;break L6589}}if((cJ[c[(c[bo>>2]|0)+36>>2]&255](bo)|0)==-1){c[e>>2]=0;aa=5871;break}else{if(ar){bq=bo;break}else{aa=5880;break L6589}}}}while(0);if((aa|0)==5871){aa=0;if(ar){aa=5880;break L6589}else{bq=0}}$=c[g>>2]|0;aA=c[$+12>>2]|0;if((aA|0)==(c[$+16>>2]|0)){br=(cJ[c[(c[$>>2]|0)+36>>2]&255]($)|0)&255}else{br=a[aA]|0}aA=br<<24>>24;if((b$(aA|0)|0)==0){aa=5880;break L6589}if((b[(c[f>>2]|0)+(aA<<1)>>1]&2048)==0){aa=5880;break L6589}aA=c[o>>2]|0;if((aA|0)==(bn|0)){$=(c[V>>2]|0)!=456;as=c[h>>2]|0;aq=bn-as|0;ah=aq>>>0<2147483647>>>0?aq<<1:-1;ag=ym($?as:0,ah)|0;if((ag|0)==0){yw()}do{if($){c[h>>2]=ag;bs=ag}else{as=c[h>>2]|0;c[h>>2]=ag;if((as|0)==0){bs=ag;break}cG[c[V>>2]&1023](as);bs=c[h>>2]|0}}while(0);c[V>>2]=568;ag=bs+aq|0;c[o>>2]=ag;bt=(c[h>>2]|0)+ah|0;bu=ag}else{bt=bn;bu=aA}ag=c[g>>2]|0;$=c[ag+12>>2]|0;if(($|0)==(c[ag+16>>2]|0)){ar=(cJ[c[(c[ag>>2]|0)+36>>2]&255](ag)|0)&255;bv=ar;bw=c[o>>2]|0}else{bv=a[$]|0;bw=bu}c[o>>2]=bw+1;a[bw]=bv;$=(c[B>>2]|0)-1|0;c[B>>2]=$;ar=c[g>>2]|0;ag=ar+12|0;as=c[ag>>2]|0;if((as|0)==(c[ar+16>>2]|0)){aU=c[(c[ar>>2]|0)+40>>2]|0;cJ[aU&255](ar)|0}else{c[ag>>2]=as+1}if(($|0)>0){bn=bt;bo=bq}else{bx=bt;break}}}else{bx=aj}if((c[o>>2]|0)==(c[h>>2]|0)){aa=5900;break L6589}else{ak=r;al=bb;am=bc;an=bd;ao=be;ap=bx}break};default:{ak=r;al=D;am=X;an=W;ao=p;ap=n}}}while(0);L6894:do{if((aa|0)==5671){aa=0;if((Y|0)==3){ac=p;ad=W;ae=X;af=r;aa=5902;break L6589}else{by=ab}while(1){Z=c[g>>2]|0;do{if((Z|0)==0){bz=0}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){bz=Z;break}if((cJ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[g>>2]=0;bz=0;break}else{bz=c[g>>2]|0;break}}}while(0);Z=(bz|0)==0;do{if((by|0)==0){aa=5684}else{if((c[by+12>>2]|0)!=(c[by+16>>2]|0)){if(Z){bA=by;break}else{ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6894}}if((cJ[c[(c[by>>2]|0)+36>>2]&255](by)|0)==-1){c[e>>2]=0;aa=5684;break}else{if(Z){bA=by;break}else{ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6894}}}}while(0);if((aa|0)==5684){aa=0;if(Z){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6894}else{bA=0}}aA=c[g>>2]|0;ah=c[aA+12>>2]|0;if((ah|0)==(c[aA+16>>2]|0)){bB=(cJ[c[(c[aA>>2]|0)+36>>2]&255](aA)|0)&255}else{bB=a[ah]|0}ah=bB<<24>>24;if((b$(ah|0)|0)==0){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6894}if((b[(c[f>>2]|0)+(ah<<1)>>1]&8192)==0){ak=r;al=D;am=X;an=W;ao=p;ap=n;break L6894}ah=c[g>>2]|0;aA=ah+12|0;aq=c[aA>>2]|0;if((aq|0)==(c[ah+16>>2]|0)){bC=(cJ[c[(c[ah>>2]|0)+40>>2]&255](ah)|0)&255}else{c[aA>>2]=aq+1;bC=a[aq]|0}qA(A,bC);by=bA}}}while(0);aj=Y+1|0;if(aj>>>0<4>>>0){n=ap;p=ao;W=an;X=am;D=al;r=ak;Y=aj}else{ac=ao;ad=an;ae=am;af=ak;aa=5902;break}}L6932:do{if((aa|0)==5670){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==5738){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==5782){c[k>>2]=c[k>>2]|4;bD=0;bE=W;bF=p}else if((aa|0)==5855){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==5880){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==5900){c[k>>2]=c[k>>2]|4;bD=0;bE=bd;bF=be}else if((aa|0)==5902){L6940:do{if((af|0)!=0){ak=af;am=af+1|0;an=af+8|0;ao=af+4|0;Y=1;L6942:while(1){r=d[ak]|0;if((r&1|0)==0){bG=r>>>1}else{bG=c[ao>>2]|0}if(Y>>>0>=bG>>>0){break L6940}r=c[g>>2]|0;do{if((r|0)==0){bH=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){bH=r;break}if((cJ[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;bH=0;break}else{bH=c[g>>2]|0;break}}}while(0);r=(bH|0)==0;Z=c[e>>2]|0;do{if((Z|0)==0){aa=5920}else{if((c[Z+12>>2]|0)!=(c[Z+16>>2]|0)){if(r){break}else{break L6942}}if((cJ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)==-1){c[e>>2]=0;aa=5920;break}else{if(r){break}else{break L6942}}}}while(0);if((aa|0)==5920){aa=0;if(r){break}}Z=c[g>>2]|0;al=c[Z+12>>2]|0;if((al|0)==(c[Z+16>>2]|0)){bI=(cJ[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{bI=a[al]|0}if((a[ak]&1)==0){bJ=am}else{bJ=c[an>>2]|0}if(bI<<24>>24!=(a[bJ+Y|0]|0)){break}al=Y+1|0;Z=c[g>>2]|0;D=Z+12|0;X=c[D>>2]|0;if((X|0)==(c[Z+16>>2]|0)){ap=c[(c[Z>>2]|0)+40>>2]|0;cJ[ap&255](Z)|0;Y=al;continue}else{c[D>>2]=X+1;Y=al;continue}}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac;break L6932}}while(0);if((ad|0)==(ae|0)){bD=1;bE=ae;bF=ac;break}c[C>>2]=0;uL(v,ad,ae,C);if((c[C>>2]|0)==0){bD=1;bE=ad;bF=ac;break}c[k>>2]=c[k>>2]|4;bD=0;bE=ad;bF=ac}}while(0);qu(A);qu(z);qu(y);qu(x);qu(v);if((bE|0)==0){i=q;return bD|0}cG[bF&1023](bE);i=q;return bD|0}function uH(a){a=a|0;var b=0;b=cr(8)|0;p8(b,a);bJ(b|0,35112,48)}function uI(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=456;u=m+100|0;qR(p,h);m=p|0;v=c[m>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(uG(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){qA(k,cW[c[(c[B>>2]|0)+28>>2]&255](y,45)|0)}x=cW[c[(c[B>>2]|0)+28>>2]&255](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}uJ(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if((cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=35;break}}if((cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;E=33;break}else{if(x^(A|0)==0){break}else{E=35;break}}}}while(0);if((E|0)==33){if(x){E=35}}if((E|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=D;A=c[m>>2]|0;p2(A)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}cG[c[t>>2]&1023](A);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function uJ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=10;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g|0;if((e|0)==(d|0)){return b|0}if((k-j|0)>>>0<h>>>0){qD(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}m=e+(j-g)|0;g=d;d=n+j|0;while(1){a[d]=a[g]|0;l=g+1|0;if((l|0)==(e|0)){break}else{g=l;d=d+1|0}}a[n+m|0]=0;m=j+h|0;if((a[f]&1)==0){a[f]=m<<1&255;return b|0}else{c[b+4>>2]=m;return b|0}return 0}function uK(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;C=i;i=i+12|0;i=i+7&-8;D=C;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[11100]|0)!=-1){c[p>>2]=44400;c[p+4>>2]=30;c[p+8>>2]=0;qn(44400,p,258)}p=(c[11101]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=cr(4)|0;L=K;xW(L);bJ(K|0,35096,560)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=cr(4)|0;L=K;xW(L);bJ(K|0,35096,560)}K=b;cH[c[(c[b>>2]|0)+44>>2]&255](q,K);L=e;E=c[q>>2]|0;a[L]=E&255;E=E>>8;a[L+1|0]=E&255;E=E>>8;a[L+2|0]=E&255;E=E>>8;a[L+3|0]=E&255;L=b;cH[c[(c[L>>2]|0)+32>>2]&255](r,K);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];yC(s|0,0,12);qu(r);cH[c[(c[L>>2]|0)+28>>2]&255](t,K);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}qz(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];yC(u|0,0,12);qu(t);t=b;a[f]=cJ[c[(c[t>>2]|0)+12>>2]&255](K)|0;a[g]=cJ[c[(c[t>>2]|0)+16>>2]&255](K)|0;cH[c[(c[L>>2]|0)+20>>2]&255](v,K);t=h;if((a[t]&1)==0){a[h+1|0]=0;a[t]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}qz(h,0);c[t>>2]=c[w>>2];c[t+4>>2]=c[w+4>>2];c[t+8>>2]=c[w+8>>2];yC(w|0,0,12);qu(v);cH[c[(c[L>>2]|0)+24>>2]&255](x,K);L=j;if((a[L]&1)==0){a[j+1|0]=0;a[L]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];yC(y|0,0,12);qu(x);M=cJ[c[(c[b>>2]|0)+36>>2]&255](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[11102]|0)!=-1){c[o>>2]=44408;c[o+4>>2]=30;c[o+8>>2]=0;qn(44408,o,258)}o=(c[11103]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=cr(4)|0;O=N;xW(O);bJ(N|0,35096,560)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=cr(4)|0;O=N;xW(O);bJ(N|0,35096,560)}N=K;cH[c[(c[K>>2]|0)+44>>2]&255](z,N);O=e;E=c[z>>2]|0;a[O]=E&255;E=E>>8;a[O+1|0]=E&255;E=E>>8;a[O+2|0]=E&255;E=E>>8;a[O+3|0]=E&255;O=K;cH[c[(c[O>>2]|0)+32>>2]&255](A,N);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];yC(B|0,0,12);qu(A);cH[c[(c[O>>2]|0)+28>>2]&255](C,N);A=k;if((a[A]&1)==0){a[k+1|0]=0;a[A]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}qz(k,0);c[A>>2]=c[D>>2];c[A+4>>2]=c[D+4>>2];c[A+8>>2]=c[D+8>>2];yC(D|0,0,12);qu(C);C=K;a[f]=cJ[c[(c[C>>2]|0)+12>>2]&255](N)|0;a[g]=cJ[c[(c[C>>2]|0)+16>>2]&255](N)|0;cH[c[(c[O>>2]|0)+20>>2]&255](F,N);C=h;if((a[C]&1)==0){a[h+1|0]=0;a[C]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}qz(h,0);c[C>>2]=c[G>>2];c[C+4>>2]=c[G+4>>2];c[C+8>>2]=c[G+8>>2];yC(G|0,0,12);qu(F);cH[c[(c[O>>2]|0)+24>>2]&255](H,N);O=j;if((a[O]&1)==0){a[j+1|0]=0;a[O]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];yC(I|0,0,12);qu(H);M=cJ[c[(c[K>>2]|0)+36>>2]&255](N)|0;c[m>>2]=M;i=n;return}}function uL(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=b;h=b;i=a[h]|0;j=i&255;if((j&1|0)==0){k=j>>>1}else{k=c[b+4>>2]|0}if((k|0)==0){return}do{if((d|0)==(e|0)){l=i}else{k=e-4|0;if(k>>>0>d>>>0){m=d;n=k}else{l=i;break}do{k=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=k;m=m+4|0;n=n-4|0;}while(m>>>0<n>>>0);l=a[h]|0}}while(0);if((l&1)==0){o=g+1|0}else{o=c[b+8>>2]|0}g=l&255;if((g&1|0)==0){p=g>>>1}else{p=c[b+4>>2]|0}b=e-4|0;e=a[o]|0;g=e<<24>>24;l=e<<24>>24<1|e<<24>>24==127;L163:do{if(b>>>0>d>>>0){e=o+p|0;h=o;n=d;m=g;i=l;while(1){if(!i){if((m|0)!=(c[n>>2]|0)){break}}k=(e-h|0)>1?h+1|0:h;j=n+4|0;q=a[k]|0;r=q<<24>>24;s=q<<24>>24<1|q<<24>>24==127;if(j>>>0<b>>>0){h=k;n=j;m=r;i=s}else{t=r;u=s;break L163}}c[f>>2]=4;return}else{t=g;u=l}}while(0);if(u){return}u=c[b>>2]|0;if(!(t>>>0<u>>>0|(u|0)==0)){return}c[f>>2]=4;return}function uM(a){a=a|0;p0(a|0);yr(a);return}function uN(a){a=a|0;p0(a|0);return}function uO(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=456;w=m+400|0;qR(p,h);m=p|0;x=c[m>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(uP(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;D=c[(c[z>>2]|0)+48>>2]|0;cY[D&31](A,20928,20938,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=yj((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}yw();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]&1)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[20928+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=cc(D|0,17280,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}yk(J);break}M=cr(8)|0;p8(M,16880);bJ(M|0,35112,48)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{S=c[M>>2]|0}if((S|0)!=-1){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){T=202}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=cJ[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=202;break}else{if(A^(z|0)==0){break}else{T=204;break}}}}while(0);if((T|0)==202){if(A){T=204}}if((T|0)==204){c[j>>2]=c[j>>2]|2}c[b>>2]=R;z=c[m>>2]|0;p2(z)|0;z=c[u>>2]|0;c[u>>2]=0;if((z|0)==0){i=d;return}cG[c[v>>2]&1023](z);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function uP(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0;p=i;i=i+448|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=v;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;c[q>>2]=o;o=r|0;yC(w|0,0,12);D=x;E=y;F=z;G=A;yC(D|0,0,12);yC(E|0,0,12);yC(F|0,0,12);yC(G|0,0,12);uS(f,g,s,t,u,v,x,y,z,B);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=z+4|0;I=z+8|0;J=y+4|0;K=y+8|0;L=(h&512|0)!=0;h=x+4|0;M=x+8|0;N=A+4|0;O=A+8|0;P=s+3|0;Q=v+4|0;R=456;S=o;T=o;o=r+400|0;r=0;U=0;L247:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=cJ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=230}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=cJ[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=230;break}else{if(W^(V|0)==0){$=V;break}else{aa=R;ab=S;ac=T;ad=r;Z=470;break L247}}}}while(0);if((Z|0)==230){Z=0;if(W){aa=R;ab=S;ac=T;ad=r;Z=470;break}else{$=0}}L271:do{switch(a[s+U|0]|0){case 0:{Z=255;break};case 3:{V=a[E]|0;X=V&255;ae=(X&1|0)==0;af=a[F]|0;ag=af&255;ah=(ag&1|0)==0;if(((ae?X>>>1:c[J>>2]|0)|0)==(-(ah?ag>>>1:c[H>>2]|0)|0)){ai=r;aj=o;ak=T;al=S;am=R;break L271}do{if(((ae?X>>>1:c[J>>2]|0)|0)!=0){if(((ah?ag>>>1:c[H>>2]|0)|0)==0){break}an=c[f>>2]|0;ao=c[an+12>>2]|0;if((ao|0)==(c[an+16>>2]|0)){ap=cJ[c[(c[an>>2]|0)+36>>2]&255](an)|0;aq=ap;ar=a[E]|0}else{aq=c[ao>>2]|0;ar=V}ao=c[f>>2]|0;ap=ao+12|0;an=c[ap>>2]|0;as=(an|0)==(c[ao+16>>2]|0);if((aq|0)==(c[((ar&1)==0?J:c[K>>2]|0)>>2]|0)){if(as){at=c[(c[ao>>2]|0)+40>>2]|0;cJ[at&255](ao)|0}else{c[ap>>2]=an+4}ap=d[E]|0;ai=((ap&1|0)==0?ap>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;aj=o;ak=T;al=S;am=R;break L271}if(as){au=cJ[c[(c[ao>>2]|0)+36>>2]&255](ao)|0}else{au=c[an>>2]|0}if((au|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=320;break L247}an=c[f>>2]|0;ao=an+12|0;as=c[ao>>2]|0;if((as|0)==(c[an+16>>2]|0)){ap=c[(c[an>>2]|0)+40>>2]|0;cJ[ap&255](an)|0}else{c[ao>>2]=as+4}a[k]=1;as=d[F]|0;ai=((as&1|0)==0?as>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;aj=o;ak=T;al=S;am=R;break L271}}while(0);ag=c[f>>2]|0;ah=c[ag+12>>2]|0;as=(ah|0)==(c[ag+16>>2]|0);if(((ae?X>>>1:c[J>>2]|0)|0)==0){if(as){ao=cJ[c[(c[ag>>2]|0)+36>>2]&255](ag)|0;av=ao;aw=a[F]|0}else{av=c[ah>>2]|0;aw=af}if((av|0)!=(c[((aw&1)==0?H:c[I>>2]|0)>>2]|0)){ai=r;aj=o;ak=T;al=S;am=R;break L271}ao=c[f>>2]|0;an=ao+12|0;ap=c[an>>2]|0;if((ap|0)==(c[ao+16>>2]|0)){at=c[(c[ao>>2]|0)+40>>2]|0;cJ[at&255](ao)|0}else{c[an>>2]=ap+4}a[k]=1;ap=d[F]|0;ai=((ap&1|0)==0?ap>>>1:c[H>>2]|0)>>>0>1>>>0?z:r;aj=o;ak=T;al=S;am=R;break L271}if(as){as=cJ[c[(c[ag>>2]|0)+36>>2]&255](ag)|0;ax=as;ay=a[E]|0}else{ax=c[ah>>2]|0;ay=V}if((ax|0)!=(c[((ay&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ai=r;aj=o;ak=T;al=S;am=R;break L271}ah=c[f>>2]|0;as=ah+12|0;ag=c[as>>2]|0;if((ag|0)==(c[ah+16>>2]|0)){ap=c[(c[ah>>2]|0)+40>>2]|0;cJ[ap&255](ah)|0}else{c[as>>2]=ag+4}ag=d[E]|0;ai=((ag&1|0)==0?ag>>>1:c[J>>2]|0)>>>0>1>>>0?y:r;aj=o;ak=T;al=S;am=R;break};case 1:{if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=470;break L247}ag=c[f>>2]|0;as=c[ag+12>>2]|0;if((as|0)==(c[ag+16>>2]|0)){az=cJ[c[(c[ag>>2]|0)+36>>2]&255](ag)|0}else{az=c[as>>2]|0}if(!(cM[c[(c[e>>2]|0)+12>>2]&63](l,8192,az)|0)){Z=254;break L247}as=c[f>>2]|0;ag=as+12|0;ah=c[ag>>2]|0;if((ah|0)==(c[as+16>>2]|0)){aA=cJ[c[(c[as>>2]|0)+40>>2]&255](as)|0}else{c[ag>>2]=ah+4;aA=c[ah>>2]|0}qK(A,aA);Z=255;break};case 2:{if(!((r|0)!=0|U>>>0<2>>>0)){if((U|0)==2){aB=(a[P]|0)!=0}else{aB=0}if(!(L|aB)){ai=0;aj=o;ak=T;al=S;am=R;break L271}}ah=a[D]|0;ag=(ah&1)==0?h:c[M>>2]|0;L343:do{if((U|0)==0){aC=ag;aD=ah;aE=$}else{if((d[s+(U-1)|0]|0)>>>0<2>>>0){aF=ag;aG=ah}else{aC=ag;aD=ah;aE=$;break}while(1){as=aG&255;if((aF|0)==(((aG&1)==0?h:c[M>>2]|0)+(((as&1|0)==0?as>>>1:c[h>>2]|0)<<2)|0)){aH=aG;break}if(!(cM[c[(c[e>>2]|0)+12>>2]&63](l,8192,c[aF>>2]|0)|0)){Z=331;break}aF=aF+4|0;aG=a[D]|0}if((Z|0)==331){Z=0;aH=a[D]|0}as=(aH&1)==0;ap=aF-(as?h:c[M>>2]|0)>>2;an=a[G]|0;ao=an&255;at=(ao&1|0)==0;L353:do{if(ap>>>0<=(at?ao>>>1:c[N>>2]|0)>>>0){aI=(an&1)==0;aJ=(aI?N:c[O>>2]|0)+((at?ao>>>1:c[N>>2]|0)-ap<<2)|0;aK=(aI?N:c[O>>2]|0)+((at?ao>>>1:c[N>>2]|0)<<2)|0;if((aJ|0)==(aK|0)){aC=aF;aD=aH;aE=$;break L343}else{aL=aJ;aM=as?h:c[M>>2]|0}while(1){if((c[aL>>2]|0)!=(c[aM>>2]|0)){break L353}aJ=aL+4|0;if((aJ|0)==(aK|0)){aC=aF;aD=aH;aE=$;break L343}aL=aJ;aM=aM+4|0}}}while(0);aC=as?h:c[M>>2]|0;aD=aH;aE=$}}while(0);L360:while(1){ah=aD&255;if((aC|0)==(((aD&1)==0?h:c[M>>2]|0)+(((ah&1|0)==0?ah>>>1:c[h>>2]|0)<<2)|0)){break}ah=c[f>>2]|0;do{if((ah|0)==0){aN=1}else{ag=c[ah+12>>2]|0;if((ag|0)==(c[ah+16>>2]|0)){aO=cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0}else{aO=c[ag>>2]|0}if((aO|0)==-1){c[f>>2]=0;aN=1;break}else{aN=(c[f>>2]|0)==0;break}}}while(0);do{if((aE|0)==0){Z=352}else{ah=c[aE+12>>2]|0;if((ah|0)==(c[aE+16>>2]|0)){aP=cJ[c[(c[aE>>2]|0)+36>>2]&255](aE)|0}else{aP=c[ah>>2]|0}if((aP|0)==-1){c[b>>2]=0;Z=352;break}else{if(aN^(aE|0)==0){aQ=aE;break}else{break L360}}}}while(0);if((Z|0)==352){Z=0;if(aN){break}else{aQ=0}}ah=c[f>>2]|0;as=c[ah+12>>2]|0;if((as|0)==(c[ah+16>>2]|0)){aR=cJ[c[(c[ah>>2]|0)+36>>2]&255](ah)|0}else{aR=c[as>>2]|0}if((aR|0)!=(c[aC>>2]|0)){break}as=c[f>>2]|0;ah=as+12|0;ag=c[ah>>2]|0;if((ag|0)==(c[as+16>>2]|0)){V=c[(c[as>>2]|0)+40>>2]|0;cJ[V&255](as)|0}else{c[ah>>2]=ag+4}aC=aC+4|0;aD=a[D]|0;aE=aQ}if(!L){ai=r;aj=o;ak=T;al=S;am=R;break L271}ag=a[D]|0;ah=ag&255;if((aC|0)==(((ag&1)==0?h:c[M>>2]|0)+(((ah&1|0)==0?ah>>>1:c[h>>2]|0)<<2)|0)){ai=r;aj=o;ak=T;al=S;am=R}else{Z=364;break L247}break};case 4:{ah=0;ag=o;as=T;V=S;af=R;L396:while(1){X=c[f>>2]|0;do{if((X|0)==0){aS=1}else{ae=c[X+12>>2]|0;if((ae|0)==(c[X+16>>2]|0)){aT=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{aT=c[ae>>2]|0}if((aT|0)==-1){c[f>>2]=0;aS=1;break}else{aS=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=378}else{ae=c[X+12>>2]|0;if((ae|0)==(c[X+16>>2]|0)){aU=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{aU=c[ae>>2]|0}if((aU|0)==-1){c[b>>2]=0;Z=378;break}else{if(aS^(X|0)==0){break}else{break L396}}}}while(0);if((Z|0)==378){Z=0;if(aS){break}}X=c[f>>2]|0;ae=c[X+12>>2]|0;if((ae|0)==(c[X+16>>2]|0)){aV=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{aV=c[ae>>2]|0}if(cM[c[(c[e>>2]|0)+12>>2]&63](l,2048,aV)|0){ae=c[n>>2]|0;if((ae|0)==(c[q>>2]|0)){uT(m,n,q);aW=c[n>>2]|0}else{aW=ae}c[n>>2]=aW+4;c[aW>>2]=aV;aX=ah+1|0;aY=ag;aZ=as;a_=V;a$=af}else{ae=d[w]|0;if((((ae&1|0)==0?ae>>>1:c[Q>>2]|0)|0)==0|(ah|0)==0){break}if((aV|0)!=(c[u>>2]|0)){break}if((as|0)==(ag|0)){ae=(af|0)!=456;X=as-V|0;ao=X>>>0<2147483647>>>0?X<<1:-1;if(ae){a0=V}else{a0=0}ae=ym(a0,ao)|0;at=ae;if((ae|0)==0){yw()}a1=at+(ao>>>2<<2)|0;a2=at+(X>>2<<2)|0;a3=at;a4=568}else{a1=ag;a2=as;a3=V;a4=af}c[a2>>2]=ah;aX=0;aY=a1;aZ=a2+4|0;a_=a3;a$=a4}at=c[f>>2]|0;X=at+12|0;ao=c[X>>2]|0;if((ao|0)==(c[at+16>>2]|0)){ae=c[(c[at>>2]|0)+40>>2]|0;cJ[ae&255](at)|0;ah=aX;ag=aY;as=aZ;V=a_;af=a$;continue}else{c[X>>2]=ao+4;ah=aX;ag=aY;as=aZ;V=a_;af=a$;continue}}if((V|0)==(as|0)|(ah|0)==0){a5=ag;a6=as;a7=V;a8=af}else{if((as|0)==(ag|0)){ao=(af|0)!=456;X=as-V|0;at=X>>>0<2147483647>>>0?X<<1:-1;if(ao){a9=V}else{a9=0}ao=ym(a9,at)|0;ae=ao;if((ao|0)==0){yw()}ba=ae+(at>>>2<<2)|0;bb=ae+(X>>2<<2)|0;bc=ae;bd=568}else{ba=ag;bb=as;bc=V;bd=af}c[bb>>2]=ah;a5=ba;a6=bb+4|0;a7=bc;a8=bd}ae=c[B>>2]|0;if((ae|0)>0){X=c[f>>2]|0;do{if((X|0)==0){be=1}else{at=c[X+12>>2]|0;if((at|0)==(c[X+16>>2]|0)){bf=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bf=c[at>>2]|0}if((bf|0)==-1){c[f>>2]=0;be=1;break}else{be=(c[f>>2]|0)==0;break}}}while(0);X=c[b>>2]|0;do{if((X|0)==0){Z=427}else{ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bg=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bg=c[ah>>2]|0}if((bg|0)==-1){c[b>>2]=0;Z=427;break}else{if(be^(X|0)==0){bh=X;break}else{Z=433;break L247}}}}while(0);if((Z|0)==427){Z=0;if(be){Z=433;break L247}else{bh=0}}X=c[f>>2]|0;ah=c[X+12>>2]|0;if((ah|0)==(c[X+16>>2]|0)){bi=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bi=c[ah>>2]|0}if((bi|0)!=(c[t>>2]|0)){Z=433;break L247}ah=c[f>>2]|0;X=ah+12|0;af=c[X>>2]|0;if((af|0)==(c[ah+16>>2]|0)){V=c[(c[ah>>2]|0)+40>>2]|0;cJ[V&255](ah)|0;bj=bh;bk=ae}else{c[X>>2]=af+4;bj=bh;bk=ae}while(1){af=c[f>>2]|0;do{if((af|0)==0){bl=1}else{X=c[af+12>>2]|0;if((X|0)==(c[af+16>>2]|0)){bm=cJ[c[(c[af>>2]|0)+36>>2]&255](af)|0}else{bm=c[X>>2]|0}if((bm|0)==-1){c[f>>2]=0;bl=1;break}else{bl=(c[f>>2]|0)==0;break}}}while(0);do{if((bj|0)==0){Z=450}else{af=c[bj+12>>2]|0;if((af|0)==(c[bj+16>>2]|0)){bn=cJ[c[(c[bj>>2]|0)+36>>2]&255](bj)|0}else{bn=c[af>>2]|0}if((bn|0)==-1){c[b>>2]=0;Z=450;break}else{if(bl^(bj|0)==0){bo=bj;break}else{Z=457;break L247}}}}while(0);if((Z|0)==450){Z=0;if(bl){Z=457;break L247}else{bo=0}}af=c[f>>2]|0;X=c[af+12>>2]|0;if((X|0)==(c[af+16>>2]|0)){bp=cJ[c[(c[af>>2]|0)+36>>2]&255](af)|0}else{bp=c[X>>2]|0}if(!(cM[c[(c[e>>2]|0)+12>>2]&63](l,2048,bp)|0)){Z=457;break L247}if((c[n>>2]|0)==(c[q>>2]|0)){uT(m,n,q)}X=c[f>>2]|0;af=c[X+12>>2]|0;if((af|0)==(c[X+16>>2]|0)){bq=cJ[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{bq=c[af>>2]|0}af=c[n>>2]|0;c[n>>2]=af+4;c[af>>2]=bq;af=bk-1|0;c[B>>2]=af;X=c[f>>2]|0;ah=X+12|0;V=c[ah>>2]|0;if((V|0)==(c[X+16>>2]|0)){as=c[(c[X>>2]|0)+40>>2]|0;cJ[as&255](X)|0}else{c[ah>>2]=V+4}if((af|0)>0){bj=bo;bk=af}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=468;break L247}else{ai=r;aj=a5;ak=a6;al=a7;am=a8}break};default:{ai=r;aj=o;ak=T;al=S;am=R}}}while(0);L540:do{if((Z|0)==255){Z=0;if((U|0)==3){aa=R;ab=S;ac=T;ad=r;Z=470;break L247}else{br=$}while(1){ae=c[f>>2]|0;do{if((ae|0)==0){bs=1}else{af=c[ae+12>>2]|0;if((af|0)==(c[ae+16>>2]|0)){bt=cJ[c[(c[ae>>2]|0)+36>>2]&255](ae)|0}else{bt=c[af>>2]|0}if((bt|0)==-1){c[f>>2]=0;bs=1;break}else{bs=(c[f>>2]|0)==0;break}}}while(0);do{if((br|0)==0){Z=269}else{ae=c[br+12>>2]|0;if((ae|0)==(c[br+16>>2]|0)){bu=cJ[c[(c[br>>2]|0)+36>>2]&255](br)|0}else{bu=c[ae>>2]|0}if((bu|0)==-1){c[b>>2]=0;Z=269;break}else{if(bs^(br|0)==0){bv=br;break}else{ai=r;aj=o;ak=T;al=S;am=R;break L540}}}}while(0);if((Z|0)==269){Z=0;if(bs){ai=r;aj=o;ak=T;al=S;am=R;break L540}else{bv=0}}ae=c[f>>2]|0;af=c[ae+12>>2]|0;if((af|0)==(c[ae+16>>2]|0)){bw=cJ[c[(c[ae>>2]|0)+36>>2]&255](ae)|0}else{bw=c[af>>2]|0}if(!(cM[c[(c[e>>2]|0)+12>>2]&63](l,8192,bw)|0)){ai=r;aj=o;ak=T;al=S;am=R;break L540}af=c[f>>2]|0;ae=af+12|0;V=c[ae>>2]|0;if((V|0)==(c[af+16>>2]|0)){bx=cJ[c[(c[af>>2]|0)+40>>2]&255](af)|0}else{c[ae>>2]=V+4;bx=c[V>>2]|0}qK(A,bx);br=bv}}}while(0);V=U+1|0;if(V>>>0<4>>>0){R=am;S=al;T=ak;o=aj;r=ai;U=V}else{aa=am;ab=al;ac=ak;ad=ai;Z=470;break}}L577:do{if((Z|0)==254){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==320){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==364){c[j>>2]=c[j>>2]|4;by=0;bz=S;bA=R}else if((Z|0)==433){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==457){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==468){c[j>>2]=c[j>>2]|4;by=0;bz=a7;bA=a8}else if((Z|0)==470){L585:do{if((ad|0)!=0){ai=ad;ak=ad+4|0;al=ad+8|0;am=1;L587:while(1){U=d[ai]|0;if((U&1|0)==0){bB=U>>>1}else{bB=c[ak>>2]|0}if(am>>>0>=bB>>>0){break L585}U=c[f>>2]|0;do{if((U|0)==0){bC=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bD=cJ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bD=c[r>>2]|0}if((bD|0)==-1){c[f>>2]=0;bC=1;break}else{bC=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=489}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bE=cJ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bE=c[r>>2]|0}if((bE|0)==-1){c[b>>2]=0;Z=489;break}else{if(bC^(U|0)==0){break}else{break L587}}}}while(0);if((Z|0)==489){Z=0;if(bC){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){bF=cJ[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{bF=c[r>>2]|0}if((a[ai]&1)==0){bG=ak}else{bG=c[al>>2]|0}if((bF|0)!=(c[bG+(am<<2)>>2]|0)){break}r=am+1|0;U=c[f>>2]|0;aj=U+12|0;o=c[aj>>2]|0;if((o|0)==(c[U+16>>2]|0)){T=c[(c[U>>2]|0)+40>>2]|0;cJ[T&255](U)|0;am=r;continue}else{c[aj>>2]=o+4;am=r;continue}}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa;break L577}}while(0);if((ab|0)==(ac|0)){by=1;bz=ac;bA=aa;break}c[C>>2]=0;uL(v,ab,ac,C);if((c[C>>2]|0)==0){by=1;bz=ab;bA=aa;break}c[j>>2]=c[j>>2]|4;by=0;bz=ab;bA=aa}}while(0);qG(A);qG(z);qG(y);qG(x);qu(v);if((bz|0)==0){i=p;return by|0}cG[bA&1023](bz);i=p;return by|0}function uQ(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=456;u=m+400|0;qR(p,h);m=p|0;v=c[m>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(uP(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]&1)!=0){qK(k,cW[c[(c[B>>2]|0)+44>>2]&255](y,45)|0)}x=cW[c[(c[B>>2]|0)+44>>2]&255](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(C>>>0>=B>>>0){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}uR(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=cJ[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{F=c[E>>2]|0}if((F|0)!=-1){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){G=544}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=cJ[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=544;break}else{if(x^(A|0)==0){break}else{G=546;break}}}}while(0);if((G|0)==544){if(x){G=546}}if((G|0)==546){c[j>>2]=c[j>>2]|2}c[b>>2]=D;A=c[m>>2]|0;p2(A)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}cG[c[t>>2]&1023](A);i=d;return}}while(0);d=cr(4)|0;xW(d);bJ(d|0,35096,560)}function uR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=1;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g>>2;if((h|0)==0){return b|0}if((k-j|0)>>>0<h>>>0){qM(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+4|0}else{n=c[b+8>>2]|0}m=n+(j<<2)|0;if((d|0)==(e|0)){o=m}else{l=j+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=m;while(1){c[d>>2]=c[g>>2];m=g+4|0;if((m|0)==(e|0)){break}else{g=m;d=d+4|0}}o=n+(l<<2)|0}c[o>>2]=0;o=j+h|0;if((a[f]&1)==0){a[f]=o<<1&255;return b|0}else{c[b+4>>2]=o;return b|0}return 0}function uS(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;x=i;i=i+12|0;i=i+7&-8;y=x;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=A;C=i;i=i+12|0;i=i+7&-8;D=C;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+12|0;i=i+7&-8;I=H;if(b){b=c[d>>2]|0;if((c[11096]|0)!=-1){c[p>>2]=44384;c[p+4>>2]=30;c[p+8>>2]=0;qn(44384,p,258)}p=(c[11097]|0)-1|0;J=c[b+8>>2]|0;if((c[b+12>>2]|0)-J>>2>>>0<=p>>>0){K=cr(4)|0;L=K;xW(L);bJ(K|0,35096,560)}b=c[J+(p<<2)>>2]|0;if((b|0)==0){K=cr(4)|0;L=K;xW(L);bJ(K|0,35096,560)}K=b;cH[c[(c[b>>2]|0)+44>>2]&255](q,K);L=e;E=c[q>>2]|0;a[L]=E&255;E=E>>8;a[L+1|0]=E&255;E=E>>8;a[L+2|0]=E&255;E=E>>8;a[L+3|0]=E&255;L=b;cH[c[(c[L>>2]|0)+32>>2]&255](r,K);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];yC(s|0,0,12);qG(r);cH[c[(c[L>>2]|0)+28>>2]&255](t,K);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}qJ(k,0);c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];yC(u|0,0,12);qG(t);t=b;c[f>>2]=cJ[c[(c[t>>2]|0)+12>>2]&255](K)|0;c[g>>2]=cJ[c[(c[t>>2]|0)+16>>2]&255](K)|0;cH[c[(c[b>>2]|0)+20>>2]&255](v,K);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}qz(h,0);c[b>>2]=c[w>>2];c[b+4>>2]=c[w+4>>2];c[b+8>>2]=c[w+8>>2];yC(w|0,0,12);qu(v);cH[c[(c[L>>2]|0)+24>>2]&255](x,K);L=j;if((a[L]&1)==0){c[j+4>>2]=0;a[L]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}qJ(j,0);c[L>>2]=c[y>>2];c[L+4>>2]=c[y+4>>2];c[L+8>>2]=c[y+8>>2];yC(y|0,0,12);qG(x);M=cJ[c[(c[t>>2]|0)+36>>2]&255](K)|0;c[m>>2]=M;i=n;return}else{K=c[d>>2]|0;if((c[11098]|0)!=-1){c[o>>2]=44392;c[o+4>>2]=30;c[o+8>>2]=0;qn(44392,o,258)}o=(c[11099]|0)-1|0;d=c[K+8>>2]|0;if((c[K+12>>2]|0)-d>>2>>>0<=o>>>0){N=cr(4)|0;O=N;xW(O);bJ(N|0,35096,560)}K=c[d+(o<<2)>>2]|0;if((K|0)==0){N=cr(4)|0;O=N;xW(O);bJ(N|0,35096,560)}N=K;cH[c[(c[K>>2]|0)+44>>2]&255](z,N);O=e;E=c[z>>2]|0;a[O]=E&255;E=E>>8;a[O+1|0]=E&255;E=E>>8;a[O+2|0]=E&255;E=E>>8;a[O+3|0]=E&255;O=K;cH[c[(c[O>>2]|0)+32>>2]&255](A,N);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[z>>2]=c[B>>2];c[z+4>>2]=c[B+4>>2];c[z+8>>2]=c[B+8>>2];yC(B|0,0,12);qG(A);cH[c[(c[O>>2]|0)+28>>2]&255](C,N);A=k;if((a[A]&1)==0){c[k+4>>2]=0;a[A]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}qJ(k,0);c[A>>2]=c[D>>2];c[A+4>>2]=c[D+4>>2];c[A+8>>2]=c[D+8>>2];yC(D|0,0,12);qG(C);C=K;c[f>>2]=cJ[c[(c[C>>2]|0)+12>>2]&255](N)|0;c[g>>2]=cJ[c[(c[C>>2]|0)+16>>2]&255](N)|0;cH[c[(c[K>>2]|0)+20>>2]&255](F,N);K=h;if((a[K]&1)==0){a[h+1|0]=0;a[K]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}qz(h,0);c[K>>2]=c[G>>2];c[K+4>>2]=c[G+4>>2];c[K+8>>2]=c[G+8>>2];yC(G|0,0,12);qu(F);cH[c[(c[O>>2]|0)+24>>2]&255](H,N);O=j;if((a[O]&1)==0){c[j+4>>2]=0;a[O]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}qJ(j,0);c[O>>2]=c[I>>2];c[O+4>>2]=c[I+4>>2];c[O+8>>2]=c[I+8>>2];yC(I|0,0,12);qG(H);M=cJ[c[(c[C>>2]|0)+36>>2]&255](N)|0;c[m>>2]=M;i=n;return}}function uT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=456;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=ym(k,j)|0;k=a;if((a|0)==0){yw()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}cG[c[e>>2]&1023](a);l=c[g>>2]|0}}while(0);c[e>>2]=568;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function uU(a){a=a|0;p0(a|0);yr(a);return}function uV(a){a=a|0;p0(a|0);return}function uW(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;e=i;i=i+280|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+232|0;p=e+240|0;q=e+248|0;r=e+256|0;s=e+264|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+100|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=be(D|0,100,16512,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);G=s6(n,c[10540]|0,16512,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){yw();I=c[n>>2]|0}else{I=H}H=yj(G)|0;if((H|0)!=0){J=H;K=G;L=I;M=H;break}yw();J=0;K=G;L=I;M=0}else{J=E;K=F;L=0;M=0}}while(0);qR(o,j);F=o|0;E=c[F>>2]|0;if((c[10982]|0)!=-1){c[m>>2]=43928;c[m+4>>2]=30;c[m+8>>2]=0;qn(43928,m,258)}m=(c[10983]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}G=D;H=c[n>>2]|0;N=H+K|0;O=c[(c[D>>2]|0)+32>>2]|0;cY[O&31](G,H,N,J)|0;if((K|0)==0){P=0}else{P=(a[c[n>>2]|0]|0)==45}yC(t|0,0,12);yC(v|0,0,12);yC(x|0,0,12);uX(g,P,o,p,q,r,s,u,w,y);N=z|0;H=c[y>>2]|0;if((K|0)>(H|0)){O=d[x]|0;if((O&1|0)==0){Q=O>>>1}else{Q=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){R=O>>>1}else{R=c[u+4>>2]|0}S=(K-H<<1|1)+Q+R|0}else{O=d[x]|0;if((O&1|0)==0){T=O>>>1}else{T=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){U=O>>>1}else{U=c[u+4>>2]|0}S=T+2+U|0}O=S+H|0;do{if(O>>>0>100>>>0){D=yj(O)|0;if((D|0)!=0){V=D;W=D;break}yw();V=0;W=0}else{V=N;W=0}}while(0);uY(V,A,B,c[j+4>>2]|0,J,J+K|0,G,P,p,a[q]|0,a[r]|0,s,u,w,H);c[C>>2]=c[f>>2];fK(b,C,V,c[A>>2]|0,c[B>>2]|0,j,k);if((W|0)!=0){yk(W)}qu(w);qu(u);qu(s);N=c[F>>2]|0;p2(N)|0;if((M|0)!=0){yk(M)}if((L|0)==0){i=e;return}yk(L);i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function uX(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;C=i;i=i+4|0;i=i+7&-8;D=C;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[11100]|0)!=-1){c[p>>2]=44400;c[p+4>>2]=30;c[p+8>>2]=0;qn(44400,p,258)}p=(c[11101]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=cr(4)|0;R=Q;xW(R);bJ(Q|0,35096,560)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=cr(4)|0;R=Q;xW(R);bJ(Q|0,35096,560)}Q=e;R=c[e>>2]|0;if(d){cH[c[R+44>>2]&255](r,Q);r=f;E=c[q>>2]|0;a[r]=E&255;E=E>>8;a[r+1|0]=E&255;E=E>>8;a[r+2|0]=E&255;E=E>>8;a[r+3|0]=E&255;cH[c[(c[e>>2]|0)+32>>2]&255](s,Q);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];yC(t|0,0,12);qu(s)}else{cH[c[R+40>>2]&255](v,Q);v=f;E=c[u>>2]|0;a[v]=E&255;E=E>>8;a[v+1|0]=E&255;E=E>>8;a[v+2|0]=E&255;E=E>>8;a[v+3|0]=E&255;cH[c[(c[e>>2]|0)+28>>2]&255](w,Q);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];yC(x|0,0,12);qu(w)}w=e;a[g]=cJ[c[(c[w>>2]|0)+12>>2]&255](Q)|0;a[h]=cJ[c[(c[w>>2]|0)+16>>2]&255](Q)|0;w=e;cH[c[(c[w>>2]|0)+20>>2]&255](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];yC(z|0,0,12);qu(y);cH[c[(c[w>>2]|0)+24>>2]&255](A,Q);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}qz(k,0);c[w>>2]=c[B>>2];c[w+4>>2]=c[B+4>>2];c[w+8>>2]=c[B+8>>2];yC(B|0,0,12);qu(A);S=cJ[c[(c[e>>2]|0)+36>>2]&255](Q)|0;c[m>>2]=S;i=n;return}else{if((c[11102]|0)!=-1){c[o>>2]=44408;c[o+4>>2]=30;c[o+8>>2]=0;qn(44408,o,258)}o=(c[11103]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=cr(4)|0;U=T;xW(U);bJ(T|0,35096,560)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=cr(4)|0;U=T;xW(U);bJ(T|0,35096,560)}T=P;U=c[P>>2]|0;if(d){cH[c[U+44>>2]&255](D,T);D=f;E=c[C>>2]|0;a[D]=E&255;E=E>>8;a[D+1|0]=E&255;E=E>>8;a[D+2|0]=E&255;E=E>>8;a[D+3|0]=E&255;cH[c[(c[P>>2]|0)+32>>2]&255](F,T);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[D>>2]=c[G>>2];c[D+4>>2]=c[G+4>>2];c[D+8>>2]=c[G+8>>2];yC(G|0,0,12);qu(F)}else{cH[c[U+40>>2]&255](I,T);I=f;E=c[H>>2]|0;a[I]=E&255;E=E>>8;a[I+1|0]=E&255;E=E>>8;a[I+2|0]=E&255;E=E>>8;a[I+3|0]=E&255;cH[c[(c[P>>2]|0)+28>>2]&255](J,T);I=l;if((a[I]&1)==0){a[l+1|0]=0;a[I]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}qz(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];yC(K|0,0,12);qu(J)}J=P;a[g]=cJ[c[(c[J>>2]|0)+12>>2]&255](T)|0;a[h]=cJ[c[(c[J>>2]|0)+16>>2]&255](T)|0;J=P;cH[c[(c[J>>2]|0)+20>>2]&255](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];yC(M|0,0,12);qu(L);cH[c[(c[J>>2]|0)+24>>2]&255](N,T);J=k;if((a[J]&1)==0){a[k+1|0]=0;a[J]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}qz(k,0);c[J>>2]=c[O>>2];c[J+4>>2]=c[O+4>>2];c[J+8>>2]=c[O+8>>2];yC(O|0,0,12);qu(N);S=cJ[c[(c[P>>2]|0)+36>>2]&255](T)|0;c[m>>2]=S;i=n;return}}function uY(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+4|0;A=p+8|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=h;h=0;while(1){L937:do{switch(a[l+h|0]|0){case 4:{H=c[f>>2]|0;I=k?G+1|0:G;J=I;while(1){if(J>>>0>=i>>>0){break}K=a[J]|0;if(K<<24>>24<0){break}if((b[(c[p>>2]|0)+(K<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}K=J;if(B){if(J>>>0>I>>>0){L=I+(-K|0)|0;K=L>>>0<o>>>0?o:L;L=K+r|0;M=J;N=r;O=H;while(1){P=M-1|0;Q=a[P]|0;c[f>>2]=O+1;a[O]=Q;Q=N-1|0;R=(Q|0)>0;if(!(P>>>0>I>>>0&R)){break}M=P;N=Q;O=c[f>>2]|0}O=J+K|0;if(R){S=L;T=O;U=817}else{V=0;W=L;X=O}}else{S=r;T=J;U=817}if((U|0)==817){U=0;V=cW[c[(c[s>>2]|0)+28>>2]&255](j,48)|0;W=S;X=T}O=c[f>>2]|0;c[f>>2]=O+1;if((W|0)>0){N=W;M=O;while(1){a[M]=V;Q=N-1|0;P=c[f>>2]|0;c[f>>2]=P+1;if((Q|0)>0){N=Q;M=P}else{Y=P;break}}}else{Y=O}a[Y]=m;Z=X}else{Z=J}if((Z|0)==(I|0)){M=cW[c[(c[s>>2]|0)+28>>2]&255](j,48)|0;N=c[f>>2]|0;c[f>>2]=N+1;a[N]=M}else{M=a[C]|0;N=M&255;if((N&1|0)==0){_=N>>>1}else{_=c[F>>2]|0}if((_|0)==0){$=Z;aa=0;ab=0;ac=-1}else{if((M&1)==0){ad=D}else{ad=c[E>>2]|0}$=Z;aa=0;ab=0;ac=a[ad]|0}while(1){do{if((aa|0)==(ac|0)){M=c[f>>2]|0;c[f>>2]=M+1;a[M]=n;M=ab+1|0;N=a[C]|0;L=N&255;if((L&1|0)==0){ae=L>>>1}else{ae=c[F>>2]|0}if(M>>>0>=ae>>>0){af=ac;ag=M;ah=0;break}L=(N&1)==0;if(L){ai=D}else{ai=c[E>>2]|0}if((a[ai+M|0]|0)==127){af=-1;ag=M;ah=0;break}if(L){aj=D}else{aj=c[E>>2]|0}af=a[aj+M|0]|0;ag=M;ah=0}else{af=ac;ag=ab;ah=aa}}while(0);M=$-1|0;L=a[M]|0;N=c[f>>2]|0;c[f>>2]=N+1;a[N]=L;if((M|0)==(I|0)){break}else{$=M;aa=ah+1|0;ab=ag;ac=af}}}J=c[f>>2]|0;if((H|0)==(J|0)){ak=I;break L937}O=J-1|0;if(H>>>0<O>>>0){al=H;am=O}else{ak=I;break L937}while(1){O=a[al]|0;a[al]=a[am]|0;a[am]=O;O=al+1|0;J=am-1|0;if(O>>>0<J>>>0){al=O;am=J}else{ak=I;break}}break};case 0:{c[e>>2]=c[f>>2];ak=G;break};case 1:{c[e>>2]=c[f>>2];I=cW[c[(c[s>>2]|0)+28>>2]&255](j,32)|0;H=c[f>>2]|0;c[f>>2]=H+1;a[H]=I;ak=G;break};case 3:{I=a[t]|0;H=I&255;if((H&1|0)==0){an=H>>>1}else{an=c[w>>2]|0}if((an|0)==0){ak=G;break L937}if((I&1)==0){ao=u}else{ao=c[v>>2]|0}I=a[ao]|0;H=c[f>>2]|0;c[f>>2]=H+1;a[H]=I;ak=G;break};case 2:{I=a[q]|0;H=I&255;J=(H&1|0)==0;if(J){ap=H>>>1}else{ap=c[z>>2]|0}if((ap|0)==0|x){ak=G;break L937}if((I&1)==0){aq=y;ar=y}else{I=c[A>>2]|0;aq=I;ar=I}if(J){as=H>>>1}else{as=c[z>>2]|0}H=aq+as|0;J=c[f>>2]|0;if((ar|0)==(H|0)){at=J}else{I=ar;O=J;while(1){a[O]=a[I]|0;J=I+1|0;M=O+1|0;if((J|0)==(H|0)){at=M;break}else{I=J;O=M}}}c[f>>2]=at;ak=G;break};default:{ak=G}}}while(0);O=h+1|0;if(O>>>0<4>>>0){G=ak;h=O}else{break}}h=a[t]|0;t=h&255;ak=(t&1|0)==0;if(ak){au=t>>>1}else{au=c[w>>2]|0}if(au>>>0>1>>>0){if((h&1)==0){av=u;aw=u}else{u=c[v>>2]|0;av=u;aw=u}if(ak){ax=t>>>1}else{ax=c[w>>2]|0}w=av+ax|0;ax=c[f>>2]|0;av=aw+1|0;if((av|0)==(w|0)){ay=ax}else{aw=ax;ax=av;while(1){a[aw]=a[ax]|0;av=aw+1|0;t=ax+1|0;if((t|0)==(w|0)){ay=av;break}else{aw=av;ax=t}}}c[f>>2]=ay}ay=g&176;if((ay|0)==32){c[e>>2]=c[f>>2];return}else if((ay|0)==16){return}else{c[e>>2]=d;return}}function uZ(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+100|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;qR(m,h);B=m|0;C=c[B>>2]|0;if((c[10982]|0)!=-1){c[l>>2]=43928;c[l+4>>2]=30;c[l+8>>2]=0;qn(43928,l,258)}l=(c[10983]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=k;I=a[H]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[k+4>>2]|0}if((K|0)==0){L=0}else{if((I&1)==0){M=G+1|0}else{M=c[k+8>>2]|0}I=a[M]|0;L=I<<24>>24==(cW[c[(c[E>>2]|0)+28>>2]&255](F,45)|0)<<24>>24}yC(r|0,0,12);yC(t|0,0,12);yC(v|0,0,12);uX(g,L,m,n,o,p,q,s,u,w);E=x|0;I=a[H]|0;J=I&255;N=(J&1|0)==0;if(N){O=J>>>1}else{O=c[k+4>>2]|0}P=c[w>>2]|0;if((O|0)>(P|0)){if(N){Q=J>>>1}else{Q=c[k+4>>2]|0}J=d[v]|0;if((J&1|0)==0){R=J>>>1}else{R=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){S=J>>>1}else{S=c[s+4>>2]|0}T=(Q-P<<1|1)+R+S|0}else{J=d[v]|0;if((J&1|0)==0){U=J>>>1}else{U=c[u+4>>2]|0}J=d[t]|0;if((J&1|0)==0){V=J>>>1}else{V=c[s+4>>2]|0}T=U+2+V|0}J=T+P|0;do{if(J>>>0>100>>>0){N=yj(J)|0;if((N|0)!=0){W=N;X=N;Y=I;break}yw();W=0;X=0;Y=a[H]|0}else{W=E;X=0;Y=I}}while(0);if((Y&1)==0){Z=G+1|0;_=G+1|0}else{I=c[k+8>>2]|0;Z=I;_=I}I=Y&255;if((I&1|0)==0){$=I>>>1}else{$=c[k+4>>2]|0}uY(W,y,z,c[h+4>>2]|0,_,Z+$|0,F,L,n,a[o]|0,a[p]|0,q,s,u,P);c[A>>2]=c[f>>2];fK(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){qu(u);qu(s);qu(q);aa=c[B>>2]|0;ab=aa|0;ac=p2(ab)|0;i=e;return}yk(X);qu(u);qu(s);qu(q);aa=c[B>>2]|0;ab=aa|0;ac=p2(ab)|0;i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function u_(a){a=a|0;p0(a|0);yr(a);return}function u$(a){a=a|0;p0(a|0);return}function u0(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+576|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+528|0;p=e+536|0;q=e+544|0;r=e+552|0;s=e+560|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+400|0;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=e+16|0;c[n>>2]=D;E=e+128|0;F=be(D|0,100,16512,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;do{if(F>>>0>99>>>0){do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);G=s6(n,c[10540]|0,16512,(D=i,i=i+8|0,h[D>>3]=l,D)|0)|0;i=D;H=c[n>>2]|0;if((H|0)==0){yw();I=c[n>>2]|0}else{I=H}H=yj(G<<2)|0;J=H;if((H|0)!=0){K=J;L=G;M=I;N=J;break}yw();K=J;L=G;M=I;N=J}else{K=E;L=F;M=0;N=0}}while(0);qR(o,j);F=o|0;E=c[F>>2]|0;if((c[10980]|0)!=-1){c[m>>2]=43920;c[m+4>>2]=30;c[m+8>>2]=0;qn(43920,m,258)}m=(c[10981]|0)-1|0;I=c[E+8>>2]|0;do{if((c[E+12>>2]|0)-I>>2>>>0>m>>>0){D=c[I+(m<<2)>>2]|0;if((D|0)==0){break}J=D;G=c[n>>2]|0;H=G+L|0;O=c[(c[D>>2]|0)+48>>2]|0;cY[O&31](J,G,H,K)|0;if((L|0)==0){P=0}else{P=(a[c[n>>2]|0]|0)==45}yC(t|0,0,12);yC(v|0,0,12);yC(x|0,0,12);u1(g,P,o,p,q,r,s,u,w,y);H=z|0;G=c[y>>2]|0;if((L|0)>(G|0)){O=d[x]|0;if((O&1|0)==0){Q=O>>>1}else{Q=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){R=O>>>1}else{R=c[u+4>>2]|0}S=(L-G<<1|1)+Q+R|0}else{O=d[x]|0;if((O&1|0)==0){T=O>>>1}else{T=c[w+4>>2]|0}O=d[v]|0;if((O&1|0)==0){U=O>>>1}else{U=c[u+4>>2]|0}S=T+2+U|0}O=S+G|0;do{if(O>>>0>100>>>0){D=yj(O<<2)|0;V=D;if((D|0)!=0){W=V;X=V;break}yw();W=V;X=V}else{W=H;X=0}}while(0);u2(W,A,B,c[j+4>>2]|0,K,K+(L<<2)|0,J,P,p,c[q>>2]|0,c[r>>2]|0,s,u,w,G);c[C>>2]=c[f>>2];tf(b,C,W,c[A>>2]|0,c[B>>2]|0,j,k);if((X|0)!=0){yk(X)}qG(w);qG(u);qu(s);H=c[F>>2]|0;p2(H)|0;if((N|0)!=0){yk(N)}if((M|0)==0){i=e;return}yk(M);i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function u1(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;x=w;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=A;C=i;i=i+4|0;i=i+7&-8;D=C;F=i;i=i+12|0;i=i+7&-8;G=F;H=i;i=i+4|0;i=i+7&-8;I=H;J=i;i=i+12|0;i=i+7&-8;K=J;L=i;i=i+12|0;i=i+7&-8;M=L;N=i;i=i+12|0;i=i+7&-8;O=N;P=c[e>>2]|0;if(b){if((c[11096]|0)!=-1){c[p>>2]=44384;c[p+4>>2]=30;c[p+8>>2]=0;qn(44384,p,258)}p=(c[11097]|0)-1|0;b=c[P+8>>2]|0;if((c[P+12>>2]|0)-b>>2>>>0<=p>>>0){Q=cr(4)|0;R=Q;xW(R);bJ(Q|0,35096,560)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){Q=cr(4)|0;R=Q;xW(R);bJ(Q|0,35096,560)}Q=e;R=c[e>>2]|0;if(d){cH[c[R+44>>2]&255](r,Q);r=f;E=c[q>>2]|0;a[r]=E&255;E=E>>8;a[r+1|0]=E&255;E=E>>8;a[r+2|0]=E&255;E=E>>8;a[r+3|0]=E&255;cH[c[(c[e>>2]|0)+32>>2]&255](s,Q);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[r>>2]=c[t>>2];c[r+4>>2]=c[t+4>>2];c[r+8>>2]=c[t+8>>2];yC(t|0,0,12);qG(s)}else{cH[c[R+40>>2]&255](v,Q);v=f;E=c[u>>2]|0;a[v]=E&255;E=E>>8;a[v+1|0]=E&255;E=E>>8;a[v+2|0]=E&255;E=E>>8;a[v+3|0]=E&255;cH[c[(c[e>>2]|0)+28>>2]&255](w,Q);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[v>>2]=c[x>>2];c[v+4>>2]=c[x+4>>2];c[v+8>>2]=c[x+8>>2];yC(x|0,0,12);qG(w)}w=e;c[g>>2]=cJ[c[(c[w>>2]|0)+12>>2]&255](Q)|0;c[h>>2]=cJ[c[(c[w>>2]|0)+16>>2]&255](Q)|0;cH[c[(c[e>>2]|0)+20>>2]&255](y,Q);x=j;if((a[x]&1)==0){a[j+1|0]=0;a[x]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[x>>2]=c[z>>2];c[x+4>>2]=c[z+4>>2];c[x+8>>2]=c[z+8>>2];yC(z|0,0,12);qu(y);cH[c[(c[e>>2]|0)+24>>2]&255](A,Q);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}qJ(k,0);c[e>>2]=c[B>>2];c[e+4>>2]=c[B+4>>2];c[e+8>>2]=c[B+8>>2];yC(B|0,0,12);qG(A);S=cJ[c[(c[w>>2]|0)+36>>2]&255](Q)|0;c[m>>2]=S;i=n;return}else{if((c[11098]|0)!=-1){c[o>>2]=44392;c[o+4>>2]=30;c[o+8>>2]=0;qn(44392,o,258)}o=(c[11099]|0)-1|0;Q=c[P+8>>2]|0;if((c[P+12>>2]|0)-Q>>2>>>0<=o>>>0){T=cr(4)|0;U=T;xW(U);bJ(T|0,35096,560)}P=c[Q+(o<<2)>>2]|0;if((P|0)==0){T=cr(4)|0;U=T;xW(U);bJ(T|0,35096,560)}T=P;U=c[P>>2]|0;if(d){cH[c[U+44>>2]&255](D,T);D=f;E=c[C>>2]|0;a[D]=E&255;E=E>>8;a[D+1|0]=E&255;E=E>>8;a[D+2|0]=E&255;E=E>>8;a[D+3|0]=E&255;cH[c[(c[P>>2]|0)+32>>2]&255](F,T);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[D>>2]=c[G>>2];c[D+4>>2]=c[G+4>>2];c[D+8>>2]=c[G+8>>2];yC(G|0,0,12);qG(F)}else{cH[c[U+40>>2]&255](I,T);I=f;E=c[H>>2]|0;a[I]=E&255;E=E>>8;a[I+1|0]=E&255;E=E>>8;a[I+2|0]=E&255;E=E>>8;a[I+3|0]=E&255;cH[c[(c[P>>2]|0)+28>>2]&255](J,T);I=l;if((a[I]&1)==0){c[l+4>>2]=0;a[I]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}qJ(l,0);c[I>>2]=c[K>>2];c[I+4>>2]=c[K+4>>2];c[I+8>>2]=c[K+8>>2];yC(K|0,0,12);qG(J)}J=P;c[g>>2]=cJ[c[(c[J>>2]|0)+12>>2]&255](T)|0;c[h>>2]=cJ[c[(c[J>>2]|0)+16>>2]&255](T)|0;cH[c[(c[P>>2]|0)+20>>2]&255](L,T);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}qz(j,0);c[h>>2]=c[M>>2];c[h+4>>2]=c[M+4>>2];c[h+8>>2]=c[M+8>>2];yC(M|0,0,12);qu(L);cH[c[(c[P>>2]|0)+24>>2]&255](N,T);P=k;if((a[P]&1)==0){c[k+4>>2]=0;a[P]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}qJ(k,0);c[P>>2]=c[O>>2];c[P+4>>2]=c[O+4>>2];c[P+8>>2]=c[O+8>>2];yC(O|0,0,12);qG(N);S=cJ[c[(c[J>>2]|0)+36>>2]&255](T)|0;c[m>>2]=S;i=n;return}}function u2(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=g;g=0;while(1){L1258:do{switch(a[k+g|0]|0){case 0:{c[d>>2]=c[e>>2];D=n;break};case 1:{c[d>>2]=c[e>>2];E=cW[c[(c[r>>2]|0)+44>>2]&255](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 3:{E=a[s]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[t>>2]|0}if((G|0)==0){D=n;break L1258}if((E&1)==0){H=t}else{H=c[u>>2]|0}E=c[H>>2]|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 2:{E=a[p]|0;F=E&255;I=(F&1|0)==0;if(I){J=F>>>1}else{J=c[w>>2]|0}if((J|0)==0|v){D=n;break L1258}if((E&1)==0){K=w;L=w;M=w}else{E=c[x>>2]|0;K=E;L=E;M=E}if(I){N=F>>>1}else{N=c[w>>2]|0}F=K+(N<<2)|0;I=c[e>>2]|0;if((L|0)==(F|0)){O=I}else{E=(K+(N-1<<2)+(-M|0)|0)>>>2;P=L;Q=I;while(1){c[Q>>2]=c[P>>2];R=P+4|0;if((R|0)==(F|0)){break}P=R;Q=Q+4|0}O=I+(E+1<<2)|0}c[e>>2]=O;D=n;break};case 4:{Q=c[e>>2]|0;P=j?n+4|0:n;F=P;while(1){if(F>>>0>=h>>>0){break}if(cM[c[(c[o>>2]|0)+12>>2]&63](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){if(F>>>0>P>>>0){E=F;I=q;do{E=E-4|0;R=c[E>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=R;I=I-1|0;T=(I|0)>0;}while(E>>>0>P>>>0&T);if(T){U=I;V=E;W=1093}else{X=0;Y=I;Z=E}}else{U=q;V=F;W=1093}if((W|0)==1093){W=0;X=cW[c[(c[r>>2]|0)+44>>2]&255](i,48)|0;Y=U;Z=V}R=c[e>>2]|0;c[e>>2]=R+4;if((Y|0)>0){S=Y;_=R;while(1){c[_>>2]=X;$=S-1|0;aa=c[e>>2]|0;c[e>>2]=aa+4;if(($|0)>0){S=$;_=aa}else{ab=aa;break}}}else{ab=R}c[ab>>2]=l;ac=Z}else{ac=F}if((ac|0)==(P|0)){_=cW[c[(c[r>>2]|0)+44>>2]&255](i,48)|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=_}else{_=a[z]|0;S=_&255;if((S&1|0)==0){ad=S>>>1}else{ad=c[C>>2]|0}if((ad|0)==0){ae=ac;af=0;ag=0;ah=-1}else{if((_&1)==0){ai=A}else{ai=c[B>>2]|0}ae=ac;af=0;ag=0;ah=a[ai]|0}while(1){do{if((af|0)==(ah|0)){_=c[e>>2]|0;c[e>>2]=_+4;c[_>>2]=m;_=ag+1|0;S=a[z]|0;E=S&255;if((E&1|0)==0){aj=E>>>1}else{aj=c[C>>2]|0}if(_>>>0>=aj>>>0){ak=ah;al=_;am=0;break}E=(S&1)==0;if(E){an=A}else{an=c[B>>2]|0}if((a[an+_|0]|0)==127){ak=-1;al=_;am=0;break}if(E){ao=A}else{ao=c[B>>2]|0}ak=a[ao+_|0]|0;al=_;am=0}else{ak=ah;al=ag;am=af}}while(0);_=ae-4|0;E=c[_>>2]|0;S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=E;if((_|0)==(P|0)){break}else{ae=_;af=am+1|0;ag=al;ah=ak}}}F=c[e>>2]|0;if((Q|0)==(F|0)){D=P;break L1258}R=F-4|0;if(Q>>>0<R>>>0){ap=Q;aq=R}else{D=P;break L1258}while(1){R=c[ap>>2]|0;c[ap>>2]=c[aq>>2];c[aq>>2]=R;R=ap+4|0;F=aq-4|0;if(R>>>0<F>>>0){ap=R;aq=F}else{D=P;break}}break};default:{D=n}}}while(0);P=g+1|0;if(P>>>0<4>>>0){n=D;g=P}else{break}}g=a[s]|0;s=g&255;D=(s&1|0)==0;if(D){ar=s>>>1}else{ar=c[t>>2]|0}if(ar>>>0>1>>>0){if((g&1)==0){as=t;at=t;au=t}else{g=c[u>>2]|0;as=g;at=g;au=g}if(D){av=s>>>1}else{av=c[t>>2]|0}t=as+(av<<2)|0;s=c[e>>2]|0;D=at+4|0;if((D|0)==(t|0)){aw=s}else{at=((as+(av-2<<2)+(-au|0)|0)>>>2)+1|0;au=s;av=D;while(1){c[au>>2]=c[av>>2];D=av+4|0;if((D|0)==(t|0)){break}else{au=au+4|0;av=D}}aw=s+(at<<2)|0}c[e>>2]=aw}aw=f&176;if((aw|0)==16){return}else if((aw|0)==32){c[d>>2]=c[e>>2];return}else{c[d>>2]=b;return}}function u3(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;x=i;i=i+400|0;y=i;i=i+4|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;qR(m,h);B=m|0;C=c[B>>2]|0;if((c[10980]|0)!=-1){c[l>>2]=43920;c[l+4>>2]=30;c[l+8>>2]=0;qn(43920,l,258)}l=(c[10981]|0)-1|0;D=c[C+8>>2]|0;do{if((c[C+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=k;H=a[G]|0;I=H&255;if((I&1|0)==0){J=I>>>1}else{J=c[k+4>>2]|0}if((J|0)==0){K=0}else{if((H&1)==0){L=k+4|0}else{L=c[k+8>>2]|0}H=c[L>>2]|0;K=(H|0)==(cW[c[(c[E>>2]|0)+44>>2]&255](F,45)|0)}yC(r|0,0,12);yC(t|0,0,12);yC(v|0,0,12);u1(g,K,m,n,o,p,q,s,u,w);E=x|0;H=a[G]|0;I=H&255;M=(I&1|0)==0;if(M){N=I>>>1}else{N=c[k+4>>2]|0}O=c[w>>2]|0;if((N|0)>(O|0)){if(M){P=I>>>1}else{P=c[k+4>>2]|0}I=d[v]|0;if((I&1|0)==0){Q=I>>>1}else{Q=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){R=I>>>1}else{R=c[s+4>>2]|0}S=(P-O<<1|1)+Q+R|0}else{I=d[v]|0;if((I&1|0)==0){T=I>>>1}else{T=c[u+4>>2]|0}I=d[t]|0;if((I&1|0)==0){U=I>>>1}else{U=c[s+4>>2]|0}S=T+2+U|0}I=S+O|0;do{if(I>>>0>100>>>0){M=yj(I<<2)|0;V=M;if((M|0)!=0){W=V;X=V;Y=H;break}yw();W=V;X=V;Y=a[G]|0}else{W=E;X=0;Y=H}}while(0);if((Y&1)==0){Z=k+4|0;_=k+4|0}else{H=c[k+8>>2]|0;Z=H;_=H}H=Y&255;if((H&1|0)==0){$=H>>>1}else{$=c[k+4>>2]|0}u2(W,y,z,c[h+4>>2]|0,_,Z+($<<2)|0,F,K,n,c[o>>2]|0,c[p>>2]|0,q,s,u,O);c[A>>2]=c[f>>2];tf(b,A,W,c[y>>2]|0,c[z>>2]|0,h,j);if((X|0)==0){qG(u);qG(s);qu(q);aa=c[B>>2]|0;ab=aa|0;ac=p2(ab)|0;i=e;return}yk(X);qG(u);qG(s);qu(q);aa=c[B>>2]|0;ab=aa|0;ac=p2(ab)|0;i=e;return}}while(0);e=cr(4)|0;xW(e);bJ(e|0,35096,560)}function u4(a){a=a|0;p0(a|0);yr(a);return}function u5(a){a=a|0;p0(a|0);return}function u6(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=cw(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function u7(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;i=i+16|0;j=d|0;k=j;yC(k|0,0,12);l=b;m=h;n=a[h]|0;if((n&1)==0){o=m+1|0;p=m+1|0}else{m=c[h+8>>2]|0;o=m;p=m}m=n&255;if((m&1|0)==0){q=m>>>1}else{q=c[h+4>>2]|0}h=o+q|0;do{if(p>>>0<h>>>0){q=p;do{qA(j,a[q]|0);q=q+1|0;}while(q>>>0<h>>>0);q=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){r=q;s=1225;break}t=c[j+8>>2]|0;u=q}else{r=(e|0)==-1?-1:e<<1;s=1225}}while(0);if((s|0)==1225){t=j+1|0;u=r}r=bt(u|0,f|0,g|0,t|0)|0;yC(l|0,0,12);l=yz(r|0)|0;t=r+l|0;if((l|0)>0){v=r}else{qu(j);i=d;return}do{qA(b,a[v]|0);v=v+1|0;}while(v>>>0<t>>>0);qu(j);i=d;return}function u8(a,b){a=a|0;b=b|0;b5(((b|0)==-1?-1:b<<1)|0)|0;return}function u9(a){a=a|0;p0(a|0);yr(a);return}function va(a){a=a|0;p0(a|0);return}function vb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=cw(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function vc(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+224|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=r;t=i;i=i+8|0;u=i;i=i+8|0;yC(s|0,0,12);v=b;w=t|0;c[t+4>>2]=0;c[t>>2]=23200;x=a[h]|0;if((x&1)==0){y=h+4|0;z=h+4|0}else{A=c[h+8>>2]|0;y=A;z=A}A=x&255;if((A&1|0)==0){B=A>>>1}else{B=c[h+4>>2]|0}h=y+(B<<2)|0;L1491:do{if(z>>>0<h>>>0){B=t;y=k|0;A=k+32|0;x=z;C=23200;while(1){c[m>>2]=x;D=(c$[c[C+12>>2]&31](w,j,x,h,m,y,A,l)|0)==2;E=c[m>>2]|0;if(D|(E|0)==(x|0)){break}if(y>>>0<(c[l>>2]|0)>>>0){D=y;do{qA(r,a[D]|0);D=D+1|0;}while(D>>>0<(c[l>>2]|0)>>>0);F=c[m>>2]|0}else{F=E}if(F>>>0>=h>>>0){break L1491}x=F;C=c[B>>2]|0}B=cr(8)|0;p8(B,11416);bJ(B|0,35112,48)}}while(0);p0(t|0);if((a[s]&1)==0){G=r+1|0}else{G=c[r+8>>2]|0}s=bt(((e|0)==-1?-1:e<<1)|0,f|0,g|0,G|0)|0;yC(v|0,0,12);v=u|0;c[u+4>>2]=0;c[u>>2]=23144;G=yz(s|0)|0;g=s+G|0;if((G|0)<1){H=u|0;p0(H);qu(r);i=d;return}G=u;f=g;e=o|0;t=o+128|0;o=s;s=23144;while(1){c[q>>2]=o;F=(c$[c[s+16>>2]&31](v,n,o,(f-o|0)>32?o+32|0:g,q,e,t,p)|0)==2;h=c[q>>2]|0;if(F|(h|0)==(o|0)){break}if(e>>>0<(c[p>>2]|0)>>>0){F=e;do{qK(b,c[F>>2]|0);F=F+4|0;}while(F>>>0<(c[p>>2]|0)>>>0);I=c[q>>2]|0}else{I=h}if(I>>>0>=g>>>0){J=1292;break}o=I;s=c[G>>2]|0}if((J|0)==1292){H=u|0;p0(H);qu(r);i=d;return}d=cr(8)|0;p8(d,11416);bJ(d|0,35112,48)}function vd(a,b){a=a|0;b=b|0;b5(((b|0)==-1?-1:b<<1)|0)|0;return}function ve(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=22496;d=b+8|0;e=c[d>>2]|0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);if((e|0)==(c[10540]|0)){f=b|0;p0(f);return}bs(c[d>>2]|0);f=b|0;p0(f);return}function vf(a){a=a|0;a=cr(8)|0;p3(a,16064);c[a>>2]=21408;bJ(a|0,35144,80)}function vg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=22752;d=b+8|0;I=b+12|0;a[b+136|0]=1;J=b+24|0;K=J;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J+112;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);qr(b+144|0,15720,1);J=c[d>>2]|0;d=c[I>>2]|0;if((J|0)!=(d|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[10573]=0;c[10572]=22456;if((c[10902]|0)!=-1){c[H>>2]=43608;c[H+4>>2]=30;c[H+8>>2]=0;qn(43608,H,258)}vh(b,42288,(c[10903]|0)-1|0);c[10571]=0;c[10570]=22416;if((c[10900]|0)!=-1){c[G>>2]=43600;c[G+4>>2]=30;c[G+8>>2]=0;qn(43600,G,258)}vh(b,42280,(c[10901]|0)-1|0);c[10623]=0;c[10622]=22864;c[10624]=0;a[42500]=0;c[10624]=c[(br()|0)>>2];if((c[10982]|0)!=-1){c[F>>2]=43928;c[F+4>>2]=30;c[F+8>>2]=0;qn(43928,F,258)}vh(b,42488,(c[10983]|0)-1|0);c[10621]=0;c[10620]=22784;if((c[10980]|0)!=-1){c[E>>2]=43920;c[E+4>>2]=30;c[E+8>>2]=0;qn(43920,E,258)}vh(b,42480,(c[10981]|0)-1|0);c[10575]=0;c[10574]=22552;if((c[10906]|0)!=-1){c[D>>2]=43624;c[D+4>>2]=30;c[D+8>>2]=0;qn(43624,D,258)}vh(b,42296,(c[10907]|0)-1|0);c[5229]=0;c[5228]=22496;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);c[5230]=c[10540];if((c[10904]|0)!=-1){c[C>>2]=43616;c[C+4>>2]=30;c[C+8>>2]=0;qn(43616,C,258)}vh(b,20912,(c[10905]|0)-1|0);c[10577]=0;c[10576]=22608;if((c[10908]|0)!=-1){c[B>>2]=43632;c[B+4>>2]=30;c[B+8>>2]=0;qn(43632,B,258)}vh(b,42304,(c[10909]|0)-1|0);c[10579]=0;c[10578]=22664;if((c[10910]|0)!=-1){c[A>>2]=43640;c[A+4>>2]=30;c[A+8>>2]=0;qn(43640,A,258)}vh(b,42312,(c[10911]|0)-1|0);c[10553]=0;c[10552]=21960;a[42216]=46;a[42217]=44;yC(42220,0,12);if((c[10886]|0)!=-1){c[z>>2]=43544;c[z+4>>2]=30;c[z+8>>2]=0;qn(43544,z,258)}vh(b,42208,(c[10887]|0)-1|0);c[5221]=0;c[5220]=21912;c[5222]=46;c[5223]=44;yC(20896,0,12);if((c[10884]|0)!=-1){c[y>>2]=43536;c[y+4>>2]=30;c[y+8>>2]=0;qn(43536,y,258)}vh(b,20880,(c[10885]|0)-1|0);c[10569]=0;c[10568]=22344;if((c[10898]|0)!=-1){c[x>>2]=43592;c[x+4>>2]=30;c[x+8>>2]=0;qn(43592,x,258)}vh(b,42272,(c[10899]|0)-1|0);c[10567]=0;c[10566]=22272;if((c[10896]|0)!=-1){c[w>>2]=43584;c[w+4>>2]=30;c[w+8>>2]=0;qn(43584,w,258)}vh(b,42264,(c[10897]|0)-1|0);c[10565]=0;c[10564]=22208;if((c[10894]|0)!=-1){c[v>>2]=43576;c[v+4>>2]=30;c[v+8>>2]=0;qn(43576,v,258)}vh(b,42256,(c[10895]|0)-1|0);c[10563]=0;c[10562]=22144;if((c[10892]|0)!=-1){c[u>>2]=43568;c[u+4>>2]=30;c[u+8>>2]=0;qn(43568,u,258)}vh(b,42248,(c[10893]|0)-1|0);c[10633]=0;c[10632]=24152;if((c[11102]|0)!=-1){c[t>>2]=44408;c[t+4>>2]=30;c[t+8>>2]=0;qn(44408,t,258)}vh(b,42528,(c[11103]|0)-1|0);c[10631]=0;c[10630]=24088;if((c[11100]|0)!=-1){c[s>>2]=44400;c[s+4>>2]=30;c[s+8>>2]=0;qn(44400,s,258)}vh(b,42520,(c[11101]|0)-1|0);c[10629]=0;c[10628]=24024;if((c[11098]|0)!=-1){c[r>>2]=44392;c[r+4>>2]=30;c[r+8>>2]=0;qn(44392,r,258)}vh(b,42512,(c[11099]|0)-1|0);c[10627]=0;c[10626]=23960;if((c[11096]|0)!=-1){c[q>>2]=44384;c[q+4>>2]=30;c[q+8>>2]=0;qn(44384,q,258)}vh(b,42504,(c[11097]|0)-1|0);c[10551]=0;c[10550]=21592;if((c[10874]|0)!=-1){c[p>>2]=43496;c[p+4>>2]=30;c[p+8>>2]=0;qn(43496,p,258)}vh(b,42200,(c[10875]|0)-1|0);c[10549]=0;c[10548]=21552;if((c[10872]|0)!=-1){c[o>>2]=43488;c[o+4>>2]=30;c[o+8>>2]=0;qn(43488,o,258)}vh(b,42192,(c[10873]|0)-1|0);c[10547]=0;c[10546]=21512;if((c[10870]|0)!=-1){c[n>>2]=43480;c[n+4>>2]=30;c[n+8>>2]=0;qn(43480,n,258)}vh(b,42184,(c[10871]|0)-1|0);c[10545]=0;c[10544]=21472;if((c[10868]|0)!=-1){c[m>>2]=43472;c[m+4>>2]=30;c[m+8>>2]=0;qn(43472,m,258)}vh(b,42176,(c[10869]|0)-1|0);c[5217]=0;c[5216]=21816;c[5218]=21864;if((c[10882]|0)!=-1){c[l>>2]=43528;c[l+4>>2]=30;c[l+8>>2]=0;qn(43528,l,258)}vh(b,20864,(c[10883]|0)-1|0);c[5213]=0;c[5212]=21720;c[5214]=21768;if((c[10880]|0)!=-1){c[k>>2]=43520;c[k+4>>2]=30;c[k+8>>2]=0;qn(43520,k,258)}vh(b,20848,(c[10881]|0)-1|0);c[5209]=0;c[5208]=22720;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);c[5210]=c[10540];c[5208]=21688;if((c[10878]|0)!=-1){c[j>>2]=43512;c[j+4>>2]=30;c[j+8>>2]=0;qn(43512,j,258)}vh(b,20832,(c[10879]|0)-1|0);c[5205]=0;c[5204]=22720;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);c[5206]=c[10540];c[5204]=21656;if((c[10876]|0)!=-1){c[h>>2]=43504;c[h+4>>2]=30;c[h+8>>2]=0;qn(43504,h,258)}vh(b,20816,(c[10877]|0)-1|0);c[10561]=0;c[10560]=22048;if((c[10890]|0)!=-1){c[g>>2]=43560;c[g+4>>2]=30;c[g+8>>2]=0;qn(43560,g,258)}vh(b,42240,(c[10891]|0)-1|0);c[10559]=0;c[10558]=22008;if((c[10888]|0)!=-1){c[f>>2]=43552;c[f+4>>2]=30;c[f+8>>2]=0;qn(43552,f,258)}vh(b,42232,(c[10889]|0)-1|0);i=e;return}function vh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;p1(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){w2(e,k-i|0);j=c[g>>2]|0;break}if(i>>>0<=k>>>0){j=h;break}l=h+(k<<2)|0;if((l|0)==(a|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}p2(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function vi(a){a=a|0;vj(a);yr(a);return}function vj(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=22752;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{l=e|0;p2(l)|0;j=c[d>>2]|0;k=c[f>>2]|0}l=h+1|0;if(l>>>0<j-k>>2>>>0){h=l;i=k;g=j}else{break}}}qu(b+144|0);j=c[f>>2]|0;if((j|0)==0){m=b|0;p0(m);return}f=c[d>>2]|0;if((j|0)!=(f|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((j|0)==(b+24|0)){a[b+136|0]=0;m=b|0;p0(m);return}else{yr(j);m=b|0;p0(m);return}}function vk(){var b=0,d=0;if((a[60432]|0)!=0){b=c[10532]|0;return b|0}if((by(60432)|0)==0){b=c[10532]|0;return b|0}do{if((a[60440]|0)==0){if((by(60440)|0)==0){break}vg(42320,1);c[10536]=42320;c[10534]=42144}}while(0);d=c[c[10534]>>2]|0;c[10538]=d;p1(d|0);c[10532]=42152;b=c[10532]|0;return b|0}function vl(a){a=a|0;var b=0;b=c[(vk()|0)>>2]|0;c[a>>2]=b;p1(b|0);return}function vm(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;p1(d|0);return}function vn(a){a=a|0;p2(c[a>>2]|0)|0;return}function vo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=30;c[e+8>>2]=0;qn(a,e,258)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=0;i=d;return g|0}g=(c[b+(e<<2)>>2]|0)!=0;i=d;return g|0}function vp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=30;c[e+8>>2]=0;qn(a,e,258)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=cr(4)|0;h=g;xW(h);bJ(g|0,35096,560);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=cr(4)|0;h=g;xW(h);bJ(g|0,35096,560);return 0}else{i=d;return f|0}return 0}function vq(a){a=a|0;p0(a|0);yr(a);return}function vr(a){a=a|0;if((a|0)==0){return}cG[c[(c[a>>2]|0)+4>>2]&1023](a);return}function vs(a){a=a|0;c[a+4>>2]=(K=c[10912]|0,c[10912]=K+1,K)+1;return}function vt(a){a=a|0;p0(a|0);yr(a);return}function vu(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(e>>>0>=128>>>0){f=0;return f|0}f=(b[(c[(br()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function vv(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(br()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function vw(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if((b[(c[(br()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0){g=h;i=1522;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=1523;break}else{h=e}}if((i|0)==1522){return g|0}else if((i|0)==1523){return g|0}return 0}function vx(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=1531;break}e=c[a>>2]|0;if(e>>>0>=128>>>0){g=a;h=1532;break}if((b[(c[(br()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=1533;break}else{a=a+4|0}}if((h|0)==1531){return g|0}else if((h|0)==1532){return g|0}else if((h|0)==1533){return g|0}return 0}function vy(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(cx()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function vz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(cx()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function vA(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128>>>0){d=b;return d|0}d=c[(c[(cy()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function vB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(cy()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function vC(a,b){a=a|0;b=b|0;return b<<24>>24|0}function vD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function vE(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function vF(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function vG(b){b=b|0;var d=0;c[b>>2]=22864;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}ys(d)}}while(0);p0(b|0);yr(b);return}function vH(b){b=b|0;var d=0;c[b>>2]=22864;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}ys(d)}}while(0);p0(b|0);return}function vI(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(cx()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function vJ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(cx()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function vK(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(cy()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function vL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(cy()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function vM(a,b){a=a|0;b=b|0;return b|0}function vN(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function vO(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function vP(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function vQ(a){a=a|0;p0(a|0);yr(a);return}function vR(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function vS(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function vT(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function vU(a){a=a|0;return 1}function vV(a){a=a|0;return 1}function vW(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function vX(a){a=a|0;return 1}function vY(a){a=a|0;ve(a);yr(a);return}function vZ(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;L1917:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=ca(c[t>>2]|0)|0;z=xw(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){ca(y|0)|0}if((z|0)==(-1|0)){A=1655;break}else if((z|0)==0){B=1;A=1691;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=1688;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=ca(c[t>>2]|0)|0;z=xv(u,0,d)|0;if((y|0)!=0){ca(y|0)|0}if((z|0)==-1){B=2;A=1693;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=1694;break}L1936:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break L1936}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break L1917}else{v=D;w=E;x=C}}if((A|0)==1655){c[k>>2]=v;L1948:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=ca(c[t>>2]|0)|0;z=xv(u,s,n)|0;if((p|0)!=0){ca(p|0)|0}if((z|0)==-1){K=x;break L1948}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==1688){r=c[g>>2]|0;break}else if((A|0)==1691){i=l;return B|0}else if((A|0)==1693){i=l;return B|0}else if((A|0)==1694){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function v_(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;L1969:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=ca(c[s>>2]|0)|0;y=xs(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){ca(w|0)|0}if((y|0)==(-1|0)){z=1710;break}else if((y|0)==0){A=2;z=1745;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=1742;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=ca(c[s>>2]|0)|0;F=xr(w,y,1,d)|0;if((E|0)!=0){ca(E|0)|0}if((F|0)!=0){A=2;z=1749;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break L1969}else{t=C;u=D;v=B}}if((z|0)==1710){c[k>>2]=t;L1993:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=ca(c[s>>2]|0)|0;E=xr(v,r,x-r|0,n)|0;if((o|0)!=0){ca(o|0)|0}if((E|0)==0){I=r+1|0}else if((E|0)==(-1|0)){z=1721;break}else if((E|0)==(-2|0)){z=1722;break}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break L1993}else{v=E;r=I}}if((z|0)==1721){c[g>>2]=r;A=2;i=l;return A|0}else if((z|0)==1722){c[g>>2]=r;A=1;i=l;return A|0}}}while(0);c[g>>2]=H;A=(H|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==1742){q=c[g>>2]|0;break}else if((z|0)==1745){i=l;return A|0}else if((z|0)==1749){i=l;return A|0}}}while(0);A=(q|0)!=(f|0)|0;i=l;return A|0}function v$(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=ca(c[b+8>>2]|0)|0;b=xv(e,0,d)|0;if((j|0)!=0){ca(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function v0(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=ca(c[b>>2]|0)|0;d=xu(0,0,4)|0;if((a|0)!=0){ca(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=ca(d|0)|0;if((b|0)==0){e=0;return e|0}ca(b|0)|0;e=0;return e|0}function v1(a){a=a|0;return 0}function v2(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=ca(c[i>>2]|0)|0;l=xq(a,h-a|0,b)|0;if((k|0)!=0){ca(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=1807;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=1808;break}else{a=n;d=l;j=k}}if((o|0)==1807){return g|0}else if((o|0)==1808){return g|0}return 0}function v3(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=ca(b|0)|0;if((a|0)==0){d=4;break}ca(a|0)|0;d=4}}while(0);return d|0}function v4(a){a=a|0;p0(a|0);yr(a);return}function v5(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=v6(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function v6(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(l>>>0>=f>>>0){m=0;return m|0}d=i;i=l;L2086:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=1852;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=1856;break L2086}c[j>>2]=p+1;a[p]=l&255}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=1845;break L2086}c[j>>2]=p+1;a[p]=(n>>>6|192)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1847;break L2086}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)>>>0>=56320>>>0){if((l&65535)>>>0<57344>>>0){m=2;o=1849;break L2086}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1848;break L2086}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((h-i|0)<4){m=1;o=1851;break L2086}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=1853;break L2086}if((d-(c[j>>2]|0)|0)<4){m=1;o=1854;break L2086}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=1855;break L2086}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(p>>>2|240)&255;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(n>>>2&15|p<<4&48|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n<<4&48|q>>>6&15|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(q&63|128)&255}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=1846;break}}if((o|0)==1847){return m|0}else if((o|0)==1848){return m|0}else if((o|0)==1845){return m|0}else if((o|0)==1846){return m|0}else if((o|0)==1851){return m|0}else if((o|0)==1852){return m|0}else if((o|0)==1853){return m|0}else if((o|0)==1854){return m|0}else if((o|0)==1855){return m|0}else if((o|0)==1856){return m|0}else if((o|0)==1849){return m|0}return 0}function v7(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=v8(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function v8(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if((a[h]|0)!=-17){m=h;break}if((a[h+1|0]|0)!=-69){m=h;break}if((a[h+2|0]|0)!=-65){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);L2132:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;L2134:while(1){if(e>>>0>=i>>>0){o=n;break L2132}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=1911;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=(c[g>>2]|0)+1}else{if((p&255)>>>0<194>>>0){r=2;s=1903;break L2134}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=1899;break L2134}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=1915;break L2134}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=1906;break L2134}b[e>>1]=u&65535;c[g>>2]=(c[g>>2]|0)+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=1917;break L2134}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==224){if((u&-32)<<24>>24!=-96){r=2;s=1909;break L2134}}else if((q|0)==237){if((u&-32)<<24>>24!=-128){r=2;s=1914;break L2134}}else{if((u&-64)<<24>>24!=-128){r=2;s=1916;break L2134}}v=t&255;if((v&192|0)!=128){r=2;s=1919;break L2134}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=1918;break L2134}b[e>>1]=t&65535;c[g>>2]=(c[g>>2]|0)+3;break}if((p&255)>>>0>=245>>>0){r=2;s=1913;break L2134}if((h-n|0)<4){r=1;s=1900;break L2134}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==244){if((t&-16)<<24>>24!=-128){r=2;s=1901;break L2134}}else if((q|0)==240){if((t+112&255)>>>0>=48>>>0){r=2;s=1904;break L2134}}else{if((t&-64)<<24>>24!=-128){r=2;s=1912;break L2134}}w=v&255;if((w&192|0)!=128){r=2;s=1910;break L2134}v=u&255;if((v&192|0)!=128){r=2;s=1907;break L2134}if((l-e|0)<4){r=1;s=1908;break L2134}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=1902;break L2134}b[e>>1]=(x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296)&65535;u=(c[j>>2]|0)+2|0;c[j>>2]=u;b[u>>1]=(y|t&960|56320)&65535;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break L2132}}if((s|0)==1903){return r|0}else if((s|0)==1904){return r|0}else if((s|0)==1901){return r|0}else if((s|0)==1902){return r|0}else if((s|0)==1899){return r|0}else if((s|0)==1900){return r|0}else if((s|0)==1911){return r|0}else if((s|0)==1912){return r|0}else if((s|0)==1913){return r|0}else if((s|0)==1914){return r|0}else if((s|0)==1915){return r|0}else if((s|0)==1916){return r|0}else if((s|0)==1906){return r|0}else if((s|0)==1907){return r|0}else if((s|0)==1908){return r|0}else if((s|0)==1909){return r|0}else if((s|0)==1910){return r|0}else if((s|0)==1917){return r|0}else if((s|0)==1918){return r|0}else if((s|0)==1919){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function v9(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function wa(a){a=a|0;return 0}function wb(a){a=a|0;return 0}function wc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return wd(c,d,e,1114111,0)|0}function wd(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L2205:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;L2207:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break L2205}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break L2205}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L2205}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break L2205}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break L2205}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break L2205}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==237){if((p&-32)<<24>>24!=-128){s=1946;break L2207}}else if((l|0)==224){if((p&-32)<<24>>24!=-96){s=1944;break L2207}}else{if((p&-64)<<24>>24!=-128){s=1948;break L2207}}t=r&255;if((t&192|0)!=128){m=j;break L2205}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break L2205}n=j+3|0;o=i;break}if((k&255)>>>0>=245>>>0){m=j;break L2205}u=j;if((g-u|0)<4){m=j;break L2205}if((e-i|0)>>>0<2>>>0){m=j;break L2205}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if((t+112&255)>>>0>=48>>>0){s=1957;break L2207}}else if((l|0)==244){if((t&-16)<<24>>24!=-128){s=1959;break L2207}}else{if((t&-64)<<24>>24!=-128){s=1961;break L2207}}v=p&255;if((v&192|0)!=128){m=j;break L2205}p=r&255;if((p&192|0)!=128){m=j;break L2205}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break L2205}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break L2205}}if((s|0)==1946){w=q-b|0;return w|0}else if((s|0)==1957){w=u-b|0;return w|0}else if((s|0)==1944){w=q-b|0;return w|0}else if((s|0)==1948){w=q-b|0;return w|0}else if((s|0)==1959){w=u-b|0;return w|0}else if((s|0)==1961){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function we(a){a=a|0;return 4}function wf(a){a=a|0;p0(a|0);yr(a);return}function wg(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=wh(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function wh(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(f>>>0>=d>>>0){k=0;return k|0}j=g;g=f;L2271:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=2e3;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=1999;break L2271}c[h>>2]=b+1;a[b]=f&255}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=2001;break L2271}c[h>>2]=b+1;a[b]=(f>>>6|192)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=2003;break L2271}c[h>>2]=b+1;a[b]=(f>>>12|224)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f>>>6&63|128)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f&63|128)&255;break}else{if((m|0)<4){k=1;l=2004;break L2271}c[h>>2]=b+1;a[b]=(f>>>18|240)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>12&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>6&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=2005;break}}if((l|0)==2003){return k|0}else if((l|0)==1999){return k|0}else if((l|0)==2001){return k|0}else if((l|0)==2005){return k|0}else if((l|0)==2e3){return k|0}else if((l|0)==2004){return k|0}return 0}function wi(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=wj(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function wj(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if((a[g]|0)!=-17){l=g;break}if((a[g+1|0]|0)!=-69){l=g;break}if((a[g+2|0]|0)!=-65){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);L2304:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;L2306:while(1){if(k>>>0>=h>>>0){m=b;break L2304}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=2065;break L2306}c[k>>2]=o;c[f>>2]=(c[f>>2]|0)+1}else{if((n&255)>>>0<194>>>0){p=2;q=2051;break L2306}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=2057;break L2306}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=2050;break L2306}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=2066;break L2306}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=2061;break L2306}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if((s&-32)<<24>>24!=-128){p=2;q=2052;break L2306}}else if((o|0)==224){if((s&-32)<<24>>24!=-96){p=2;q=2054;break L2306}}else{if((s&-64)<<24>>24!=-128){p=2;q=2060;break L2306}}t=r&255;if((t&192|0)!=128){p=2;q=2058;break L2306}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=2053;break L2306}c[k>>2]=r;c[f>>2]=(c[f>>2]|0)+3;break}if((n&255)>>>0>=245>>>0){p=2;q=2047;break L2306}if((g-b|0)<4){p=1;q=2063;break L2306}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==244){if((r&-16)<<24>>24!=-128){p=2;q=2056;break L2306}}else if((o|0)==240){if((r+112&255)>>>0>=48>>>0){p=2;q=2062;break L2306}}else{if((r&-64)<<24>>24!=-128){p=2;q=2049;break L2306}}u=t&255;if((u&192|0)!=128){p=2;q=2059;break L2306}t=s&255;if((t&192|0)!=128){p=2;q=2064;break L2306}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=2055;break L2306}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break L2304}}if((q|0)==2052){return p|0}else if((q|0)==2053){return p|0}else if((q|0)==2054){return p|0}else if((q|0)==2055){return p|0}else if((q|0)==2056){return p|0}else if((q|0)==2057){return p|0}else if((q|0)==2058){return p|0}else if((q|0)==2059){return p|0}else if((q|0)==2060){return p|0}else if((q|0)==2047){return p|0}else if((q|0)==2064){return p|0}else if((q|0)==2065){return p|0}else if((q|0)==2066){return p|0}else if((q|0)==2049){return p|0}else if((q|0)==2050){return p|0}else if((q|0)==2051){return p|0}else if((q|0)==2061){return p|0}else if((q|0)==2062){return p|0}else if((q|0)==2063){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function wk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function wl(a){a=a|0;return 0}function wm(a){a=a|0;return 0}function wn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return wo(c,d,e,1114111,0)|0}function wo(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L2375:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;L2377:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break L2375}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break L2375}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break L2375}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break L2375}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break L2375}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break L2375}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if((o&-32)<<24>>24!=-96){r=2091;break L2377}}else if((l|0)==237){if((o&-32)<<24>>24!=-128){r=2093;break L2377}}else{if((o&-64)<<24>>24!=-128){r=2095;break L2377}}s=q&255;if((s&192|0)!=128){m=j;break L2375}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break L2375}n=j+3|0;break}if((k&255)>>>0>=245>>>0){m=j;break L2375}t=j;if((g-t|0)<4){m=j;break L2375}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==244){if((s&-16)<<24>>24!=-128){r=2105;break L2377}}else if((l|0)==240){if((s+112&255)>>>0>=48>>>0){r=2103;break L2377}}else{if((s&-64)<<24>>24!=-128){r=2107;break L2377}}u=o&255;if((u&192|0)!=128){m=j;break L2375}o=q&255;if((o&192|0)!=128){m=j;break L2375}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break L2375}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break L2375}i=i+1|0;j=n}if((r|0)==2103){v=t-b|0;return v|0}else if((r|0)==2091){v=p-b|0;return v|0}else if((r|0)==2093){v=p-b|0;return v|0}else if((r|0)==2095){v=p-b|0;return v|0}else if((r|0)==2107){v=t-b|0;return v|0}else if((r|0)==2105){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function wp(a){a=a|0;return 4}function wq(a){a=a|0;p0(a|0);yr(a);return}function wr(a){a=a|0;p0(a|0);yr(a);return}function ws(a){a=a|0;c[a>>2]=21960;qu(a+12|0);p0(a|0);yr(a);return}function wt(a){a=a|0;c[a>>2]=21960;qu(a+12|0);p0(a|0);return}function wu(a){a=a|0;c[a>>2]=21912;qu(a+16|0);p0(a|0);yr(a);return}function wv(a){a=a|0;c[a>>2]=21912;qu(a+16|0);p0(a|0);return}function ww(b){b=b|0;return a[b+8|0]|0}function wx(a){a=a|0;return c[a+8>>2]|0}function wy(b){b=b|0;return a[b+9|0]|0}function wz(a){a=a|0;return c[a+12>>2]|0}function wA(a,b){a=a|0;b=b|0;qq(a,b+12|0);return}function wB(a,b){a=a|0;b=b|0;qq(a,b+16|0);return}function wC(a,b){a=a|0;b=b|0;qr(a,13680,4);return}function wD(a,b){a=a|0;b=b|0;qE(a,13456,xR(13456)|0);return}function wE(a,b){a=a|0;b=b|0;qr(a,13280,5);return}function wF(a,b){a=a|0;b=b|0;qE(a,13176,xR(13176)|0);return}function wG(b){b=b|0;var d=0;if((a[60528]|0)!=0){d=c[10658]|0;return d|0}if((by(60528)|0)==0){d=c[10658]|0;return d|0}do{if((a[60416]|0)==0){if((by(60416)|0)==0){break}yC(41672,0,168);bh(694,0,t|0)|0}}while(0);qw(41672,17736)|0;qw(41684,17720)|0;qw(41696,17648)|0;qw(41708,17632)|0;qw(41720,17616)|0;qw(41732,17560)|0;qw(41744,17464)|0;qw(41756,17448)|0;qw(41768,17432)|0;qw(41780,17408)|0;qw(41792,17304)|0;qw(41804,17288)|0;qw(41816,17192)|0;qw(41828,17160)|0;c[10658]=41672;d=c[10658]|0;return d|0}function wH(b){b=b|0;var d=0;if((a[60472]|0)!=0){d=c[10636]|0;return d|0}if((by(60472)|0)==0){d=c[10636]|0;return d|0}do{if((a[60392]|0)==0){if((by(60392)|0)==0){break}yC(40928,0,168);bh(418,0,t|0)|0}}while(0);qH(40928,18784)|0;qH(40940,18616)|0;qH(40952,18560)|0;qH(40964,18504)|0;qH(40976,18392)|0;qH(40988,18296)|0;qH(41e3,18240)|0;qH(41012,18176)|0;qH(41024,18112)|0;qH(41036,18064)|0;qH(41048,18e3)|0;qH(41060,17888)|0;qH(41072,17856)|0;qH(41084,17832)|0;c[10636]=40928;d=c[10636]|0;return d|0}function wI(b){b=b|0;var d=0;if((a[60520]|0)!=0){d=c[10656]|0;return d|0}if((by(60520)|0)==0){d=c[10656]|0;return d|0}do{if((a[60408]|0)==0){if((by(60408)|0)==0){break}yC(41384,0,288);bh(462,0,t|0)|0}}while(0);qw(41384,8216)|0;qw(41396,8168)|0;qw(41408,8136)|0;qw(41420,8104)|0;qw(41432,8048)|0;qw(41444,8e3)|0;qw(41456,7952)|0;qw(41468,7904)|0;qw(41480,7808)|0;qw(41492,7720)|0;qw(41504,7632)|0;qw(41516,7576)|0;qw(41528,7536)|0;qw(41540,7496)|0;qw(41552,7424)|0;qw(41564,7360)|0;qw(41576,8048)|0;qw(41588,7320)|0;qw(41600,7288)|0;qw(41612,19216)|0;qw(41624,19136)|0;qw(41636,19080)|0;qw(41648,18968)|0;qw(41660,18880)|0;c[10656]=41384;d=c[10656]|0;return d|0}function wJ(b){b=b|0;var d=0;if((a[60464]|0)!=0){d=c[10634]|0;return d|0}if((by(60464)|0)==0){d=c[10634]|0;return d|0}do{if((a[60384]|0)==0){if((by(60384)|0)==0){break}yC(40640,0,288);bh(350,0,t|0)|0}}while(0);qH(40640,10032)|0;qH(40652,9936)|0;qH(40664,9848)|0;qH(40676,9776)|0;qH(40688,8712)|0;qH(40700,9624)|0;qH(40712,9560)|0;qH(40724,9480)|0;qH(40736,9368)|0;qH(40748,9288)|0;qH(40760,9200)|0;qH(40772,9008)|0;qH(40784,8952)|0;qH(40796,8904)|0;qH(40808,8824)|0;qH(40820,8760)|0;qH(40832,8712)|0;qH(40844,8648)|0;qH(40856,8600)|0;qH(40868,8552)|0;qH(40880,8488)|0;qH(40892,8440)|0;qH(40904,8400)|0;qH(40916,8352)|0;c[10634]=40640;d=c[10634]|0;return d|0}function wK(b){b=b|0;var d=0;if((a[60536]|0)!=0){d=c[10660]|0;return d|0}if((by(60536)|0)==0){d=c[10660]|0;return d|0}do{if((a[60424]|0)==0){if((by(60424)|0)==0){break}yC(41840,0,288);bh(346,0,t|0)|0}}while(0);qw(41840,10216)|0;qw(41852,10160)|0;c[10660]=41840;d=c[10660]|0;return d|0}function wL(b){b=b|0;var d=0;if((a[60480]|0)!=0){d=c[10638]|0;return d|0}if((by(60480)|0)==0){d=c[10638]|0;return d|0}do{if((a[60400]|0)==0){if((by(60400)|0)==0){break}yC(41096,0,288);bh(192,0,t|0)|0}}while(0);qH(41096,10400)|0;qH(41108,10312)|0;c[10638]=41096;d=c[10638]|0;return d|0}function wM(b){b=b|0;if((a[60544]|0)!=0){return 42648}if((by(60544)|0)==0){return 42648}qr(42648,12824,8);bh(696,42648,t|0)|0;return 42648}function wN(b){b=b|0;if((a[60488]|0)!=0){return 42560}if((by(60488)|0)==0){return 42560}qE(42560,12680,xR(12680)|0);bh(514,42560,t|0)|0;return 42560}function wO(b){b=b|0;if((a[60568]|0)!=0){return 42696}if((by(60568)|0)==0){return 42696}qr(42696,12560,8);bh(696,42696,t|0)|0;return 42696}function wP(b){b=b|0;if((a[60512]|0)!=0){return 42608}if((by(60512)|0)==0){return 42608}qE(42608,12480,xR(12480)|0);bh(514,42608,t|0)|0;return 42608}function wQ(b){b=b|0;if((a[60560]|0)!=0){return 42680}if((by(60560)|0)==0){return 42680}qr(42680,12296,20);bh(696,42680,t|0)|0;return 42680}function wR(b){b=b|0;if((a[60504]|0)!=0){return 42592}if((by(60504)|0)==0){return 42592}qE(42592,11992,xR(11992)|0);bh(514,42592,t|0)|0;return 42592}function wS(b){b=b|0;if((a[60552]|0)!=0){return 42664}if((by(60552)|0)==0){return 42664}qr(42664,11864,11);bh(696,42664,t|0)|0;return 42664}function wT(b){b=b|0;if((a[60496]|0)!=0){return 42576}if((by(60496)|0)==0){return 42576}qE(42576,11704,xR(11704)|0);bh(514,42576,t|0)|0;return 42576}function wU(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b3()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=+yy(b,g,c[10540]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function wV(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b3()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=+yy(b,g,c[10540]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function wW(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=b3()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);l=+yy(b,g,c[10540]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function wX(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=b3()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);n=aT(b|0,h|0,f|0,c[10540]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=M;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(M=j,k)|0}function wY(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b3()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);m=aT(b|0,h|0,f|0,c[10540]|0)|0;f=M;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function wZ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b3()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);m=aT(b|0,h|0,f|0,c[10540]|0)|0;f=M;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function w_(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=b3()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);m=aT(b|0,h|0,f|0,c[10540]|0)|0;f=M;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function w$(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(M=j,k)|0}l=b3()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);n=cj(b|0,h|0,f|0,c[10540]|0)|0;f=M;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(M=j,k)|0}if((b|0)!=34){j=f;k=n;i=g;return(M=j,k)|0}c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;j=b?2147483647:-2147483648;k=b?-1:0;i=g;return(M=j,k)|0}function w0(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=b3()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[60448]|0)==0){if((by(60448)|0)==0){break}c[10540]=a4(2147483647,15720,0)|0}}while(0);m=cj(b|0,h|0,f|0,c[10540]|0)|0;f=M;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=-1;h=0;if((b|0)==34|((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0)|((f|0)>(h|0)|(f|0)==(h|0)&m>>>0>2147483647>>>0)){c[e>>2]=4;e=0;j=(f|0)>(e|0)|(f|0)==(e|0)&m>>>0>0>>>0?2147483647:-2147483648;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function w1(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;cG[f&1023](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;cG[f&1023](a);return}}function w2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(h-i>>2>>>0>=d>>>0){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){vf(0)}m=h-l|0;do{if(m>>2>>>0>536870910>>>0){n=1073741823;o=2551}else{l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){p=0;q=0;break}l=b+128|0;if(!((a[l]&1)==0&h>>>0<29>>>0)){n=h;o=2551;break}a[l]=1;p=j;q=h}}while(0);if((o|0)==2551){p=yp(n<<2)|0;q=n}n=d;d=p+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;n=n-1|0;}while((n|0)!=0);n=p+(q<<2)|0;q=c[k>>2]|0;r=(c[f>>2]|0)-q|0;o=p+(g-(r>>2)<<2)|0;g=o;p=q;yA(g|0,p|0,r)|0;c[k>>2]=o;c[f>>2]=d;c[e>>2]=n;if((q|0)==0){return}if((q|0)==(j|0)){a[b+128|0]=0;return}else{yr(p);return}}function w3(a){a=a|0;qG(41372);qG(41360);qG(41348);qG(41336);qG(41324);qG(41312);qG(41300);qG(41288);qG(41276);qG(41264);qG(41252);qG(41240);qG(41228);qG(41216);qG(41204);qG(41192);qG(41180);qG(41168);qG(41156);qG(41144);qG(41132);qG(41120);qG(41108);qG(41096);return}function w4(a){a=a|0;qu(42116);qu(42104);qu(42092);qu(42080);qu(42068);qu(42056);qu(42044);qu(42032);qu(42020);qu(42008);qu(41996);qu(41984);qu(41972);qu(41960);qu(41948);qu(41936);qu(41924);qu(41912);qu(41900);qu(41888);qu(41876);qu(41864);qu(41852);qu(41840);return}function w5(a){a=a|0;qG(40916);qG(40904);qG(40892);qG(40880);qG(40868);qG(40856);qG(40844);qG(40832);qG(40820);qG(40808);qG(40796);qG(40784);qG(40772);qG(40760);qG(40748);qG(40736);qG(40724);qG(40712);qG(40700);qG(40688);qG(40676);qG(40664);qG(40652);qG(40640);return}function w6(a){a=a|0;qu(41660);qu(41648);qu(41636);qu(41624);qu(41612);qu(41600);qu(41588);qu(41576);qu(41564);qu(41552);qu(41540);qu(41528);qu(41516);qu(41504);qu(41492);qu(41480);qu(41468);qu(41456);qu(41444);qu(41432);qu(41420);qu(41408);qu(41396);qu(41384);return}function w7(a){a=a|0;qG(41084);qG(41072);qG(41060);qG(41048);qG(41036);qG(41024);qG(41012);qG(41e3);qG(40988);qG(40976);qG(40964);qG(40952);qG(40940);qG(40928);return}function w8(a){a=a|0;qu(41828);qu(41816);qu(41804);qu(41792);qu(41780);qu(41768);qu(41756);qu(41744);qu(41732);qu(41720);qu(41708);qu(41696);qu(41684);qu(41672);return}function w9(a){a=a|0;var b=0;if((xf(a)|0)!=0){b=1;return b|0}b=(xa(a)|0)!=0|0;return b|0}function xa(a){a=a|0;var b=0;if(a>>>0<131072>>>0){b=(d[3360+((d[3360+(a>>>8)|0]|0)<<5|a>>>3&31)|0]|0)>>>((a&7)>>>0)&1;return b|0}else{b=a>>>0<196606>>>0|0;return b|0}return 0}function xb(a){a=a|0;return a6(a|0)|0}function xc(a){a=a|0;var b=0;if(a>>>0<32>>>0|(a-127|0)>>>0<33>>>0|(a-8232|0)>>>0<2>>>0){b=1;return b|0}b=(a-65529|0)>>>0<3>>>0|0;return b|0}function xd(a,b){a=a|0;b=b|0;var c=0;switch(b|0){case 8:{c=xi(a)|0;break};case 5:{c=xf(a)|0;break};case 11:{c=xl(a)|0;break};case 4:{c=xc(a)|0;break};case 10:{c=xk(a)|0;break};case 7:{c=xh(a)|0;break};case 9:{c=xj(a)|0;break};case 3:{c=xb(a)|0;break};case 6:{c=xg(a)|0;break};case 12:{c=xm(a)|0;break};case 1:{c=w9(a)|0;break};case 2:{c=xa(a)|0;break};default:{c=0}}return c|0}function xe(b){b=b|0;var c=0,d=0,e=0;c=a[b]|0;L2955:do{switch(c<<24>>24){case 99:{if((ba(b|0,26)|0)==0){d=4}else{e=2617}break};case 103:{if((ba(b|0,38)|0)==0){d=6}else{e=2617}break};case 108:{if((ba(b|0,44)|0)==0){d=7}else{e=2617}break};case 117:{e=2615;break};case 98:{if((ba(b|0,20)|0)==0){d=3}else{e=2617}break};case 115:{e=2614;break};case 100:{if((ba(b|0,32)|0)==0){d=5}else{e=2617}break};case 120:{e=2616;break};case 97:{if((ba(b|0,8)|0)==0){d=1;break L2955}if((ba(b|0,14)|0)==0){d=2}else{e=2617}break};case 112:{if((ba(b|0,50)|0)==0){d=8;break L2955}if((ba(b|0,56)|0)==0){d=9;break L2955}if((c<<24>>24|0)==117){e=2615}else if((c<<24>>24|0)==115){e=2614}else if((c<<24>>24|0)==120){e=2616}else{e=2617}break};default:{e=2617}}}while(0);if((e|0)==2615){if((ba(b|0,68)|0)==0){d=11}else{e=2617}}else if((e|0)==2614){if((ba(b|0,62)|0)==0){d=10}else{e=2617}}else if((e|0)==2616){if((ba(b|0,74)|0)==0){d=12}else{e=2617}}if((e|0)==2617){d=0}return d|0}function xf(a){a=a|0;return(a-48|0)>>>0<10>>>0|0}function xg(a){a=a|0;var b=0;if((xk(a)|0)!=0){b=0;return b|0}b=(xi(a)|0)!=0|0;return b|0}function xh(a){a=a|0;var b=0;if((xn(a)|0)!=(a|0)){b=1;return b|0}b=(a|0)==223|0;return b|0}function xi(a){a=a|0;var b=0;if(a>>>0<255>>>0){b=(a+1&127)>>>0>32>>>0|0;return b|0}if(a>>>0<8232>>>0|(a-8234|0)>>>0<47062>>>0|(a-57344|0)>>>0<8185>>>0){b=1;return b|0}else{return((a-65532|0)>>>0>1048579>>>0|(a&65534|0)==65534)&1^1|0}return 0}function xj(a){a=a|0;var b=0;if(a>>>0>=131072>>>0){b=0;return b|0}b=(d[192+((d[192+(a>>>8)|0]|0)<<5|a>>>3&31)|0]|0)>>>((a&7)>>>0)&1;return b|0}function xk(a){a=a|0;return(xQ(6904,a)|0)!=0|0}function xl(a){a=a|0;return(xp(a)|0)!=(a|0)|0}function xm(a){a=a|0;var b=0;if((a-48|0)>>>0<10>>>0){b=1;return b|0}b=((a|32)-97|0)>>>0<6>>>0|0;return b|0}function xn(a){a=a|0;return xo(a,0)|0}function xo(c,f){c=c|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=(f<<1)-1|0;h=f-1|0;if((xa(c)|0)==0|(c-1536|0)>>>0<2560>>>0|(c-11776|0)>>>0<30784>>>0|(c-43008|0)>>>0<22272>>>0){i=c;return i|0}do{if((f|0)==0){if((c-11520|0)>>>0>=38>>>0){j=0;break}i=c-7264|0;return i|0}else{if((c-4256|0)>>>0>=46>>>0){j=0;break}do{if((c|0)>4293){if((c|0)==4301|(c|0)==4295){break}else{i=c}return i|0}}while(0);i=c+7264|0;return i|0}}while(0);while(1){if((j|0)==61){break}k=a[6994+(j<<2)|0]|0;l=k<<24>>24;m=c-(e[6992+(j<<2)>>1]|0)|0;if((m-(l&h)|0)>>>0<(d[6995+(j<<2)|0]|0)>>>0){n=2660;break}else{j=j+1|0}}if((n|0)==2660){if(k<<24>>24==1){i=f+c-(m&1)|0;return i|0}else{i=(ai(l,g)|0)+c|0;return i|0}}g=1-f|0;l=0;while(1){m=b[6408+(l<<2)+(g<<1)>>1]|0;if(m<<16>>16==0){break}if((m&65535|0)==(c|0)){n=2665;break}else{l=l+1|0}}if((n|0)==2665){i=e[6408+(l<<2)+(f<<1)>>1]|0;return i|0}if((c-66600+(f*40|0)|0)>>>0>=40>>>0){i=c;return i|0}i=c-40+(f*80|0)|0;return i|0}function xp(a){a=a|0;return xo(a,1)|0}function xq(a,b,c){a=a|0;b=b|0;c=c|0;return xr(0,a,b,(c|0)!=0?c:40128)|0}
function c1(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function c2(){return i|0}function c3(a){a=a|0;i=a}function c4(a,b){a=a|0;b=b|0;if((z|0)==0){z=a;A=b}}function c5(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function c6(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function c7(a){a=a|0;M=a}function c8(a){a=a|0;N=a}function c9(a){a=a|0;O=a}function da(a){a=a|0;P=a}function db(a){a=a|0;Q=a}function dc(a){a=a|0;R=a}function dd(a){a=a|0;S=a}function de(a){a=a|0;T=a}function df(a){a=a|0;U=a}function dg(a){a=a|0;V=a}function dh(){c[8766]=o+8;c[8768]=o+8;c[8770]=v+8;c[8774]=v+8;c[8778]=v+8;c[8782]=v+8;c[8786]=v+8;c[8790]=v+8;c[8794]=s+8;c[8797]=q;c[8798]=o+8;c[8832]=v+8;c[8836]=v+8;c[8900]=v+8;c[8904]=v+8;c[8924]=o+8;c[8926]=v+8;c[8962]=v+8;c[8966]=v+8;c[9002]=v+8;c[9006]=v+8;c[9026]=o+8;c[9028]=o+8;c[9030]=v+8;c[9034]=v+8;c[9038]=v+8;c[9042]=v+8;c[9046]=v+8;c[9050]=v+8;c[9054]=v+8;c[9058]=o+8;c[9060]=o+8;c[9062]=o+8;c[9072]=v+8;c[9076]=o+8;c[9078]=o+8;c[9080]=o+8;c[9082]=o+8;c[9108]=v+8;c[9112]=v+8;c[9116]=o+8;c[9118]=v+8;c[9122]=v+8;c[9126]=v+8;c[9130]=o+8;c[9132]=o+8;c[9134]=o+8;c[9136]=o+8;c[9170]=o+8;c[9172]=o+8;c[9174]=o+8;c[9176]=v+8;c[9180]=v+8;c[9184]=v+8;c[9188]=v+8;c[9192]=v+8;c[9222]=v+8;c[9226]=v+8;c[9230]=v+8;c[9234]=v+8;c[9238]=v+8;c[9242]=v+8;c[9254]=v+8;c[9266]=o+8;c[9268]=o+8;c[9270]=v+8;c[9274]=v+8;c[9288]=o+8;c[9300]=v+8;c[9314]=v+8;c[9326]=v+8;c[9330]=v+8;c[9334]=o+8;c[9336]=o+8;c[9338]=o+8;c[9340]=o+8;c[9342]=o+8;c[9344]=v+8;c[9348]=v+8;c[9352]=o+8;c[9354]=v+8;c[9358]=v+8;c[9362]=o+8;c[9364]=v+8;c[9368]=v+8;c[9372]=o+8;c[9374]=v+8;c[9386]=o+8;c[9388]=v+8;c[9392]=v+8;c[9396]=v+8;c[9400]=v+8;c[9404]=v+8;c[9408]=v+8;c[9412]=v+8;c[9418]=v+8;c[9422]=v+8;c[9426]=o+8;c[9428]=v+8;c[9432]=v+8;c[9436]=v+8;c[9440]=v+8;c[9444]=v+8;c[9448]=v+8}function di(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;e=i;i=i+48|0;f=e|0;g=e+16|0;h=e+32|0;j=h;k=i;i=i+980|0;i=i+7&-8;l=i;i=i+12|0;i=i+7&-8;m=i;i=i+12|0;i=i+7&-8;n=i;i=i+12|0;i=i+7&-8;o=i;i=i+12|0;i=i+7&-8;p=yz(b|0)|0;if(p>>>0>4294967279>>>0){qo(0);return 0}if(p>>>0<11>>>0){q=p<<1&255;a[f]=q;r=f+1|0;s=q}else{q=p+16&-16;t=yp(q)|0;c[f+8>>2]=t;u=q|1;c[f>>2]=u;c[f+4>>2]=p;r=t;s=u&255}yA(r|0,b|0,p)|0;a[r+p|0]=0;p=yz(d|0)|0;if(p>>>0>4294967279>>>0){qo(0);return 0}if(p>>>0<11>>>0){r=p<<1&255;a[g]=r;v=g+1|0;w=r}else{r=p+16&-16;b=yp(r)|0;c[g+8>>2]=b;u=r|1;c[g>>2]=u;c[g+4>>2]=p;v=b;w=u&255}yA(v|0,d|0,p)|0;a[v+p|0]=0;yC(j|0,0,12);fD(k);if((a[40136]&1)==0){ce(cD(0)|0);a[40136]=1}if((w&1)==0){p=g;v=l;c[v>>2]=c[p>>2];c[v+4>>2]=c[p+4>>2];c[v+8>>2]=c[p+8>>2]}else{p=c[g+8>>2]|0;v=c[g+4>>2]|0;if(v>>>0>4294967279>>>0){qo(0);return 0}if(v>>>0<11>>>0){a[l]=v<<1&255;x=l+1|0}else{d=v+16&-16;u=yp(d)|0;c[l+8>>2]=u;c[l>>2]=d|1;c[l+4>>2]=v;x=u}yA(x|0,p|0,v)|0;a[x+v|0]=0}v=fH(k,l)|0;if((a[l]&1)!=0){yr(c[l+8>>2]|0)}do{if(v){l=m;x=m;a[x]=10;p=l+1|0;a[p]=a[19240]|0;a[p+1|0]=a[19241]|0;a[p+2|0]=a[19242]|0;a[p+3|0]=a[19243]|0;a[p+4|0]=a[19244]|0;a[l+6|0]=0;l=a[57136]|0;do{if((l&1)==0){y=l;z=40}else{u=c[14284]|0;d=u&-2;b=d-1|0;if(b>>>0>=5>>>0){y=u&255;z=40;break}r=(u&1|0)==0?u>>>1&127:c[14285]|0;qC(57136,b,6-d|0,r,0,r,5,p);if((a[x]&1)==0){break}yr(c[m+8>>2]|0)}}while(0);do{if((z|0)==40){x=(y&1)==0?57137:c[14286]|0;a[x]=a[p]|0;a[x+1|0]=a[p+1|0]|0;a[x+2|0]=a[p+2|0]|0;a[x+3|0]=a[p+3|0]|0;a[x+4|0]=a[p+4|0]|0;a[x+5|0]=0;if((a[57136]&1)==0){a[57136]=10;break}else{c[14285]=5;break}}}while(0);if((s&1)==0){p=f;x=n;c[x>>2]=c[p>>2];c[x+4>>2]=c[p+4>>2];c[x+8>>2]=c[p+8>>2]}else{p=c[f+8>>2]|0;x=c[f+4>>2]|0;if(x>>>0>4294967279>>>0){qo(0);return 0}if(x>>>0<11>>>0){a[n]=x<<1&255;A=n+1|0}else{l=x+16&-16;r=yp(l)|0;c[n+8>>2]=r;c[n>>2]=l|1;c[n+4>>2]=x;A=r}yA(A|0,p|0,x)|0;a[A+x|0]=0}fG(k,n)|0;if((a[n]&1)!=0){yr(c[n+8>>2]|0)}fI(o,k,1,0);x=o;p=a[x]|0;if((p&1)==0){B=o+1|0}else{B=c[o+8>>2]|0}r=p&255;if((r&1|0)==0){C=r>>>1}else{C=c[o+4>>2]|0}r=h;p=a[j]|0;if((p&1)==0){D=10;E=p}else{p=c[h>>2]|0;D=(p&-2)-1|0;E=p&255}do{if(D>>>0<C>>>0){p=E&255;if((p&1|0)==0){F=p>>>1}else{F=c[h+4>>2]|0}qC(h,D,C-D|0,F,0,F,C,B)}else{if((E&1)==0){G=r+1|0}else{G=c[h+8>>2]|0}yB(G|0,B|0,C|0);a[G+C|0]=0;if((a[j]&1)==0){a[j]=C<<1&255;break}else{c[h+4>>2]=C;break}}}while(0);if((a[x]&1)!=0){yr(c[o+8>>2]|0)}if((a[j]&1)==0){H=r+1|0;break}else{H=c[h+8>>2]|0;break}}else{ds(19248,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p;H=0}}while(0);fF(k);if((a[j]&1)!=0){yr(c[h+8>>2]|0)}if((w&1)!=0){yr(c[g+8>>2]|0)}if((s&1)==0){i=e;return H|0}yr(c[f+8>>2]|0);i=e;return H|0}function dj(a,b){a=+a;b=+b;return+X(+(a-b))<.001|0}function dk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;if((a[57136]&1)==0){d=b;c[d>>2]=c[14284];c[d+4>>2]=c[14285];c[d+8>>2]=c[14286];return}d=c[14286]|0;e=c[14285]|0;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[b]=e<<1&255;f=b+1|0}else{g=e+16&-16;h=yp(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}yA(f|0,d|0,e)|0;a[f+e|0]=0;return}function dl(b){b=b|0;var d=0;d=yp(32)|0;c[b+8>>2]=d;c[b>>2]=33;c[b+4>>2]=30;yA(d|0,13696,30)|0;a[d+30|0]=0;return}function dm(b){b=b|0;var d=0;d=yp(32)|0;c[b+8>>2]=d;c[b>>2]=33;c[b+4>>2]=26;yA(d|0,11888,26)|0;a[d+26|0]=0;return}function dn(){return 0}function dp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f|0;h=yp(2064)|0;j=b+8|0;c[j>>2]=h;c[b>>2]=2065;k=b+4|0;c[k>>2]=2048;l=g;yC(h|0,0,2049);c[l>>2]=e;c[l+4>>2]=0;l=b;e=b;cb(h|0,2048,d|0,g|0)|0;g=a[e]|0;d=(g&1)==0;if(d){m=l+1|0}else{m=c[j>>2]|0}h=yz(m|0)|0;m=g&255;if((m&1|0)==0){n=m>>>1}else{n=c[k>>2]|0}if(n>>>0<h>>>0){m=h-n|0;qy(b,m,0)|0;i=f;return}if(d){a[l+1+h|0]=0;a[e]=h<<1&255;i=f;return}else{a[(c[j>>2]|0)+h|0]=0;c[k>>2]=h;i=f;return}}function dq(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;f=i;i=i+32|0;g=f|0;h=f+16|0;j=e;if((a[j]&1)==0){k=b;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];l=a[k]|0;m=k}else{k=c[e+8>>2]|0;j=c[e+4>>2]|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){e=j<<1&255;n=b;a[n]=e;o=b+1|0;p=e;q=n}else{n=j+16&-16;e=yp(n)|0;c[b+8>>2]=e;r=n|1;c[b>>2]=r;c[b+4>>2]=j;o=e;p=r&255;q=b}yA(o|0,k|0,j)|0;a[o+j|0]=0;l=p;m=q}q=b;p=l&255;if((p&1|0)==0){s=p>>>1}else{s=c[b+4>>2]|0}if((l&1)==0){t=q+1|0}else{t=c[b+8>>2]|0}l=t+s|0;while(1){if((l|0)==(t|0)){break}u=l-1|0;if((bb(10528,d[u]|0|0,1)|0)==0){l=u}else{v=159;break}}do{if((v|0)==159){l=u-t|0;if((l|0)==-1){break}qt(g,b,0,l,0);l=g;s=a[l]|0;if((s&1)==0){w=g+1|0}else{w=c[g+8>>2]|0}p=s&255;if((p&1|0)==0){x=p>>>1}else{x=c[g+4>>2]|0}p=a[m]|0;if((p&1)==0){y=10;z=p}else{p=c[b>>2]|0;y=(p&-2)-1|0;z=p&255}do{if(y>>>0<x>>>0){p=z&255;if((p&1|0)==0){A=p>>>1}else{A=c[b+4>>2]|0}qC(b,y,x-y|0,A,0,A,x,w);B=a[l]|0}else{if((z&1)==0){C=q+1|0}else{C=c[b+8>>2]|0}yB(C|0,w|0,x|0);a[C+x|0]=0;if((a[m]&1)==0){a[m]=x<<1&255;B=s;break}else{c[b+4>>2]=x;B=s;break}}}while(0);if((B&1)==0){break}yr(c[g+8>>2]|0)}}while(0);g=a[m]|0;B=g&255;if((B&1|0)==0){D=B>>>1}else{D=c[b+4>>2]|0}if((g&1)==0){E=q+1|0}else{E=c[b+8>>2]|0}g=E+D|0;do{if((g|0)==(E|0)){v=225;break}g=g-1|0;}while((bb(9808,d[g]|0|0,1)|0)==0);if((v|0)==225){i=f;return}v=g-E|0;if((v|0)==-1){i=f;return}qt(h,b,v+1|0,-1,0);v=h;E=a[v]|0;if((E&1)==0){F=h+1|0}else{F=c[h+8>>2]|0}g=E&255;if((g&1|0)==0){G=g>>>1}else{G=c[h+4>>2]|0}g=a[m]|0;if((g&1)==0){H=10;I=g}else{g=c[b>>2]|0;H=(g&-2)-1|0;I=g&255}do{if(H>>>0<G>>>0){g=I&255;if((g&1|0)==0){J=g>>>1}else{J=c[b+4>>2]|0}qC(b,H,G-H|0,J,0,J,G,F);K=a[v]|0}else{if((I&1)==0){L=q+1|0}else{L=c[b+8>>2]|0}yB(L|0,F|0,G|0);a[L+G|0]=0;if((a[m]&1)==0){a[m]=G<<1&255;K=E;break}else{c[b+4>>2]=G;K=E;break}}}while(0);if((K&1)==0){i=f;return}yr(c[h+8>>2]|0);i=f;return}function dr(a,b){a=a|0;b=b|0;return}function ds(a,b){a=a|0;b=b|0;return}function dt(a,b){a=a|0;b=b|0;return}function du(b){b=b|0;c[b>>2]=26504;c[b+4>>2]=18;a[b+8|0]=0;a[b+9|0]=2;a[b+10|0]=2;a[b+11|0]=2;a[b+12|0]=8;a[b+13|0]=6;a[b+14|0]=30;a[b+15|0]=10;a[b+16|0]=16;a[b+17|0]=20;a[b+18|0]=3;a[b+19|0]=4;a[b+20|0]=0;c[b+24>>2]=0;c[b+32>>2]=2970;c[b+36>>2]=2100;c[b+44>>2]=0;c[b+40>>2]=0;c[b+48>>2]=0;c[b+28>>2]=0;return}function dv(a){a=a|0;yr(a);return}function dw(a){a=a|0;return}function dx(){var b=0;b=yp(32)|0;c[14286]=b;c[14284]=33;c[14285]=24;yA(b|0,12880,24)|0;a[b+24|0]=0;bh(696,57136,t|0)|0;return}function dy(a){a=a|0;jf(a|0);c[a>>2]=29040;c[a+60>>2]=0;return}function dz(a){a=a|0;jo(a|0);yr(a);return}function dA(a){a=a|0;jo(a|0);return}function dB(a){a=a|0;var b=0;jj(a|0);b=a+60|0;c[b>>2]=0;c[b>>2]=dC(a,0)|0;return}function dC(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=a+60|0;j=c[h>>2]|0;k=a+8|0;l=c[k>>2]|0;if((j|0)==0){m=l}else{n=l-4|0;c[k>>2]=n;m=n}n=a+8|0;k=m-(c[a+4>>2]|0)>>2;if((k|0)>(b|0)){l=a+4|0;o=j|0;c[e>>2]=o;if((m|0)==(c[a+12>>2]|0)){eb(l,e)}else{if((m|0)==0){p=0}else{c[m>>2]=o;p=c[n>>2]|0}c[n>>2]=p+4}q=c[(c[l>>2]|0)+(b<<2)>>2]|0;i=d;return q|0}if((k|0)!=(b|0)){cd(7832,18456,59,20688);return 0}b=yp(68)|0;k=b;l=b;jf(l);c[b>>2]=28768;c[b+60>>2]=0;c[b+64>>2]=0;jl(l,a|0);b=a+4|0;c[f>>2]=l;p=c[n>>2]|0;o=a+12|0;if((p|0)==(c[o>>2]|0)){eb(b,f)}else{if((p|0)==0){r=0}else{c[p>>2]=l;r=c[n>>2]|0}c[n>>2]=r+4}r=c[h>>2]|0;if((r|0)==0){q=k;i=d;return q|0}h=r|0;c[g>>2]=h;r=c[n>>2]|0;if((r|0)==(c[o>>2]|0)){eb(b,g);q=k;i=d;return q|0}if((r|0)==0){s=0}else{c[r>>2]=h;s=c[n>>2]|0}c[n>>2]=s+4;q=k;i=d;return q|0}function dD(a){a=a|0;jo(a|0);yr(a);return}function dE(a){a=a|0;jo(a|0);return}function dF(a,b){a=a|0;b=b|0;var d=0;d=a+64|0;if((c[d>>2]|0)<=(b|0)){return}c[d>>2]=b;return}function dG(a){a=a|0;jf(a|0);c[a>>2]=28920;c[a+60>>2]=0;c[a+64>>2]=0;return}function dH(a){a=a|0;jo(a|0);yr(a);return}function dI(a){a=a|0;jo(a|0);return}function dJ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a|0;jj(f);g=yp(88)|0;h=g;jf(h);c[g>>2]=24648;yC(g+60|0,0,20);c[g+80>>2]=6;c[a+60>>2]=g;jl(h,f);c[e>>2]=h;g=a+8|0;j=c[g>>2]|0;k=a+12|0;if((j|0)==(c[k>>2]|0)){eb(a+4|0,e)}else{if((j|0)==0){l=0}else{c[j>>2]=h;l=c[g>>2]|0}c[g>>2]=l+4}l=yp(88)|0;h=l;jf(h);c[l>>2]=24648;yC(l+60|0,0,20);c[l+80>>2]=7;c[a+64>>2]=l;jl(h,f);c[d>>2]=h;f=c[g>>2]|0;if((f|0)==(c[k>>2]|0)){eb(a+4|0,d);i=b;return}if((f|0)==0){m=0}else{c[f>>2]=h;m=c[g>>2]|0}c[g>>2]=m+4;i=b;return}function dK(a,b,d){a=a|0;b=+b;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+8|0;f=e|0;g=a+8|0;j=a+4|0;k=0;while(1){l=c[g>>2]|0;m=c[j>>2]|0;if((k|0)>=(l-m>>2|0)){n=l;o=m;p=310;break}q=c[m+(k<<2)>>2]|0;m=q+72|0;if(dj(+h[m>>3],b)|0){if((c[q+80>>2]|0)==(d|0)){p=320;break}}if(+h[m>>3]>b){p=308;break}else{k=k+1|0}}do{if((p|0)==308){if((k|0)!=-1){r=k;break}n=c[g>>2]|0;o=c[j>>2]|0;p=310}else if((p|0)==320){s=q;i=e;return s|0}}while(0);if((p|0)==310){r=(n-o>>2)-1|0}o=yp(88)|0;n=o;p=o;jf(p);c[o>>2]=24648;c[o+60>>2]=0;c[o+64>>2]=0;c[o+68>>2]=0;h[o+72>>3]=b;c[o+80>>2]=d;d=a|0;jl(p,d);if((r|0)!=-1){jr(d,p,r);s=n;i=e;return s|0}c[f>>2]=p;r=c[g>>2]|0;if((r|0)==(c[a+12>>2]|0)){eb(a+4|0,f);s=n;i=e;return s|0}if((r|0)==0){t=0}else{c[r>>2]=p;t=c[g>>2]|0}c[g>>2]=t+4;s=n;i=e;return s|0}function dL(a,b){a=a|0;b=+b;var d=0;d=(c[a+64>>2]|0)+72|0;if(+h[d>>3]>=b){return}h[d>>3]=b;return}function dM(a){a=a|0;jo(a|0);yr(a);return}function dN(a){a=a|0;jo(a|0);return}function dO(a,b){a=a|0;b=b|0;c[a+60>>2]=b;return}function dP(a,b){a=a|0;b=b|0;var d=0;d=a+64|0;if((c[d>>2]|0)>=(b|0)){return}c[d>>2]=b;return}function dQ(a,b){a=a|0;b=b|0;var d=0;d=a+68|0;if((c[d>>2]|0)>=(b|0)){return}c[d>>2]=b;return}function dR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[b>>2]|0;b=c[d>>2]|0;e=c[d+8>>2]|0;f=a+64|0;a=-((c[c[d+4>>2]>>2]|0)+(c[b>>2]|0)|0)|0;if((c[f>>2]|0)>(a|0)){c[f>>2]=a}c[b>>2]=c[c[e>>2]>>2]<<2;return 0}function dS(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[c[b>>2]>>2]|0;b=a+64|0;e=c[b>>2]|0;f=a+60|0;c[f>>2]=(c[d>>2]|0)+e+(c[f>>2]|0);c[d>>2]=(c[d>>2]|0)+e;c[b>>2]=0;return 0}function dT(a,b){a=a|0;b=b|0;c[c[c[b>>2]>>2]>>2]=0;return 0}function dU(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[c[b>>2]>>2]|0;b=a+64|0;e=c[b>>2]|0;f=a+60|0;c[f>>2]=(c[d>>2]|0)+e+(c[f>>2]|0);c[d>>2]=(c[d>>2]|0)+e;c[b>>2]=0;return 0}function dV(a,b){a=a|0;b=b|0;a=c[b>>2]|0;b=c[a+4>>2]|0;h[c[a>>2]>>3]=0.0;c[b>>2]=0;return 0}function dW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,g=0.0,i=0;d=c[b>>2]|0;b=c[d>>2]|0;e=c[d+4>>2]|0;f=+h[a+72>>3];g=f- +h[b>>3];if(g>0.0){i=~~(+Z(+g,+.6)*2.5)}else{i=0}d=a+60|0;c[d>>2]=(c[e>>2]|0)+i;h[b>>3]=f;c[e>>2]=c[d>>2];return 0}function dX(a,b){a=a|0;b=b|0;var d=0;d=a+60|0;c[d>>2]=~~+ah(+h[c[c[b>>2]>>2]>>3]*+(c[d>>2]|0));return 0}function dY(b,c){b=b|0;c=c|0;c=b;a[b]=18;b=c+1|0;yA(b|0,12664,9)|0;a[c+10|0]=0;return}function dZ(a,b){a=a|0;b=b|0;return 0}function d_(a,b){a=a|0;b=b|0;return 0}function d$(a,b){a=a|0;b=b|0;return 0}function d0(a,b){a=a|0;b=b|0;return 0}function d1(a,b){a=a|0;b=b|0;return 0}function d2(a,b){a=a|0;b=b|0;return 0}function d3(a,b){a=a|0;b=b|0;return 0}function d4(a,b){a=a|0;b=b|0;return 0}function d5(a,b){a=a|0;b=b|0;return 0}function d6(a,b){a=a|0;b=b|0;return 0}function d7(a,b){a=a|0;b=b|0;return 0}function d8(a,b){a=a|0;b=b|0;return 0}function d9(a,b){a=a|0;b=b|0;return 0}function ea(a,b){a=a|0;b=b|0;return 0}function eb(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){vf(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=376}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=376}}if((m|0)==376){n=yp(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;yA(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}yr(l);return}function ec(a){a=a|0;iu(a|0);c[a>>2]=25440;return}function ed(a){a=a|0;ix(a|0);yr(a);return}function ee(a){a=a|0;ix(a|0);return}function ef(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+48>>2]&255](d,a)|0;return(b?0:2)|0}function eg(a){a=a|0;jf(a|0);c[a>>2]=25320;yC(a+60|0,0,12);return}function eh(b){b=b|0;c[b>>2]=25320;if((a[b+60|0]&1)!=0){yr(c[b+68>>2]|0)}jo(b|0);yr(b);return}function ei(b){b=b|0;c[b>>2]=25320;if((a[b+60|0]&1)!=0){yr(c[b+68>>2]|0)}jo(b|0);return}function ej(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;g=b|0;b=a|0;jl(g,b);if((d|0)!=-1){jr(b,g,d);i=e;return}c[f>>2]=g;d=a+8|0;b=c[d>>2]|0;if((b|0)==(c[a+12>>2]|0)){eb(a+4|0,f);i=e;return}if((b|0)==0){h=0}else{c[b>>2]=g;h=c[d>>2]|0}c[d>>2]=h+4;i=e;return}function ek(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+52>>2]&255](d,a)|0;return(b?0:2)|0}function el(a){a=a|0;return}function em(a){a=a|0;return}function en(a){a=a|0;return}function eo(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=12;h=f+1|0;a[h]=a[16632]|0;a[h+1|0]=a[16633]|0;a[h+2|0]=a[16634]|0;a[h+3|0]=a[16635]|0;a[h+4|0]=a[16636]|0;a[h+5|0]=a[16637]|0;a[f+7|0]=0;iv(b|0,e);if((a[g]&1)!=0){yr(c[e+8>>2]|0)}c[b>>2]=25728;c[b+144>>2]=1;a[b+148|0]=0;a[b+149|0]=0;i=d;return}function ep(a){a=a|0;ix(a|0);yr(a);return}function eq(a){a=a|0;ix(a|0);return}function er(a,b){a=a|0;b=b|0;var c=0;if((b|0)==0){c=0;return c|0}c=(yc(b,37064,36968,-1)|0)!=0;return c|0}function es(a){a=a|0;return((c[a+144>>2]|0)-3|0)>>>0<3>>>0|0}function et(b,c){b=b|0;c=c|0;a[b]=14;c=b+1|0;a[c]=a[14488]|0;a[c+1|0]=a[14489]|0;a[c+2|0]=a[14490]|0;a[c+3|0]=a[14491]|0;a[c+4|0]=a[14492]|0;a[c+5|0]=a[14493]|0;a[c+6|0]=a[14494]|0;a[b+8|0]=0;return}function eu(a){a=a|0;return 0}function ev(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f|0;h=g;j=g;a[j]=16;k=h+1|0;l=k|0;E=1935762797;a[l]=E&255;E=E>>8;a[l+1|0]=E&255;E=E>>8;a[l+2|0]=E&255;E=E>>8;a[l+3|0]=E&255;l=k+4|0;E=761623157;a[l]=E&255;E=E>>8;a[l+1|0]=E&255;E=E>>8;a[l+2|0]=E&255;E=E>>8;a[l+3|0]=E&255;a[h+9|0]=0;jE(b|0,g);if((a[j]&1)!=0){yr(c[g+8>>2]|0)}c[b>>2]=25600;dG(b+116|0);eo(b+184|0);eo(b+336|0);jj(b|0);c[b+16>>2]=0;g=b+100|0;c[g>>2]=-2147483647;c[b+104>>2]=0;c[b+108>>2]=0;c[b+480>>2]=1;c[b+328>>2]=0;a[b+112|0]=d&1;c[b+96>>2]=e;if(d){i=f;return}c[g>>2]=0;i=f;return}function ew(a){a=a|0;c[a>>2]=25600;eq(a+336|0);eq(a+184|0);dI(a+116|0);jo(a|0);yr(a);return}function ex(a){a=a|0;c[a>>2]=25600;eq(a+336|0);eq(a+184|0);dI(a+116|0);jo(a|0);return}function ey(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+32>>2]&255](d,a)|0;return(b?0:2)|0}function ez(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b;jl(f,a|0);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e)}else{if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4}j=b+124|0;if((c[j>>2]|0)!=-1){i=d;return}c[j>>2]=(c[g>>2]|0)-(c[a+4>>2]|0)>>2;i=d;return}function eA(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=a+8|0;e=a+4|0;a=c[e>>2]|0;if(((c[d>>2]|0)-a|0)>0){f=0;g=a}else{h=0;return h|0}L512:while(1){a=c[g+(f<<2)>>2]|0;do{if((a|0)!=0){i=yc(a,37064,37096,-1)|0;if((i|0)==0){break}if((c[i+124>>2]|0)==(b|0)){break L512}}}while(0);a=f+1|0;j=c[e>>2]|0;if((a|0)<((c[d>>2]|0)-j>>2|0)){f=a;g=j}else{h=0;k=500;break}}if((k|0)==500){return h|0}h=i;return h|0}function eB(a){a=a|0;var b=0,d=0;b=c[a+180>>2]|0;if((b|0)==0){d=0;return d|0}d=c[b+60>>2]|0;return d|0}function eC(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[b>>2]|0;b=c[d>>2]|0;e=c[d+12>>2]|0;d=a+116|0;dJ(d);c[b>>2]=d;if((c[a+480>>2]|0)!=0){c[a+476>>2]=c[a+180>>2]}c[e>>2]=0;if((c[b>>2]|0)==0){cd(17912,14456,185,19624);return 0}else{return 0}return 0}function eD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d|0;f=c[b>>2]|0;g=c[f+4>>2]|0;h=a+116|0;a=c[(c[h>>2]|0)+20>>2]|0;j=e|0;c[j>>2]=0;k=e+4|0;c[k>>2]=0;l=e+8|0;c[l>>2]=0;m=c[b+4>>2]|0;b=m-f|0;n=b>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0);return 0}o=yp(b)|0;c[k>>2]=o;c[j>>2]=o;c[l>>2]=o+(n<<2);if((f|0)==(m|0)){break}else{p=f;q=o}do{if((q|0)==0){r=0}else{c[q>>2]=c[p>>2];r=c[k>>2]|0}q=r+4|0;c[k>>2]=q;p=p+4|0;}while((p|0)!=(m|0))}}while(0);c0[a&63](h,g,e,0);e=c[j>>2]|0;if((e|0)==0){i=d;return 1}j=c[k>>2]|0;if((e|0)!=(j|0)){c[k>>2]=j+(~((j-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 1}function eE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d|0;f=c[b>>2]|0;g=c[f+8>>2]|0;h=a+116|0;a=c[(c[h>>2]|0)+20>>2]|0;j=e|0;c[j>>2]=0;k=e+4|0;c[k>>2]=0;l=e+8|0;c[l>>2]=0;m=c[b+4>>2]|0;b=m-f|0;n=b>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0);return 0}o=yp(b)|0;c[k>>2]=o;c[j>>2]=o;c[l>>2]=o+(n<<2);if((f|0)==(m|0)){break}else{p=f;q=o}do{if((q|0)==0){r=0}else{c[q>>2]=c[p>>2];r=c[k>>2]|0}q=r+4|0;c[k>>2]=q;p=p+4|0;}while((p|0)!=(m|0))}}while(0);c0[a&63](h,g,e,0);e=c[j>>2]|0;if((e|0)==0){i=d;return 1}j=c[k>>2]|0;if((e|0)!=(j|0)){c[k>>2]=j+(~((j-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 1}function eF(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+16|0;e=d|0;f=b|0;g=c[f>>2]|0;j=c[g+8>>2]|0;k=a+104|0;c[k>>2]=~~+ah(+h[c[g>>2]>>3]*+(c[k>>2]|0));k=a+116|0;a=c[(c[k>>2]|0)+20>>2]|0;g=e|0;c[g>>2]=0;l=e+4|0;c[l>>2]=0;m=e+8|0;c[m>>2]=0;n=c[b+4>>2]|0;b=c[f>>2]|0;f=n-b|0;o=f>>2;do{if((o|0)!=0){if(o>>>0>1073741823>>>0){vf(0);return 0}p=yp(f)|0;c[l>>2]=p;c[g>>2]=p;c[m>>2]=p+(o<<2);if((b|0)==(n|0)){break}else{q=b;r=p}do{if((r|0)==0){s=0}else{c[r>>2]=c[q>>2];s=c[l>>2]|0}r=s+4|0;c[l>>2]=r;q=q+4|0;}while((q|0)!=(n|0))}}while(0);c0[a&63](k,j,e,0);e=c[g>>2]|0;if((e|0)==0){i=d;return 1}g=c[l>>2]|0;if((e|0)!=(g|0)){c[l>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 1}function eG(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[c[b>>2]>>2]|0;c[a+104>>2]=c[d>>2];b=c[a+180>>2]|0;if((b|0)==0){cd(12584,14456,238,19632);return 0}e=(c[d>>2]|0)+(c[b+60>>2]|0)|0;c[d>>2]=e;if((c[a+480>>2]|0)==0){return 1}c[d>>2]=(c[(c[a+476>>2]|0)+68>>2]|0)+e;return 1}function eH(b,c){b=b|0;c=c|0;a[b]=14;c=b+1|0;a[c]=a[9648]|0;a[c+1|0]=a[9649]|0;a[c+2|0]=a[9650]|0;a[c+3|0]=a[9651]|0;a[c+4|0]=a[9652]|0;a[c+5|0]=a[9653]|0;a[c+6|0]=a[9654]|0;a[b+8|0]=0;return}function eI(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;a[b+5|0]=0;c[b>>2]=28368;c[b+40>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b+52>>2]=28688;g=b+76|0;yC(b+76|0,0,12);yC(b+56|0,0,17);a[g+1|0]=0;a[g]=0;c[b+88>>2]=0;a[b+4|0]=0;c[b+92>>2]=d;c[b+8>>2]=e;c[b+12>>2]=f;h[b+24>>3]=1.0;h[b+32>>3]=1.0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+96>>2]=1;return}function eJ(b){b=b|0;c[b>>2]=28688;if((a[b+24|0]&1)==0){return}yr(c[b+32>>2]|0);return}function eK(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=28368;c[b+52>>2]=28688;if((a[b+76|0]&1)!=0){yr(c[b+84>>2]|0)}d=c[b+40>>2]|0;if((d|0)==0){e=b;yr(e);return}f=b+44|0;g=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=g+(~((g-4+(-d|0)|0)>>>2)<<2)}yr(d);e=b;yr(e);return}function eL(b){b=b|0;var d=0,e=0;c[b>>2]=28368;c[b+52>>2]=28688;if((a[b+76|0]&1)!=0){yr(c[b+84>>2]|0)}d=c[b+40>>2]|0;if((d|0)==0){return}e=b+44|0;b=c[e>>2]|0;if((d|0)!=(b|0)){c[e>>2]=b+(~((b-4+(-d|0)|0)>>>2)<<2)}yr(d);return}function eM(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;e=i;i=i+8|0;d=e|0;jD(b);f=b|0;c[d>>2]=f;b=a+44|0;g=c[b>>2]|0;if((g|0)==(c[a+48>>2]|0)){eb(a+40|0,d);i=e;return}if((g|0)==0){h=0}else{c[g>>2]=f;h=c[b>>2]|0}c[b>>2]=h+4;i=e;return}function eN(a,b,d){a=a|0;b=b|0;d=d|0;d=a+44|0;a=c[d>>2]|0;if((c[a-4>>2]|0)==(b|0)){c[d>>2]=a+(~((a+(-a|0)|0)>>>2)<<2);return}else{cd(14416,17696,67,20656)}}function eO(a){a=a|0;return}function eP(a){a=a|0;return}function eQ(a,b,c){a=a|0;b=b|0;c=c|0;return}function eR(a,b,c){a=a|0;b=b|0;c=c|0;return}function eS(a,b){a=a|0;b=b|0;return}function eT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a+96>>2]=d;return}function eU(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;c[b+56>>2]=c[d+4>>2];c[b+60>>2]=c[d+8>>2];c[b+64>>2]=c[d+12>>2];c[b+68>>2]=c[d+16>>2];a[b+72|0]=a[d+20|0]&1;e=b+76|0;f=d+24|0;if((b+52|0)==(d|0)){g=d+36|0;h=c[g>>2]|0;i=b+88|0;c[i>>2]=h;return}j=a[f]|0;if((j&1)==0){k=f+1|0}else{k=c[d+32>>2]|0}f=j&255;if((f&1|0)==0){l=f>>>1}else{l=c[d+28>>2]|0}f=e;j=e;m=a[j]|0;if((m&1)==0){n=10;o=m}else{m=c[e>>2]|0;n=(m&-2)-1|0;o=m&255}if(n>>>0<l>>>0){m=o&255;if((m&1|0)==0){p=m>>>1}else{p=c[b+80>>2]|0}qC(e,n,l-n|0,p,0,p,l,k);g=d+36|0;h=c[g>>2]|0;i=b+88|0;c[i>>2]=h;return}if((o&1)==0){q=f+1|0}else{q=c[b+84>>2]|0}yB(q|0,k|0,l|0);a[q+l|0]=0;if((a[j]&1)==0){a[j]=l<<1&255;g=d+36|0;h=c[g>>2]|0;i=b+88|0;c[i>>2]=h;return}else{c[b+80>>2]=l;g=d+36|0;h=c[g>>2]|0;i=b+88|0;c[i>>2]=h;return}}function eV(a,b){a=a|0;b=b|0;return}function eW(a,b){a=a|0;b=b|0;return}function eX(a){a=a|0;return}function eY(a){a=a|0;c0[c[(c[a>>2]|0)+24>>2]&63](a,0,1,100);return}function eZ(a,b,d){a=a|0;b=b|0;d=d|0;c[a+16>>2]=-b;c[a+20>>2]=-d;return}function e_(a,b,c){a=a|0;b=+b;c=+c;h[a+24>>3]=b;h[a+32>>3]=c;return}function e$(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0;g=i;i=i+32|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;c[e>>2]=0;c[f>>2]=0;m=d;n=d+1|0;o=b+56|0;b=d+8|0;p=d+4|0;d=0;while(1){q=a[m]|0;r=q&255;if((r&1|0)==0){s=r>>>1}else{s=c[p>>2]|0}if(d>>>0>=s>>>0){break}if((q&1)==0){t=n}else{t=c[b>>2]|0}iN(a[t+d|0]|0,h,j,k,l);u=+(c[o>>2]|0)*.00048828125;q=~~(+(c[k>>2]|0)*u);c[k>>2]=q;r=~~(+(c[l>>2]|0)*u);c[l>>2]=r;c[e>>2]=(c[e>>2]|0)+q;c[f>>2]=(c[f>>2]|0)+r;d=d+1|0}i=g;return}function e0(a,b){a=a|0;b=b|0;var d=0;d=c[b+20>>2]|0;c[a>>2]=c[b+16>>2];c[a+4>>2]=d;return}function e1(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;f=c[e>>2]|0;g=c[e+4>>2]|0;h=(c[e+8>>2]|0)*3|0;i=f*3|0;j=b*3|0;k=(c[e+12>>2]|0)*3|0;l=g*3|0;m=d*3|0;n=+(i-b-h+(c[e+16>>2]|0)|0);o=+((f*-6|0)+j+h|0);p=+(i-j|0);q=+(b|0);r=+(l-d-k+(c[e+20>>2]|0)|0);s=+((g*-6|0)+m+k|0);t=+(l-m|0);u=+(d|0);v=65535.0;w=65535.0;x=0.0;y=0.0;z=0.0;do{A=q+(p*z+(z*o*z+z*z*n*z));v=A<v?A:v;x=A>x?A:x;A=u+(t*z+(z*s*z+z*z*r*z));w=A<w?A:w;y=A>y?A:y;z=z+.009999999776482582;}while(z<=1.0);e2(a,~~v,~~w,~~x,~~y);return}function e2(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=a+40|0;h=a+44|0;i=c[h>>2]|0;if((c[g>>2]|0)==(i|0)){cd(14336,17696,412,20640)}j=c[i-4>>2]|0;i=a+92|0;a=kk(c[i>>2]|0,b)|0;k=km(c[i>>2]|0,d)|0;l=kk(c[i>>2]|0,e)|0;jI(j,a,k,l,km(c[i>>2]|0,f)|0);l=c[g>>2]|0;if(((c[h>>2]|0)-l|0)>0){m=0;n=l}else{return}do{l=c[n+(m<<2)>>2]|0;k=kk(c[i>>2]|0,b)|0;a=km(c[i>>2]|0,d)|0;j=kk(c[i>>2]|0,e)|0;jH(l,k,a,j,km(c[i>>2]|0,f)|0);m=m+1|0;n=c[g>>2]|0;}while((m|0)<((c[h>>2]|0)-n>>2|0));return}function e3(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=e<<1;cF[c[(c[a>>2]|0)+72>>2]&31](a,b-e|0,d-e|0,f,f);return}function e4(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;e2(a,b,c,d+b|0,e+c|0);return}function e5(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;h=+h;var i=0,j=0;i=c[a+96>>2]|0;j=((i&1)+i|0)/2|0;e2(a,b-j|0,d-j|0,e+b+j|0,f+d+j|0);return}function e6(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=(b|0)>(e|0);h=(d|0)>(f|0);i=c[a+96>>2]|0;j=((i&1)+i|0)/2|0;e2(a,(g?e:b)-j|0,(h?f:d)-j|0,j+(g?b:e)|0,j+(h?d:f)|0);return}function e7(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if((b|0)==0){return}g=c[d>>2]|0;h=g+e|0;i=c[d+4>>2]|0;j=i+f|0;L728:do{if((b|0)>0){k=h;l=h;m=j;n=j;o=1;p=g;q=i;while(1){r=p+e|0;s=(r|0)<(k|0)?r:k;t=(r|0)>(l|0)?r:l;r=q+f|0;u=(r|0)<(m|0)?r:m;v=(r|0)>(n|0)?r:n;if((o|0)>=(b|0)){w=s;x=t;y=u;z=v;break L728}r=c[d+(o<<3)>>2]|0;A=c[d+(o<<3)+4>>2]|0;k=s;l=t;m=u;n=v;o=o+1|0;p=r;q=A}}else{w=h;x=h;y=j;z=j}}while(0);e2(a,w,y,x,z);return}function e8(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;cN[c[(c[a>>2]|0)+96>>2]&15](a,b,d,e,f,0.0);return}function e9(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var h=0,i=0,j=0,k=0;if((f|0)<0){h=-f|0;i=f+d|0}else{h=f;i=d}if((e|0)<0){j=e+b|0;k=-e|0}else{j=b;k=e}e=c[a+96>>2]|0;b=(e|0)/2|0;e2(a,j-(((e&1)+e|0)/2|0)|0,i-b|0,j+k+b|0,h+i+b|0);return}function fa(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c0[c[(c[a>>2]|0)+104>>2]&63](a,b,d,e);return}function fb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return}function fc(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0.0;g=i;i=i+32|0;h=g|0;j=g+8|0;k=g+16|0;l=g+24|0;m=d;n=d+1|0;o=b+56|0;p=+(f|0);f=d+8|0;q=d+4|0;d=e;e=0;while(1){r=a[m]|0;s=r&255;if((s&1|0)==0){t=s>>>1}else{t=c[q>>2]|0}if(e>>>0>=t>>>0){break}if((r&1)==0){u=n}else{u=c[f>>2]|0}iN(a[u+e|0]|0,h,j,k,l);v=+(c[o>>2]|0)*.00048828125;r=~~(+(d|0)+ +(c[h>>2]|0)*v+-2.0);s=~~(p- +(c[j>>2]|0)*v+2.0);e2(b,r,s,~~(v*+(c[k>>2]|0)+ +(r|0)),~~(+(s|0)-v*+(c[l>>2]|0)));d=~~(+(c[k>>2]|0)*+(c[o>>2]|0)*.00048828125)+d|0;e=e+1|0}i=g;return}function fd(a,b,c){a=a|0;b=b|0;c=c|0;return}function fe(a,b,c){a=a|0;b=b|0;c=+c;return}function ff(b){b=b|0;return(a[b+4|0]&1)!=0|0}function fg(a,b,c){a=a|0;b=b|0;c=c|0;return}function fh(b,c){b=b|0;c=c|0;a[b+5|0]=c&1;return}function fi(b){b=b|0;return(a[b+5|0]&1)!=0|0}function fj(b){b=b|0;var d=0;c[b>>2]=28688;if((a[b+24|0]&1)==0){d=b;yr(d);return}yr(c[b+32>>2]|0);d=b;yr(d);return}function fk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=10;h=f+1|0;a[h]=a[13320]|0;a[h+1|0]=a[13321]|0;a[h+2|0]=a[13322]|0;a[h+3|0]=a[13323]|0;a[h+4|0]=a[13324]|0;a[f+6|0]=0;iv(b|0,e);if((a[g]&1)!=0){yr(c[e+8>>2]|0)}e=b+148|0;g=e;c[e>>2]=g;c[b+152>>2]=g;c[b+156>>2]=0;c[b>>2]=27744;c[b+144>>2]=27896;i=d;return}function fl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+144>>2]=28248;b=a+148|0;d=a+156|0;do{if((c[d>>2]|0)!=0){e=c[a+152>>2]|0;f=b;g=(c[b>>2]|0)+4|0;h=e|0;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(f|0)){break}else{i=e}while(1){e=c[i+4>>2]|0;yr(i);if((e|0)==(f|0)){break}else{i=e}}}}while(0);ix(a|0);yr(a);return}function fm(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a-160+16|0;c[b+144>>2]=28248;a=b+148|0;d=b+156|0;do{if((c[d>>2]|0)!=0){e=c[b+152>>2]|0;f=a;g=(c[a>>2]|0)+4|0;h=e;c[(c[h>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[h>>2];c[d>>2]=0;if((e|0)==(a|0)){break}h=e;while(1){e=c[h+4>>2]|0;yr(h);if((e|0)==(f|0)){break}else{h=e}}}}while(0);ix(b);yr(b);return}function fn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a+144>>2]=28248;b=a+148|0;d=a+156|0;if((c[d>>2]|0)==0){e=a|0;ix(e);return}f=c[a+152>>2]|0;g=b;h=(c[b>>2]|0)+4|0;b=f|0;c[(c[b>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[b>>2];c[d>>2]=0;if((f|0)==(g|0)){e=a|0;ix(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=a|0;ix(e);return}function fo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a-160+16|0;c[b+144>>2]=28248;a=b+148|0;d=b+156|0;if((c[d>>2]|0)==0){e=b;ix(e);return}f=c[b+152>>2]|0;g=a;h=(c[a>>2]|0)+4|0;i=f;c[(c[i>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[i>>2];c[d>>2]=0;if((f|0)==(a|0)){e=b;ix(e);return}a=f;while(1){f=c[a+4>>2]|0;yr(a);if((f|0)==(g|0)){break}else{a=f}}e=b;ix(e);return}function fp(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function fq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=c[a+152>>2]|0;d=a+148|0;if((b|0)==(d|0)){return}e=a+156|0;a=b;while(1){b=c[a+8>>2]|0;do{if((b|0)==0){f=782}else{g=yc(b,37064,37496,-1)|0;if((g|0)==0){f=782;break}if(iG(g)|0){f=782;break}g=a+4|0;h=c[g>>2]|0;i=a|0;c[(c[i>>2]|0)+4>>2]=h;c[c[g>>2]>>2]=c[i>>2];c[e>>2]=(c[e>>2]|0)-1;yr(a);j=h}}while(0);if((f|0)==782){f=0;j=c[a+4>>2]|0}if((j|0)==(d|0)){break}else{a=j}}return}function fr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a-160+16|0;a=b+148|0;d=c[b+152>>2]|0;e=a;if((d|0)==(a|0)){return}a=b+156|0;b=a;f=d;while(1){d=c[f+8>>2]|0;do{if((d|0)==0){g=793}else{h=yc(d,37064,37496,-1)|0;if((h|0)==0){g=793;break}if(iG(h)|0){g=793;break}h=f+4|0;i=c[h>>2]|0;j=f|0;c[(c[j>>2]|0)+4>>2]=i;c[c[h>>2]>>2]=c[j>>2];c[a>>2]=(c[b>>2]|0)-1;yr(f);k=i}}while(0);if((g|0)==793){g=0;k=c[f+4>>2]|0}if((k|0)==(e|0)){break}else{f=k}}return}function fs(b,c){b=b|0;c=c|0;c=b;a[b]=8;b=c+1|0;E=1835099458;a[b]=E&255;E=E>>8;a[b+1|0]=E&255;E=E>>8;a[b+2|0]=E&255;E=E>>8;a[b+3|0]=E&255;a[c+5|0]=0;return}function ft(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=28248;b=a+4|0;d=a+12|0;if((c[d>>2]|0)==0){return}e=c[a+8>>2]|0;a=b;f=(c[b>>2]|0)+4|0;b=e|0;c[(c[b>>2]|0)+4>>2]=c[f>>2];c[c[f>>2]>>2]=c[b>>2];c[d>>2]=0;if((e|0)==(a|0)){return}else{g=e}while(1){e=c[g+4>>2]|0;yr(g);if((e|0)==(a|0)){break}else{g=e}}return}function fu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=28248;b=a+4|0;d=a+12|0;if((c[d>>2]|0)==0){e=a;yr(e);return}f=c[a+8>>2]|0;g=b;h=(c[b>>2]|0)+4|0;b=f|0;c[(c[b>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[b>>2];c[d>>2]=0;if((f|0)==(g|0)){e=a;yr(e);return}else{i=f}while(1){f=c[i+4>>2]|0;yr(i);if((f|0)==(g|0)){break}else{i=f}}e=a;yr(e);return}function fv(a){a=a|0;return}function fw(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=10;h=f+1|0;a[h]=a[13040]|0;a[h+1|0]=a[13041]|0;a[h+2|0]=a[13042]|0;a[h+3|0]=a[13043]|0;a[h+4|0]=a[13044]|0;a[f+6|0]=0;iv(b|0,e);if((a[g]&1)==0){j=b|0;c[j>>2]=27584;k=b+144|0;c[k>>2]=5;i=d;return}yr(c[e+8>>2]|0);j=b|0;c[j>>2]=27584;k=b+144|0;c[k>>2]=5;i=d;return}function fx(a){a=a|0;ix(a|0);yr(a);return}function fy(a){a=a|0;ix(a|0);return}function fz(a){a=a|0;var b=0;switch(c[a+144>>2]|0){case 4:{b=8;break};case 2:{b=-4;break};case 11:{b=8;break};case 10:{b=12;break};case 6:{b=2;break};case 7:{b=4;break};case 8:{b=6;break};case 3:{b=10;break};case 1:{b=-2;break};case 9:{b=5;break};default:{b=0}}return b|0}function fA(a,b){a=a|0;b=b|0;var d=0,e=0;if((b|0)==0){d=0;return d|0}e=yc(b,37064,37256,-1)|0;if((e|0)==0){d=0;return d|0}d=(c[a+144>>2]|0)==(c[e+144>>2]|0);return d|0}function fB(a,b,d){a=a|0;b=b|0;d=d|0;switch(b|0){case 50:{c[a+144>>2]=1;return};case 57:{c[a+144>>2]=3;return};case 55:{c[a+144>>2]=11;return};case 56:{c[a+144>>2]=4;return};case 53:{c[a+144>>2]=7;return};case 48:{c[a+144>>2]=10;return};case 54:{c[a+144>>2]=8;return};case 52:{c[a+144>>2]=6;return};case 49:{c[a+144>>2]=2;return};case 51:{c[a+144>>2]=5;return};default:{return}}}function fC(b,c){b=b|0;c=c|0;c=b;a[b]=8;b=c+1|0;E=1717922883;a[b]=E&255;E=E>>8;a[b+1|0]=E&255;E=E>>8;a[b+2|0]=E&255;E=E>>8;a[b+3|0]=E&255;a[c+5|0]=0;return}function fD(a){a=a|0;c[a>>2]=28280;gc(a+4|0);kf(a+796|0);c[a+952>>2]=10;c[a+956>>2]=100;c[a+960>>2]=1;c[a+964>>2]=2970;c[a+968>>2]=2100;yC(a+972|0,0,5);return}function fE(a){a=a|0;c[a>>2]=28280;kh(a+796|0);gf(a+4|0);yr(a);return}function fF(a){a=a|0;c[a>>2]=28280;kh(a+796|0);gf(a+4|0);return}function fG(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+48|0;f=e|0;g=e+16|0;h=e+32|0;j=c[b+960>>2]|0;do{if((j|0)==1){k=yp(236)|0;l=f;a[l]=0;a[f+1|0]=0;ht(k,b+4|0,f);if((a[l]&1)==0){m=k;break}yr(c[f+8>>2]|0);m=k}else if((j|0)==0){k=yp(284)|0;l=g;a[l]=0;a[g+1|0]=0;gG(k,b+4|0,g);if((a[l]&1)==0){m=k;break}yr(c[g+8>>2]|0);m=k}else{ds(12864,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;o=0;i=e;return o|0}}while(0);g=m;if((m|0)==0){ds(17392,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;o=0;i=e;return o|0}j=c[(c[m>>2]|0)+12>>2]|0;f=d;if((a[f]&1)==0){k=h;c[k>>2]=c[f>>2];c[k+4>>2]=c[f+4>>2];c[k+8>>2]=c[f+8>>2]}else{f=c[d+8>>2]|0;k=c[d+4>>2]|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){a[h]=k<<1&255;p=h+1|0}else{d=k+16&-16;l=yp(d)|0;c[h+8>>2]=l;c[h>>2]=d|1;c[h+4>>2]=k;p=l}yA(p|0,f|0,k)|0;a[p+k|0]=0}k=cW[j&255](g,h)|0;if((a[h]&1)!=0){yr(c[h+8>>2]|0)}if(k){ki(b+796|0,b+4|0);cG[c[(c[m>>2]|0)+4>>2]&1023](g);o=1;i=e;return o|0}else{ds(11096,(n=i,i=i+1|0,i=i+7&-8,c[n>>2]=0,n)|0);i=n;cG[c[(c[m>>2]|0)+4>>2]&1023](g);o=0;i=e;return o|0}return 0}function fH(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0;e=i;i=i+600|0;f=e|0;g=e+8|0;j=e+16|0;k=e+24|0;l=e+32|0;m=e+40|0;n=e+48|0;o=e+56|0;p=e+64|0;q=e+72|0;r=e+80|0;s=e+88|0;t=e+96|0;u=e+104|0;v=e+112|0;w=e+120|0;x=e+128|0;y=e+136|0;z=e+144|0;A=e+152|0;B=e+160|0;C=e+168|0;D=e+176|0;F=e+184|0;G=e+192|0;H=e+200|0;I=e+208|0;J=e+216|0;K=e+224|0;L=e+232|0;M=e+240|0;N=e+256|0;O=e+280|0;P=e+296|0;Q=e+312|0;R=e+328|0;S=e+344|0;T=e+360|0;U=e+376|0;V=e+392|0;W=e+408|0;X=e+424|0;Y=e+440|0;Z=e+456|0;_=e+472|0;$=e+488|0;aa=e+504|0;ab=e+520|0;ac=e+536|0;ad=e+552|0;ae=e+568|0;af=e+584|0;ag=M;a[ag]=6;ah=M+1|0;a[ah]=a[10256]|0;a[ah+1|0]=a[10257]|0;a[ah+2|0]=a[10258]|0;ai=M+4|0;a[ai]=0;aj=b+956|0;ak=c[aj>>2]|0;al=b+952|0;am=c[al>>2]|0;an=b+968|0;ao=c[an>>2]|0;ap=b+964|0;aq=c[ap>>2]|0;pk(N);L962:do{if(ps(N,d)|0){ar=yp(16)|0;as=O+8|0;c[as>>2]=ar;c[O>>2]=17;c[O+4>>2]=11;yA(ar|0,8696,11)|0;a[ar+11|0]=0;ar=N|0;fM(L,ar,O);at=c[L>>2]|0;au=N+4|0;if((at|0)==(au|0)){av=0}else{av=(c[c[at+28>>2]>>2]|0)==1}if((a[O]&1)!=0){yr(c[as>>2]|0)}do{if(av){as=yp(16)|0;at=P+8|0;c[at>>2]=as;c[P>>2]=17;c[P+4>>2]=11;yA(as|0,8696,11)|0;a[as+11|0]=0;fM(J,ar,P);as=c[J>>2]|0;if((as|0)==(au|0)){aw=0}else{aw=(c[c[as+28>>2]>>2]|0)==1}pf(11760,342,11640,aw);fL(K,ar,P);as=c[(c[K>>2]|0)+28>>2]|0;pf(11760,390,11304,(c[as>>2]|0)==1);ax=c[as+8>>2]|0;do{if((M|0)!=(ax|0)){as=a[ax]|0;if((as&1)==0){ay=ax+1|0}else{ay=c[ax+8>>2]|0}az=as&255;if((az&1|0)==0){aA=az>>>1}else{aA=c[ax+4>>2]|0}az=a[ag]|0;if((az&1)==0){aB=10;aC=az}else{az=c[M>>2]|0;aB=(az&-2)-1|0;aC=az&255}if(aB>>>0<aA>>>0){az=aC&255;as=(az&1|0)==0?az>>>1:c[ai>>2]|0;qC(M,aB,aA-aB|0,as,0,as,aA,ay);break}if((aC&1)==0){aD=ah}else{aD=c[M+8>>2]|0}yB(aD|0,ay|0,aA|0);a[aD+aA|0]=0;if((a[ag]&1)==0){a[ag]=aA<<1&255;break}else{c[ai>>2]=aA;break}}}while(0);if((a[P]&1)==0){break}yr(c[at>>2]|0)}}while(0);ax=Q;as=Q;a[as]=10;az=ax+1|0;a[az]=a[8376]|0;a[az+1|0]=a[8377]|0;a[az+2|0]=a[8378]|0;a[az+3|0]=a[8379]|0;a[az+4|0]=a[8380]|0;a[ax+6|0]=0;fM(I,ar,Q);ax=c[I>>2]|0;if((ax|0)==(au|0)){aE=0}else{aE=(c[c[ax+28>>2]>>2]|0)==0}if((a[as]&1)!=0){yr(c[Q+8>>2]|0)}do{if(aE){as=R;ax=R;a[ax]=10;az=as+1|0;a[az]=a[8376]|0;a[az+1|0]=a[8377]|0;a[az+2|0]=a[8378]|0;a[az+3|0]=a[8379]|0;a[az+4|0]=a[8380]|0;a[as+6|0]=0;fM(G,ar,R);as=c[G>>2]|0;if((as|0)==(au|0)){aF=0}else{aF=(c[c[as+28>>2]>>2]|0)==0}pf(11760,342,11640,aF);fL(H,ar,R);as=c[(c[H>>2]|0)+28>>2]|0;pf(11760,396,11376,(c[as>>2]|0)==0);az=~~+h[as+8>>3];if((a[ax]&1)==0){aG=az;break}yr(c[R+8>>2]|0);aG=az}else{aG=ak}}while(0);az=S;ax=S;a[ax]=12;as=az+1|0;a[as]=a[7568]|0;a[as+1|0]=a[7569]|0;a[as+2|0]=a[7570]|0;a[as+3|0]=a[7571]|0;a[as+4|0]=a[7572]|0;a[as+5|0]=a[7573]|0;a[az+7|0]=0;fM(F,ar,S);az=c[F>>2]|0;if((az|0)==(au|0)){aH=0}else{aH=(c[c[az+28>>2]>>2]|0)==0}if((a[ax]&1)!=0){yr(c[S+8>>2]|0)}do{if(aH){ax=T;az=T;a[az]=12;as=ax+1|0;a[as]=a[7568]|0;a[as+1|0]=a[7569]|0;a[as+2|0]=a[7570]|0;a[as+3|0]=a[7571]|0;a[as+4|0]=a[7572]|0;a[as+5|0]=a[7573]|0;a[ax+7|0]=0;fM(C,ar,T);ax=c[C>>2]|0;if((ax|0)==(au|0)){aI=0}else{aI=(c[c[ax+28>>2]>>2]|0)==0}pf(11760,342,11640,aI);fL(D,ar,T);ax=c[(c[D>>2]|0)+28>>2]|0;pf(11760,396,11376,(c[ax>>2]|0)==0);as=~~+h[ax+8>>3];if((a[az]&1)==0){aJ=as;break}yr(c[T+8>>2]|0);aJ=as}else{aJ=am}}while(0);as=U;az=U;a[az]=18;ax=as+1|0;yA(ax|0,19224,9)|0;a[as+10|0]=0;fM(B,ar,U);as=c[B>>2]|0;if((as|0)==(au|0)){aK=0}else{aK=(c[c[as+28>>2]>>2]|0)==0}if((a[az]&1)!=0){yr(c[U+8>>2]|0)}do{if(aK){az=V;as=V;a[as]=18;ax=az+1|0;yA(ax|0,19224,9)|0;a[az+10|0]=0;fM(z,ar,V);az=c[z>>2]|0;if((az|0)==(au|0)){aL=0}else{aL=(c[c[az+28>>2]>>2]|0)==0}pf(11760,342,11640,aL);fL(A,ar,V);az=c[(c[A>>2]|0)+28>>2]|0;pf(11760,396,11376,(c[az>>2]|0)==0);ax=~~+h[az+8>>3];if((a[as]&1)==0){aM=ax;break}yr(c[V+8>>2]|0);aM=ax}else{aM=ao}}while(0);ax=W;as=W;a[as]=20;az=ax+1|0;yA(az|0,18480,10)|0;a[ax+11|0]=0;fM(y,ar,W);ax=c[y>>2]|0;if((ax|0)==(au|0)){aN=0}else{aN=(c[c[ax+28>>2]>>2]|0)==0}if((a[as]&1)!=0){yr(c[W+8>>2]|0)}do{if(aN){as=X;ax=X;a[ax]=20;az=as+1|0;yA(az|0,18480,10)|0;a[as+11|0]=0;fM(w,ar,X);as=c[w>>2]|0;if((as|0)==(au|0)){aO=0}else{aO=(c[c[as+28>>2]>>2]|0)==0}pf(11760,342,11640,aO);fL(x,ar,X);as=c[(c[x>>2]|0)+28>>2]|0;pf(11760,396,11376,(c[as>>2]|0)==0);az=~~+h[as+8>>3];if((a[ax]&1)==0){aP=az;break}yr(c[X+8>>2]|0);aP=az}else{aP=aq}}while(0);az=Y;ax=Y;a[ax]=16;as=az+1|0;aQ=as|0;E=1632399214;a[aQ]=E&255;E=E>>8;a[aQ+1|0]=E&255;E=E>>8;a[aQ+2|0]=E&255;E=E>>8;a[aQ+3|0]=E&255;aQ=as+4|0;E=1953853305;a[aQ]=E&255;E=E>>8;a[aQ+1|0]=E&255;E=E>>8;a[aQ+2|0]=E&255;E=E>>8;a[aQ+3|0]=E&255;a[az+9|0]=0;fM(v,ar,Y);az=c[v>>2]|0;if((az|0)==(au|0)){aR=0}else{aR=(c[c[az+28>>2]>>2]|0)==2}if((a[ax]&1)!=0){yr(c[Y+8>>2]|0)}do{if(aR){ax=Z;az=Z;a[az]=16;aQ=ax+1|0;as=aQ|0;E=1632399214;a[as]=E&255;E=E>>8;a[as+1|0]=E&255;E=E>>8;a[as+2|0]=E&255;E=E>>8;a[as+3|0]=E&255;as=aQ+4|0;E=1953853305;a[as]=E&255;E=E>>8;a[as+1|0]=E&255;E=E>>8;a[as+2|0]=E&255;E=E>>8;a[as+3|0]=E&255;a[ax+9|0]=0;fM(t,ar,Z);ax=c[t>>2]|0;if((ax|0)==(au|0)){aS=0}else{aS=(c[c[ax+28>>2]>>2]|0)==2}pf(11760,342,11640,aS);fL(u,ar,Z);ax=c[(c[u>>2]|0)+28>>2]|0;pf(11760,384,11520,(c[ax>>2]|0)==2);a[b+972|0]=a[ax+8|0]&1;if((a[az]&1)==0){break}yr(c[Z+8>>2]|0)}}while(0);az=yp(16)|0;ax=_+8|0;c[ax>>2]=az;c[_>>2]=17;c[_+4>>2]=12;yA(az|0,17176,12)|0;a[az+12|0]=0;fM(s,ar,_);az=c[s>>2]|0;if((az|0)==(au|0)){aT=0}else{aT=(c[c[az+28>>2]>>2]|0)==2}if((a[_]&1)!=0){yr(c[ax>>2]|0)}do{if(aT){ax=yp(16)|0;az=$+8|0;c[az>>2]=ax;c[$>>2]=17;c[$+4>>2]=12;yA(ax|0,17176,12)|0;a[ax+12|0]=0;fM(q,ar,$);ax=c[q>>2]|0;if((ax|0)==(au|0)){aU=0}else{aU=(c[c[ax+28>>2]>>2]|0)==2}pf(11760,342,11640,aU);fL(r,ar,$);ax=c[(c[r>>2]|0)+28>>2]|0;pf(11760,384,11520,(c[ax>>2]|0)==2);a[b+973|0]=a[ax+8|0]&1;if((a[$]&1)==0){break}yr(c[az>>2]|0)}}while(0);az=yp(32)|0;ax=aa+8|0;c[ax>>2]=az;c[aa>>2]=33;c[aa+4>>2]=16;yA(az|0,16784,16)|0;a[az+16|0]=0;fM(p,ar,aa);az=c[p>>2]|0;if((az|0)==(au|0)){aV=0}else{aV=(c[c[az+28>>2]>>2]|0)==2}if((a[aa]&1)!=0){yr(c[ax>>2]|0)}do{if(aV){ax=yp(32)|0;az=ab+8|0;c[az>>2]=ax;c[ab>>2]=33;c[ab+4>>2]=16;yA(ax|0,16784,16)|0;a[ax+16|0]=0;fM(n,ar,ab);ax=c[n>>2]|0;if((ax|0)==(au|0)){aW=0}else{aW=(c[c[ax+28>>2]>>2]|0)==2}pf(11760,342,11640,aW);fL(o,ar,ab);ax=c[(c[o>>2]|0)+28>>2]|0;pf(11760,384,11520,(c[ax>>2]|0)==2);a[b+974|0]=a[ax+8|0]&1;if((a[ab]&1)==0){break}yr(c[az>>2]|0)}}while(0);az=yp(16)|0;ax=ac+8|0;c[ax>>2]=az;c[ac>>2]=17;c[ac+4>>2]=15;yA(az|0,16464,15)|0;a[az+15|0]=0;fM(m,ar,ac);az=c[m>>2]|0;if((az|0)==(au|0)){aX=0}else{aX=(c[c[az+28>>2]>>2]|0)==2}if((a[ac]&1)!=0){yr(c[ax>>2]|0)}do{if(aX){ax=yp(16)|0;az=ad+8|0;c[az>>2]=ax;c[ad>>2]=17;c[ad+4>>2]=15;yA(ax|0,16464,15)|0;a[ax+15|0]=0;fM(k,ar,ad);ax=c[k>>2]|0;if((ax|0)==(au|0)){aY=0}else{aY=(c[c[ax+28>>2]>>2]|0)==2}pf(11760,342,11640,aY);fL(l,ar,ad);ax=c[(c[l>>2]|0)+28>>2]|0;pf(11760,384,11520,(c[ax>>2]|0)==2);a[b+975|0]=a[ax+8|0]&1;if((a[ad]&1)==0){break}yr(c[az>>2]|0)}}while(0);az=yp(32)|0;ax=ae+8|0;c[ax>>2]=az;c[ae>>2]=33;c[ae+4>>2]=17;yA(az|0,16168,17)|0;a[az+17|0]=0;fM(j,ar,ae);az=c[j>>2]|0;if((az|0)==(au|0)){aZ=0}else{aZ=(c[c[az+28>>2]>>2]|0)==2}if((a[ae]&1)!=0){yr(c[ax>>2]|0)}do{if(aZ){ax=yp(32)|0;az=af+8|0;c[az>>2]=ax;c[af>>2]=33;c[af+4>>2]=17;yA(ax|0,16168,17)|0;a[ax+17|0]=0;fM(f,ar,af);ax=c[f>>2]|0;if((ax|0)==(au|0)){a_=0}else{a_=(c[c[ax+28>>2]>>2]|0)==2}pf(11760,342,11640,a_);fL(g,ar,af);ax=c[(c[g>>2]|0)+28>>2]|0;pf(11760,384,11520,(c[ax>>2]|0)==2);a[b+976|0]=a[ax+8|0]&1;if((a[af]&1)==0){break}yr(c[az>>2]|0)}}while(0);ar=a[ag]|0;au=ar&255;az=(au&1|0)==0;ax=az?au>>>1:c[ai>>2]|0;as=(ar&1)==0;if(as){a$=ah}else{a$=c[M+8>>2]|0}ar=ax>>>0>3>>>0;do{if((yD(a$|0,10256,(ar?3:ax)|0)|0)==0){if(!(ax>>>0>2>>>0&(ar^1))){a0=1092;break}c[b+960>>2]=1}else{a0=1092}}while(0);L1153:do{if((a0|0)==1092){ar=az?au>>>1:c[ai>>2]|0;if(as){a1=ah}else{a1=c[M+8>>2]|0}ax=ar>>>0>3>>>0;do{if((yD(a1|0,15824,(ax?3:ar)|0)|0)==0){if(!(ar>>>0>2>>>0&(ax^1))){break}c[b+960>>2]=0;break L1153}}while(0);ax=az?au>>>1:c[ai>>2]|0;if(as){a2=ah}else{a2=c[M+8>>2]|0}ar=ax>>>0>5>>>0;do{if((yD(a2|0,15480,(ar?5:ax)|0)|0)==0){if(!(ax>>>0>4>>>0&(ar^1))){break}c[b+960>>2]=2;break L1153}}while(0);if(as){a3=ah}else{a3=c[M+8>>2]|0}ds(15176,(a4=i,i=i+8|0,c[a4>>2]=a3,a4)|0);i=a4;a5=0;break L962}}while(0);if(aJ>>>0>1e3>>>0){ds(14936,(a4=i,i=i+1|0,i=i+7&-8,c[a4>>2]=0,a4)|0);i=a4}else{c[al>>2]=aJ}if(aG>>>0>1e3>>>0){ds(14672,(a4=i,i=i+1|0,i=i+7&-8,c[a4>>2]=0,a4)|0);i=a4}else{c[aj>>2]=aG}if(aM>>>0>5e3>>>0){ds(14304,(a4=i,i=i+1|0,i=i+7&-8,c[a4>>2]=0,a4)|0);i=a4}else{c[an>>2]=aM}if(aP>>>0>5e3>>>0){ds(14216,(a4=i,i=i+1|0,i=i+7&-8,c[a4>>2]=0,a4)|0);i=a4;a5=1;break}else{c[ap>>2]=aP;a5=1;break}}else{ds(9528,(a4=i,i=i+1|0,i=i+7&-8,c[a4>>2]=0,a4)|0);i=a4;a5=0}}while(0);pl(N);if((a[ag]&1)==0){i=e;return a5|0}yr(c[M+8>>2]|0);i=e;return a5|0}function fI(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0;e=i;i=i+456|0;g=e|0;gj(d+4|0);h=c[c[d+8>>2]>>2]|0;if((h|0)==0){j=0}else{j=yc(h,37064,37200,-1)|0}h=d+952|0;k=c[h>>2]<<1;mr(g,k+(c[d+968>>2]|0)|0,(c[d+964>>2]|0)+k|0);l=+(c[d+956>>2]|0)/100.0;mO(g,l,l);k=c[h>>2]|0;mN(g,k,k);k=g|0;cH[c[(c[g>>2]|0)+132>>2]&255](k,(a[d+976|0]&1)!=0);k8(d+796|0,k,j,0);m3(b,g,f);mt(g);i=e;return}function fJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){ro(o)|0}a[k]=1;o=d;p=a[d]|0;q=p&255;if((q&1|0)==0){r=q>>>1}else{r=c[d+4>>2]|0}q=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(q+24)>>2];s=(p&1)==0;if(s){t=o+1|0}else{t=c[d+8>>2]|0}do{if((c[n+(q+4)>>2]&176|0)==32){if(s){u=o+1+r|0;v=1156;break}else{w=(c[d+8>>2]|0)+r|0;v=1155;break}}else{if(s){u=o+1|0;v=1156;break}else{w=c[d+8>>2]|0;v=1155;break}}}while(0);if((v|0)==1155){x=c[d+8>>2]|0;y=w}else if((v|0)==1156){x=o+1|0;y=u}s=n+q|0;p=n+(q+76)|0;z=c[p>>2]|0;if((z|0)==-1){qR(f,s);A=vp(f,43928)|0;B=cW[c[(c[A>>2]|0)+28>>2]&255](A,32)|0;vn(f);c[p>>2]=B<<24>>24;C=B}else{C=z&255}fK(j,h,t,y,x+r|0,s,C);if((c[j>>2]|0)!=0){break}s=c[(c[l>>2]|0)-12>>2]|0;qN(n+s|0,c[n+(s+16)>>2]|5)}}while(0);rG(g);i=e;return b|0}function fK(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((cM[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){if(q>>>0<11>>>0){h=q<<1&255;e=l;a[e]=h;r=l+1|0;s=h;t=e}else{e=q+16&-16;h=yp(e)|0;c[l+8>>2]=h;g=e|1;c[l>>2]=g;c[l+4>>2]=q;r=h;s=g&255;t=l}yC(r|0,j|0,q|0);a[r+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((cM[c[(c[d>>2]|0)+48>>2]&63](d,u,q)|0)==(q|0)){if((a[t]&1)==0){break}yr(c[l+8>>2]|0);break}c[m>>2]=0;c[b>>2]=0;if((a[t]&1)==0){i=k;return}yr(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((cM[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function fL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=d+4|0;d=f;g=c[f>>2]|0;do{if((g|0)!=0){f=a[e]|0;h=f&255;i=(h&1|0)==0;j=h>>>1;h=(f&1)==0;f=e+1|0;k=e+8|0;l=e+4|0;m=g;n=d;L1281:while(1){o=m;while(1){p=o;q=o+16|0;r=a[q]|0;s=r&255;if((s&1|0)==0){t=s>>>1}else{t=c[o+20>>2]|0}if(i){u=j}else{u=c[l>>2]|0}if((r&1)==0){v=q+1|0}else{v=c[o+24>>2]|0}if(h){w=f}else{w=c[k>>2]|0}q=yD(v|0,w|0,(u>>>0<t>>>0?u:t)|0)|0;if((q|0)==0){if(t>>>0>=u>>>0){break}}else{if((q|0)>=0){break}}q=c[o+4>>2]|0;if((q|0)==0){x=n;break L1281}else{o=q}}q=c[o>>2]|0;if((q|0)==0){x=p;break}else{m=q;n=p}}if((x|0)==(d|0)){break}if(i){y=j}else{y=c[l>>2]|0}n=x+16|0;m=a[n]|0;q=m&255;if((q&1|0)==0){z=q>>>1}else{z=c[x+20>>2]|0}if(h){A=f}else{A=c[k>>2]|0}if((m&1)==0){B=n+1|0}else{B=c[x+24>>2]|0}n=yD(A|0,B|0,(z>>>0<y>>>0?z:y)|0)|0;if((n|0)==0){if(y>>>0<z>>>0){break}}else{if((n|0)<0){break}}c[b>>2]=x;return}}while(0);c[b>>2]=d;return}function fM(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+8|0;g=f|0;h=d+4|0;j=h;fN(g,d,e,c[h>>2]|0,j);h=c[g>>2]|0;do{if((h|0)!=(j|0)){g=a[e]|0;d=g&255;if((d&1|0)==0){k=d>>>1}else{k=c[e+4>>2]|0}d=h+16|0;l=a[d]|0;m=l&255;if((m&1|0)==0){n=m>>>1}else{n=c[h+20>>2]|0}if((g&1)==0){o=e+1|0}else{o=c[e+8>>2]|0}if((l&1)==0){p=d+1|0}else{p=c[h+24>>2]|0}d=yD(o|0,p|0,(n>>>0<k>>>0?n:k)|0)|0;if((d|0)==0){if(k>>>0<n>>>0){break}}else{if((d|0)<0){break}}c[b>>2]=h;i=f;return}}while(0);c[b>>2]=j;i=f;return}function fN(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((f|0)==0){h=g;i=b|0;c[i>>2]=h;return}d=a[e]|0;j=d&255;k=(j&1|0)==0;l=j>>>1;j=(d&1)==0;d=e+1|0;m=e+8|0;n=e+4|0;e=f;f=g;L1357:while(1){L1359:do{if(k){g=e;while(1){o=g+16|0;p=a[o]|0;q=p&255;if((q&1|0)==0){r=q>>>1}else{r=c[g+20>>2]|0}if((p&1)==0){s=o+1|0}else{s=c[g+24>>2]|0}if(j){t=d}else{t=c[m>>2]|0}o=yD(s|0,t|0,(l>>>0<r>>>0?l:r)|0)|0;if((o|0)==0){if(r>>>0>=l>>>0){u=g;break L1359}}else{if((o|0)>=0){u=g;break L1359}}o=c[g+4>>2]|0;if((o|0)==0){h=f;v=1306;break L1357}else{g=o}}}else{if(j){g=e;while(1){o=g+16|0;p=a[o]|0;q=p&255;if((q&1|0)==0){w=q>>>1}else{w=c[g+20>>2]|0}q=c[n>>2]|0;if((p&1)==0){x=o+1|0}else{x=c[g+24>>2]|0}o=yD(x|0,d|0,(q>>>0<w>>>0?q:w)|0)|0;if((o|0)==0){if(w>>>0>=q>>>0){u=g;break L1359}}else{if((o|0)>=0){u=g;break L1359}}o=c[g+4>>2]|0;if((o|0)==0){h=f;v=1310;break L1357}else{g=o}}}else{g=e;while(1){o=g+16|0;q=a[o]|0;p=q&255;if((p&1|0)==0){y=p>>>1}else{y=c[g+20>>2]|0}p=c[n>>2]|0;if((q&1)==0){z=o+1|0}else{z=c[g+24>>2]|0}o=yD(z|0,c[m>>2]|0,(p>>>0<y>>>0?p:y)|0)|0;if((o|0)==0){if(y>>>0>=p>>>0){u=g;break L1359}}else{if((o|0)>=0){u=g;break L1359}}o=c[g+4>>2]|0;if((o|0)==0){h=f;v=1309;break L1357}else{g=o}}}}}while(0);g=c[u>>2]|0;if((g|0)==0){h=u;v=1308;break}else{e=g;f=u}}if((v|0)==1308){i=b|0;c[i>>2]=h;return}else if((v|0)==1309){i=b|0;c[i>>2]=h;return}else if((v|0)==1310){i=b|0;c[i>>2]=h;return}else if((v|0)==1306){i=b|0;c[i>>2]=h;return}}function fO(a){a=a|0;fP(a);return}function fP(b){b=b|0;var d=0,e=0,f=0;d=b|0;c[d>>2]=23712;e=b+64|0;f=c[e>>2]|0;do{if((f|0)!=0){fV(b)|0;if((aQ(f|0)|0)!=0){break}c[e>>2]=0}}while(0);do{if((a[b+96|0]&1)!=0){e=c[b+32>>2]|0;if((e|0)==0){break}ys(e)}}while(0);do{if((a[b+97|0]&1)!=0){e=c[b+56>>2]|0;if((e|0)==0){break}ys(e)}}while(0);c[d>>2]=23400;vn(b+4|0);return}function fQ(a){a=a|0;fP(a);yr(a);return}function fR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;cJ[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=vp(d,43624)|0;d=e;c[b+68>>2]=d;f=b+98|0;g=a[f]&1;h=cJ[c[(c[e>>2]|0)+28>>2]&255](d)|0;a[f]=h&1;if((g&255|0)==(h&1|0)){return}g=b+96|0;yC(b+8|0,0,24);f=(a[g]&1)!=0;if(h){h=b+32|0;do{if(f){d=c[h>>2]|0;if((d|0)==0){break}ys(d)}}while(0);d=b+97|0;a[g]=a[d]&1;e=b+60|0;c[b+52>>2]=c[e>>2];i=b+56|0;c[h>>2]=c[i>>2];c[e>>2]=0;c[i>>2]=0;a[d]=0;return}do{if(!f){d=b+32|0;i=c[d>>2]|0;if((i|0)==(b+44|0)){break}e=c[b+52>>2]|0;c[b+60>>2]=e;c[b+56>>2]=i;a[b+97|0]=0;c[d>>2]=yq(e)|0;a[g]=1;return}}while(0);g=c[b+52>>2]|0;c[b+60>>2]=g;c[b+56>>2]=yq(g)|0;a[b+97|0]=1;return}function fS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b|0;g=b+96|0;yC(b+8|0,0,24);do{if((a[g]&1)!=0){h=c[b+32>>2]|0;if((h|0)==0){break}ys(h)}}while(0);h=b+97|0;do{if((a[h]&1)!=0){i=c[b+56>>2]|0;if((i|0)==0){break}ys(i)}}while(0);i=b+52|0;c[i>>2]=e;do{if(e>>>0>8>>>0){j=a[b+98|0]|0;if((j&1)==0|(d|0)==0){c[b+32>>2]=yq(e)|0;a[g]=1;k=j;break}else{c[b+32>>2]=d;a[g]=0;k=j;break}}else{c[b+32>>2]=b+44;c[i>>2]=8;a[g]=0;k=a[b+98|0]|0}}while(0);if((k&1)!=0){c[b+60>>2]=0;c[b+56>>2]=0;a[h]=0;return f|0}k=(e|0)<8?8:e;c[b+60>>2]=k;if((d|0)!=0&k>>>0>7>>>0){c[b+56>>2]=d;a[h]=0;return f|0}else{c[b+56>>2]=yq(k)|0;a[h]=1;return f|0}return 0}function fT(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;g=c[b+68>>2]|0;if((g|0)==0){h=cr(4)|0;xW(h);bJ(h|0,35096,560)}h=cJ[c[(c[g>>2]|0)+24>>2]&255](g)|0;g=b+64|0;do{if((c[g>>2]|0)!=0){i=(h|0)>0;if(!(i|(d|0)==0&(e|0)==0)){break}if((cJ[c[(c[b>>2]|0)+24>>2]&255](b)|0)!=0){break}if(f>>>0>=3>>>0){j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}j=c[g>>2]|0;if(i){i=yR(h,(h|0)<0|0?-1:0,d,e)|0;k=i}else{k=0}if((co(j|0,k|0,f|0)|0)==0){j=bn(c[g>>2]|0)|0;i=b+72|0;l=c[i+4>>2]|0;m=a;c[m>>2]=c[i>>2];c[m+4>>2]=l;l=a+8|0;c[l>>2]=j;c[l+4>>2]=(j|0)<0|0?-1:0;return}else{j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}}}while(0);b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function fU(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=b+64|0;do{if((c[f>>2]|0)!=0){if((cJ[c[(c[b>>2]|0)+24>>2]&255](b)|0)!=0){break}if((co(c[f>>2]|0,c[d+8>>2]|0,0)|0)==0){g=d;h=c[g+4>>2]|0;j=b+72|0;c[j>>2]=c[g>>2];c[j+4>>2]=h;h=a;j=d;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];i=e;return}else{j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;i=e;return}}}while(0);d=a;c[d>>2]=0;c[d+4>>2]=0;d=a+8|0;c[d>>2]=-1;c[d+4>>2]=-1;i=e;return}function fV(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=f;h=b+64|0;if((c[h>>2]|0)==0){j=0;i=d;return j|0}k=b+68|0;l=c[k>>2]|0;if((l|0)==0){m=cr(4)|0;xW(m);bJ(m|0,35096,560);return 0}m=b+92|0;n=c[m>>2]|0;do{if((n&16|0)==0){if((n&8|0)==0){break}o=b+80|0;p=c[o+4>>2]|0;c[f>>2]=c[o>>2];c[f+4>>2]=p;do{if((a[b+98|0]&1)==0){p=cJ[c[(c[l>>2]|0)+24>>2]&255](l)|0;o=b+36|0;q=c[o>>2]|0;r=(c[b+40>>2]|0)-q|0;if((p|0)>0){s=(ai((c[b+16>>2]|0)-(c[b+12>>2]|0)|0,p)|0)+r|0;t=0;break}p=c[b+12>>2]|0;if((p|0)==(c[b+16>>2]|0)){s=r;t=0;break}u=c[k>>2]|0;v=b+32|0;w=cK[c[(c[u>>2]|0)+32>>2]&31](u,g,c[v>>2]|0,q,p-(c[b+8>>2]|0)|0)|0;s=r-w+(c[o>>2]|0)-(c[v>>2]|0)|0;t=1}else{s=(c[b+16>>2]|0)-(c[b+12>>2]|0)|0;t=0}}while(0);if((co(c[h>>2]|0,-s|0,1)|0)!=0){j=-1;i=d;return j|0}if(t){v=b+72|0;o=c[f+4>>2]|0;c[v>>2]=c[f>>2];c[v+4>>2]=o}o=c[b+32>>2]|0;c[b+40>>2]=o;c[b+36>>2]=o;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[m>>2]=0}else{do{if((c[b+24>>2]|0)!=(c[b+20>>2]|0)){if((cW[c[(c[b>>2]|0)+52>>2]&255](b,-1)|0)==-1){j=-1}else{break}i=d;return j|0}}while(0);o=b+72|0;v=b+32|0;w=b+52|0;while(1){r=c[k>>2]|0;p=c[v>>2]|0;q=cK[c[(c[r>>2]|0)+20>>2]&31](r,o,p,p+(c[w>>2]|0)|0,e)|0;p=c[v>>2]|0;r=(c[e>>2]|0)-p|0;if((aY(p|0,1,r|0,c[h>>2]|0)|0)!=(r|0)){j=-1;x=1416;break}if((q|0)==2){j=-1;x=1417;break}else if((q|0)!=1){x=1402;break}}if((x|0)==1402){if((aU(c[h>>2]|0)|0)==0){break}else{j=-1}i=d;return j|0}else if((x|0)==1416){i=d;return j|0}else if((x|0)==1417){i=d;return j|0}}}while(0);j=0;i=d;return j|0}function fW(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b+64|0;if((c[h>>2]|0)==0){j=-1;i=e;return j|0}k=b+92|0;if((c[k>>2]&8|0)==0){c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;if((a[b+98|0]&1)==0){l=c[b+56>>2]|0;m=l+(c[b+60>>2]|0)|0;c[b+8>>2]=l;c[b+12>>2]=m;c[b+16>>2]=m;n=m}else{m=c[b+32>>2]|0;l=m+(c[b+52>>2]|0)|0;c[b+8>>2]=m;c[b+12>>2]=l;c[b+16>>2]=l;n=l}c[k>>2]=8;o=1;p=n;q=b+12|0}else{n=b+12|0;o=0;p=c[n>>2]|0;q=n}if((p|0)==0){n=f+1|0;c[b+8>>2]=f;c[q>>2]=n;c[b+16>>2]=n;r=n}else{r=p}p=c[b+16>>2]|0;if(o){s=0}else{o=(p-(c[b+8>>2]|0)|0)/2|0;s=o>>>0>4>>>0?4:o}o=b+16|0;do{if((r|0)==(p|0)){n=b+8|0;yB(c[n>>2]|0,r+(-s|0)|0,s|0);if((a[b+98|0]&1)!=0){k=c[n>>2]|0;l=bW(k+s|0,1,(c[o>>2]|0)-s-k|0,c[h>>2]|0)|0;if((l|0)==0){t=-1;u=n;break}k=c[n>>2]|0;m=k+s|0;c[q>>2]=m;c[o>>2]=k+(l+s);t=d[m]|0;u=n;break}m=b+32|0;l=b+36|0;k=c[l>>2]|0;v=b+40|0;yB(c[m>>2]|0,k|0,(c[v>>2]|0)-k|0);k=c[m>>2]|0;w=k+((c[v>>2]|0)-(c[l>>2]|0))|0;c[l>>2]=w;if((k|0)==(b+44|0)){x=8}else{x=c[b+52>>2]|0}y=k+x|0;c[v>>2]=y;k=b+60|0;z=(c[k>>2]|0)-s|0;A=y-w|0;y=b+72|0;B=y;C=b+80|0;D=c[B+4>>2]|0;c[C>>2]=c[B>>2];c[C+4>>2]=D;D=bW(w|0,1,(A>>>0<z>>>0?A:z)|0,c[h>>2]|0)|0;if((D|0)==0){t=-1;u=n;break}z=c[b+68>>2]|0;if((z|0)==0){A=cr(4)|0;xW(A);bJ(A|0,35096,560);return 0}A=(c[l>>2]|0)+D|0;c[v>>2]=A;D=c[n>>2]|0;if((c$[c[(c[z>>2]|0)+16>>2]&31](z,y,c[m>>2]|0,A,l,D+s|0,D+(c[k>>2]|0)|0,g)|0)==3){k=c[m>>2]|0;m=c[v>>2]|0;c[n>>2]=k;c[q>>2]=k;c[o>>2]=m;t=d[k]|0;u=n;break}k=c[g>>2]|0;m=c[n>>2]|0;v=m+s|0;if((k|0)==(v|0)){t=-1;u=n;break}c[n>>2]=m;c[q>>2]=v;c[o>>2]=k;t=d[v]|0;u=n}else{t=d[r]|0;u=b+8|0}}while(0);if((c[u>>2]|0)!=(f|0)){j=t;i=e;return j|0}c[u>>2]=0;c[q>>2]=0;c[o>>2]=0;j=t;i=e;return j|0}function fX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((c[b+64>>2]|0)==0){e=-1;return e|0}f=b+12|0;g=c[f>>2]|0;if((c[b+8>>2]|0)>>>0>=g>>>0){e=-1;return e|0}if((d|0)==-1){c[f>>2]=g-1;e=0;return e|0}h=g-1|0;do{if((c[b+88>>2]&16|0)==0){if((d<<24>>24|0)==(a[h]|0)){break}else{e=-1}return e|0}}while(0);c[f>>2]=h;a[h]=d&255;e=d;return e|0}function fY(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+24|0;f=e|0;g=e+8|0;h=e+16|0;j=b+64|0;if((c[j>>2]|0)==0){k=-1;i=e;return k|0}l=b+92|0;if((c[l>>2]&16|0)==0){c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;m=c[b+52>>2]|0;do{if(m>>>0>8>>>0){if((a[b+98|0]&1)==0){n=c[b+56>>2]|0;o=n+((c[b+60>>2]|0)-1)|0;c[b+24>>2]=n;c[b+20>>2]=n;c[b+28>>2]=o;p=n;q=o;break}else{o=c[b+32>>2]|0;n=o+(m-1)|0;c[b+24>>2]=o;c[b+20>>2]=o;c[b+28>>2]=n;p=o;q=n;break}}else{c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;p=0;q=0}}while(0);c[l>>2]=16;r=p;s=q;t=b+20|0;u=b+28|0}else{q=b+20|0;p=b+28|0;r=c[q>>2]|0;s=c[p>>2]|0;t=q;u=p}p=(d|0)==-1;q=b+24|0;l=c[q>>2]|0;if(p){v=r;w=l}else{if((l|0)==0){c[q>>2]=f;c[t>>2]=f;c[u>>2]=f+1;x=f}else{x=l}a[x]=d&255;x=(c[q>>2]|0)+1|0;c[q>>2]=x;v=c[t>>2]|0;w=x}x=b+24|0;if((w|0)!=(v|0)){L1625:do{if((a[b+98|0]&1)==0){q=b+32|0;l=c[q>>2]|0;c[g>>2]=l;f=b+68|0;m=c[f>>2]|0;if((m|0)==0){y=cr(4)|0;z=y;xW(z);bJ(y|0,35096,560);return 0}n=b+72|0;o=b+52|0;A=m;m=v;B=w;C=l;while(1){l=c$[c[(c[A>>2]|0)+12>>2]&31](A,n,m,B,h,C,C+(c[o>>2]|0)|0,g)|0;D=c[t>>2]|0;if((c[h>>2]|0)==(D|0)){k=-1;E=1502;break}if((l|0)==3){E=1488;break}if(l>>>0>=2>>>0){k=-1;E=1498;break}F=c[q>>2]|0;G=(c[g>>2]|0)-F|0;if((aY(F|0,1,G|0,c[j>>2]|0)|0)!=(G|0)){k=-1;E=1499;break}if((l|0)!=1){break L1625}l=c[h>>2]|0;G=c[x>>2]|0;c[t>>2]=l;c[u>>2]=G;F=l+(G-l)|0;c[x>>2]=F;G=c[f>>2]|0;if((G|0)==0){E=1504;break}A=G;m=l;B=F;C=c[q>>2]|0}if((E|0)==1488){q=(c[x>>2]|0)-D|0;if((aY(D|0,1,q|0,c[j>>2]|0)|0)==(q|0)){break}else{k=-1}i=e;return k|0}else if((E|0)==1504){y=cr(4)|0;z=y;xW(z);bJ(y|0,35096,560);return 0}else if((E|0)==1498){i=e;return k|0}else if((E|0)==1499){i=e;return k|0}else if((E|0)==1502){i=e;return k|0}}else{q=w-v|0;if((aY(v|0,1,q|0,c[j>>2]|0)|0)==(q|0)){break}else{k=-1}i=e;return k|0}}while(0);c[x>>2]=r;c[t>>2]=r;c[u>>2]=s}k=p?0:d;i=e;return k|0}function fZ(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=b|0;c[g>>2]=23400;h=b+4|0;vl(h);yC(b+8|0,0,24);c[g>>2]=23712;c[b+32>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;g=b+68|0;yC(b+52|0,0,47);vm(e,h);j=vo(e,43624)|0;vn(e);if(j){vm(f,h);c[g>>2]=vp(f,43624)|0;vn(f);f=c[g>>2]|0;a[b+98|0]=(cJ[c[(c[f>>2]|0)+28>>2]&255](f)|0)&1}cM[c[(c[b>>2]|0)+12>>2]&63](b,0,4096)|0;i=d;return}function f_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+160|0;f=e|0;g=e+144|0;h=g;j=f|0;k=f;l=f+8|0;c[j>>2]=37860;m=f+60|0;c[m>>2]=37880;c[f+4>>2]=0;qS(f+60|0,l);c[f+132>>2]=0;c[f+136>>2]=-1;c[j>>2]=22980;c[f+60>>2]=23e3;n=l|0;c[n>>2]=23400;o=f+12|0;vl(o);yC(f+16|0,0,24);c[n>>2]=23256;n=f+40|0;yC(f+40|0,0,16);c[f+56>>2]=8;gb(l,d);yC(h|0,0,12);f$(k,g,59)|0;f$(k,g,59)|0;d=g;if((a[h]&1)==0){p=d+1|0}else{p=c[g+8>>2]|0}c[b+4>>2]=b_(p|0)|0;f$(k,g,59)|0;if((a[h]&1)==0){q=d+1|0}else{q=c[g+8>>2]|0}c[b+8>>2]=b_(q|0)|0;f$(k,g,59)|0;if((a[h]&1)==0){r=d+1|0}else{r=c[g+8>>2]|0}c[b+12>>2]=b_(r|0)|0;f$(k,g,59)|0;if((a[h]&1)==0){s=d+1|0}else{s=c[g+8>>2]|0}c[b+16>>2]=b_(s|0)|0;f$(k,g,59)|0;if((a[h]&1)==0){t=d+1|0}else{t=c[g+8>>2]|0}a[b+20|0]=(b_(t|0)|0)!=0|0;f$(k,g,59)|0;t=b+24|0;s=a[h]|0;if((s&1)==0){u=d+1|0}else{u=c[g+8>>2]|0}r=s&255;if((r&1|0)==0){v=r>>>1}else{v=c[g+4>>2]|0}r=t;s=t;q=a[s]|0;if((q&1)==0){w=10;x=q}else{q=c[t>>2]|0;w=(q&-2)-1|0;x=q&255}do{if(w>>>0<v>>>0){q=x&255;if((q&1|0)==0){y=q>>>1}else{y=c[b+28>>2]|0}qC(t,w,v-w|0,y,0,y,v,u);z=a[s]|0}else{if((x&1)==0){A=r+1|0}else{A=c[b+32>>2]|0}yB(A|0,u|0,v|0);a[A+v|0]=0;q=a[s]|0;if((q&1)==0){p=v<<1&255;a[s]=p;z=p;break}else{c[b+28>>2]=v;z=q;break}}}while(0);v=z&255;if((v&1|0)==0){B=v>>>1}else{B=c[b+28>>2]|0}if((B|0)==0){C=0;D=a[h]|0}else{f$(k,g,59)|0;k=a[h]|0;if((k&1)==0){E=d+1|0}else{E=c[g+8>>2]|0}c[b+36>>2]=b_(E|0)|0;C=1;D=k}if((D&1)!=0){yr(c[g+8>>2]|0)}c[j>>2]=22980;c[m>>2]=23e3;m=f+8|0;c[m>>2]=23256;if((a[n]&1)!=0){yr(c[f+48>>2]|0)}c[m>>2]=23400;vn(o);qO(f+60|0);i=e;return C|0}function f$(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;i=c[h+(g+16)>>2]|0;if((i|0)!=0){qN(h+g|0,i|4);return b|0}i=c[h+(g+72)>>2]|0;if((i|0)==0){j=g}else{ro(i)|0;j=c[(c[f>>2]|0)-12>>2]|0}if((c[h+(j+16)>>2]|0)!=0){return b|0}j=d;if((a[j]&1)==0){i=d+1|0;a[i]=0;a[j]=0;k=i;l=d+4|0;m=d+8|0}else{i=d+8|0;a[c[i>>2]|0]=0;g=d+4|0;c[g>>2]=0;k=d+1|0;l=g;m=i}i=d|0;g=0;while(1){n=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;o=n+12|0;p=c[o>>2]|0;if((p|0)==(c[n+16>>2]|0)){q=cJ[c[(c[n>>2]|0)+40>>2]&255](n)|0;if((q|0)==-1){r=g;s=2;break}else{t=q&255}}else{c[o>>2]=p+1;t=a[p]|0}p=g+1|0;if(t<<24>>24==e<<24>>24){r=p;s=0;break}o=a[j]|0;if((o&1)==0){u=(o&255)>>>1;v=10}else{u=c[l>>2]|0;v=(c[i>>2]&-2)-1|0}if((u|0)==(v|0)){qD(d,v,1,v,v,0,0);w=a[j]|0}else{w=o}if((w&1)==0){a[j]=(u<<1)+2&255;x=k;y=u+1|0}else{o=c[m>>2]|0;q=u+1|0;c[l>>2]=q;x=o;y=q}a[x+u|0]=t;a[x+y|0]=0;if((a[j]&1)==0){g=p;continue}if((c[l>>2]|0)==-17){r=p;s=4;break}else{g=p}}g=c[(c[f>>2]|0)-12>>2]|0;qN(h+g|0,c[h+(g+16)>>2]|((r|0)==0?s|4:s));return b|0}function f0(b){b=b|0;var d=0;c[b>>2]=22980;c[b+60>>2]=23e3;d=b+8|0;c[d>>2]=23256;if((a[b+40|0]&1)!=0){yr(c[b+48>>2]|0)}c[d>>2]=23400;vn(b+12|0);qO(b+60|0);return}function f1(b){b=b|0;var d=0;c[b>>2]=22980;c[b+60>>2]=23e3;d=b+8|0;c[d>>2]=23256;if((a[b+40|0]&1)!=0){yr(c[b+48>>2]|0)}c[d>>2]=23400;vn(b+12|0);qO(b+60|0);yr(b);return}function f2(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=22980;b=d+(e+60)|0;c[b>>2]=23e3;f=d+(e+8)|0;c[f>>2]=23256;if((a[d+(e+40)|0]&1)!=0){yr(c[d+(e+48)>>2]|0)}c[f>>2]=23400;vn(d+(e+12)|0);qO(b);return}function f3(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=22980;f=d+(e+60)|0;c[f>>2]=23e3;g=d+(e+8)|0;c[g>>2]=23256;if((a[d+(e+40)|0]&1)!=0){yr(c[d+(e+48)>>2]|0)}c[g>>2]=23400;vn(d+(e+12)|0);qO(f);yr(b);return}function f4(b){b=b|0;var d=0;d=b|0;c[d>>2]=23256;if((a[b+32|0]&1)!=0){yr(c[b+40>>2]|0)}c[d>>2]=23400;vn(b+4|0);return}function f5(b){b=b|0;var d=0;d=b|0;c[d>>2]=23256;if((a[b+32|0]&1)!=0){yr(c[b+40>>2]|0)}c[d>>2]=23400;vn(b+4|0);yr(b);return}function f6(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;do{if((j|0)==24){if((g|0)==2){n=1690;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=1694;break}i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else{if((g|0)==2){n=1690;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=1694;break}if((h&8|0)==0){i=l-(c[d+20>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}}}while(0);if((n|0)==1694){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}if((n|0)==1690){n=d+32|0;if((a[n]&1)==0){q=n+1|0}else{q=c[d+40>>2]|0}n=m-q|0;o=(n|0)<0|0?-1:0;p=n}n=yH(p,o,e,f)|0;f=M;e=0;do{if(!((f|0)<(e|0)|(f|0)==(e|0)&n>>>0<0>>>0)){o=d+32|0;if((a[o]&1)==0){r=o+1|0}else{r=c[d+40>>2]|0}o=m-r|0;p=(o|0)<0|0?-1:0;if((p|0)<(f|0)|(p|0)==(f|0)&o>>>0<n>>>0){break}o=h&8;do{if(!((n|0)==0&(f|0)==0)){do{if((o|0)!=0){if((c[d+12>>2]|0)!=0){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if(!((h&16|0)!=0&(l|0)==0)){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if((o|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+n;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+n}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=n;c[p+4>>2]=f;return}}while(0);f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function f7(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;cP[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function f8(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(b>>>0>=i>>>0){h=-1;return h|0}h=d[b]|0;return h|0}function f9(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(g>>>0>=i>>>0){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}k=i-1|0;do{if((c[b+48>>2]&16|0)==0){if((d<<24>>24|0)==(a[k]|0)){break}else{j=-1}return j|0}}while(0);c[f>>2]=g;c[e>>2]=k;c[b+16>>2]=h;a[k]=d&255;j=d;return j|0}function ga(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;t=p;u=p;v=a[u]|0;if((v&1)==0){w=(v&255)>>>1;x=10}else{w=c[b+36>>2]|0;x=(c[p>>2]&-2)-1|0}if((w|0)==(x|0)){qD(p,x,1,x,x,0,0);y=a[u]|0}else{y=v}if((y&1)==0){a[u]=(w<<1)+2&255;z=t+1|0;A=w+1|0}else{y=c[b+40>>2]|0;v=w+1|0;c[b+36>>2]=v;z=y;A=v}a[z+w|0]=0;a[z+A|0]=0;A=a[u]|0;if((A&1)==0){B=10;C=A}else{A=c[p>>2]|0;B=(A&-2)-1|0;C=A&255}A=C&255;if((A&1|0)==0){D=A>>>1}else{D=c[b+36>>2]|0}do{if(D>>>0<B>>>0){A=B-D|0;qy(p,A,0)|0}else{if((C&1)==0){a[t+1+B|0]=0;a[u]=B<<1&255;break}else{a[(c[b+40>>2]|0)+B|0]=0;c[b+36>>2]=B;break}}}while(0);B=a[u]|0;if((B&1)==0){E=t+1|0}else{E=c[b+40>>2]|0}t=B&255;if((t&1|0)==0){F=t>>>1}else{F=c[b+36>>2]|0}t=E+F|0;c[o>>2]=E;c[l>>2]=t;l=E+q|0;c[j>>2]=l;q=E+s|0;c[r>>2]=q;G=l;H=t;I=q;J=n}else{G=k;H=m;I=c[b+44>>2]|0;J=b+48|0}m=G+1|0;k=m>>>0<I>>>0?I:m;c[b+44>>2]=k;if((c[J>>2]&8|0)!=0){J=b+32|0;if((a[J]&1)==0){K=J+1|0}else{K=c[b+40>>2]|0}c[h>>2]=K;c[g>>2]=K+i;c[b+16>>2]=k}if((G|0)==(H|0)){e=cW[c[(c[b>>2]|0)+52>>2]&255](f,d&255)|0;return e|0}else{c[j>>2]=m;a[G]=d&255;e=d&255;return e|0}return 0}function gb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=b+32|0;do{if((e|0)!=(d|0)){f=a[d]|0;if((f&1)==0){g=d+1|0}else{g=c[d+8>>2]|0}h=f&255;if((h&1|0)==0){i=h>>>1}else{i=c[d+4>>2]|0}h=e;f=e;j=a[f]|0;if((j&1)==0){k=10;l=j}else{j=c[e>>2]|0;k=(j&-2)-1|0;l=j&255}if(k>>>0<i>>>0){j=l&255;if((j&1|0)==0){m=j>>>1}else{m=c[b+36>>2]|0}qC(e,k,i-k|0,m,0,m,i,g);break}if((l&1)==0){n=h+1|0}else{n=c[b+40>>2]|0}yB(n|0,g|0,i|0);a[n+i|0]=0;if((a[f]&1)==0){a[f]=i<<1&255;break}else{c[b+36>>2]=i;break}}}while(0);i=b+44|0;c[i>>2]=0;n=b+48|0;g=c[n>>2]|0;if((g&8|0)!=0){l=e;m=a[e]|0;k=(m&1)==0;if(k){o=l+1|0}else{o=c[b+40>>2]|0}d=m&255;if((d&1|0)==0){p=d>>>1}else{p=c[b+36>>2]|0}d=o+p|0;c[i>>2]=d;if(k){q=l+1|0;r=l+1|0}else{l=c[b+40>>2]|0;q=l;r=l}c[b+8>>2]=r;c[b+12>>2]=q;c[b+16>>2]=d}if((g&16|0)==0){return}g=e;d=e;q=a[d]|0;r=q&255;if((r&1|0)==0){s=r>>>1}else{s=c[b+36>>2]|0}if((q&1)==0){c[i>>2]=g+1+s;t=10;u=q}else{c[i>>2]=(c[b+40>>2]|0)+s;i=c[e>>2]|0;t=(i&-2)-1|0;u=i&255}i=u&255;if((i&1|0)==0){v=i>>>1}else{v=c[b+36>>2]|0}do{if(v>>>0<t>>>0){i=t-v|0;qy(e,i,0)|0}else{if((u&1)==0){a[g+1+t|0]=0;a[d]=t<<1&255;break}else{a[(c[b+40>>2]|0)+t|0]=0;c[b+36>>2]=t;break}}}while(0);t=a[d]|0;if((t&1)==0){w=g+1|0;x=g+1|0}else{g=c[b+40>>2]|0;w=g;x=g}g=t&255;if((g&1|0)==0){y=g>>>1}else{y=c[b+36>>2]|0}g=b+24|0;c[g>>2]=x;c[b+20>>2]=x;c[b+28>>2]=w+y;if((c[n>>2]&3|0)==0){return}c[g>>2]=x+s;return}function gc(d){d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;g=d|0;h=f;j=f;a[j]=8;k=h+1|0;E=761491300;a[k]=E&255;E=E>>8;a[k+1|0]=E&255;E=E>>8;a[k+2|0]=E&255;E=E>>8;a[k+3|0]=E&255;a[h+5|0]=0;jg(g,f);if((a[j]&1)!=0){yr(c[f+8>>2]|0)}c[d>>2]=28088;yC(d+60|0,0,12);du(d+72|0);yC(d+124|0,0,12);f=d+136|0;lJ(f);c[d+424>>2]=28688;j=d+448|0;yC(d+448|0,0,12);yC(d+428|0,0,17);a[j+1|0]=0;a[j]=0;c[d+460>>2]=0;c[d+464>>2]=28688;j=d+488|0;yC(d+488|0,0,12);yC(d+468|0,0,17);a[j+1|0]=0;a[j]=0;c[d+500>>2]=0;c[d+504>>2]=28688;j=d+528|0;yC(d+528|0,0,12);yC(d+508|0,0,17);a[j+1|0]=0;a[j]=0;c[d+540>>2]=0;c[d+544>>2]=28688;j=d+568|0;yC(d+568|0,0,12);yC(d+548|0,0,17);a[j+1|0]=0;a[j]=0;c[d+580>>2]=0;c[d+584>>2]=28688;j=d+608|0;yC(d+608|0,0,12);yC(d+588|0,0,17);a[j+1|0]=0;a[j]=0;c[d+620>>2]=0;c[d+624>>2]=28688;j=d+648|0;yC(d+648|0,0,12);yC(d+628|0,0,17);a[j+1|0]=0;a[j]=0;c[d+660>>2]=0;c[d+664>>2]=28688;j=d+688|0;yC(d+688|0,0,12);yC(d+668|0,0,17);a[j+1|0]=0;a[j]=0;c[d+700>>2]=0;c[d+704>>2]=28688;j=d+728|0;yC(d+728|0,0,12);yC(d+708|0,0,17);a[j+1|0]=0;a[j]=0;c[d+740>>2]=0;cG[c[(c[d>>2]|0)+112>>2]&1023](d);c[d+772>>2]=0;jj(g);c[d+776>>2]=-1;c[d+780>>2]=-1;b[d+786>>1]=0;b[d+784>>1]=0;b[d+788>>1]=0;c[d+228>>2]=0;lQ(f);i=e;return}function gd(a,d){a=a|0;d=d|0;cG[c[(c[a>>2]|0)+112>>2]&1023](a);c[a+772>>2]=d;jj(a|0);c[a+776>>2]=-1;c[a+780>>2]=-1;b[a+786>>1]=0;b[a+784>>1]=0;b[a+788>>1]=0;c[a+228>>2]=0;lQ(a+136|0);return}function ge(a){a=a|0;gf(a);yr(a);return}function gf(b){b=b|0;var d=0;c[b>>2]=28088;c[b+704>>2]=28688;if((a[b+728|0]&1)!=0){yr(c[b+736>>2]|0)}c[b+664>>2]=28688;if((a[b+688|0]&1)!=0){yr(c[b+696>>2]|0)}c[b+624>>2]=28688;if((a[b+648|0]&1)!=0){yr(c[b+656>>2]|0)}c[b+584>>2]=28688;if((a[b+608|0]&1)!=0){yr(c[b+616>>2]|0)}c[b+544>>2]=28688;if((a[b+568|0]&1)!=0){yr(c[b+576>>2]|0)}c[b+504>>2]=28688;if((a[b+528|0]&1)!=0){yr(c[b+536>>2]|0)}c[b+464>>2]=28688;if((a[b+488|0]&1)!=0){yr(c[b+496>>2]|0)}c[b+424>>2]=28688;if((a[b+448|0]&1)!=0){yr(c[b+456>>2]|0)}lN(b+136|0);if((a[b+124|0]&1)!=0){yr(c[b+132>>2]|0)}dw(b+72|0);if((a[b+60|0]&1)==0){d=b|0;jo(d);return}yr(c[b+68>>2]|0);d=b|0;jo(d);return}function gg(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+12>>2]&255](d,a)|0;return(b?0:2)|0}function gh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function gi(a){a=a|0;return}function gj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+152|0;d=b|0;e=b+96|0;f=b+104|0;g=b+128|0;h=b+136|0;lJ(d);jm(d|0,a+136|0)|0;lI(d+60|0,a+196|0)|0;jK(d+76|0,a+212|0)|0;c[e>>2]=0;j=d;k=yp(4)|0;l=(k|0)==0;if(!l){c[k>>2]=j}m=yp(8)|0;n=m;o=m+4|0;if((o|0)!=0){c[o>>2]=e}c[n>>2]=j;if(!l){yr(k)}c[g>>2]=69;c[g+4>>2]=0;jP(f,g);g=c[(c[a>>2]|0)+20>>2]|0;k=h|0;c[k>>2]=0;l=h+4|0;c[l>>2]=0;j=h+8|0;c[j>>2]=0;e=yp(8)|0;o=e;c[l>>2]=o;c[k>>2]=o;c[j>>2]=e+8;if((e|0)==0){p=0}else{c[o>>2]=c[n>>2];p=o}o=p+4|0;c[l>>2]=o;if((o|0)==0){q=0}else{c[o>>2]=c[m+4>>2];q=c[l>>2]|0}c[l>>2]=q+4;c0[g&63](a|0,f,h,0);h=c[k>>2]|0;k=h;if((h|0)!=0){f=c[l>>2]|0;if((h|0)!=(f|0)){c[l>>2]=f+(~((f-4+(-k|0)|0)>>>2)<<2)}yr(h)}h=c[a+4>>2]|0;if(((c[a+8>>2]|0)-h|0)>0){j1(c[h>>2]|0)}if((m|0)==0){lN(d);i=b;return}yr(m);lN(d);i=b;return}function gk(e,f){e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0;if((f|0)==0){return}h=e+228|0;if((c[h>>2]|0)==(f|0)){return}c[h>>2]=f;h=c[f+100>>2]|0;do{if((h|0)==-1){i=c[e+780>>2]|0;if((i|0)==-1){j=c[e+104>>2]|0;c[e+744>>2]=j;k=c[e+108>>2]|0;c[e+748>>2]=k;l=c[e+112>>2]|0;c[e+752>>2]=l;m=c[e+116>>2]|0;c[e+756>>2]=m;c[e+760>>2]=c[e+120>>2];n=k;o=j;p=l;q=m;break}else{c[e+744>>2]=i;m=c[e+776>>2]|0;c[e+748>>2]=m;l=b[e+784>>1]|0;c[e+752>>2]=l;j=b[e+786>>1]|0;c[e+756>>2]=j;c[e+760>>2]=b[e+788>>1]|0;n=m;o=i;p=l;q=j;break}}else{c[e+744>>2]=h;j=c[f+96>>2]|0;c[e+748>>2]=j;l=b[f+104>>1]|0;c[e+752>>2]=l;i=b[f+106>>1]|0;c[e+756>>2]=i;c[e+760>>2]=b[f+108>>1]|0;n=j;o=h;p=l;q=i}}while(0);if((a[e+80|0]|0)!=0){c[e+748>>2]=o;c[e+744>>2]=n;c[e+752>>2]=q;c[e+756>>2]=p}r=+((d[e+87|0]|0)>>>0);g[e+768>>2]=+((d[e+86|0]|0)>>>0)/100.0;g[e+764>>2]=r/100.0;p=d[e+88|0]|0;q=e+296|0;c[q>>2]=p;n=d[e+89|0]|0;o=e+300|0;c[o>>2]=n;h=e+304|0;c[h>>2]=d[e+90|0]|0;f=e+308|0;c[f>>2]=d[e+91|0]|0;i=c[e+76>>2]|0;l=(i|0)/2|0;c[e+244>>2]=l;j=(ai(p,l)|0)/(n|0)|0;c[e+248>>2]=j;m=e+252|0;c[m>>2]=l<<1;k=e+256|0;c[k>>2]=j<<1;c[e+260>>2]=l<<3;c[e+264>>2]=j<<3;c[e+268>>2]=l*7|0;c[e+272>>2]=j*7|0;c[e+232>>2]=l;c[e+236>>2]=l*3|0;c[e+240>>2]=l*6|0;l=d[e+84|0]|0;c[e+312>>2]=l;j=d[e+85|0]|0;c[e+320>>2]=j;c[e+316>>2]=((ai(p,l)|0)>>>0)/(n>>>0)|0;c[e+324>>2]=((ai(p,j)|0)>>>0)/(n>>>0)|0;n=~~+bF(+(+(i|0)*2048.0/266.0));i=e+276|0;c[i>>2]=n;j=e+280|0;c[j>>2]=~~+W(+(n|0)*1183.0*.00048828125);n=dn()|0;p=(c[j>>2]|0)+n|0;c[j>>2]=p;j=c[h>>2]|0;h=ai(p,j)|0;n=c[f>>2]|0;c[e+284>>2]=(h|0)/(n|0)|0;h=c[q>>2]|0;q=ai(h,p)|0;p=c[o>>2]|0;o=(q|0)/(p|0)|0;c[e+288>>2]=o;c[e+292>>2]=(ai(j,o)|0)/(n|0)|0;o=c[i>>2]|0;c[e+328>>2]=o;i=(ai(j,o)|0)/(n|0)|0;c[e+332>>2]=i;q=(ai(h,o)|0)/(p|0)|0;c[e+336>>2]=q;f=(ai(j,q)|0)/(n|0)|0;c[e+340>>2]=f;c[e+428>>2]=o;c[e+468>>2]=i;c[e+508>>2]=q;c[e+548>>2]=f;f=c[e+708>>2]|0;c[e+628>>2]=f;c[e+668>>2]=f;r=+(c[m>>2]|0);g[e+408>>2]=r*.25;g[e+416>>2]=r*.125;r=+(c[k>>2]|0);g[e+412>>2]=r*.25;g[e+420>>2]=r*.125;r=+(o|0)*314.0*.00048828125;k=~~+ah(r*.5);c[e+344>>2]=k;c[e+348>>2]=(ai(k,j)|0)/(n|0)|0;m=(ai(h,k)|0)/(p|0)|0;c[e+352>>2]=m;c[e+356>>2]=(ai(j,m)|0)/(n|0)|0;m=~~(r*.72);c[e+360>>2]=m;c[e+364>>2]=(ai(j,m)|0)/(n|0)|0;k=(ai(h,m)|0)/(p|0)|0;c[e+372>>2]=k;c[e+376>>2]=(ai(j,k)|0)/(n|0)|0;r=+(o|0);s=+bF(+(r*405.0*.00048828125));o=~~(s*.66);c[e+368>>2]=o;c[e+380>>2]=(ai(o,h)|0)/(p|0)|0;o=~~(s*.8*.5);c[e+384>>2]=o;c[e+388>>2]=(ai(o,h)|0)/(p|0)|0;o=~~+bF(+(r*197.0*.00048828125));c[e+392>>2]=o;c[e+396>>2]=(ai(o,j)|0)/(n|0)|0;k=(ai(h,o)|0)/(p|0)|0;c[e+400>>2]=k;c[e+404>>2]=(ai(j,k)|0)/(n|0)|0;return}function gl(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+32|0;e=d|0;f=d+16|0;g=b+584|0;dl(e);h=f_(g,e)|0;if((a[e]&1)!=0){yr(c[e+8>>2]|0)}if(!h){dt(16424,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j}gm(b+424|0,g)|0;gm(b+464|0,g)|0;gm(b+504|0,g)|0;gm(b+544|0,g)|0;g=b+704|0;dm(f);h=f_(g,f)|0;if((a[f]&1)!=0){yr(c[f+8>>2]|0)}if(h){k=b+624|0;l=gm(k,g)|0;m=b+664|0;n=gm(m,g)|0;i=d;return}dt(13608,(j=i,i=i+1|0,i=i+7&-8,c[j>>2]=0,j)|0);i=j;k=b+624|0;l=gm(k,g)|0;m=b+664|0;n=gm(m,g)|0;i=d;return}function gm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];a[b+20|0]=a[d+20|0]&1;e=b+24|0;f=d+24|0;do{if((b|0)!=(d|0)){g=a[f]|0;if((g&1)==0){h=f+1|0}else{h=c[d+32>>2]|0}i=g&255;if((i&1|0)==0){j=i>>>1}else{j=c[d+28>>2]|0}i=e;g=e;k=a[g]|0;if((k&1)==0){l=10;m=k}else{k=c[e>>2]|0;l=(k&-2)-1|0;m=k&255}if(l>>>0<j>>>0){k=m&255;if((k&1|0)==0){n=k>>>1}else{n=c[b+28>>2]|0}qC(e,l,j-l|0,n,0,n,j,h);break}if((m&1)==0){o=i+1|0}else{o=c[b+32>>2]|0}yB(o|0,h|0,j|0);a[o+j|0]=0;if((a[g]&1)==0){a[g]=j<<1&255;break}else{c[b+28>>2]=j;break}}}while(0);c[b+36>>2]=c[d+36>>2];return b|0}function gn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+48|0;e=d|0;f=d+24|0;g=d+32|0;h=yp(4)|0;j=h;k=(h|0)==0;if(!k){c[j>>2]=b}c[f>>2]=37;c[f+4>>2]=0;jP(e,f);f=c[(c[a>>2]|0)+20>>2]|0;b=g|0;c[b>>2]=0;l=g+4|0;c[l>>2]=0;m=g+8|0;c[m>>2]=0;n=yp(4)|0;o=n;c[l>>2]=o;c[b>>2]=o;c[m>>2]=n+4;if((n|0)==0){p=0}else{c[o>>2]=c[j>>2];p=o}c[l>>2]=p+4;c0[f&63](a|0,e,g,0);g=c[b>>2]|0;b=g;if((g|0)!=0){e=c[l>>2]|0;if((g|0)!=(e|0)){c[l>>2]=e+(~((e-4+(-b|0)|0)>>>2)<<2)}yr(g)}if(k){i=d;return 1}yr(h);i=d;return 1}function go(b){b=b|0;c[b>>2]=28336;a[b+4|0]=0;a[b+5|0]=0;c[b+8>>2]=0;c[b+12>>2]=1;c[b+16>>2]=1;yC(b+20|0,0,7);return}function gp(a){a=a|0;yr(a);return}function gq(a){a=a|0;return}function gr(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function gs(b,d,e){b=b|0;d=d|0;e=e|0;var f=0.0,g=0.0;f=+(e|0)*(1024.0/+bS(+(+(c[b+8>>2]|0)+-2.0)))/+(d|0);d=a[b+5|0]|0;if(d<<24>>24==0){g=f;return+g}g=f*2.0-f/+bK(+1.0,d&255|0);return+g}function gt(b,d){b=b|0;d=d|0;var e=0;if((d|0)==0){e=0;return e|0}if((a[b+4|0]|0)!=(a[d+4|0]|0)){e=0;return e|0}if((a[b+5|0]|0)!=(a[d+5|0]|0)){e=0;return e|0}if((c[b+8>>2]|0)!=(c[d+8>>2]|0)){e=0;return e|0}if((c[b+12>>2]|0)!=(c[d+12>>2]|0)){e=0;return e|0}if((c[b+16>>2]|0)!=(c[d+16>>2]|0)){e=0;return e|0}e=((a[d+26|0]^a[b+26|0])&1)==0;return e|0}function gu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=d+4|0;g=c[f>>2]|0;h=b|0;c[h>>2]=g;i=d+16|0;j=b;c[j+(c[g-12>>2]|0)>>2]=c[i>>2];g=b+8|0;k=c[d+8>>2]|0;c[h>>2]=k;c[j+(c[k-12>>2]|0)>>2]=c[d+12>>2];c[b+4>>2]=0;k=c[(c[b>>2]|0)-12>>2]|0;qS(j+k|0,g);c[j+(k+72)>>2]=0;c[j+(k+76)>>2]=-1;k=c[f>>2]|0;c[h>>2]=k;c[j+(c[k-12>>2]|0)>>2]=c[i>>2];fZ(g);g=c[d>>2]|0;c[h>>2]=g;c[j+(c[g-12>>2]|0)>>2]=c[d+20>>2];if((e|0)!=0){c[b+108>>2]=e;a[b+112|0]=0;return}cd(9328,15904,59,20672)}function gv(a){a=a|0;gy(a,30336);qO(a+116|0);yr(a);return}function gw(a){a=a|0;gy(a,30336);qO(a+116|0);return}function gx(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;gy(a,30336);qO(b+(d+116)|0);yr(a);return}function gy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=c[b>>2]|0;e=a|0;c[e>>2]=d;f=a;c[f+(c[d-12>>2]|0)>>2]=c[b+20>>2];d=a+72|0;g=c[d>>2]|0;h=a+8|0;do{if((g|0)!=0){i=cJ[c[(c[h>>2]|0)+24>>2]&255](h)|0;if((aQ(g|0)|0)==0){c[d>>2]=0;if(!((h|0)==0|(i|0)!=0)){break}}i=c[(c[a>>2]|0)-12>>2]|0;qN(f+i|0,c[f+(i+16)>>2]|4)}}while(0);a=c[b+4>>2]|0;c[e>>2]=a;c[f+(c[a-12>>2]|0)>>2]=c[b+16>>2];fP(h);return}function gz(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;gy(b+d|0,30336);qO(b+(d+116)|0);return}function gA(a){a=a|0;return 1}function gB(a,b){a=a|0;b=b|0;return 1}function gC(a){a=a|0;c[a>>2]=23476;c[a+108>>2]=23496;fP(a+8|0);qO(a+108|0);return}function gD(a){a=a|0;c[a>>2]=23476;c[a+108>>2]=23496;fP(a+8|0);qO(a+108|0);yr(a);return}function gE(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;c[b+d>>2]=23476;a=b+(d+108)|0;c[a>>2]=23496;fP(b+(d+8)|0);qO(a);return}function gF(a){a=a|0;var b=0,d=0,e=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=23476;e=b+(d+108)|0;c[e>>2]=23496;fP(b+(d+8)|0);qO(e);yr(a);return}function gG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f|0;h=f+16|0;c[b+204>>2]=21632;gu(b,30308,d);c[b>>2]=25268;c[b+204>>2]=25296;yC(b+116|0,0,12);d=b+140|0;j=d;c[d>>2]=j;c[b+144>>2]=j;c[b+148>>2]=0;c[b+192>>2]=0;c[b+196>>2]=0;c[b+200>>2]=0;qv(b+116|0,e)|0;j=(c[b+108>>2]|0)+60|0;d=e;if((a[d]&1)==0){k=h;c[k>>2]=c[d>>2];c[k+4>>2]=c[d+4>>2];c[k+8>>2]=c[d+8>>2]}else{d=c[e+8>>2]|0;k=c[e+4>>2]|0;if(k>>>0>4294967279>>>0){qo(0)}if(k>>>0<11>>>0){a[h]=k<<1&255;l=h+1|0}else{e=k+16&-16;m=yp(e)|0;c[h+8>>2]=m;c[h>>2]=e|1;c[h+4>>2]=k;l=m}yA(l|0,d|0,k)|0;a[l+k|0]=0}dq(g,h);qv(j,g)|0;if((a[g]&1)!=0){yr(c[g+8>>2]|0)}if((a[h]&1)==0){n=b+128|0;c[n>>2]=0;o=b+136|0;c[o>>2]=0;p=b+152|0;q=b+132|0;c[q>>2]=0;r=p;yC(r|0,0,37);i=f;return}yr(c[h+8>>2]|0);n=b+128|0;c[n>>2]=0;o=b+136|0;c[o>>2]=0;p=b+152|0;q=b+132|0;c[q>>2]=0;r=p;yC(r|0,0,37);i=f;return}function gH(a){a=a|0;gK(a,30304);qO(a+204|0);yr(a);return}function gI(a){a=a|0;gK(a,30304);qO(a+204|0);return}function gJ(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;gK(a,30304);qO(b+(d+204)|0);yr(a);return}function gK(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[d>>2]|0;c[b>>2]=e;c[b+(c[e-12>>2]|0)>>2]=c[d+28>>2];e=c[b+192>>2]|0;f=e;if((e|0)!=0){g=b+196|0;h=c[g>>2]|0;if((e|0)!=(h|0)){c[g>>2]=h+(~((h-4+(-f|0)|0)>>>2)<<2)}yr(e)}e=b+140|0;f=b+148|0;do{if((c[f>>2]|0)!=0){h=c[b+144>>2]|0;g=e;i=(c[e>>2]|0)+4|0;j=h|0;c[(c[j>>2]|0)+4>>2]=c[i>>2];c[c[i>>2]>>2]=c[j>>2];c[f>>2]=0;if((h|0)==(g|0)){break}else{k=h}while(1){h=c[k+4>>2]|0;yr(k);if((h|0)==(g|0)){break}else{k=h}}}}while(0);if((a[b+116|0]&1)==0){l=b;m=d+4|0;gy(l,m);return}yr(c[b+124>>2]|0);l=b;m=d+4|0;gy(l,m);return}function gL(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;gK(b+d|0,30304);qO(b+(d+204)|0);return}function gM(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+72|0;e=d|0;gd(c[b+108>>2]|0,0);f=b+116|0;if((a[f]&1)==0){g=f+1|0}else{g=c[b+124>>2]|0}n1(e,g);if(n3(e,0)|0){g=nO(e|0)|0;gN(b,g)|0;h=1}else{h=0}c[e>>2]=29928;g=c[e+52>>2]|0;if(!((g|0)==40072|(g|0)==0)){ys(g)}nL(e|0);i=d;return h|0}function gN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+32|0;f=e|0;g=e+16|0;do{if((d|0)==0){h=0;j=2265}else{k=d|0;nP(k,15368)|0;l=nP(k,7280)|0;if((l|0)==0){h=0;j=2265;break}k=nP(l|0,7896)|0;if((k|0)==0){h=0;j=2265;break}l=nP(k|0,8392)|0;if((l|0)==0){h=0;j=2265;break}k=nP(l|0,9872)|0;if((k|0)==0){h=l;j=2265;break}if((nX(k,8944)|0)!=0){l=nX(k,8944)|0;m=yz(l|0)|0;if(m>>>0>4294967279>>>0){qo(0);return 0}if(m>>>0<11>>>0){a[f]=m<<1&255;n=f+1|0}else{o=m+16&-16;p=yp(o)|0;c[f+8>>2]=p;c[f>>2]=o|1;c[f+4>>2]=m;n=p}yA(n|0,l|0,m)|0;a[n+m|0]=0;m=gP(0,f)|0;if((a[f]&1)!=0){yr(c[f+8>>2]|0)}gd(c[b+108>>2]|0,m)}m=k|0;if((nP(m,13e3)|0)==0){break}a[b+112|0]=1;k=nP(m,13e3)|0;if((k|0)==0){break}m=b+128|0;l=b+108|0;p=k;do{k=yp(220)|0;o=k;jY(o);c[m>>2]=o;gQ(0,p,k);do{if(gR(b,p)|0){gh(c[l>>2]|0,c[m>>2]|0)}else{k=c[m>>2]|0;if((k|0)==0){break}cG[c[(c[k>>2]|0)+4>>2]&1023](k)}}while(0);c[m>>2]=0;p=nR(p|0,13e3)|0;}while((p|0)!=0)}}while(0);do{if((j|0)==2265){f=yp(220)|0;jY(f);n=b+128|0;c[n>>2]=f;f=yp(196)|0;nd(f);c[b+132>>2]=f;j0(c[n>>2]|0,f);gh(c[b+108>>2]|0,c[n>>2]|0);n=nO(h|0)|0;if((n|0)==0){break}else{q=n}do{gS(b,q)|0;q=nQ(q|0)|0;}while((q|0)!=0)}}while(0);q=c[b+192>>2]|0;h=b+196|0;if((q|0)==(c[h>>2]|0)){i=e;return 1}b=g;n=g+1|0;f=g+8|0;d=g|0;p=g+4|0;g=q;while(1){q=c[g>>2]|0;m=q+32|0;if((a[m]&1)==0){c[b>>2]=c[m>>2];c[b+4>>2]=c[m+4>>2];c[b+8>>2]=c[m+8>>2];r=a[b]|0}else{m=c[q+40>>2]|0;l=c[q+36>>2]|0;if(l>>>0>4294967279>>>0){j=2276;break}if(l>>>0<11>>>0){q=l<<1&255;a[b]=q;s=n;t=q}else{q=l+16&-16;k=yp(q)|0;c[f>>2]=k;o=q|1;c[d>>2]=o;c[p>>2]=l;s=k;t=o&255}yA(s|0,m|0,l)|0;a[s+l|0]=0;r=t}dt(16376,(l=i,i=i+8|0,c[l>>2]=(r&1)==0?n:c[f>>2]|0,l)|0);i=l;if((a[b]&1)!=0){yr(c[f>>2]|0)}l=g+4|0;if((l|0)==(c[h>>2]|0)){j=2289;break}else{g=l}}if((j|0)==2289){i=e;return 1}else if((j|0)==2276){qo(0);return 0}return 0}function gO(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+72|0;f=e|0;gd(c[b+108>>2]|0,0);n0(f);if((a[d]&1)==0){g=d+1|0}else{g=c[d+8>>2]|0}o_(f,g,0,0)|0;g=f|0;gN(b,nO(g)|0)|0;c[f>>2]=29928;b=c[f+52>>2]|0;if(!((b|0)==40072|(b|0)==0)){ys(b)}nL(g);i=e;return 1}function gP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>3>>>0;do{if((yD(l|0,16776,(f?3:j)|0)|0)==0){if(j>>>0>2>>>0&(f^1)){m=0}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}f=n>>>0>9>>>0;do{if((yD(o|0,16760,(f?9:n)|0)|0)==0){if(n>>>0>8>>>0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}g=p>>>0>13>>>0;do{if((yD(q|0,16720,(g?13:p)|0)|0)==0){if(p>>>0>12>>>0&(g^1)){m=2}else{break}i=b;return m|0}}while(0);if(k){r=e+1|0}else{r=c[d+8>>2]|0}dt(14816,(d=i,i=i+8|0,c[d>>2]=r,d)|0);i=d;m=0;i=b;return m|0}function gQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;b=i;i=i+16|0;f=b|0;if((nX(d,12840)|0)==0){i=b;return}g=nX(d,12840)|0;d=yz(g|0)|0;if(d>>>0>4294967279>>>0){qo(0)}if(d>>>0<11>>>0){a[f]=d<<1&255;h=f+1|0}else{j=d+16&-16;k=yp(j)|0;c[f+8>>2]=k;c[f>>2]=j|1;c[f+4>>2]=d;h=k}yA(h|0,g|0,d)|0;a[h+d|0]=0;jq(e,f);if((a[f]&1)==0){i=b;return}yr(c[f+8>>2]|0);i=b;return}function gR(a,d){a=a|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=a+128|0;if((c[e>>2]|0)==0){cd(11632,15784,866,19560);return 0}if((nX(d,12528)|0)!=0){f=b_(nX(d,12528)|0)|0;c[(c[e>>2]|0)+100>>2]=f}if((nX(d,12776)|0)!=0){f=b_(nX(d,12776)|0)|0;c[(c[e>>2]|0)+96>>2]=f}if((nX(d,12320)|0)!=0){f=(b_(nX(d,12320)|0)|0)&65535;b[(c[e>>2]|0)+104>>1]=f}if((nX(d,12088)|0)!=0){f=(b_(nX(d,12088)|0)|0)&65535;b[(c[e>>2]|0)+106>>1]=f}if((nX(d,16312)|0)!=0){f=(b_(nX(d,16312)|0)|0)&65535;b[(c[e>>2]|0)+108>>1]=f}if((nX(d,11880)|0)!=0){f=(c[e>>2]|0)+112|0;g=nX(d,11880)|0;qw(f,g)|0}g=nP(d|0,11440)|0;if((g|0)==0){h=c[e>>2]|0;i=h+8|0;j=c[i>>2]|0;k=h+4|0;l=c[k>>2]|0;m=j;n=l;o=m-n|0;p=(o|0)>0;return p|0}d=a+132|0;f=g;do{g=yp(196)|0;q=g;nd(q);c[d>>2]=q;gQ(0,f,g);do{if(gT(a,f)|0){j0(c[e>>2]|0,c[d>>2]|0)}else{g=c[d>>2]|0;if((g|0)==0){break}cG[c[(c[g>>2]|0)+4>>2]&1023](g)}}while(0);c[d>>2]=0;f=nR(f|0,11440)|0;}while((f|0)!=0);h=c[e>>2]|0;i=h+8|0;j=c[i>>2]|0;k=h+4|0;l=c[k>>2]|0;m=j;n=l;o=m-n|0;p=(o|0)>0;return p|0}function gS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0;e=i;i=i+96|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=d|0;n=d+32|0;o=(c[n>>2]|0)+8|0;p=yz(o|0)|0;if(p>>>0>4294967279>>>0){qo(0);return 0}if(p>>>0<11>>>0){q=p<<1&255;r=f;a[f]=q;s=r+1|0;t=q;u=r}else{r=p+16&-16;q=yp(r)|0;c[f+8>>2]=q;v=r|1;c[f>>2]=v;c[f+4>>2]=p;s=q;t=v&255;u=f}yA(s|0,o|0,p)|0;a[s+p|0]=0;p=t&255;if((p&1|0)==0){w=p>>>1}else{w=c[f+4>>2]|0}if((t&1)==0){x=u+1|0}else{x=c[f+8>>2]|0}u=w>>>0>5>>>0;p=yD(x|0,15304,(u?5:w)|0)|0;if((p|0)==0){y=w>>>0<5>>>0?-1:u&1}else{y=p}if((t&1)!=0){yr(c[f+8>>2]|0)}do{if((y|0)==0){f=nO(m)|0;if((f|0)==0){break}else{z=f}do{gS(b,z)|0;z=nQ(z|0)|0;}while((z|0)!=0)}}while(0);z=(c[n>>2]|0)+8|0;y=yz(z|0)|0;if(y>>>0>4294967279>>>0){qo(0);return 0}if(y>>>0<11>>>0){f=y<<1&255;t=g;a[g]=f;A=t+1|0;B=f;C=t}else{t=y+16&-16;f=yp(t)|0;c[g+8>>2]=f;p=t|1;c[g>>2]=p;c[g+4>>2]=y;A=f;B=p&255;C=g}yA(A|0,z|0,y)|0;a[A+y|0]=0;y=B&255;if((y&1|0)==0){D=y>>>1}else{D=c[g+4>>2]|0}if((B&1)==0){E=C+1|0}else{E=c[g+8>>2]|0}C=D>>>0>7>>>0;y=yD(E|0,15288,(C?7:D)|0)|0;if((y|0)==0){F=D>>>0<7>>>0?-1:C&1}else{F=y}if((B&1)!=0){yr(c[g+8>>2]|0)}if((F|0)==0){F=nO(m)|0;if((F|0)==0){i=e;return 1}else{G=F}do{gS(b,G)|0;G=nQ(G|0)|0;}while((G|0)!=0);i=e;return 1}G=(c[n>>2]|0)+8|0;F=yz(G|0)|0;if(F>>>0>4294967279>>>0){qo(0);return 0}if(F>>>0<11>>>0){m=F<<1&255;g=h;a[h]=m;H=g+1|0;I=m;J=g}else{g=F+16&-16;m=yp(g)|0;c[h+8>>2]=m;B=g|1;c[h>>2]=B;c[h+4>>2]=F;H=m;I=B&255;J=h}yA(H|0,G|0,F)|0;a[H+F|0]=0;F=I&255;if((F&1|0)==0){K=F>>>1}else{K=c[h+4>>2]|0}if((I&1)==0){L=J+1|0}else{L=c[h+8>>2]|0}J=K>>>0>7>>>0;F=yD(L|0,9976,(J?7:K)|0)|0;if((F|0)==0){M=K>>>0<7>>>0?-1:J&1}else{M=F}if((I&1)!=0){yr(c[h+8>>2]|0)}if((M|0)==0){dr(9976,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N;M=yp(488)|0;h=M;ev(h,1,-1);I=b+156|0;c[I>>2]=h;gQ(0,d,M);do{if(gV(b,d)|0){ne(c[b+132>>2]|0,c[I>>2]|0)}else{M=c[I>>2]|0;if((M|0)==0){break}cG[c[(c[M>>2]|0)+4>>2]&1023](M)}}while(0);c[I>>2]=0;i=e;return 1}I=(c[n>>2]|0)+8|0;M=yz(I|0)|0;if(M>>>0>4294967279>>>0){qo(0);return 0}if(M>>>0<11>>>0){h=M<<1&255;F=j;a[j]=h;O=F+1|0;P=h;Q=F}else{F=M+16&-16;h=yp(F)|0;c[j+8>>2]=h;J=F|1;c[j>>2]=J;c[j+4>>2]=M;O=h;P=J&255;Q=j}yA(O|0,I|0,M)|0;a[O+M|0]=0;M=P&255;if((M&1|0)==0){R=M>>>1}else{R=c[j+4>>2]|0}if((P&1)==0){S=Q+1|0}else{S=c[j+8>>2]|0}Q=R>>>0>2>>>0;do{if((yD(S|0,15280,(Q?2:R)|0)|0)==0){if(!(R>>>0>1>>>0&(Q^1))){T=2468;break}M=b+132|0;O=c[M>>2]|0;I=((c[O+8>>2]|0)-(c[O+4>>2]|0)|0)>0;if((P&1)!=0){yr(c[j+8>>2]|0)}if(!I){break}dr(15280,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N;a[b+112|0]=1;I=yp(220)|0;jY(I);O=b+128|0;c[O>>2]=I;I=yp(196)|0;nd(I);c[M>>2]=I;j0(c[O>>2]|0,I);gh(c[b+108>>2]|0,c[O>>2]|0);i=e;return 1}else{T=2468}}while(0);do{if((T|0)==2468){if((P&1)==0){break}yr(c[j+8>>2]|0)}}while(0);j=(c[n>>2]|0)+8|0;P=yz(j|0)|0;if(P>>>0>4294967279>>>0){qo(0);return 0}if(P>>>0<11>>>0){Q=P<<1&255;R=k;a[k]=Q;U=R+1|0;V=Q;W=R}else{R=P+16&-16;Q=yp(R)|0;c[k+8>>2]=Q;S=R|1;c[k>>2]=S;c[k+4>>2]=P;U=Q;V=S&255;W=k}yA(U|0,j|0,P)|0;a[U+P|0]=0;P=V&255;if((P&1|0)==0){X=P>>>1}else{X=c[k+4>>2]|0}if((V&1)==0){Y=W+1|0}else{Y=c[k+8>>2]|0}W=X>>>0>2>>>0;do{if((yD(Y|0,15232,(W?2:X)|0)|0)==0){if(!(X>>>0>1>>>0&(W^1))){T=2489;break}P=b+128|0;U=c[P>>2]|0;j=((c[U+8>>2]|0)-(c[U+4>>2]|0)|0)>0;if((V&1)!=0){yr(c[k+8>>2]|0)}if(!j){break}dr(15232,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N;a[b+112|0]=1;j=yp(196)|0;nd(j);c[b+132>>2]=j;j0(c[P>>2]|0,j);i=e;return 1}else{T=2489}}while(0);do{if((T|0)==2489){if((V&1)==0){break}yr(c[k+8>>2]|0)}}while(0);k=(c[n>>2]|0)+8|0;V=yz(k|0)|0;if(V>>>0>4294967279>>>0){qo(0);return 0}if(V>>>0<11>>>0){W=V<<1&255;X=l;a[l]=W;Z=X+1|0;_=W;$=X}else{X=V+16&-16;W=yp(X)|0;c[l+8>>2]=W;Y=X|1;c[l>>2]=Y;c[l+4>>2]=V;Z=W;_=Y&255;$=l}yA(Z|0,k|0,V)|0;a[Z+V|0]=0;V=_&255;if((V&1|0)==0){aa=V>>>1}else{aa=c[l+4>>2]|0}if((_&1)==0){ab=$+1|0}else{ab=c[l+8>>2]|0}$=aa>>>0>8>>>0;do{if((yD(ab|0,11040,($?8:aa)|0)|0)==0){if(!(aa>>>0>7>>>0&($^1))){T=2508;break}V=b+188|0;Z=(a[V]&1)==0;if((_&1)!=0){yr(c[l+8>>2]|0)}if(!Z){break}dr(11040,(N=i,i=i+1|0,i=i+7&-8,c[N>>2]=0,N)|0);i=N;Z=(c[b+108>>2]|0)+136|0;c[b+136>>2]=Z;gQ(0,d,Z|0);gW(b,d)|0;a[V]=1;i=e;return 1}else{T=2508}}while(0);do{if((T|0)==2508){if((_&1)==0){break}yr(c[l+8>>2]|0)}}while(0);dt(15728,(N=i,i=i+8|0,c[N>>2]=(c[n>>2]|0)+8,N)|0);i=N;i=e;return 1}function gT(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+132|0;if((c[d>>2]|0)==0){cd(11128,15784,905,19512);return 0}e=a+156|0;if((c[e>>2]|0)!=0){cd(16272,15784,906,19512);return 0}f=a+160|0;if((c[f>>2]|0)!=0){cd(16248,15784,907,19512);return 0}if((nX(b,11360)|0)!=0){g=b_(nX(b,11360)|0)|0;c[(c[d>>2]|0)+160>>2]=g}if((nX(b,11240)|0)!=0){g=b_(nX(b,11240)|0)|0;c[(c[d>>2]|0)+164>>2]=g}if((nX(b,11176)|0)!=0){g=b_(nX(b,11176)|0)|0;c[(c[d>>2]|0)+168>>2]=g}g=b|0;if((nP(g,10224)|0)==0){b=nP(g,9976)|0;if((b|0)==0){h=c[d>>2]|0;i=h+8|0;j=c[i>>2]|0;k=h+4|0;l=c[k>>2]|0;m=j;n=l;o=m-n|0;p=(o|0)>0;return p|0}else{q=b}do{b=yp(488)|0;r=b;ev(r,1,-1);c[e>>2]=r;gQ(0,q,b);do{if(gV(a,q)|0){ne(c[d>>2]|0,c[e>>2]|0)}else{b=c[e>>2]|0;if((b|0)==0){break}cG[c[(c[b>>2]|0)+4>>2]&1023](b)}}while(0);c[e>>2]=0;q=nR(q|0,9976)|0;}while((q|0)!=0);h=c[d>>2]|0;i=h+8|0;j=c[i>>2]|0;k=h+4|0;l=c[k>>2]|0;m=j;n=l;o=m-n|0;p=(o|0)>0;return p|0}if((c[e>>2]|0)==0){q=yp(488)|0;ev(q,0,-1);c[e>>2]=q}q=nP(g,10224)|0;if((q|0)!=0){g=q;do{q=yp(132)|0;b=q;mi(b,-1);c[f>>2]=b;gQ(0,g,q);do{if(gU(a,g)|0){ez(c[e>>2]|0,c[f>>2]|0)}else{q=c[f>>2]|0;if((q|0)==0){break}cG[c[(c[q>>2]|0)+4>>2]&1023](q)}}while(0);c[f>>2]=0;g=nR(g|0,10224)|0;}while((g|0)!=0)}g=c[e>>2]|0;do{if(((c[g+8>>2]|0)-(c[g+4>>2]|0)|0)>0){ne(c[d>>2]|0,g)}else{if((g|0)==0){break}cG[c[(c[g>>2]|0)+4>>2]&1023](g)}}while(0);c[e>>2]=0;h=c[d>>2]|0;i=h+8|0;j=c[i>>2]|0;k=h+4|0;l=c[k>>2]|0;m=j;n=l;o=m-n|0;p=(o|0)>0;return p|0}function gU(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;f=b+160|0;if((c[f>>2]|0)==0){cd(10064,15784,1099,19528);return 0}g=b+164|0;if((c[g>>2]|0)!=0){cd(15848,15784,1100,19528);return 0}if((nX(d,10264)|0)==0){dt(15832,(h=i,i=i+1|0,i=i+7&-8,c[h>>2]=0,h)|0);i=h}else{h=c[f>>2]|0;c[h+124>>2]=b_(nX(d,10264)|0)|0}if((nX(d,11176)|0)!=0){h=b_(nX(d,11176)|0)|0;c[(c[f>>2]|0)+112>>2]=h}if((nX(d,10168)|0)!=0){a[(c[f>>2]|0)+100|0]=1}h=nP(d|0,9880)|0;if((h|0)==0){j=c[f>>2]|0;k=j+4|0;l=j+8|0;m=l;n=c[m>>2]|0;o=k;p=c[o>>2]|0;q=n;r=p;s=q-r|0;t=(s|0)>0;i=e;return t|0}d=b+180|0;u=h;do{h=yp(296)|0;v=h;h9(v,1);c[g>>2]=v;c[d>>2]=h;gQ(0,u,h);g1(b,u)|0;mj(c[f>>2]|0,c[g>>2]|0);c[g>>2]=0;u=nR(u|0,9880)|0;}while((u|0)!=0);j=c[f>>2]|0;k=j+4|0;l=j+8|0;m=l;n=c[m>>2]|0;o=k;p=c[o>>2]|0;q=n;r=p;s=q-r|0;t=(s|0)>0;i=e;return t|0}function gV(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+16|0;f=e|0;g=b+156|0;if((c[g>>2]|0)==0){cd(15920,15784,1074,19480);return 0}h=b+160|0;if((c[h>>2]|0)!=0){cd(16248,15784,1075,19480);return 0}do{if((nX(d,15896)|0)!=0){j=nX(d,15896)|0;k=yz(j|0)|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){a[f]=k<<1&255;l=f+1|0}else{m=k+16&-16;n=yp(m)|0;c[f+8>>2]=n;c[f>>2]=m|1;c[f+4>>2]=k;l=n}yA(l|0,j|0,k)|0;a[l+k|0]=0;k=g0(0,f)|0;c[(c[g>>2]|0)+480>>2]=k;if((a[f]&1)==0){break}yr(c[f+8>>2]|0)}}while(0);f=nP(d|0,10224)|0;if((f|0)==0){o=c[g>>2]|0;p=o+8|0;q=c[p>>2]|0;r=o+4|0;s=c[r>>2]|0;t=q;u=s;v=t-u|0;w=(v|0)>0;i=e;return w|0}else{x=f}do{f=yp(132)|0;d=f;mi(d,-1);c[h>>2]=d;gQ(0,x,f);do{if(gU(b,x)|0){ez(c[g>>2]|0,c[h>>2]|0)}else{f=c[h>>2]|0;if((f|0)==0){break}cG[c[(c[f>>2]|0)+4>>2]&1023](f)}}while(0);c[h>>2]=0;x=nR(x|0,10224)|0;}while((x|0)!=0);o=c[g>>2]|0;p=o+8|0;q=c[p>>2]|0;r=o+4|0;s=c[r>>2]|0;t=q;u=s;v=t-u|0;w=(v|0)>0;i=e;return w|0}function gW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+376|0;f=e|0;g=e+160|0;h=e+176|0;j=e+192|0;k=e+344|0;l=e+360|0;m=b+136|0;if((c[m>>2]|0)==0){cd(16200,15784,966,19448);return 0}n=b+140|0;o=b+148|0;if((c[o>>2]|0)!=0){cd(16144,15784,967,19448);return 0}if((nX(d,10792)|0)!=0){p=nX(d,10792)|0;q=yz(p|0)|0;if(q>>>0>4294967279>>>0){qo(0);return 0}if(q>>>0<11>>>0){r=q<<1&255;s=g;a[g]=r;t=s+1|0;u=r;v=s}else{s=q+16&-16;r=yp(s)|0;c[g+8>>2]=r;w=s|1;c[g>>2]=w;c[g+4>>2]=q;t=r;u=w&255;v=g}yA(t|0,p|0,q)|0;a[t+q|0]=0;q=u&255;t=(q&1|0)==0;if(t){x=q>>>1}else{x=c[g+4>>2]|0}p=(u&1)==0;if(p){y=v+1|0}else{y=c[g+8>>2]|0}w=x>>>0>1>>>0;if((yD(y|0,16648,(w?1:x)|0)|0)==0){if((x|0)!=0&(w^1)){z=0}else{A=2627}}else{A=2627}if((A|0)==2627){if(t){B=q>>>1}else{B=c[g+4>>2]|0}if((B|0)==0){qp(0);return 0}if(p){C=v+1|0}else{C=c[g+8>>2]|0}z=(a[C]|0)-48|0}C=nX(d,10792)|0;v=yz(C|0)|0;if(v>>>0>4294967279>>>0){qo(0);return 0}if(v>>>0<11>>>0){a[h]=v<<1&255;D=h+1|0}else{p=v+16&-16;B=yp(p)|0;c[h+8>>2]=B;c[h>>2]=p|1;c[h+4>>2]=v;D=B}yA(D|0,C|0,v)|0;a[D+v|0]=0;h0(f,z,gX(0,h)|0);if((a[h]&1)!=0){yr(c[h+8>>2]|0)}if((u&1)!=0){yr(c[g+8>>2]|0)}lG((c[m>>2]|0)+60|0,f);h3(f)}do{if((nX(d,10976)|0)!=0){if((nX(d,10872)|0)==0){break}fw(j);f=nX(d,10872)|0;g=yz(f|0)|0;if(g>>>0>4294967279>>>0){qo(0);return 0}if(g>>>0<11>>>0){a[k]=g<<1&255;E=k+1|0}else{u=g+16&-16;h=yp(u)|0;c[k+8>>2]=h;c[k>>2]=u|1;c[k+4>>2]=g;E=h}yA(E|0,f|0,g)|0;a[E+g|0]=0;g=nX(d,10976)|0;f=yz(g|0)|0;if(f>>>0>4294967279>>>0){qo(0);return 0}if(f>>>0<11>>>0){a[l]=f<<1&255;F=l+1|0}else{h=f+16&-16;u=yp(h)|0;c[l+8>>2]=u;c[l>>2]=h|1;c[l+4>>2]=f;F=u}yA(F|0,g|0,f)|0;a[F+f|0]=0;c[j+144>>2]=gY(0,k,l)|0;if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[k]&1)!=0){yr(c[k+8>>2]|0)}lF((c[m>>2]|0)+60|0,j);fy(j)}}while(0);j=nP(d|0,10688)|0;if((j|0)==0){i=e;return 1}d=n;k=n|0;n=j;do{j=yp(84)|0;l=j;lX(l);F=yp(12)|0;E=F;f=F+8|0;if((f|0)!=0){c[f>>2]=l}c[(c[k>>2]|0)+4>>2]=E;c[F>>2]=c[k>>2];c[k>>2]=E;c[F+4>>2]=d;c[o>>2]=(c[o>>2]|0)+1;gQ(0,n,j);gZ(b,n)|0;lR(c[m>>2]|0,l);l=c[k>>2]|0;j=l+4|0;F=l|0;c[(c[F>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[F>>2];c[o>>2]=(c[o>>2]|0)-1;yr(l);n=nR(n|0,10688)|0;}while((n|0)!=0);i=e;return 1}function gX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>1>>>0;do{if((yD(l|0,16648,(f?1:j)|0)|0)==0){if((j|0)!=0&(f^1)){m=3}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(n>>>0<=1>>>0){qp(0);return 0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}if((a[o+1|0]|0)==102){m=2;i=b;return m|0}if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(p>>>0<=1>>>0){qp(0);return 0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}if((a[q+1|0]|0)==115){m=1;i=b;return m|0}if(k){r=e+1|0}else{r=c[d+8>>2]|0}dt(14784,(d=i,i=i+8|0,c[d>>2]=r,d)|0);i=d;m=3;i=b;return m|0}function gY(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=i;i=i+16|0;f=b|0;hj(f,d,e);g=f;h=f;j=a[h]|0;k=j&255;l=(k&1|0)==0;if(l){m=k>>>1}else{m=c[f+4>>2]|0}n=(j&1)==0;if(n){o=g+1|0}else{o=c[f+8>>2]|0}p=m>>>0>2>>>0;if((yD(o|0,15096,(p?2:m)|0)|0)==0){if(m>>>0>1>>>0&(p^1)){q=1;r=j}else{s=2746}}else{s=2746}do{if((s|0)==2746){if(l){t=k>>>1}else{t=c[f+4>>2]|0}if(n){u=g+1|0}else{u=c[f+8>>2]|0}p=t>>>0>2>>>0;if((yD(u|0,15080,(p?2:t)|0)|0)==0){if(t>>>0>1>>>0&(p^1)){q=2;r=j;break}}if(l){v=k>>>1}else{v=c[f+4>>2]|0}if(n){w=g+1|0}else{w=c[f+8>>2]|0}p=v>>>0>2>>>0;if((yD(w|0,15072,(p?2:v)|0)|0)==0){if(v>>>0>1>>>0&(p^1)){q=10;r=j;break}}if(l){x=k>>>1}else{x=c[f+4>>2]|0}if(n){y=g+1|0}else{y=c[f+8>>2]|0}p=x>>>0>2>>>0;if((yD(y|0,15056,(p?2:x)|0)|0)==0){if(x>>>0>1>>>0&(p^1)){q=3;r=j;break}}if(l){z=k>>>1}else{z=c[f+4>>2]|0}if(n){A=g+1|0}else{A=c[f+8>>2]|0}p=z>>>0>2>>>0;if((yD(A|0,15048,(p?2:z)|0)|0)==0){if(z>>>0>1>>>0&(p^1)){q=4;r=j;break}}if(l){B=k>>>1}else{B=c[f+4>>2]|0}if(n){C=g+1|0}else{C=c[f+8>>2]|0}p=B>>>0>2>>>0;if((yD(C|0,15008,(p?2:B)|0)|0)==0){if(B>>>0>1>>>0&(p^1)){q=5;r=j;break}}if(l){D=k>>>1}else{D=c[f+4>>2]|0}if(n){E=g+1|0}else{E=c[f+8>>2]|0}p=D>>>0>2>>>0;if((yD(E|0,15e3,(p?2:D)|0)|0)==0){if(D>>>0>1>>>0&(p^1)){q=6;r=j;break}}if(l){F=k>>>1}else{F=c[f+4>>2]|0}if(n){G=g+1|0}else{G=c[f+8>>2]|0}p=F>>>0>2>>>0;if((yD(G|0,14992,(p?2:F)|0)|0)==0){if(F>>>0>1>>>0&(p^1)){q=7;r=j;break}}if(l){H=k>>>1}else{H=c[f+4>>2]|0}if(n){I=g+1|0}else{I=c[f+8>>2]|0}p=H>>>0>2>>>0;if((yD(I|0,14984,(p?2:H)|0)|0)==0){if(H>>>0>1>>>0&(p^1)){q=8;r=j;break}}if(l){J=k>>>1}else{J=c[f+4>>2]|0}if(n){K=g+1|0}else{K=c[f+8>>2]|0}p=J>>>0>2>>>0;if((yD(K|0,14928,(p?2:J)|0)|0)==0){if(J>>>0>1>>>0&(p^1)){q=11;r=j;break}}if((a[d]&1)==0){L=d+1|0}else{L=c[d+8>>2]|0}if((a[e]&1)==0){M=e+1|0}else{M=c[e+8>>2]|0}dt(14888,(p=i,i=i+16|0,c[p>>2]=L,c[p+8>>2]=M,p)|0);i=p;q=1;r=a[h]|0}}while(0);if((r&1)==0){i=b;return q|0}yr(c[f+8>>2]|0);i=b;return q|0}function gZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;e=i;i=i+64|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=b+140|0;l=b+148|0;if((c[l>>2]|0)==0){cd(16120,15784,1001,19416);return 0}m=b+152|0;if((c[m>>2]|0)!=0){cd(16072,15784,1002,19416);return 0}n=k|0;o=c[(c[n>>2]|0)+8>>2]|0;do{if((nX(d,10592)|0)!=0){p=nX(d,10592)|0;q=yz(p|0)|0;if(q>>>0>4294967279>>>0){qo(0);return 0}if(q>>>0<11>>>0){a[f]=q<<1&255;r=f+1|0}else{s=q+16&-16;t=yp(s)|0;c[f+8>>2]=t;c[f>>2]=s|1;c[f+4>>2]=q;r=t}yA(r|0,p|0,q)|0;a[r+q|0]=0;c[o+76>>2]=g_(0,f)|0;if((a[f]&1)==0){break}yr(c[f+8>>2]|0)}}while(0);do{if((nX(d,10520)|0)!=0){f=nX(d,10520)|0;r=yz(f|0)|0;if(r>>>0>4294967279>>>0){qo(0);return 0}if(r>>>0<11>>>0){q=r<<1&255;p=g;a[g]=q;u=p+1|0;v=q;w=p}else{p=r+16&-16;q=yp(p)|0;c[g+8>>2]=q;t=p|1;c[g>>2]=t;c[g+4>>2]=r;u=q;v=t&255;w=g}yA(u|0,f|0,r)|0;a[u+r|0]=0;r=v&255;if((r&1|0)==0){x=r>>>1}else{x=c[g+4>>2]|0}if((v&1)==0){y=w+1|0}else{y=c[g+8>>2]|0}r=x>>>0>5>>>0;f=yD(y|0,18888,(r?5:x)|0)|0;if((f|0)==0){z=x>>>0<5>>>0?-1:r&1}else{z=f}a[o+80|0]=(z|0)!=0|0;if((v&1)==0){break}yr(c[g+8>>2]|0)}}while(0);g=nO(d|0)|0;if((g|0)==0){i=e;return 1}d=h;v=h+1|0;z=k;k=j;x=j+1|0;y=j+8|0;w=j+4|0;u=j|0;j=h+8|0;f=h+4|0;r=h|0;h=g;L3096:while(1){g=h|0;t=h+32|0;q=(c[t>>2]|0)+8|0;p=yz(q|0)|0;if(p>>>0>4294967279>>>0){A=2868;break}if(p>>>0<11>>>0){s=p<<1&255;a[d]=s;B=v;C=s}else{s=p+16&-16;D=yp(s)|0;c[j>>2]=D;E=s|1;c[r>>2]=E;c[f>>2]=p;B=D;C=E&255}yA(B|0,q|0,p)|0;a[B+p|0]=0;p=C&255;q=(p&1|0)==0?p>>>1:c[f>>2]|0;p=q>>>0>8>>>0;E=yD(((C&1)==0?v:c[j>>2]|0)|0,10688,(p?8:q)|0)|0;if((E|0)==0){F=q>>>0<8>>>0?-1:p&1}else{F=E}if((C&1)!=0){yr(c[j>>2]|0)}do{if((F|0)==0){E=yp(84)|0;p=E;lX(p);q=yp(12)|0;D=q;s=q+8|0;if((s|0)!=0){c[s>>2]=p}c[(c[n>>2]|0)+4>>2]=D;c[q>>2]=c[n>>2];c[n>>2]=D;c[q+4>>2]=z;c[l>>2]=(c[l>>2]|0)+1;gQ(0,h,E);gZ(b,h)|0;l1(o,p);p=c[n>>2]|0;E=p+4|0;q=p|0;c[(c[q>>2]|0)+4>>2]=c[E>>2];c[c[E>>2]>>2]=c[q>>2];c[l>>2]=(c[l>>2]|0)-1;yr(p)}else{p=(c[t>>2]|0)+8|0;q=yz(p|0)|0;if(q>>>0>4294967279>>>0){A=2883;break L3096}if(q>>>0<11>>>0){E=q<<1&255;a[k]=E;G=x;H=E}else{E=q+16&-16;D=yp(E)|0;c[y>>2]=D;s=E|1;c[u>>2]=s;c[w>>2]=q;G=D;H=s&255}yA(G|0,p|0,q)|0;a[G+q|0]=0;q=H&255;p=(q&1|0)==0?q>>>1:c[w>>2]|0;q=p>>>0>8>>>0;s=yD(((H&1)==0?x:c[y>>2]|0)|0,10328,(q?8:p)|0)|0;if((s|0)==0){I=p>>>0<8>>>0?-1:q&1}else{I=s}if((H&1)!=0){yr(c[y>>2]|0)}if((I|0)!=0){break}s=yp(84)|0;q=s;l5(q);c[m>>2]=q;gQ(0,h,s);g$(b,h)|0;l0(o,c[m>>2]|0);c[m>>2]=0}}while(0);t=nQ(g)|0;if((t|0)==0){A=2899;break}else{h=t}}if((A|0)==2899){i=e;return 1}else if((A|0)==2868){qo(0);return 0}else if((A|0)==2883){qo(0);return 0}return 0}function g_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>4>>>0;do{if((yD(l|0,8664,(f?4:j)|0)|0)==0){if(j>>>0>3>>>0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}f=n>>>0>5>>>0;do{if((yD(o|0,16520,(f?5:n)|0)|0)==0){if(n>>>0>4>>>0&(f^1)){m=2}else{break}i=b;return m|0}}while(0);if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}g=p>>>0>7>>>0;do{if((yD(q|0,16504,(g?7:p)|0)|0)==0){if(p>>>0>6>>>0&(g^1)){m=3}else{break}i=b;return m|0}}while(0);if(k){r=e+1|0}else{r=c[d+8>>2]|0}dt(14536,(d=i,i=i+8|0,c[d>>2]=r,d)|0);i=d;m=1;i=b;return m|0}function g$(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;i=i+376|0;f=e|0;g=e+160|0;h=e+176|0;j=e+192|0;k=e+344|0;l=e+360|0;m=b+152|0;if((c[m>>2]|0)==0){cd(16048,15784,1045,19432);return 0}if((nX(d,10264)|0)==0){dt(15984,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b}else{b=c[m>>2]|0;c[b+76>>2]=b_(nX(d,10264)|0)|0}if((nX(d,10792)|0)!=0){b=nX(d,10792)|0;n=yz(b|0)|0;if(n>>>0>4294967279>>>0){qo(0);return 0}if(n>>>0<11>>>0){o=n<<1&255;p=g;a[g]=o;q=p+1|0;r=o;s=p}else{p=n+16&-16;o=yp(p)|0;c[g+8>>2]=o;t=p|1;c[g>>2]=t;c[g+4>>2]=n;q=o;r=t&255;s=g}yA(q|0,b|0,n)|0;a[q+n|0]=0;n=r&255;q=(n&1|0)==0;if(q){u=n>>>1}else{u=c[g+4>>2]|0}b=(r&1)==0;if(b){v=s+1|0}else{v=c[g+8>>2]|0}t=u>>>0>1>>>0;if((yD(v|0,16648,(t?1:u)|0)|0)==0){if((u|0)!=0&(t^1)){w=0}else{x=2952}}else{x=2952}if((x|0)==2952){if(q){y=n>>>1}else{y=c[g+4>>2]|0}if((y|0)==0){qp(0);return 0}if(b){z=s+1|0}else{z=c[g+8>>2]|0}w=(a[z]|0)-48|0}z=nX(d,10792)|0;s=yz(z|0)|0;if(s>>>0>4294967279>>>0){qo(0);return 0}if(s>>>0<11>>>0){a[h]=s<<1&255;A=h+1|0}else{b=s+16&-16;y=yp(b)|0;c[h+8>>2]=y;c[h>>2]=b|1;c[h+4>>2]=s;A=y}yA(A|0,z|0,s)|0;a[A+s|0]=0;h0(f,w,gX(0,h)|0);if((a[h]&1)!=0){yr(c[h+8>>2]|0)}if((r&1)!=0){yr(c[g+8>>2]|0)}lG((c[m>>2]|0)+60|0,f);h3(f)}if((nX(d,10976)|0)==0){i=e;return 1}if((nX(d,10872)|0)==0){i=e;return 1}fw(j);f=nX(d,10872)|0;g=yz(f|0)|0;if(g>>>0>4294967279>>>0){qo(0);return 0}if(g>>>0<11>>>0){a[k]=g<<1&255;B=k+1|0}else{r=g+16&-16;h=yp(r)|0;c[k+8>>2]=h;c[k>>2]=r|1;c[k+4>>2]=g;B=h}yA(B|0,f|0,g)|0;a[B+g|0]=0;g=nX(d,10976)|0;B=yz(g|0)|0;if(B>>>0>4294967279>>>0){qo(0);return 0}if(B>>>0<11>>>0){a[l]=B<<1&255;C=l+1|0}else{f=B+16&-16;h=yp(f)|0;c[l+8>>2]=h;c[l>>2]=f|1;c[l+4>>2]=B;C=h}yA(C|0,g|0,B)|0;a[C+B|0]=0;B=j+144|0;c[B>>2]=gY(0,k,l)|0;if((a[l]&1)!=0){yr(c[l+8>>2]|0)}if((a[k]&1)!=0){yr(c[k+8>>2]|0)}if((nX(d,15968)|0)!=0){c[B>>2]=9}lF((c[m>>2]|0)+60|0,j);fy(j);i=e;return 1}function g0(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>5>>>0;do{if((yD(l|0,14776,(f?5:j)|0)|0)==0){if(j>>>0>4>>>0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}f=n>>>0>3>>>0;do{if((yD(o|0,14760,(f?3:n)|0)|0)==0){if(n>>>0>2>>>0&(f^1)){m=2}else{break}i=b;return m|0}}while(0);if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}f=p>>>0>3>>>0;do{if((yD(q|0,14752,(f?3:p)|0)|0)==0){if(p>>>0>2>>>0&(f^1)){m=6}else{break}i=b;return m|0}}while(0);if(h){r=g>>>1}else{r=c[d+4>>2]|0}if(k){s=e+1|0}else{s=c[d+8>>2]|0}f=r>>>0>6>>>0;do{if((yD(s|0,14728,(f?6:r)|0)|0)==0){if(r>>>0>5>>>0&(f^1)){m=5}else{break}i=b;return m|0}}while(0);if(h){t=g>>>1}else{t=c[d+4>>2]|0}if(k){u=e+1|0}else{u=c[d+8>>2]|0}f=t>>>0>8>>>0;do{if((yD(u|0,14712,(f?8:t)|0)|0)==0){if(t>>>0>7>>>0&(f^1)){m=4}else{break}i=b;return m|0}}while(0);if(h){v=g>>>1}else{v=c[d+4>>2]|0}if(k){w=e+1|0}else{w=c[d+8>>2]|0}g=v>>>0>7>>>0;do{if((yD(w|0,14664,(g?7:v)|0)|0)==0){if(v>>>0>6>>>0&(g^1)){m=3}else{break}i=b;return m|0}}while(0);if(k){x=e+1|0}else{x=c[d+8>>2]|0}dt(14568,(d=i,i=i+8|0,c[d>>2]=x,d)|0);i=d;m=1;i=b;return m|0}function g1(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;e=a+164|0;if((c[e>>2]|0)==0){cd(9800,15784,1136,19544);return 0}if((nX(b,10264)|0)==0){dt(15808,(f=i,i=i+1|0,i=i+7&-8,c[f>>2]=0,f)|0);i=f}else{f=c[e>>2]|0;c[f+144>>2]=b_(nX(b,10264)|0)|0}f=nO(b|0)|0;if((f|0)==0){i=d;return 1}else{g=f}do{g2(a,g)|0;g=nQ(g|0)|0;}while((g|0)!=0);i=d;return 1}function g2(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0;e=i;i=i+192|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=d|0;t=d+32|0;u=(c[t>>2]|0)+8|0;v=yz(u|0)|0;if(v>>>0>4294967279>>>0){qo(0);return 0}if(v>>>0<11>>>0){w=v<<1&255;x=f;a[f]=w;y=x+1|0;z=w;A=x}else{x=v+16&-16;w=yp(x)|0;c[f+8>>2]=w;B=x|1;c[f>>2]=B;c[f+4>>2]=v;y=w;z=B&255;A=f}yA(y|0,u|0,v)|0;a[y+v|0]=0;v=z&255;if((v&1|0)==0){C=v>>>1}else{C=c[f+4>>2]|0}if((z&1)==0){D=A+1|0}else{D=c[f+8>>2]|0}A=C>>>0>7>>>0;v=yD(D|0,15768,(A?7:C)|0)|0;if((v|0)==0){E=C>>>0<7>>>0?-1:A&1}else{E=v}if((z&1)!=0){yr(c[f+8>>2]|0)}do{if((E|0)==0){f=yp(152)|0;eo(f);F=f}else{f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){v=z<<1&255;A=g;a[g]=v;G=A+1|0;H=v;I=A}else{A=z+16&-16;v=yp(A)|0;c[g+8>>2]=v;C=A|1;c[g>>2]=C;c[g+4>>2]=z;G=v;H=C&255;I=g}yA(G|0,f|0,z)|0;a[G+z|0]=0;z=H&255;if((z&1|0)==0){J=z>>>1}else{J=c[g+4>>2]|0}if((H&1)==0){K=I+1|0}else{K=c[g+8>>2]|0}z=J>>>0>4>>>0;f=yD(K|0,9408,(z?4:J)|0)|0;if((f|0)==0){L=J>>>0<4>>>0?-1:z&1}else{L=f}if((H&1)!=0){yr(c[g+8>>2]|0)}if((L|0)==0){F=g3(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){C=z<<1&255;v=h;a[h]=C;M=v+1|0;N=C;O=v}else{v=z+16&-16;C=yp(v)|0;c[h+8>>2]=C;A=v|1;c[h>>2]=A;c[h+4>>2]=z;M=C;N=A&255;O=h}yA(M|0,f|0,z)|0;a[M+z|0]=0;z=N&255;if((z&1|0)==0){P=z>>>1}else{P=c[h+4>>2]|0}if((N&1)==0){Q=O+1|0}else{Q=c[h+8>>2]|0}z=P>>>0>4>>>0;f=yD(Q|0,9320,(z?4:P)|0)|0;if((f|0)==0){R=P>>>0<4>>>0?-1:z&1}else{R=f}if((N&1)!=0){yr(c[h+8>>2]|0)}if((R|0)==0){F=g4(0,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){A=z<<1&255;C=j;a[j]=A;S=C+1|0;T=A;U=C}else{C=z+16&-16;A=yp(C)|0;c[j+8>>2]=A;v=C|1;c[j>>2]=v;c[j+4>>2]=z;S=A;T=v&255;U=j}yA(S|0,f|0,z)|0;a[S+z|0]=0;z=T&255;if((z&1|0)==0){V=z>>>1}else{V=c[j+4>>2]|0}if((T&1)==0){W=U+1|0}else{W=c[j+8>>2]|0}z=V>>>0>6>>>0;f=yD(W|0,9240,(z?6:V)|0)|0;if((f|0)==0){X=V>>>0<6>>>0?-1:z&1}else{X=f}if((T&1)!=0){yr(c[j+8>>2]|0)}if((X|0)==0){F=g5(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){v=z<<1&255;A=k;a[k]=v;Y=A+1|0;Z=v;_=A}else{A=z+16&-16;v=yp(A)|0;c[k+8>>2]=v;C=A|1;c[k>>2]=C;c[k+4>>2]=z;Y=v;Z=C&255;_=k}yA(Y|0,f|0,z)|0;a[Y+z|0]=0;z=Z&255;if((z&1|0)==0){$=z>>>1}else{$=c[k+4>>2]|0}if((Z&1)==0){aa=_+1|0}else{aa=c[k+8>>2]|0}z=$>>>0>4>>>0;f=yD(aa|0,8976,(z?4:$)|0)|0;if((f|0)==0){ab=$>>>0<4>>>0?-1:z&1}else{ab=f}if((Z&1)!=0){yr(c[k+8>>2]|0)}if((ab|0)==0){F=g6(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){C=z<<1&255;v=l;a[l]=C;ac=v+1|0;ad=C;ae=v}else{v=z+16&-16;C=yp(v)|0;c[l+8>>2]=C;A=v|1;c[l>>2]=A;c[l+4>>2]=z;ac=C;ad=A&255;ae=l}yA(ac|0,f|0,z)|0;a[ac+z|0]=0;z=ad&255;if((z&1|0)==0){af=z>>>1}else{af=c[l+4>>2]|0}if((ad&1)==0){ag=ae+1|0}else{ag=c[l+8>>2]|0}z=af>>>0>4>>>0;f=yD(ag|0,8920,(z?4:af)|0)|0;if((f|0)==0){ah=af>>>0<4>>>0?-1:z&1}else{ah=f}if((ad&1)!=0){yr(c[l+8>>2]|0)}if((ah|0)==0){F=g7(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){A=z<<1&255;C=m;a[m]=A;ai=C+1|0;aj=A;ak=C}else{C=z+16&-16;A=yp(C)|0;c[m+8>>2]=A;v=C|1;c[m>>2]=v;c[m+4>>2]=z;ai=A;aj=v&255;ak=m}yA(ai|0,f|0,z)|0;a[ai+z|0]=0;z=aj&255;if((z&1|0)==0){al=z>>>1}else{al=c[m+4>>2]|0}if((aj&1)==0){am=ak+1|0}else{am=c[m+8>>2]|0}z=al>>>0>9>>>0;f=yD(am|0,9048,(z?9:al)|0)|0;if((f|0)==0){an=al>>>0<9>>>0?-1:z&1}else{an=f}if((aj&1)!=0){yr(c[m+8>>2]|0)}if((an|0)==0){f=yp(148)|0;iU(f);if((nX(d,8192)|0)!=0){c[f+144>>2]=b_(nX(d,8192)|0)|0}F=f;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){v=z<<1&255;A=n;a[n]=v;ao=A+1|0;ap=v;aq=A}else{A=z+16&-16;v=yp(A)|0;c[n+8>>2]=v;C=A|1;c[n>>2]=C;c[n+4>>2]=z;ao=v;ap=C&255;aq=n}yA(ao|0,f|0,z)|0;a[ao+z|0]=0;z=ap&255;if((z&1|0)==0){ar=z>>>1}else{ar=c[n+4>>2]|0}if((ap&1)==0){as=aq+1|0}else{as=c[n+8>>2]|0}z=ar>>>0>6>>>0;f=yD(as|0,8880,(z?6:ar)|0)|0;if((f|0)==0){at=ar>>>0<6>>>0?-1:z&1}else{at=f}if((ap&1)!=0){yr(c[n+8>>2]|0)}if((at|0)==0){F=g8(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){C=z<<1&255;v=o;a[o]=C;au=v+1|0;av=C;aw=v}else{v=z+16&-16;C=yp(v)|0;c[o+8>>2]=C;A=v|1;c[o>>2]=A;c[o+4>>2]=z;au=C;av=A&255;aw=o}yA(au|0,f|0,z)|0;a[au+z|0]=0;z=av&255;if((z&1|0)==0){ax=z>>>1}else{ax=c[o+4>>2]|0}if((av&1)==0){ay=aw+1|0}else{ay=c[o+8>>2]|0}z=ax>>>0>5>>>0;f=yD(ay|0,7912,(z?5:ax)|0)|0;if((f|0)==0){az=ax>>>0<5>>>0?-1:z&1}else{az=f}if((av&1)!=0){yr(c[o+8>>2]|0)}if((az|0)==0){F=g9(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){A=z<<1&255;C=p;a[p]=A;aA=C+1|0;aB=A;aC=C}else{C=z+16&-16;A=yp(C)|0;c[p+8>>2]=A;v=C|1;c[p>>2]=v;c[p+4>>2]=z;aA=A;aB=v&255;aC=p}yA(aA|0,f|0,z)|0;a[aA+z|0]=0;z=aB&255;if((z&1|0)==0){aD=z>>>1}else{aD=c[p+4>>2]|0}if((aB&1)==0){aE=aC+1|0}else{aE=c[p+8>>2]|0}z=aD>>>0>6>>>0;f=yD(aE|0,7328,(z?6:aD)|0)|0;if((f|0)==0){aF=aD>>>0<6>>>0?-1:z&1}else{aF=f}if((aB&1)!=0){yr(c[p+8>>2]|0)}if((aF|0)==0){F=ha(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){v=z<<1&255;A=q;a[q]=v;aG=A+1|0;aH=v;aI=A}else{A=z+16&-16;v=yp(A)|0;c[q+8>>2]=v;C=A|1;c[q>>2]=C;c[q+4>>2]=z;aG=v;aH=C&255;aI=q}yA(aG|0,f|0,z)|0;a[aG+z|0]=0;z=aH&255;if((z&1|0)==0){aJ=z>>>1}else{aJ=c[q+4>>2]|0}if((aH&1)==0){aK=aI+1|0}else{aK=c[q+8>>2]|0}z=aJ>>>0>3>>>0;f=yD(aK|0,8504,(z?3:aJ)|0)|0;if((f|0)==0){aL=aJ>>>0<3>>>0?-1:z&1}else{aL=f}if((aH&1)!=0){yr(c[q+8>>2]|0)}if((aL|0)==0){F=hb(b,d)|0;break}f=(c[t>>2]|0)+8|0;z=yz(f|0)|0;if(z>>>0>4294967279>>>0){qo(0);return 0}if(z>>>0<11>>>0){C=z<<1&255;v=r;a[r]=C;aM=v+1|0;aN=C;aO=v}else{v=z+16&-16;C=yp(v)|0;c[r+8>>2]=C;A=v|1;c[r>>2]=A;c[r+4>>2]=z;aM=C;aN=A&255;aO=r}yA(aM|0,f|0,z)|0;a[aM+z|0]=0;z=aN&255;if((z&1|0)==0){aP=z>>>1}else{aP=c[r+4>>2]|0}if((aN&1)==0){aQ=aO+1|0}else{aQ=c[r+8>>2]|0}z=aP>>>0>3>>>0;f=yD(aQ|0,7296,(z?3:aP)|0)|0;if((f|0)==0){aR=aP>>>0<3>>>0?-1:z&1}else{aR=f}if((aN&1)!=0){yr(c[r+8>>2]|0)}if((aR|0)!=0){dr(15728,(f=i,i=i+8|0,c[f>>2]=(c[t>>2]|0)+8,f)|0);i=f;aS=0;i=e;return aS|0}f=yp(144)|0;ec(f);z=b+184|0;c[z>>2]=f;f=nP(s,19184)|0;if((f|0)!=0){A=f;do{hi(b,A)|0;A=nR(A|0,19184)|0;}while((A|0)!=0)}A=c[z>>2]|0;c[z>>2]=0;F=A|0}}while(0);if((F|0)==0){aS=0;i=e;return aS|0}if((nX(d,8776)|0)!=0){c[F+96>>2]=b_(nX(d,8776)|0)|0}if((nX(d,19056)|0)!=0){s=F+20|0;t=nX(d,19056)|0;qw(s,t)|0}gQ(0,d,F|0);hc(b,F);aS=1;i=e;return aS|0}function g3(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a+172|0;if((c[e>>2]|0)!=0){cd(15656,15784,1222,19576);return 0}f=yp(160)|0;g=f;fk(g);c[e>>2]=g;g=a+180|0;h=c[g>>2]|0;c[g>>2]=f;f=nO(b|0)|0;if((f|0)!=0){b=f;do{g2(a,b)|0;b=nQ(b|0)|0;}while((b|0)!=0)}b=c[e>>2]|0;if(((c[b+8>>2]|0)-(c[b+4>>2]|0)|0)==4){dt(15616,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;j=c[e>>2]|0}else{j=b}c[g>>2]=h;if(((c[j+8>>2]|0)-(c[j+4>>2]|0)|0)>=4){k=j|0;c[e>>2]=0;i=d;return k|0}if((j|0)==0){k=0;c[e>>2]=0;i=d;return k|0}cG[c[(c[j>>2]|0)+4>>2]&1023](j);k=0;c[e>>2]=0;i=d;return k|0}function g4(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;i=i+32|0;e=b|0;f=b+16|0;g=yp(148)|0;fw(g);if((nX(d,8616)|0)==0){h=g;i=b;return h|0}if((nX(d,8664)|0)==0){h=g;i=b;return h|0}j=nX(d,8616)|0;k=yz(j|0)|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){a[e]=k<<1&255;l=e+1|0}else{m=k+16&-16;n=yp(m)|0;c[e+8>>2]=n;c[e>>2]=m|1;c[e+4>>2]=k;l=n}yA(l|0,j|0,k)|0;a[l+k|0]=0;k=nX(d,8664)|0;d=yz(k|0)|0;if(d>>>0>4294967279>>>0){qo(0);return 0}if(d>>>0<11>>>0){a[f]=d<<1&255;o=f+1|0}else{l=d+16&-16;j=yp(l)|0;c[f+8>>2]=j;c[f>>2]=l|1;c[f+4>>2]=d;o=j}yA(o|0,k|0,d)|0;a[o+d|0]=0;c[g+144>>2]=gY(0,e,f)|0;if((a[f]&1)!=0){yr(c[f+8>>2]|0)}if((a[e]&1)==0){h=g;i=b;return h|0}yr(c[e+8>>2]|0);h=g;i=b;return h|0}function g5(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;b=i;i=i+16|0;e=b|0;f=yp(172)|0;iO(f);do{if((nX(d,8568)|0)!=0){g=nX(d,8568)|0;h=yz(g|0)|0;if(h>>>0>4294967279>>>0){qo(0);return 0}if(h>>>0<11>>>0){a[e]=h<<1&255;j=e+1|0}else{k=h+16&-16;l=yp(k)|0;c[e+8>>2]=l;c[e>>2]=k|1;c[e+4>>2]=h;j=l}yA(j|0,g|0,h)|0;a[j+h|0]=0;c[f+164>>2]=hd(0,e)|0;if((a[e]&1)==0){break}yr(c[e+8>>2]|0)}}while(0);if((nX(d,8504)|0)!=0){a[f+144|0]=(ba(nX(d,8504)|0,8456)|0)==0|0}if((nX(d,8416)|0)!=0){a[f+168|0]=1}if((nX(d,8336)|0)!=0){a[f+160|0]=(ba(nX(d,8336)|0,8224)|0)==0|0}if((nX(d,8192)|0)!=0){c[f+152>>2]=b_(nX(d,8192)|0)|0}if((nX(d,8144)|0)==0){m=f;i=b;return m|0}c[f+156>>2]=b_(nX(d,8144)|0)|0;m=f;i=b;return m|0}function g6(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+72|0;f=e|0;g=e+8|0;h=e+24|0;j=e+40|0;k=e+56|0;l=yp(208)|0;m=l;i_(m);c[f>>2]=m;do{if((nX(d,8112)|0)!=0){n=nX(d,8112)|0;o=yz(n|0)|0;if(o>>>0>4294967279>>>0){qo(0);return 0}if(o>>>0<11>>>0){a[g]=o<<1&255;p=g+1|0}else{q=o+16&-16;r=yp(q)|0;c[g+8>>2]=r;c[g>>2]=q|1;c[g+4>>2]=o;p=r}yA(p|0,n|0,o)|0;a[p+o|0]=0;a[l+178|0]=(he(0,g)|0)&255;if((a[g]&1)==0){break}yr(c[g+8>>2]|0)}}while(0);do{if((nX(d,8056)|0)!=0){g=nX(d,8056)|0;p=yz(g|0)|0;if(p>>>0>4294967279>>>0){qo(0);return 0}if(p>>>0<11>>>0){o=p<<1&255;a[h]=o;s=h+1|0;t=o}else{o=p+16&-16;n=yp(o)|0;c[h+8>>2]=n;r=o|1;c[h>>2]=r;c[h+4>>2]=p;s=n;t=r&255}yA(s|0,g|0,p)|0;a[s+p|0]=0;if((t&1)==0){u=h+1|0}else{u=c[h+8>>2]|0}a[l+177|0]=(b_(u|0)|0)&255;if((t&1)==0){break}yr(c[h+8>>2]|0)}}while(0);do{if((nX(d,8008)|0)!=0){h=nX(d,8008)|0;t=yz(h|0)|0;if(t>>>0>4294967279>>>0){qo(0);return 0}if(t>>>0<11>>>0){u=j;a[u]=t<<1&255;v=j+1|0;w=u}else{u=t+16&-16;s=yp(u)|0;c[j+8>>2]=s;c[j>>2]=u|1;c[j+4>>2]=t;v=s;w=j}yA(v|0,h|0,t)|0;a[v+t|0]=0;c[l+152>>2]=hf(0,j)|0;if((a[w]&1)==0){break}yr(c[j+8>>2]|0)}}while(0);if((nX(d,7960)|0)!=0){a[l+149|0]=(b_(nX(d,7960)|0)|0)&255}do{if((nX(d,7912)|0)!=0){j=nX(d,7912)|0;w=yz(j|0)|0;if(w>>>0>4294967279>>>0){qo(0);return 0}if(w>>>0<11>>>0){a[k]=w<<1&255;x=k+1|0}else{v=w+16&-16;t=yp(v)|0;c[k+8>>2]=t;c[k>>2]=v|1;c[k+4>>2]=w;x=t}yA(x|0,j|0,w)|0;a[x+w|0]=0;a[l+176|0]=hg(0,k)|0;if((a[k]&1)==0){break}yr(c[k+8>>2]|0)}}while(0);do{if((nX(d,7824)|0)!=0){a[l+191|0]=1;if((ba(nX(d,7824)|0,7784)|0)!=0){break}a[l+193|0]=1}}while(0);if((nX(d,7600)|0)!=0){a[l+200|0]=1}if((nX(d,7504)|0)!=0){a[l+190|0]=(ba(nX(d,7504)|0,8456)|0)==0|0}if((nX(d,15608)|0)==0){y=m;z=y|0;i=e;return z|0}if((ba(nX(d,15608)|0,15568)|0)==0){A=3451}else{if((ba(nX(d,15608)|0,15560)|0)==0){A=3451}}do{if((A|0)==3451){i8(m);l=b+196|0;k=c[l>>2]|0;if((k|0)==(c[b+200>>2]|0)){hk(b+192|0,f);break}if((k|0)==0){B=0}else{c[k>>2]=m;B=c[l>>2]|0}c[l>>2]=B+4}}while(0);do{if((ba(nX(d,15608)|0,15528)|0)!=0){if((ba(nX(d,15608)|0,15560)|0)==0){break}y=c[f>>2]|0;z=y|0;i=e;return z|0}}while(0);d=c[f>>2]|0;if(hh(b,d)|0){y=d;z=y|0;i=e;return z|0}dt(15496,(b=i,i=i+1|0,i=i+7&-8,c[b>>2]=0,b)|0);i=b;y=d;z=y|0;i=e;return z|0}function g7(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;b=i;i=i+48|0;e=b|0;f=b+16|0;g=b+32|0;h=yp(184)|0;lt(h);do{if((nX(d,8008)|0)!=0){j=nX(d,8008)|0;k=yz(j|0)|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){l=e;a[l]=k<<1&255;m=e+1|0;n=l}else{l=k+16&-16;o=yp(l)|0;c[e+8>>2]=o;c[e>>2]=l|1;c[e+4>>2]=k;m=o;n=e}yA(m|0,j|0,k)|0;a[m+k|0]=0;c[h+152>>2]=hf(0,e)|0;if((a[n]&1)==0){break}yr(c[e+8>>2]|0)}}while(0);if((nX(d,7960)|0)!=0){a[h+149|0]=(b_(nX(d,7960)|0)|0)&255}do{if((nX(d,7432)|0)!=0){e=nX(d,7432)|0;n=yz(e|0)|0;if(n>>>0>4294967279>>>0){qo(0);return 0}if(n>>>0<11>>>0){a[f]=n<<1&255;p=f+1|0}else{m=n+16&-16;k=yp(m)|0;c[f+8>>2]=k;c[f>>2]=m|1;c[f+4>>2]=n;p=k}yA(p|0,e|0,n)|0;a[p+n|0]=0;a[h+177|0]=(he(0,f)|0)&255;if((a[f]&1)==0){break}yr(c[f+8>>2]|0)}}while(0);if((nX(d,7368)|0)==0){q=h;i=b;return q|0}f=nX(d,7368)|0;d=yz(f|0)|0;if(d>>>0>4294967279>>>0){qo(0);return 0}if(d>>>0<11>>>0){p=d<<1&255;a[g]=p;r=g+1|0;s=p}else{p=d+16&-16;n=yp(p)|0;c[g+8>>2]=n;e=p|1;c[g>>2]=e;c[g+4>>2]=d;r=n;s=e&255}yA(r|0,f|0,d)|0;a[r+d|0]=0;if((s&1)==0){t=g+1|0}else{t=c[g+8>>2]|0}a[h+176|0]=(b_(t|0)|0)&255;if((s&1)==0){q=h;i=b;return q|0}yr(c[g+8>>2]|0);q=h;i=b;return q|0}function g8(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;e=a+176|0;if((c[e>>2]|0)!=0){cd(15464,15784,1386,19496);return 0}f=yp(168)|0;g=f;nx(g);c[e>>2]=g;g=a+180|0;h=c[g>>2]|0;c[g>>2]=f;if((nX(b,8192)|0)!=0){f=b_(nX(b,8192)|0)|0;c[(c[e>>2]|0)+160>>2]=f}if((nX(b,8144)|0)!=0){f=b_(nX(b,8144)|0)|0;c[(c[e>>2]|0)+164>>2]=f}f=nO(b|0)|0;if((f|0)!=0){b=f;do{g2(a,b)|0;b=nQ(b|0)|0;}while((b|0)!=0)}b=c[e>>2]|0;if(((c[b+8>>2]|0)-(c[b+4>>2]|0)|0)==4){dt(15424,(a=i,i=i+1|0,i=i+7&-8,c[a>>2]=0,a)|0);i=a;j=c[e>>2]|0}else{j=b}c[g>>2]=h;if(((c[j+8>>2]|0)-(c[j+4>>2]|0)|0)>=4){c[e>>2]=0;k=j|0;i=d;return k|0}if((j|0)==0){k=0;i=d;return k|0}cG[c[(c[j>>2]|0)+4>>2]&1023](j);k=0;i=d;return k|0}function g9(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+48|0;e=b|0;f=b+16|0;g=b+32|0;h=yp(160)|0;m5(h,2);do{if((nX(d,7912)|0)!=0){j=nX(d,7912)|0;k=yz(j|0)|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){a[e]=k<<1&255;l=e+1|0}else{m=k+16&-16;n=yp(m)|0;c[e+8>>2]=n;c[e>>2]=m|1;c[e+4>>2]=k;l=n}yA(l|0,j|0,k)|0;a[l+k|0]=0;a[h+157|0]=hg(0,e)|0;if((a[e]&1)==0){break}yr(c[e+8>>2]|0)}}while(0);do{if((nX(d,7432)|0)!=0){e=nX(d,7432)|0;l=yz(e|0)|0;if(l>>>0>4294967279>>>0){qo(0);return 0}if(l>>>0<11>>>0){a[f]=l<<1&255;o=f+1|0}else{k=l+16&-16;j=yp(k)|0;c[f+8>>2]=j;c[f>>2]=k|1;c[f+4>>2]=l;o=j}yA(o|0,e|0,l)|0;a[o+l|0]=0;a[h+149|0]=(he(0,f)|0)&255;if((a[f]&1)==0){break}yr(c[f+8>>2]|0)}}while(0);if((nX(d,7368)|0)==0){p=h;i=b;return p|0}f=nX(d,7368)|0;d=yz(f|0)|0;if(d>>>0>4294967279>>>0){qo(0);return 0}if(d>>>0<11>>>0){o=d<<1&255;a[g]=o;q=g+1|0;r=o}else{o=d+16&-16;l=yp(o)|0;c[g+8>>2]=l;e=o|1;c[g>>2]=e;c[g+4>>2]=d;q=l;r=e&255}yA(q|0,f|0,d)|0;a[q+d|0]=0;if((r&1)==0){s=g+1|0}else{s=c[g+8>>2]|0}a[h+148|0]=(b_(s|0)|0)&255;if((r&1)==0){p=h;i=b;return p|0}yr(c[g+8>>2]|0);p=h;i=b;return p|0}function ha(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+32|0;e=b|0;f=b+16|0;g=yp(160)|0;m5(g,3);do{if((nX(d,8112)|0)!=0){h=nX(d,8112)|0;j=yz(h|0)|0;if(j>>>0>4294967279>>>0){qo(0);return 0}if(j>>>0<11>>>0){a[e]=j<<1&255;k=e+1|0}else{l=j+16&-16;m=yp(l)|0;c[e+8>>2]=m;c[e>>2]=l|1;c[e+4>>2]=j;k=m}yA(k|0,h|0,j)|0;a[k+j|0]=0;a[g+149|0]=(he(0,e)|0)&255;if((a[e]&1)==0){break}yr(c[e+8>>2]|0)}}while(0);if((nX(d,8056)|0)==0){n=g;i=b;return n|0}e=nX(d,8056)|0;d=yz(e|0)|0;if(d>>>0>4294967279>>>0){qo(0);return 0}if(d>>>0<11>>>0){k=d<<1&255;a[f]=k;o=f+1|0;p=k}else{k=d+16&-16;j=yp(k)|0;c[f+8>>2]=j;h=k|1;c[f>>2]=h;c[f+4>>2]=d;o=j;p=h&255}yA(o|0,e|0,d)|0;a[o+d|0]=0;if((p&1)==0){q=f+1|0}else{q=c[f+8>>2]|0}a[g+148|0]=(b_(q|0)|0)&255;if((p&1)==0){n=g;i=b;return n|0}yr(c[f+8>>2]|0);n=g;i=b;return n|0}function hb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+32|0;e=b|0;f=b+16|0;g=yp(160)|0;m5(g,1);a[g+156|0]=0;do{if((nX(d,7432)|0)!=0){h=nX(d,7432)|0;j=yz(h|0)|0;if(j>>>0>4294967279>>>0){qo(0);return 0}if(j>>>0<11>>>0){a[e]=j<<1&255;k=e+1|0}else{l=j+16&-16;m=yp(l)|0;c[e+8>>2]=m;c[e>>2]=l|1;c[e+4>>2]=j;k=m}yA(k|0,h|0,j)|0;a[k+j|0]=0;a[g+149|0]=(he(0,e)|0)&255;if((a[e]&1)==0){break}yr(c[e+8>>2]|0)}}while(0);if((nX(d,7368)|0)==0){n=g;i=b;return n|0}e=nX(d,7368)|0;d=yz(e|0)|0;if(d>>>0>4294967279>>>0){qo(0);return 0}if(d>>>0<11>>>0){k=d<<1&255;a[f]=k;o=f+1|0;p=k}else{k=d+16&-16;j=yp(k)|0;c[f+8>>2]=j;h=k|1;c[f>>2]=h;c[f+4>>2]=d;o=j;p=h&255}yA(o|0,e|0,d)|0;a[o+d|0]=0;if((p&1)==0){q=f+1|0}else{q=c[f+8>>2]|0}a[g+148|0]=(b_(q|0)|0)&255;if((p&1)==0){n=g;i=b;return n|0}yr(c[f+8>>2]|0);n=g;i=b;return n|0}function hc(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+180|0;a=c[d>>2]|0;if((a|0)==0){cd(15312,15784,1537,19464)}e=(yc(a,37064,37112,-1)|0)==0;a=c[d>>2]|0;if(!e){ii(a,b,-1);return}if((a|0)==0){return}e=(yc(a,37064,36920,-1)|0)==0;a=c[d>>2]|0;if(!e){ej(a,b,-1);return}if((a|0)==0){return}e=(yc(a,37064,37272,-1)|0)==0;a=c[d>>2]|0;if(!e){fp(a,b);return}if((a|0)==0){return}if((yc(a,37064,36984,-1)|0)==0){return}nC(c[d>>2]|0,b);return}function hd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>1>>>0;do{if((yD(l|0,17568,(f?1:j)|0)|0)==0){if((j|0)!=0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}g=n>>>0>1>>>0;do{if((yD(o|0,17480,(g?1:n)|0)|0)==0){if((n|0)!=0&(g^1)){m=2}else{break}i=b;return m|0}}while(0);if(k){p=e+1|0}else{p=c[d+8>>2]|0}dt(14848,(d=i,i=i+8|0,c[d>>2]=p,d)|0);i=d;m=1;i=b;return m|0}function he(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>1>>>0;do{if((yD(l|0,18816,(f?1:j)|0)|0)==0){if((j|0)!=0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}f=n>>>0>1>>>0;do{if((yD(o|0,18648,(f?1:n)|0)|0)==0){if((n|0)!=0&(f^1)){m=2}else{break}i=b;return m|0}}while(0);if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}f=p>>>0>1>>>0;do{if((yD(q|0,18592,(f?1:p)|0)|0)==0){if((p|0)!=0&(f^1)){m=3}else{break}i=b;return m|0}}while(0);if(h){r=g>>>1}else{r=c[d+4>>2]|0}if(k){s=e+1|0}else{s=c[d+8>>2]|0}f=r>>>0>1>>>0;do{if((yD(s|0,18544,(f?1:r)|0)|0)==0){if((r|0)!=0&(f^1)){m=4}else{break}i=b;return m|0}}while(0);if(h){t=g>>>1}else{t=c[d+4>>2]|0}if(k){u=e+1|0}else{u=c[d+8>>2]|0}f=t>>>0>1>>>0;do{if((yD(u|0,18440,(f?1:t)|0)|0)==0){if((t|0)!=0&(f^1)){m=5}else{break}i=b;return m|0}}while(0);if(h){v=g>>>1}else{v=c[d+4>>2]|0}if(k){w=e+1|0}else{w=c[d+8>>2]|0}f=v>>>0>1>>>0;do{if((yD(w|0,18368,(f?1:v)|0)|0)==0){if((v|0)!=0&(f^1)){m=6}else{break}i=b;return m|0}}while(0);if(h){x=g>>>1}else{x=c[d+4>>2]|0}if(k){y=e+1|0}else{y=c[d+8>>2]|0}g=x>>>0>1>>>0;do{if((yD(y|0,18864,(g?1:x)|0)|0)==0){if((x|0)!=0&(g^1)){m=7}else{break}i=b;return m|0}}while(0);if(k){z=e+1|0}else{z=c[d+8>>2]|0}dt(15208,(d=i,i=i+8|0,c[d>>2]=z,d)|0);i=d;m=1;i=b;return m|0}function hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;b=d;e=a[d]|0;f=e&255;g=(f&1|0)==0;if(g){h=f>>>1}else{h=c[d+4>>2]|0}i=(e&1)==0;if(i){j=b+1|0}else{j=c[d+8>>2]|0}e=h>>>0>5>>>0;do{if((yD(j|0,17440,(e?5:h)|0)|0)==0){if(h>>>0>4>>>0&(e^1)){k=0}else{break}return k|0}}while(0);if(g){l=f>>>1}else{l=c[d+4>>2]|0}if(i){m=b+1|0}else{m=c[d+8>>2]|0}e=l>>>0>6>>>0;do{if((yD(m|0,17416,(e?6:l)|0)|0)==0){if(l>>>0>5>>>0&(e^1)){k=1}else{break}return k|0}}while(0);if(g){n=f>>>1}else{n=c[d+4>>2]|0}if(i){o=b+1|0}else{o=c[d+8>>2]|0}e=n>>>0>10>>>0;do{if((yD(o|0,17312,(e?10:n)|0)|0)==0){if(n>>>0>9>>>0&(e^1)){k=2}else{break}return k|0}}while(0);if(g){p=f>>>1}else{p=c[d+4>>2]|0}if(i){q=b+1|0}else{q=c[d+8>>2]|0}e=p>>>0>6>>>0;do{if((yD(q|0,17296,(e?6:p)|0)|0)==0){if(p>>>0>5>>>0&(e^1)){k=3}else{break}return k|0}}while(0);if(g){r=f>>>1}else{r=c[d+4>>2]|0}if(i){s=b+1|0}else{s=c[d+8>>2]|0}e=r>>>0>10>>>0;do{if((yD(s|0,17264,(e?10:r)|0)|0)==0){if(r>>>0>9>>>0&(e^1)){k=4}else{break}return k|0}}while(0);if(g){t=f>>>1}else{t=c[d+4>>2]|0}if(i){u=b+1|0}else{u=c[d+8>>2]|0}e=t>>>0>4>>>0;do{if((yD(u|0,17168,(e?4:t)|0)|0)==0){if(t>>>0>3>>>0&(e^1)){k=5}else{break}return k|0}}while(0);if(g){v=f>>>1}else{v=c[d+4>>2]|0}if(i){w=b+1|0}else{w=c[d+8>>2]|0}e=v>>>0>8>>>0;do{if((yD(w|0,17144,(e?8:v)|0)|0)==0){if(v>>>0>7>>>0&(e^1)){k=6}else{break}return k|0}}while(0);if(g){x=f>>>1}else{x=c[d+4>>2]|0}if(i){y=b+1|0}else{y=c[d+8>>2]|0}e=x>>>0>4>>>0;do{if((yD(y|0,17112,(e?4:x)|0)|0)==0){if(x>>>0>3>>>0&(e^1)){k=0}else{break}return k|0}}while(0);if(g){z=f>>>1}else{z=c[d+4>>2]|0}if(i){A=b+1|0}else{A=c[d+8>>2]|0}e=z>>>0>5>>>0;do{if((yD(A|0,17080,(e?5:z)|0)|0)==0){if(z>>>0>4>>>0&(e^1)){k=1}else{break}return k|0}}while(0);if(g){B=f>>>1}else{B=c[d+4>>2]|0}if(i){C=b+1|0}else{C=c[d+8>>2]|0}e=B>>>0>1>>>0;do{if((yD(C|0,8368,(e?1:B)|0)|0)==0){if((B|0)!=0&(e^1)){k=2}else{break}return k|0}}while(0);if(g){D=f>>>1}else{D=c[d+4>>2]|0}if(i){E=b+1|0}else{E=c[d+8>>2]|0}e=D>>>0>1>>>0;do{if((yD(E|0,17848,(e?1:D)|0)|0)==0){if((D|0)!=0&(e^1)){k=3}else{break}return k|0}}while(0);if(g){F=f>>>1}else{F=c[d+4>>2]|0}if(i){G=b+1|0}else{G=c[d+8>>2]|0}e=F>>>0>1>>>0;do{if((yD(G|0,17824,(e?1:F)|0)|0)==0){if((F|0)!=0&(e^1)){k=4}else{break}return k|0}}while(0);if(g){H=f>>>1}else{H=c[d+4>>2]|0}if(i){I=b+1|0}else{I=c[d+8>>2]|0}e=H>>>0>1>>>0;do{if((yD(I|0,17024,(e?1:H)|0)|0)==0){if((H|0)!=0&(e^1)){k=5}else{break}return k|0}}while(0);if(g){J=f>>>1}else{J=c[d+4>>2]|0}if(i){K=b+1|0}else{K=c[d+8>>2]|0}e=J>>>0>2>>>0;do{if((yD(K|0,17016,(e?2:J)|0)|0)==0){if(J>>>0>1>>>0&(e^1)){k=6}else{break}return k|0}}while(0);if(g){L=f>>>1}else{L=c[d+4>>2]|0}if(i){M=b+1|0}else{M=c[d+8>>2]|0}e=L>>>0>2>>>0;do{if((yD(M|0,17e3,(e?2:L)|0)|0)==0){if(L>>>0>1>>>0&(e^1)){k=7}else{break}return k|0}}while(0);if(g){N=f>>>1}else{N=c[d+4>>2]|0}if(i){O=b+1|0}else{O=c[d+8>>2]|0}e=N>>>0>2>>>0;do{if((yD(O|0,16992,(e?2:N)|0)|0)==0){if(N>>>0>1>>>0&(e^1)){k=8}else{break}return k|0}}while(0);if(g){P=f>>>1}else{P=c[d+4>>2]|0}if(i){Q=b+1|0}else{Q=c[d+8>>2]|0}d=P>>>0>3>>>0;b=yD(Q|0,16944,(d?3:P)|0)|0;if((b|0)==0){R=P>>>0<3>>>0?-1:d&1}else{R=b}k=(R|0)==0?9:4;return k|0}function hg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;b=i;e=d;f=a[d]|0;g=f&255;h=(g&1|0)==0;if(h){j=g>>>1}else{j=c[d+4>>2]|0}k=(f&1)==0;if(k){l=e+1|0}else{l=c[d+8>>2]|0}f=j>>>0>1>>>0;do{if((yD(l|0,18232,(f?1:j)|0)|0)==0){if((j|0)!=0&(f^1)){m=1}else{break}i=b;return m|0}}while(0);if(h){n=g>>>1}else{n=c[d+4>>2]|0}if(k){o=e+1|0}else{o=c[d+8>>2]|0}f=n>>>0>1>>>0;do{if((yD(o|0,18544,(f?1:n)|0)|0)==0){if((n|0)!=0&(f^1)){m=2}else{break}i=b;return m|0}}while(0);if(h){p=g>>>1}else{p=c[d+4>>2]|0}if(k){q=e+1|0}else{q=c[d+8>>2]|0}f=p>>>0>1>>>0;do{if((yD(q|0,10264,(f?1:p)|0)|0)==0){if((p|0)!=0&(f^1)){m=3}else{break}i=b;return m|0}}while(0);if(h){r=g>>>1}else{r=c[d+4>>2]|0}if(k){s=e+1|0}else{s=c[d+8>>2]|0}f=r>>>0>1>>>0;do{if((yD(s|0,18128,(f?1:r)|0)|0)==0){if((r|0)!=0&(f^1)){m=4}else{break}i=b;return m|0}}while(0);if(h){t=g>>>1}else{t=c[d+4>>2]|0}if(k){u=e+1|0}else{u=c[d+8>>2]|0}f=t>>>0>2>>>0;do{if((yD(u|0,18080,(f?2:t)|0)|0)==0){if(t>>>0>1>>>0&(f^1)){m=5}else{break}i=b;return m|0}}while(0);if(h){v=g>>>1}else{v=c[d+4>>2]|0}if(k){w=e+1|0}else{w=c[d+8>>2]|0}f=v>>>0>2>>>0;do{if((yD(w|0,18016,(f?2:v)|0)|0)==0){if(v>>>0>1>>>0&(f^1)){m=6}else{break}i=b;return m|0}}while(0);if(h){x=g>>>1}else{x=c[d+4>>2]|0}if(k){y=e+1|0}else{y=c[d+8>>2]|0}g=x>>>0>2>>>0;do{if((yD(y|0,17904,(g?2:x)|0)|0)==0){if(x>>>0>1>>>0&(g^1)){m=7}else{break}i=b;return m|0}}while(0);if(k){z=e+1|0}else{z=c[d+8>>2]|0}dt(15152,(d=i,i=i+8|0,c[d>>2]=z,d)|0);i=d;m=3;i=b;return m|0}function hh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+160|0;if((c[e>>2]|0)==0){cd(10064,15784,1634,19592);return 0}f=b+164|0;if((c[f>>2]|0)==0){cd(9800,15784,1635,19592);return 0}g=b+192|0;h=c[g>>2]|0;i=b+196|0;if((h|0)==(c[i>>2]|0)){j=0;return j|0}b=d+177|0;k=d+178|0;l=h;L4484:while(1){h=jy(c[l>>2]|0,37112,-1)|0;L4486:do{if((h|0)!=0){m=yc(h,37064,37112,-1)|0;if((m|0)==0){break}n=jy(m,37096,-1)|0;do{if((n|0)!=0){o=yc(n,37064,37096,-1)|0;if((o|0)==0){break}if((c[(c[e>>2]|0)+124>>2]|0)!=(c[o+124>>2]|0)){break L4486}}}while(0);if((c[(c[f>>2]|0)+144>>2]|0)!=(c[m+144>>2]|0)){break}p=c[l>>2]|0;if((a[b]|0)!=(a[p+177|0]|0)){break}if((a[k]|0)==(a[p+178|0]|0)){break L4484}}}while(0);h=l+4|0;if((h|0)==(c[i>>2]|0)){j=0;q=3981;break}else{l=h}}if((q|0)==3981){return j|0}i9(d,p);p=c[g>>2]|0;g=l-p>>2;l=p+(g+1<<2)|0;d=(c[i>>2]|0)-l|0;yB(p+(g<<2)|0,l|0,d|0);l=p+((d>>2)+g<<2)|0;g=c[i>>2]|0;if((l|0)==(g|0)){j=1;return j|0}c[i>>2]=g+(~((g-4+(-l|0)|0)>>>2)<<2);j=1;return j|0}function hi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=a+168|0;if((c[d>>2]|0)!=0){cd(15352,15784,1496,19608);return 0}if((c[a+184>>2]|0)==0){cd(15336,15784,1497,19608);return 0}e=yp(72)|0;eg(e);c[d>>2]=e;if((nX(b,19088)|0)!=0){e=(c[d>>2]|0)+60|0;f=nX(b,19088)|0;qw(e,f)|0}f=a+180|0;e=c[f>>2]|0;c[f>>2]=c[d>>2];g=nO(b|0)|0;if((g|0)==0){c[f>>2]=e;h=c[d>>2]|0;c[d>>2]=0;i=(h|0)!=0;return i|0}else{j=g}do{g2(a,j)|0;j=nQ(j|0)|0;}while((j|0)!=0);c[f>>2]=e;h=c[d>>2]|0;c[d>>2]=0;i=(h|0)!=0;return i|0}function hj(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=b;yC(g|0,0,12);h=a[e]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[e+4>>2]|0}i=f;k=f;l=d[k]|0;if((l&1|0)==0){m=l>>>1}else{m=c[f+4>>2]|0}if((h&1)==0){n=e+1|0}else{n=c[e+8>>2]|0}e=m+j|0;if(e>>>0>4294967279>>>0){qo(0)}if(e>>>0<11>>>0){a[g]=j<<1&255;o=b+1|0}else{g=e+16&-16;e=yp(g)|0;c[b+8>>2]=e;c[b>>2]=g|1;c[b+4>>2]=j;o=e}yA(o|0,n|0,j)|0;a[o+j|0]=0;if((a[k]&1)==0){p=i+1|0}else{p=c[f+8>>2]|0}qB(b,p,m)|0;return}function hk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){vf(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=4026}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=4026}}if((m|0)==4026){n=yp(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;yA(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}yr(l);return}function hl(b){b=b|0;var d=0;c[b>>2]=23076;c[b+64>>2]=23116;c[b+8>>2]=23096;d=b+12|0;c[d>>2]=23256;if((a[b+44|0]&1)!=0){yr(c[b+52>>2]|0)}c[d>>2]=23400;vn(b+16|0);qO(b+64|0);return}function hm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;a[g]=d;d=h|0;a[d]=0;c[h+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){ro(o)|0}a[d]=1;o=c[(c[l>>2]|0)-12>>2]|0;c[j>>2]=c[n+(o+24)>>2];p=n+o|0;q=g+1|0;r=(c[n+(o+4)>>2]&176|0)==32?q:g;s=n+(o+76)|0;o=c[s>>2]|0;if((o|0)==-1){qR(f,p);t=vp(f,43928)|0;u=cW[c[(c[t>>2]|0)+28>>2]&255](t,32)|0;vn(f);c[s>>2]=u<<24>>24;v=u}else{v=o&255}fK(k,j,g,r,q,p,v);if((c[k>>2]|0)!=0){break}p=c[(c[l>>2]|0)-12>>2]|0;qN(n+p|0,c[n+(p+16)>>2]|5)}}while(0);rG(h);i=e;return b|0}function hn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b;f=c[d+48>>2]|0;if((f&16|0)!=0){g=d+44|0;h=c[g>>2]|0;i=c[d+24>>2]|0;if(h>>>0<i>>>0){c[g>>2]=i;j=i}else{j=h}h=c[d+20>>2]|0;i=h;g=j-i|0;if(g>>>0>4294967279>>>0){qo(0)}if(g>>>0<11>>>0){a[e]=g<<1&255;k=b+1|0}else{l=g+16&-16;m=yp(l)|0;c[b+8>>2]=m;c[b>>2]=l|1;c[b+4>>2]=g;k=m}if((h|0)==(j|0)){n=k}else{m=j+(-i|0)|0;i=k;g=h;while(1){a[i]=a[g]|0;h=g+1|0;if((h|0)==(j|0)){break}else{i=i+1|0;g=h}}n=k+m|0}a[n]=0;return}if((f&8|0)==0){yC(e|0,0,12);return}f=c[d+8>>2]|0;n=c[d+16>>2]|0;d=f;m=n-d|0;if(m>>>0>4294967279>>>0){qo(0)}if(m>>>0<11>>>0){a[e]=m<<1&255;o=b+1|0}else{e=m+16&-16;k=yp(e)|0;c[b+8>>2]=k;c[b>>2]=e|1;c[b+4>>2]=m;o=k}if((f|0)==(n|0)){p=o}else{k=n+(-d|0)|0;d=o;m=f;while(1){a[d]=a[m]|0;f=m+1|0;if((f|0)==(n|0)){break}else{d=d+1|0;m=f}}p=o+k|0}a[p]=0;return}function ho(b){b=b|0;var d=0;c[b>>2]=23076;c[b+64>>2]=23116;c[b+8>>2]=23096;d=b+12|0;c[d>>2]=23256;if((a[b+44|0]&1)!=0){yr(c[b+52>>2]|0)}c[d>>2]=23400;vn(b+16|0);qO(b+64|0);yr(b);return}function hp(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=23076;b=d+64|0;c[b>>2]=23116;c[d+8>>2]=23096;e=d+12|0;c[e>>2]=23256;if((a[d+44|0]&1)!=0){yr(c[d+52>>2]|0)}c[e>>2]=23400;vn(d+16|0);qO(b);return}function hq(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=23076;b=d+64|0;c[b>>2]=23116;c[d+8>>2]=23096;e=d+12|0;c[e>>2]=23256;if((a[d+44|0]&1)!=0){yr(c[d+52>>2]|0)}c[e>>2]=23400;vn(d+16|0);qO(b);yr(d);return}function hr(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=23076;b=d+(e+64)|0;c[b>>2]=23116;c[d+(e+8)>>2]=23096;f=d+(e+12)|0;c[f>>2]=23256;if((a[d+(e+44)|0]&1)!=0){yr(c[d+(e+52)>>2]|0)}c[f>>2]=23400;vn(d+(e+16)|0);qO(b);return}function hs(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=23076;f=d+(e+64)|0;c[f>>2]=23116;c[d+(e+8)>>2]=23096;g=d+(e+12)|0;c[g>>2]=23256;if((a[d+(e+44)|0]&1)!=0){yr(c[d+(e+52)>>2]|0)}c[g>>2]=23400;vn(d+(e+16)|0);qO(f);yr(b);return}function ht(a,b,d){a=a|0;b=b|0;d=d|0;c[a+156>>2]=21632;gu(a,30276,b);c[a>>2]=25212;c[a+156>>2]=25240;yC(a+116|0,0,12);c[a+144>>2]=0;c[a+148>>2]=0;c[a+152>>2]=0;qv(a+116|0,d)|0;yC(a+128|0,0,16);return}function hu(a){a=a|0;hv(a);yr(a);return}function hv(b){b=b|0;var d=0,e=0,f=0,g=0;c[b>>2]=25212;c[b+156>>2]=25240;d=c[b+144>>2]|0;e=d;if((d|0)!=0){f=b+148|0;g=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}yr(d)}if((a[b+116|0]&1)!=0){yr(c[b+124>>2]|0)}gy(b,30276);qO(b+156|0);return}function hw(a){a=a|0;var b=0;b=a+(c[(c[a>>2]|0)-12>>2]|0)|0;hv(b);yr(b);return}function hx(a){a=a|0;hv(a+(c[(c[a>>2]|0)-12>>2]|0)|0);return}function hy(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+192|0;e=d|0;f=e|0;g=e;h=e+8|0;j=e;c[f>>2]=37940;k=e;l=e+108|0;c[l>>2]=37960;c[e+4>>2]=0;qS(e+108|0,h);c[e+180>>2]=0;c[e+184>>2]=-1;c[f>>2]=23476;c[e+108>>2]=23496;fZ(h);m=b+116|0;if((a[m]&1)==0){n=m+1|0}else{n=c[b+124>>2]|0}m=e+72|0;do{if((c[m>>2]|0)==0){o=bN(n|0,11088)|0;c[m>>2]=o;if((o|0)==0){p=4179;break}c[e+96>>2]=8;qN(k+(c[(c[j>>2]|0)-12>>2]|0)|0,0)}else{p=4179}}while(0);if((p|0)==4179){p=c[(c[j>>2]|0)-12>>2]|0;qN(k+p|0,c[k+(p+16)>>2]|4)}hz(b,g,44024);c[f>>2]=23476;c[l>>2]=23496;fP(h);qO(e+108|0);i=d;return 1}function hz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0;f=i;i=i+15472|0;g=f|0;h=f+16|0;j=f+5144|0;k=f+15152|0;l=f+15240|0;m=f+15280|0;n=f+15296|0;o=f+15384|0;p=f+24|0;yC(p|0,0,1024);q=f+1048|0;yC(q|0,0,1024);r=f+2072|0;yC(r|0,0,1024);s=f+3096|0;yC(s|0,0,1024);t=f+4120|0;yC(t|0,0,1024);u=j|0;yC(u|0,0,10001);h$(k);v=l+16|0;w=l+12|0;a[w]=0;c[l+8>>2]=0;x=l+23|0;yC(v|0,0,7);a[x]=4;y=l+24|0;c[l>>2]=0;c[l+4>>2]=0;z=l+36|0;c[z>>2]=0;yC(y|0,0,9);A=m|0;c[A>>2]=0;B=m+4|0;c[B>>2]=0;C=m+8|0;c[C>>2]=0;D=d;E=c[(c[D>>2]|0)-12>>2]|0;F=d;L4687:do{if((c[F+(E+16)>>2]&2|0)==0){G=E;do{qR(h,F+G|0);H=vp(h,43928)|0;I=cW[c[(c[H>>2]|0)+28>>2]&255](H,10)|0;vn(h);rt(d,45696,1e4,I)|0;if((c[F+((c[(c[D>>2]|0)-12>>2]|0)+16)>>2]&2|0)!=0){dr(12944,(J=i,i=i+1|0,i=i+7&-8,c[J>>2]=0,J)|0);i=J}hB(0,55704,59352,45696);if((ba(55704,17424)|0)==0){break L4687}do{if((ba(55704,14208)|0)==0){yF(p|0,59352)|0}else{if((ba(55704,12520)|0)==0){yF(q|0,59352)|0;break}if((ba(55704,11120)|0)==0){yF(r|0,59352)|0;break}if((ba(55704,10272)|0)==0){yF(s|0,59352)|0;break}if((ba(55704,9592)|0)==0){yF(t|0,59352)|0;break}if((ba(55704,8728)|0)==0){yF(u|0,59352)|0;break}if((bI(45696,8184,2)|0)!=0){break}I=hC(e,45696)|0;hC(I,7592)|0}}while(0);G=c[(c[D>>2]|0)-12>>2]|0;}while((c[F+(G+16)>>2]&2|0)==0)}}while(0);if((a[p]|0)!=0){F=yp(148)|0;fw(F);hD(0,p,F,0)|0;c[k>>2]=F}if((a[r]|0)!=0){hE(0,r,k,0)|0}if((a[s]|0)!=0){hF(0,s,k,0)|0}s=yz(u|0)|0;if((s|0)>0){r=k+64|0;F=k+76|0;p=k|0;D=k+4|0;e=k+20|0;t=k+24|0;q=k+8|0;d=k+12|0;h=k+80|0;E=g|0;g=k+8|0;G=n+8|0;I=n+12|0;H=n+16|0;K=g|0;L=l+21|0;M=l+20|0;N=l+27|0;O=0;P=0;while(1){Q=((a[j+O|0]|0)==32)+O|0;R=j+Q|0;S=a[R]|0;L4738:do{if((S<<24>>24|0)==39|(S<<24>>24|0)==44){T=yz(u|0)|0;if((S<<24>>24|0)==44){U=Q;V=3;while(1){W=U+1|0;if((W|0)>=(T|0)){break}if((a[j+W|0]|0)==44){U=W;V=V-1&255}else{break}}a[x]=V;X=P;Y=U;break}else if((S<<24>>24|0)==39){W=Q;Z=4;while(1){_=W+1|0;if((_|0)>=(T|0)){break}if((a[j+_|0]|0)==39){W=_;Z=Z+1&255}else{break}}a[x]=Z;X=P;Y=W;break}else{X=P;Y=Q;break}}else{if((ci(S<<24>>24|0)|0)!=0){X=P;Y=(hG(b,u,k,Q)|0)+Q|0;break}T=a[R]|0;L4745:do{switch(T<<24>>24){case 123:{a[y]=1;X=1;Y=Q;break L4738;break};case 125:{if(!P){$=125;break L4745}U=c[q>>2]|0;a[U+(((((c[d>>2]|0)-U|0)/40|0)-1|0)*40|0)+24|0]=4;a[y]=0;X=0;Y=Q;break L4738;break};case 59:case 41:{a[L]=0;X=P;Y=Q;break L4738;break};case 103:case 113:{U=yz(u|0)|0;if((T<<24>>24|0)==103){a[w]=1;X=P;Y=Q;break L4738}else if((T<<24>>24|0)!=113){X=P;Y=Q;break L4738}c[v>>2]=1;V=Q+1|0;if((V|0)>=(U|0)){X=P;Y=Q;break L4738}if((a[j+V|0]|0)!=113){X=P;Y=Q;break L4738}a[M]=1;_=V;aa=1;ab=113;while(1){if(ab<<24>>24==114){X=P;Y=V;break L4738}if(((ab<<24>>24)-65|0)>>>0<7>>>0){ac=aa+1|0;c[v>>2]=ac;ad=ac}else{ad=aa}ac=_+1|0;if((ac|0)>=(U|0)){X=P;Y=V;break L4738}_=ac;aa=ad;ab=a[j+ac|0]|0}break};case 43:case 116:{X=P;Y=Q;break L4738;break};case 40:{hH(0,u,l,Q)|0;X=P;Y=Q;break L4738;break};case 110:case 120:case 98:{ab=yz(u|0)|0;if((T<<24>>24|0)==98){a[N]=2;aa=Q+1|0;if((aa|0)>=(ab|0)){X=P;Y=Q;break L4738}if((a[j+aa|0]|0)!=98){X=P;Y=Q;break L4738}a[N]=5;X=P;Y=aa;break L4738}else if((T<<24>>24|0)==110){a[N]=3;X=P;Y=Q;break L4738}else if((T<<24>>24|0)==120){a[N]=1;aa=Q+1|0;if((aa|0)>=(ab|0)){X=P;Y=Q;break L4738}if((a[j+aa|0]|0)!=120){X=P;Y=Q;break L4738}a[N]=4;X=P;Y=aa;break L4738}else{X=P;Y=Q;break L4738}break};case 114:{c[v>>2]=0;X=P;Y=Q;break L4738;break};default:{$=T}}}while(0);L4775:do{if((($<<24>>24)-65|0)>>>0>=7>>>0){switch($<<24>>24){case 58:case 47:{T=(hK(0,u,r,Q)|0)+Q|0;c[F>>2]=0;W=c[B>>2]|0;if((W|0)==(c[C>>2]|0)){hW(m,k)}else{if((W|0)==0){ae=0}else{hZ(W,k);ae=c[B>>2]|0}c[B>>2]=ae+84}c[p>>2]=0;c[D>>2]=0;W=c[e>>2]|0;Z=c[t>>2]|0;if((W|0)!=(Z|0)){c[t>>2]=Z+(~((Z-4+(-W|0)|0)>>>2)<<2)}W=c[q>>2]|0;Z=c[d>>2]|0;if((W|0)!=(Z|0)){c[d>>2]=Z+(~(((Z-40+(-W|0)|0)>>>0)/40|0)*40|0)}qw(r,40144)|0;c[h>>2]=0;c[F>>2]=-1;X=P;Y=T;break L4738;break};case 37:{T=Q+1|0;if((T|0)>=(s|0)){X=P;Y=Q;break L4738}W=yp(148)|0;fw(W);Z=(hD(0,u,W,T)|0)+Q|0;c[z>>2]=W;X=P;Y=Z;break L4738;break};case 64:{Z=Q+1|0;if((Z|0)>=(s|0)){X=P;Y=Q;break L4738}X=P;Y=(hF(0,u,k,Z)|0)+Q|0;break L4738;break};case 36:{Z=Q+1|0;if((Z|0)>=(s|0)){X=P;Y=Q;break L4738}X=P;Y=(hE(0,u,k,Z)|0)+Q|0;break L4738;break};case 33:{X=P;Y=(hJ(0,u,k,Q)|0)+Q|0;break L4738;break};case 105:{Z=c[B>>2]|0;W=c[A>>2]|0;if((Z|0)==(W|0)){X=P;Y=Q;break L4738}hZ(n,W+((((Z-W|0)/84|0)-1|0)*84|0)|0);hX(g,c[G>>2]|0,c[I>>2]|0);W=c[G>>2]|0;if((c[W+(((((c[H>>2]|0)-W|0)/40|0)-1|0)*40|0)+8>>2]|0)==0){c[(c[K>>2]|0)+8>>2]=0}hY(n);X=P;Y=Q;break L4738;break};case 45:{break L4775;break};case 61:{W=yz(u|0)|0;c[h>>2]=1;Z=Q+1|0;if((Z|0)>=(W|0)){X=P;Y=Q;break L4738}W=j+Z|0;if(((a[W]|0)-48|0)>>>0>=10>>>0){X=P;Y=Q;break L4738}cc(W|0,13960,(J=i,i=i+8|0,c[J>>2]=h,J)|0)|0;i=J;yC(E|0,0,10);bq(E|0,13960,(J=i,i=i+8|0,c[J>>2]=c[h>>2],J)|0)|0;i=J;X=P;Y=(yz(E|0)|0)+Q|0;break L4738;break};default:{X=P;Y=Q;break L4738}}}}while(0);hI(b,u,l,k,Q)|0;X=P;Y=Q}}while(0);Q=Y+1|0;if((Q|0)<(s|0)){O=Q;P=X}else{af=d;ag=q;break}}}else{af=k+12|0;ag=k+8|0}do{if((c[af>>2]|0)!=(c[ag>>2]|0)){q=c[B>>2]|0;if((q|0)==(c[C>>2]|0)){hW(m,k)}else{if((q|0)==0){ah=0}else{hZ(q,k);ah=c[B>>2]|0}c[B>>2]=ah+84}q=c[ag>>2]|0;d=c[af>>2]|0;if((q|0)==(d|0)){break}c[af>>2]=d+(~(((d-40+(-q|0)|0)>>>0)/40|0)*40|0)}}while(0);af=b+108|0;gd(c[af>>2]|0,0);ag=yp(220)|0;jY(ag);ah=yp(196)|0;nd(ah);m=c[A>>2]|0;if(m>>>0<(c[B>>2]|0)>>>0){C=b+128|0;q=b+132|0;d=b+136|0;X=m;m=1;while(1){P=yp(132)|0;mi(P,1);c[C>>2]=P;P=yp(488)|0;ev(P,1,m);c[q>>2]=P;P=yp(296)|0;h9(P,1);c[d>>2]=P;mj(c[C>>2]|0,P);ez(c[q>>2]|0,c[C>>2]|0);ne(ah,c[q>>2]|0);hZ(o,X);hL(b,0,o);hY(o);P=X+84|0;if(P>>>0<(c[B>>2]|0)>>>0){X=P;m=m+1|0}else{break}}}m=yp(84)|0;lX(m);X=yp(84)|0;o=X;l5(o);c[X+76>>2]=1;l0(m,o);lR((c[af>>2]|0)+136|0,m);j0(ag,ah);gh(c[af>>2]|0,ag);ag=c[A>>2]|0;if((ag|0)!=0){while(1){af=c[B>>2]|0;if((ag|0)==(af|0)){break}ah=af-84|0;c[B>>2]=ah;hY(ah)}yr(c[A>>2]|0)}hY(k);i=f;return}function hA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+144|0;f=e|0;g=f|0;h=f+8|0;c[g>>2]=37860;j=f+60|0;c[j>>2]=37880;c[f+4>>2]=0;qS(f+60|0,h);c[f+132>>2]=0;c[f+136>>2]=-1;c[g>>2]=22980;c[f+60>>2]=23e3;k=h|0;c[k>>2]=23400;l=f+12|0;vl(l);yC(f+16|0,0,24);c[k>>2]=23256;yC(f+40|0,0,16);c[f+56>>2]=8;gb(h,d);hz(b,f,44024);c[g>>2]=22980;c[j>>2]=23e3;j=f+8|0;c[j>>2]=23256;if((a[f+40|0]&1)!=0){yr(c[f+48>>2]|0)}c[j>>2]=23400;vn(l);qO(f+60|0);i=e;return 1}function hB(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;b=yz(e|0)|0;yC(c|0,0,1024);yC(d|0,0,1024);if((b|0)==0){return}else{f=0}while(1){g=e+f|0;if((f|0)>=(b|0)){break}if((a$(a[g]|0)|0)==0){break}else{f=f+1|0}}if((a[g]|0)==64){h=f}else{return}while(1){f=h+1|0;if((f|0)>=(b|0)){i=f;j=0;break}if((a$(a[e+f|0]|0)|0)==0){i=f;j=0;break}else{h=f}}L4901:while(1){k=e+i|0;if((i|0)>=(b|0)){l=4420;break}do{h=a[k]|0;if(h<<24>>24==58){m=i;break L4901}}while((a$(h<<24>>24|0)|0)!=0);if((j|0)>1023){l=4434;break}a[c+j|0]=a[k]|0;i=i+1|0;j=j+1|0}if((l|0)==4434){return}do{if((l|0)==4420){if((a[k]|0)==58){m=i;break}a[c]=0;return}}while(0);do{m=m+1|0;n=e+m|0;if((m|0)>=(b|0)){break}}while((a$(a[n]|0)|0)!=0);if((yz(n|0)|0)>>>0>1024>>>0){return}yF(d|0,n|0)|0;n=(yz(d|0)|0)-2|0;if((n|0)>0){o=n}else{return}while(1){n=d+o|0;if((a$(a[n]|0)|0)==0){l=4430;break}a[n]=0;n=o-1|0;if((n|0)>0){o=n}else{l=4435;break}}if((l|0)==4430){return}else if((l|0)==4435){return}}function hC(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){ro(o)|0}a[k]=1;o=yz(d|0)|0;p=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(p+24)>>2];q=d+o|0;o=(c[n+(p+4)>>2]&176|0)==32?q:d;r=n+p|0;s=n+(p+76)|0;p=c[s>>2]|0;if((p|0)==-1){qR(f,r);t=vp(f,43928)|0;u=cW[c[(c[t>>2]|0)+28>>2]&255](t,32)|0;vn(f);c[s>>2]=u<<24>>24;v=u}else{v=p&255}fK(j,h,d,o,q,r,v);if((c[j>>2]|0)!=0){break}r=c[(c[l>>2]|0)-12>>2]|0;qN(n+r|0,c[n+(r+16)>>2]|5)}}while(0);rG(g);i=e;return b|0}function hD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;b=i;g=yz(d|0)|0;do{if((g|0)>(f|0)){h=f-g|0;j=h>>>0>4294967293>>>0;k=f;l=0;m=71;while(1){if((l|0)==2){n=4465;break}else if((l|0)==0){o=a[d+k|0]|0}else{o=m}p=l+1|0;q=k+1|0;if((q|0)<(g|0)&(p|0)<3){k=q;l=p;m=o}else{r=o;s=50;break}}if((n|0)==4465){r=m;s=a[d+k|0]|0}l=j?-h|0:3;if((r<<24>>24|0)==71){t=s;u=l;n=4473;break}else if((r<<24>>24|0)==67){p=s<<24>>24;if((p|0)==51){c[e+144>>2]=7;v=l;break}else if((p|0)==50){c[e+144>>2]=6;v=l;break}else if((p|0)==52){c[e+144>>2]=8;v=l;break}else if((p|0)==49){c[e+144>>2]=5;v=l;break}else{v=l;break}}else if((r<<24>>24|0)==70){p=s<<24>>24;if((p|0)==52){c[e+144>>2]=3;v=l;break}else if((p|0)==53){c[e+144>>2]=10;v=l;break}else if((p|0)==51){c[e+144>>2]=4;v=l;break}else{v=l;break}}else{dr(14184,(p=i,i=i+1|0,i=i+7&-8,c[p>>2]=0,p)|0);i=p;v=l;break}}else{t=50;u=0;n=4473}}while(0);do{if((n|0)==4473){s=t<<24>>24;if((s|0)==49){c[e+144>>2]=2;v=u;break}else if((s|0)==50){c[e+144>>2]=1;v=u;break}else{v=u;break}}}while(0);i=b;return v|0}function hE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;b=i;i=i+56|0;g=b|0;h=b+8|0;j=b+16|0;k=b+24|0;l=b+32|0;m=b+40|0;n=b+48|0;o=yz(d|0)|0;if((o|0)<=(f|0)){p=f;q=p-f|0;i=b;return q|0}r=e+32|0;s=e+24|0;t=e+28|0;u=e+20|0;e=f;L4980:while(1){L4982:do{switch(a[d+e|0]|0){case 70:{c[g>>2]=4;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,g);break L4982}if((v|0)==0){w=0}else{c[v>>2]=4;w=c[s>>2]|0}c[s>>2]=w+4;break};case 71:{c[j>>2]=5;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,j);break L4982}if((v|0)==0){x=0}else{c[v>>2]=5;x=c[s>>2]|0}c[s>>2]=x+4;break};case 68:{c[k>>2]=2;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,k);break L4982}if((v|0)==0){y=0}else{c[v>>2]=2;y=c[s>>2]|0}c[s>>2]=y+4;break};case 120:{a[r]=1;break};case 98:{a[r]=2;break};case 69:{c[m>>2]=3;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,m);break L4982}if((v|0)==0){z=0}else{c[v>>2]=3;z=c[s>>2]|0}c[s>>2]=z+4;break};case 67:{c[h>>2]=1;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,h);break L4982}if((v|0)==0){A=0}else{c[v>>2]=1;A=c[s>>2]|0}c[s>>2]=A+4;break};case 65:{c[l>>2]=6;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,l);break L4982}if((v|0)==0){B=0}else{c[v>>2]=6;B=c[s>>2]|0}c[s>>2]=B+4;break};case 66:{c[n>>2]=7;v=c[s>>2]|0;if((v|0)==(c[t>>2]|0)){hV(u,n);break L4982}if((v|0)==0){C=0}else{c[v>>2]=7;C=c[s>>2]|0}c[s>>2]=C+4;break};default:{p=e;D=4526;break L4980}}}while(0);v=e+1|0;if((v|0)<(o|0)){e=v}else{p=v;D=4524;break}}if((D|0)==4526){q=p-f|0;i=b;return q|0}else if((D|0)==4524){q=p-f|0;i=b;return q|0}return 0}function hF(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;b=i;i=i+24|0;g=b|0;h=b+8|0;j=h;k=i;i=i+1024|0;l=i;i=i+136|0;m=i;i=i+32|0;n=i;i=i+1024|0;o=yz(d|0)|0;p=yp(172)|0;q=p;iO(q);r=d+f|0;s=a[r]|0;do{if(((s<<24>>24)-48|0)>>>0>=10>>>0){if((s<<24>>24|0)==99|(s<<24>>24|0)==111){break}else{t=0}i=b;return t|0}}while(0);s=f+1|0;L5044:do{if((s|0)<(o|0)){u=s;while(1){v=a[d+u|0]|0;if(!(((v<<24>>24)-48|0)>>>0<10>>>0|(v-46&255)>>>0<2>>>0)){w=u;break L5044}v=u+1|0;if((v|0)<(o|0)){u=v}else{w=v;break}}}else{w=s}}while(0);s=k|0;yC(s|0,0,1024);k=w-f|0;yG(s|0,r|0,k|0)|0;r=l|0;f=l+4|0;c[r>>2]=37820;w=l+56|0;c[w>>2]=37840;qS(l+56|0,f);c[l+128>>2]=0;c[l+132>>2]=-1;c[r>>2]=22932;c[l+56>>2]=22952;o=f|0;c[o>>2]=23400;d=l+8|0;vl(d);yC(l+12|0,0,24);c[o>>2]=23256;o=l+36|0;yC(l+36|0,0,16);c[l+52>>2]=16;yC(j|0,0,12);gb(f,h);if((a[j]&1)!=0){yr(c[h+8>>2]|0)}xy(m,16480,1)|0;h=xL(m,s,0,0,0)|0;xC(m);xy(m,16032,1)|0;j=xL(m,s,0,0,0)|0;xC(m);do{if((h|0)==0){m=n|0;yF(m|0,s|0)|0;f=b_(aX(m|0,15648)|0)|0;m=b_(aX(0,15648)|0)|0;c[p+152>>2]=f;c[p+156>>2]=m}else{if((j|0)==0){c[p+152>>2]=b_(s|0)|0;c[p+156>>2]=1;break}if((ba(s|0,15328)|0)==0){c[p+148>>2]=1;break}if((ba(s|0,15064)|0)==0){c[p+148>>2]=2;break}if((ba(s|0,14808)|0)==0){c[p+148>>2]=4;break}if((ba(s|0,14528)|0)==0){c[p+148>>2]=6;break}m=hC(hC(44024,14360)|0,s)|0;qR(g,m+(c[(c[m>>2]|0)-12>>2]|0)|0);f=vp(g,43928)|0;u=cW[c[(c[f>>2]|0)+28>>2]&255](f,10)|0;vn(g);rJ(m,u)|0;ro(m)|0}}while(0);c[e+4>>2]=q;c[r>>2]=22932;c[w>>2]=22952;w=l+4|0;c[w>>2]=23256;if((a[o]&1)!=0){yr(c[l+44>>2]|0)}c[w>>2]=23400;vn(d);qO(l+56|0);t=k;i=b;return t|0}function hG(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;b=i;i=i+16|0;g=b|0;h=b+8|0;j=yz(d|0)|0;c[e+60>>2]=0;k=e+36|0;l=c[k>>2]|0;m=e+40|0;n=c[m>>2]|0;if((l|0)!=(n|0)){c[m>>2]=n+(~((n-4+(-l|0)|0)>>>2)<<2)}l=e+48|0;n=c[l>>2]|0;o=e+52|0;p=c[o>>2]|0;if((n|0)!=(p|0)){c[o>>2]=p+(~((p-4+(-n|0)|0)>>>2)<<2)}n=e+44|0;p=e+56|0;e=f;while(1){q=(hM(0,d,g,h,e)|0)+e|0;r=c[m>>2]|0;if((r|0)==(c[n>>2]|0)){hV(k,g)}else{if((r|0)==0){s=0}else{c[r>>2]=c[g>>2];s=c[m>>2]|0}c[m>>2]=s+4}r=c[o>>2]|0;if((r|0)==(c[p>>2]|0)){hV(l,h)}else{if((r|0)==0){t=0}else{c[r>>2]=c[h>>2];t=c[o>>2]|0}c[o>>2]=t+4}r=q+1|0;if((r|0)>=(j|0)){u=4615;break}if(((a[d+r|0]|0)-48|0)>>>0<10>>>0){e=r}else{u=4614;break}}if((u|0)==4615){v=q-f|0;i=b;return v|0}else if((u|0)==4614){v=q-f|0;i=b;return v|0}return 0}function hH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;i=i+40|0;g=b|0;h=b+8|0;j=yz(d|0)|0;xy(h,18192,1)|0;k=xL(h,d+f|0,0,0,0)|0;xC(h);if((k|0)!=0){if((c[e>>2]|0)>0){k=hC(44024,16816)|0;qR(g,k+(c[(c[k>>2]|0)-12>>2]|0)|0);h=vp(g,43928)|0;l=cW[c[(c[h>>2]|0)+28>>2]&255](h,10)|0;vn(g);rJ(k,l)|0;ro(k)|0}a[e+21|0]=1;i=b;return 0}do{if((f|0)==0){m=3}else{k=a[d+(f-1)|0]|0;if(!(((k<<24>>24)-48|0)>>>0<10>>>0|k<<24>>24==46)){m=3;break}k=j+1|0;l=yj(k)|0;yC(l|0,0,k|0);L5131:do{if((j|0)>(f|0)){k=f;while(1){g=a[d+k|0]|0;if((g<<24>>24|0)==41){break}else if((g<<24>>24|0)==59){n=k;break L5131}g=k+1|0;if((g|0)<(j|0)){k=g}else{n=g;break L5131}}dr(17656,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;i=b;return 0}else{n=f}}while(0);k=n+1|0;L5138:do{if((k|0)<(j|0)){g=0;h=k;while(1){p=a[d+h|0]|0;if(p<<24>>24==41){break L5138}if(((p<<24>>24)-48|0)>>>0>=10>>>0){break}a[l+g|0]=p;g=g+1|0;h=k+g|0;if((h|0)>=(j|0)){break L5138}}dr(17216,(o=i,i=i+1|0,i=i+7&-8,c[o>>2]=0,o)|0);i=o;i=b;return 0}}while(0);k=b_(l|0)|0;yk(l);m=k}}while(0);c[e>>2]=m;c[e+4>>2]=m;i=b;return 0}function hI(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;h=b|0;j=e+12|0;if((a[j]&1)==0){k=f+60|0;a[e+26|0]=c[(c[f+36>>2]|0)+(c[k>>2]<<2)>>2]&255;c[e+28>>2]=c[(c[f+48>>2]|0)+(c[k>>2]<<2)>>2]}else{a[e+26|0]=5}switch(a[d+g|0]|0){case 71:{l=5;m=4654;break};case 65:{l=6;m=4654;break};case 45:{k=e+25|0;a[k]=-1;a[e+32|0]=1;n=k;break};case 70:{l=4;m=4654;break};case 69:{l=3;m=4654;break};case 66:{l=7;m=4654;break};case 67:{l=1;m=4654;break};case 68:{l=2;m=4654;break};default:{l=0;m=4654}}if((m|0)==4654){m=e+25|0;a[m]=l;n=m}m=e+24|0;if((a[m]|0)==0){o=d+(g+1)|0}else{xy(h,12176,1)|0;l=d+(g+1)|0;xL(h,l,0,0,0)|0;xC(h);o=l}xy(h,11976,1)|0;l=xL(h,o,0,0,0)|0;xC(h);if((l|0)==0){a[e+22|0]=1}xy(h,11840,1)|0;l=xL(h,o,0,0,0)|0;xC(h);h=e+8|0;o=c[h>>2]|0;if((l|o|0)==0){c[h>>2]=1;p=1}else{p=o}o=e+8|0;h=(l|0)!=0&(p|0)>0?0:p;l=e+23|0;g=a[l]|0;d=f+12|0;k=c[d>>2]|0;if((k|0)==(c[f+16>>2]|0)){hR(f+8|0,e)}else{if((k|0)==0){q=0}else{c[k+8>>2]=p;a[k+12|0]=a[j]&1;c[k+16>>2]=c[e+16>>2];a[k+20|0]=a[e+20|0]&1;a[k+21|0]=a[e+21|0]&1;a[k+22|0]=a[e+22|0]&1;a[k+23|0]=a[l]|0;a[k+24|0]=a[m]|0;a[k+25|0]=a[n]|0;a[k+26|0]=a[e+26|0]|0;a[k+27|0]=a[e+27|0]|0;c[k+28>>2]=c[e+28>>2];a[k+32|0]=a[e+32|0]&1;c[k+36>>2]=c[e+36>>2];c[k>>2]=c[e>>2];c[k+4>>2]=c[e+4>>2];q=c[d>>2]|0}c[d>>2]=q+40}q=e+16|0;d=c[q>>2]|0;k=e+4|0;n=c[k>>2]|0;a[j]=0;c[o>>2]=0;yC(q|0,0,7);c[e>>2]=0;c[k>>2]=0;c[e+36>>2]=0;yC(m|0,0,9);a[l]=g;if((n|0)>0){c[k>>2]=n-1}if((h|0)>0){c[o>>2]=h+1}a[j]=0;if((d|0)>0){c[q>>2]=d-1;a[e+20|0]=0}d=c[f+40>>2]|0;q=c[f+36>>2]|0;if((d|0)==(q|0)){r=e+21|0;a[r]=0;s=e+22|0;a[s]=0;i=b;return 0}j=f+60|0;f=(c[j>>2]|0)+1|0;c[j>>2]=f;if(f>>>0<d-q>>2>>>0){r=e+21|0;a[r]=0;s=e+22|0;a[s]=0;i=b;return 0}c[j>>2]=0;r=e+21|0;a[r]=0;s=e+22|0;a[s]=0;i=b;return 0}function hJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;b=yz(d|0)|0;g=e+76|0;h=e+8|0;i=e+12|0;j=h|0;k=((c[i>>2]|0)-(c[j>>2]|0)|0)/40|0;if((c[g>>2]|0)==-1){l=f;m=k;c[g>>2]=m;n=l-f|0;return n|0}o=f+1|0;if((o|0)>=(b|0)){l=f;m=-1;c[g>>2]=m;n=l-f|0;return n|0}p=e+16|0;e=f;q=o;while(1){if((a[d+q|0]|0)!=102){l=e;m=-1;r=4697;break}o=c[g>>2]|0;if((o|0)<(k|0)){s=o;do{o=c[j>>2]|0;t=o+(s*40|0)|0;u=c[i>>2]|0;if((u|0)==(c[p>>2]|0)){hR(h,t)}else{if((u|0)==0){v=0}else{c[u+8>>2]=c[o+(s*40|0)+8>>2];a[u+12|0]=a[o+(s*40|0)+12|0]&1;c[u+16>>2]=c[o+(s*40|0)+16>>2];a[u+20|0]=a[o+(s*40|0)+20|0]&1;a[u+21|0]=a[o+(s*40|0)+21|0]&1;a[u+22|0]=a[o+(s*40|0)+22|0]&1;a[u+23|0]=a[o+(s*40|0)+23|0]|0;a[u+24|0]=a[o+(s*40|0)+24|0]|0;a[u+25|0]=a[o+(s*40|0)+25|0]|0;a[u+26|0]=a[o+(s*40|0)+26|0]|0;a[u+27|0]=a[o+(s*40|0)+27|0]|0;c[u+28>>2]=c[o+(s*40|0)+28>>2];a[u+32|0]=a[o+(s*40|0)+32|0]&1;c[u+36>>2]=c[o+(s*40|0)+36>>2];c[u>>2]=c[t>>2];c[u+4>>2]=c[o+(s*40|0)+4>>2];v=c[i>>2]|0}c[i>>2]=v+40}s=s+1|0;}while((s|0)<(k|0))}s=q+1|0;if((s|0)<(b|0)){e=q;q=s}else{l=q;m=-1;r=4695;break}}if((r|0)==4695){c[g>>2]=m;n=l-f|0;return n|0}else if((r|0)==4697){c[g>>2]=m;n=l-f|0;return n|0}return 0}function hK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a=i;i=i+32|0;e=a|0;xy(e,13648,1)|0;f=b+d|0;d=xL(e,f,0,0,0)|0;xC(e);xy(e,13448,1)|0;b=xL(e,f,0,0,0)|0;xC(e);xy(e,13272,1)|0;g=xL(e,f,0,0,0)|0;xC(e);xy(e,13168,1)|0;h=xL(e,f,0,0,0)|0;xC(e);if((d|0)==0){qw(c,12992)|0;j=3;i=a;return j|0}if((b|0)==0){qw(c,12816)|0;j=2;i=a;return j|0}if((g|0)==0){qw(c,12656)|0;j=2;i=a;return j|0}if((h|0)==0){qw(c,12552)|0;j=1;i=a;return j|0}else{qw(c,12472)|0;j=0;i=a;return j|0}return 0}function hL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+40|0;f=d|0;g=c[e>>2]|0;if((g|0)!=0){ii(c[b+136>>2]|0,g|0,-1)}g=c[e+24>>2]|0;h=c[e+20>>2]|0;if((g|0)!=(h|0)){j=yp(160)|0;h0(j,g-h>>2,a[e+32|0]|0);ii(c[b+136>>2]|0,j,-1)}j=c[e+4>>2]|0;if((j|0)!=0){ii(c[b+136>>2]|0,j|0,-1)}j=c[e+80>>2]|0;if((j|0)>0){h=yp(148)|0;iV(h,j);ii(c[b+136>>2]|0,h,-1)}h=c[b+144>>2]|0;j=b+148|0;g=c[j>>2]|0;if((h|0)!=(g|0)){c[j>>2]=g+(~((g-4+(-h|0)|0)>>>2)<<2)}h=e+12|0;g=e+8|0;j=c[g>>2]|0;if((c[h>>2]|0)!=(j|0)){k=f+8|0;l=f+12|0;m=f+16|0;n=f+20|0;o=f+21|0;p=f+22|0;q=f+23|0;r=f+24|0;s=f+25|0;t=f+26|0;u=f+27|0;v=f+28|0;w=f+32|0;x=f+36|0;y=f|0;z=f+4|0;A=0;B=j;do{j=a[B+(A*40|0)+12|0]&1;C=c[B+(A*40|0)+16>>2]|0;D=a[B+(A*40|0)+20|0]&1;E=a[B+(A*40|0)+21|0]&1;F=a[B+(A*40|0)+22|0]&1;G=a[B+(A*40|0)+23|0]|0;H=a[B+(A*40|0)+24|0]|0;I=a[B+(A*40|0)+25|0]|0;J=a[B+(A*40|0)+26|0]|0;K=a[B+(A*40|0)+27|0]|0;L=c[B+(A*40|0)+28>>2]|0;M=a[B+(A*40|0)+32|0]&1;N=c[B+(A*40|0)+36>>2]|0;O=c[B+(A*40|0)>>2]|0;P=c[B+(A*40|0)+4>>2]|0;c[k>>2]=c[B+(A*40|0)+8>>2];a[l]=j;c[m>>2]=C;a[n]=D;a[o]=E;a[p]=F;a[q]=G;a[r]=H;a[s]=I;a[t]=J;a[u]=K;c[v>>2]=L;a[w]=M;c[x>>2]=N;c[y>>2]=O;c[z>>2]=P;hO(b,f);A=A+1|0;B=c[g>>2]|0;}while(A>>>0<(((c[h>>2]|0)-B|0)/40|0)>>>0)}B=e+64|0;h=a[B]|0;A=h&255;g=(A&1|0)==0;if(g){Q=A>>>1}else{Q=c[e+68>>2]|0}if((Q|0)==0){i=d;return}Q=c[b+132>>2]|0;if(g){R=A>>>1}else{R=c[e+68>>2]|0}if((h&1)==0){S=B+1|0}else{S=c[e+72>>2]|0}e=R>>>0>1>>>0;do{if((yD(S|0,12472,(e?1:R)|0)|0)==0){B=Q+480|0;if(!((R|0)!=0&(e^1))){T=B;break}c[B>>2]=1;i=d;return}else{T=Q+480|0}}while(0);c[T>>2]=6;i=d;return}function hM(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+8|0;h=b|0;j=yz(d|0)|0;switch(a[d+g|0]|0){case 56:{c[e>>2]=5;break};case 48:{c[e>>2]=0;break};case 52:{c[e>>2]=4;break};case 54:{c[e>>2]=6;break};case 57:{c[e>>2]=1;break};case 50:{c[e>>2]=3;break};case 55:{c[e>>2]=9;break};case 53:{c[e>>2]=8;break};case 49:{c[e>>2]=2;break};case 51:{c[e>>2]=7;break};default:{}}c[f>>2]=0;k=g+1|0;do{if((k|0)<(j|0)){if((a[d+k|0]|0)!=46){l=g;m=0;break}c[f>>2]=1;l=k;m=1}else{l=g;m=0}}while(0);k=l+1|0;do{if((k|0)<(j|0)){if((a[d+k|0]|0)!=46){n=l;o=m;break}p=m+1|0;c[f>>2]=p;n=k;o=p}else{n=l;o=m}}while(0);if((o|0)!=1){q=n-g|0;i=b;return q|0}if((c[e>>2]|0)!=7){q=n-g|0;i=b;return q|0}c[e>>2]=1;c[f>>2]=0;f=hC(44024,18976)|0;qR(h,f+(c[(c[f>>2]|0)-12>>2]|0)|0);e=vp(h,43928)|0;o=cW[c[(c[e>>2]|0)+28>>2]&255](e,10)|0;vn(h);rJ(f,o)|0;ro(f)|0;q=n-g|0;i=b;return q|0}function hN(b){b=b|0;var d=0;c[b>>2]=22932;c[b+56>>2]=22952;d=b+4|0;c[d>>2]=23256;if((a[b+36|0]&1)!=0){yr(c[b+44>>2]|0)}c[d>>2]=23400;vn(b+8|0);qO(b+56|0);return}function hO(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+24|0;g=f|0;h=f+8|0;j=f+16|0;do{if((a[e+32|0]&1)==0){k=yp(208)|0;i_(k);a[k+178|0]=a[e+25|0]|0;a[k+177|0]=a[e+23|0]|0;a[k+176|0]=a[e+27|0]|0;a[k+149|0]=c[e+28>>2]&255;c[k+152>>2]=d[e+26|0]|0;if((a[e+21|0]&1)!=0){a[k+170|0]=1}if((a[e+22|0]&1)==0){l=k;break}c[k+204>>2]=1;l=k}else{k=yp(184)|0;lt(k);a[k+177|0]=-1;a[k+149|0]=c[e+28>>2]&255;c[k+152>>2]=d[e+26|0]|0;if((a[e+21|0]&1)==0){l=k;break}a[k+170|0]=1;l=k}}while(0);k=l;do{if(!((a[e+12|0]&1)==0|(l|0)==0)){if((yc(l,37496,37216,-1)|0)==0){break}a[l+109|0]=1;a[(yc(l,37496,37216,-1)|0)+202|0]=1}}while(0);m=e+24|0;do{if((a[m]|0)==1){n=yp(160)|0;fk(n);o=n;c[j>>2]=o;hP(b,o);n=b+148|0;p=c[n>>2]|0;if((p|0)==(c[b+152>>2]|0)){hQ(b+144|0,j);break}if((p|0)==0){q=0}else{c[p>>2]=o;q=c[n>>2]|0}c[n>>2]=q+4}}while(0);q=e+4|0;j=c[q>>2]|0;do{if((j|0)>0){if((c[e>>2]|0)!=(j|0)){break}n=yp(168)|0;nx(n);o=n;c[h>>2]=o;hP(b,o);n=b+148|0;p=c[n>>2]|0;if((p|0)==(c[b+152>>2]|0)){hQ(b+144|0,h);break}if((p|0)==0){r=0}else{c[p>>2]=o;r=c[n>>2]|0}c[n>>2]=r+4}}while(0);r=e+16|0;h=c[r>>2]|0;do{if((h|0)>0){a[l+109|0]=1;j=e+20|0;if(!((a[j]&1)!=0&(h|0)>1)){s=j;break}n=yp(160)|0;fk(n);o=n;c[g>>2]=o;hP(b,o);n=b+148|0;p=c[n>>2]|0;if((p|0)==(c[b+152>>2]|0)){hQ(b+144|0,g);s=j;break}if((p|0)==0){t=0}else{c[p>>2]=o;t=c[n>>2]|0}c[n>>2]=t+4;s=j}else{s=e+20|0}}while(0);hP(b,k);do{if((a[s]&1)!=0){if((c[r>>2]|0)!=2){break}k=b+148|0;e=c[k>>2]|0;if((e|0)==(c[b+144>>2]|0)){cd(11672,11608,1211,19400)}else{c[k>>2]=e+(~((e+(-e|0)|0)>>>2)<<2);break}}}while(0);do{if((c[q>>2]|0)==1){r=b+148|0;s=c[r>>2]|0;if((s|0)==(c[b+144>>2]|0)){cd(11672,11608,1211,19400)}else{c[r>>2]=s+(~((s+(-s|0)|0)>>>2)<<2);break}}}while(0);if((a[m]|0)!=4){i=f;return}m=b+148|0;q=c[m>>2]|0;if((q|0)==(c[b+144>>2]|0)){cd(11672,11608,1211,19400)}c[m>>2]=q+(~((q+(-q|0)|0)>>>2)<<2);i=f;return}function hP(a,b){a=a|0;b=b|0;var d=0;d=c[a+148>>2]|0;if((d|0)==(c[a+144>>2]|0)){ii(c[a+136>>2]|0,b,-1);return}a=c[d-4>>2]|0;if((a|0)==0){return}d=a;if((yc(d,37496,37272,-1)|0)!=0){fp(a,b);return}if((yc(d,37496,36984,-1)|0)==0){return}nC(a,b);return}function hQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){vf(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=4861}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=4861}}if((m|0)==4861){n=yp(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;yA(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}yr(l);return}function hR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b+4|0;f=c[e>>2]|0;g=b|0;h=c[g>>2]|0;i=h;j=(f-i|0)/40|0;k=j+1|0;if(k>>>0>107374182>>>0){vf(0)}l=b+8|0;b=((c[l>>2]|0)-i|0)/40|0;if(b>>>0>53687090>>>0){m=107374182;n=4873}else{o=b<<1;b=o>>>0<k>>>0?k:o;if((b|0)==0){p=0;q=0}else{m=b;n=4873}}if((n|0)==4873){p=yp(m*40|0)|0;q=m}m=p+(j*40|0)|0;n=p+(q*40|0)|0;if((m|0)!=0){c[p+(j*40|0)+8>>2]=c[d+8>>2];a[p+(j*40|0)+12|0]=a[d+12|0]&1;c[p+(j*40|0)+16>>2]=c[d+16>>2];a[p+(j*40|0)+20|0]=a[d+20|0]&1;a[p+(j*40|0)+21|0]=a[d+21|0]&1;a[p+(j*40|0)+22|0]=a[d+22|0]&1;a[p+(j*40|0)+23|0]=a[d+23|0]|0;a[p+(j*40|0)+24|0]=a[d+24|0]|0;a[p+(j*40|0)+25|0]=a[d+25|0]|0;a[p+(j*40|0)+26|0]=a[d+26|0]|0;a[p+(j*40|0)+27|0]=a[d+27|0]|0;c[p+(j*40|0)+28>>2]=c[d+28>>2];a[p+(j*40|0)+32|0]=a[d+32|0]&1;c[p+(j*40|0)+36>>2]=c[d+36>>2];c[m>>2]=c[d>>2];c[p+(j*40|0)+4>>2]=c[d+4>>2]}d=p+(k*40|0)|0;if((f|0)==(h|0)){r=f;s=m}else{k=j-1-(((f-40+(-i|0)|0)>>>0)/40|0)|0;i=f;f=m;while(1){m=f-40|0;j=i-40|0;if((m|0)!=0){c[f-40+8>>2]=c[i-40+8>>2];a[f-40+12|0]=a[i-40+12|0]&1;c[f-40+16>>2]=c[i-40+16>>2];a[f-40+20|0]=a[i-40+20|0]&1;a[f-40+21|0]=a[i-40+21|0]&1;a[f-40+22|0]=a[i-40+22|0]&1;a[f-40+23|0]=a[i-40+23|0]|0;a[f-40+24|0]=a[i-40+24|0]|0;a[f-40+25|0]=a[i-40+25|0]|0;a[f-40+26|0]=a[i-40+26|0]|0;a[f-40+27|0]=a[i-40+27|0]|0;c[f-40+28>>2]=c[i-40+28>>2];a[f-40+32|0]=a[i-40+32|0]&1;c[f-40+36>>2]=c[i-40+36>>2];c[m>>2]=c[j>>2];c[f-40+4>>2]=c[i-40+4>>2]}if((j|0)==(h|0)){break}else{i=j;f=m}}r=c[g>>2]|0;s=p+(k*40|0)|0}c[g>>2]=s;c[e>>2]=d;c[l>>2]=n;if((r|0)==0){return}yr(r);return}function hS(b){b=b|0;var d=0;c[b>>2]=22932;c[b+56>>2]=22952;d=b+4|0;c[d>>2]=23256;if((a[b+36|0]&1)!=0){yr(c[b+44>>2]|0)}c[d>>2]=23400;vn(b+8|0);qO(b+56|0);yr(b);return}function hT(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=22932;b=d+(e+56)|0;c[b>>2]=22952;f=d+(e+4)|0;c[f>>2]=23256;if((a[d+(e+36)|0]&1)!=0){yr(c[d+(e+44)>>2]|0)}c[f>>2]=23400;vn(d+(e+8)|0);qO(b);return}function hU(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=22932;f=d+(e+56)|0;c[f>>2]=22952;g=d+(e+4)|0;c[g>>2]=23256;if((a[d+(e+36)|0]&1)!=0){yr(c[d+(e+44)>>2]|0)}c[g>>2]=23400;vn(d+(e+8)|0);qO(f);yr(b);return}function hV(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){vf(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0>536870910>>>0){l=1073741823;m=4916}else{g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){n=0;o=0}else{l=a;m=4916}}if((m|0)==4916){n=yp(l<<2)|0;o=l}l=n+(i<<2)|0;i=n+(o<<2)|0;if((l|0)!=0){c[l>>2]=c[b>>2]}b=n+(j<<2)|0;j=n;l=f;yA(j|0,l|0,h)|0;c[e>>2]=n;c[d>>2]=b;c[k>>2]=i;if((f|0)==0){return}yr(l);return}function hW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+4|0;e=c[d>>2]|0;f=a|0;g=c[f>>2]|0;h=g;i=(e-h|0)/84|0;j=i+1|0;if(j>>>0>51130563>>>0){vf(0)}k=a+8|0;a=((c[k>>2]|0)-h|0)/84|0;if(a>>>0>25565280>>>0){l=51130563;m=4928}else{h=a<<1;a=h>>>0<j>>>0?j:h;if((a|0)==0){n=0;o=0}else{l=a;m=4928}}if((m|0)==4928){n=yp(l*84|0)|0;o=l}l=n+(i*84|0)|0;i=n+(o*84|0)|0;if((l|0)==0){p=g;q=e}else{hZ(l,b);p=c[f>>2]|0;q=c[d>>2]|0}b=n+(j*84|0)|0;if((q|0)==(p|0)){r=q;s=l;t=q}else{j=q;q=l;do{q=q-84|0;j=j-84|0;if((q|0)!=0){hZ(q,j)}}while((j|0)!=(p|0));r=c[f>>2]|0;s=q;t=c[d>>2]|0}c[f>>2]=s;c[d>>2]=b;c[k>>2]=i;i=t;while(1){if((r|0)==(i|0)){break}t=i-84|0;hY(t);i=t}if((r|0)==0){return}yr(r);return}function hX(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;f=d;g=(e-f|0)/40|0;h=b+8|0;i=c[h>>2]|0;j=b|0;k=c[j>>2]|0;l=k;if(g>>>0>((i-l|0)/40|0)>>>0){if((k|0)==0){m=i}else{i=b+4|0;n=c[i>>2]|0;if((k|0)!=(n|0)){c[i>>2]=n+(~(((n-40+(-l|0)|0)>>>0)/40|0)*40|0)}yr(k);c[h>>2]=0;c[i>>2]=0;c[j>>2]=0;m=0}if(g>>>0>107374182>>>0){vf(0)}i=(m|0)/40|0;do{if(i>>>0>53687090>>>0){o=107374182}else{m=i<<1;n=m>>>0<g>>>0?g:m;if(n>>>0<=107374182>>>0){o=n;break}vf(0)}}while(0);i=yp(o*40|0)|0;n=b+4|0;c[n>>2]=i;c[j>>2]=i;c[h>>2]=i+(o*40|0);if((d|0)==(e|0)){return}else{p=d;q=i}do{if((q|0)==0){r=0}else{c[q+8>>2]=c[p+8>>2];a[q+12|0]=a[p+12|0]&1;c[q+16>>2]=c[p+16>>2];a[q+20|0]=a[p+20|0]&1;a[q+21|0]=a[p+21|0]&1;a[q+22|0]=a[p+22|0]&1;a[q+23|0]=a[p+23|0]|0;a[q+24|0]=a[p+24|0]|0;a[q+25|0]=a[p+25|0]|0;a[q+26|0]=a[p+26|0]|0;a[q+27|0]=a[p+27|0]|0;c[q+28>>2]=c[p+28>>2];a[q+32|0]=a[p+32|0]&1;c[q+36>>2]=c[p+36>>2];c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];r=c[n>>2]|0}q=r+40|0;c[n>>2]=q;p=p+40|0;}while((p|0)!=(e|0));return}p=b+4|0;b=((c[p>>2]|0)-l|0)/40|0;if(g>>>0>b>>>0){s=1;t=d+(b*40|0)|0}else{s=0;t=e}if((t|0)==(d|0)){u=k}else{b=(((t-40+(-f|0)|0)>>>0)/40|0)+1|0;f=k;g=d;while(1){c[f+8>>2]=c[g+8>>2];a[f+12|0]=a[g+12|0]&1;c[f+16>>2]=c[g+16>>2];a[f+20|0]=a[g+20|0]&1;a[f+21|0]=a[g+21|0]&1;a[f+22|0]=a[g+22|0]&1;a[f+23|0]=a[g+23|0]|0;a[f+24|0]=a[g+24|0]|0;a[f+25|0]=a[g+25|0]|0;a[f+26|0]=a[g+26|0]|0;a[f+27|0]=a[g+27|0]|0;c[f+28>>2]=c[g+28>>2];a[f+32|0]=a[g+32|0]&1;c[f+36>>2]=c[g+36>>2];c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];d=g+40|0;if((d|0)==(t|0)){break}else{f=f+40|0;g=d}}u=k+(b*40|0)|0}b=u;if(!s){s=c[p>>2]|0;if((u|0)==(s|0)){return}c[p>>2]=s+(~(((s-40+(-b|0)|0)>>>0)/40|0)*40|0);return}if((t|0)==(e|0)){return}b=t;t=c[p>>2]|0;do{if((t|0)==0){v=0}else{c[t+8>>2]=c[b+8>>2];a[t+12|0]=a[b+12|0]&1;c[t+16>>2]=c[b+16>>2];a[t+20|0]=a[b+20|0]&1;a[t+21|0]=a[b+21|0]&1;a[t+22|0]=a[b+22|0]&1;a[t+23|0]=a[b+23|0]|0;a[t+24|0]=a[b+24|0]|0;a[t+25|0]=a[b+25|0]|0;a[t+26|0]=a[b+26|0]|0;a[t+27|0]=a[b+27|0]|0;c[t+28>>2]=c[b+28>>2];a[t+32|0]=a[b+32|0]&1;c[t+36>>2]=c[b+36>>2];c[t>>2]=c[b>>2];c[t+4>>2]=c[b+4>>2];v=c[p>>2]|0}t=v+40|0;c[p>>2]=t;b=b+40|0;}while((b|0)!=(e|0));return}function hY(b){b=b|0;var d=0,e=0,f=0,g=0;if((a[b+64|0]&1)!=0){yr(c[b+72>>2]|0)}d=c[b+48>>2]|0;e=d;if((d|0)!=0){f=b+52|0;g=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}yr(d)}d=c[b+36>>2]|0;e=d;if((d|0)!=0){g=b+40|0;f=c[g>>2]|0;if((d|0)!=(f|0)){c[g>>2]=f+(~((f-4+(-e|0)|0)>>>2)<<2)}yr(d)}d=c[b+20>>2]|0;e=d;if((d|0)!=0){f=b+24|0;g=c[f>>2]|0;if((d|0)!=(g|0)){c[f>>2]=g+(~((g-4+(-e|0)|0)>>>2)<<2)}yr(d)}d=c[b+8>>2]|0;if((d|0)==0){return}e=b+12|0;b=c[e>>2]|0;if((d|0)!=(b|0)){c[e>>2]=b+(~(((b-40+(-d|0)|0)>>>0)/40|0)*40|0)}yr(d);return}function hZ(b,d){b=b|0;d=d|0;var e=0,f=0;e=b+8|0;f=b+36|0;yC(b+64|0,0,12);yC(e|0,0,24);yC(f|0,0,24);c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];if((b|0)!=(d|0)){hX(e,c[d+8>>2]|0,c[d+12>>2]|0);h_(b+20|0,c[d+20>>2]|0,c[d+24>>2]|0);a[b+32|0]=a[d+32|0]|0;h_(f,c[d+36>>2]|0,c[d+40>>2]|0);h_(b+48|0,c[d+48>>2]|0,c[d+52>>2]|0)}c[b+60>>2]=c[d+60>>2];qv(b+64|0,d+64|0)|0;c[b+76>>2]=c[d+76>>2];c[b+80>>2]=c[d+80>>2];return}function h_(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=b;f=d-e>>2;g=a+8|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;k=j;if(f>>>0<=h-k>>2>>>0){l=a+4|0;m=(c[l>>2]|0)-k|0;n=m>>2;if(f>>>0<=n>>>0){o=d-e|0;yB(j|0,b|0,o|0);e=j+(o>>2<<2)|0;o=c[l>>2]|0;if((e|0)==(o|0)){return}c[l>>2]=o+(~((o-4+(-e|0)|0)>>>2)<<2);return}e=b+(n<<2)|0;yB(j|0,b|0,m|0);if((e|0)==(d|0)){return}m=e;e=c[l>>2]|0;do{if((e|0)==0){p=0}else{c[e>>2]=c[m>>2];p=c[l>>2]|0}e=p+4|0;c[l>>2]=e;m=m+4|0;}while((m|0)!=(d|0));return}if((j|0)==0){q=h}else{h=a+4|0;m=c[h>>2]|0;if((j|0)!=(m|0)){c[h>>2]=m+(~((m-4+(-k|0)|0)>>>2)<<2)}yr(j);c[g>>2]=0;c[h>>2]=0;c[i>>2]=0;q=0}if(f>>>0>1073741823>>>0){vf(0)}h=q;do{if(h>>2>>>0>536870910>>>0){r=1073741823}else{q=h>>1;j=q>>>0<f>>>0?f:q;if(j>>>0<=1073741823>>>0){r=j;break}vf(0)}}while(0);f=yp(r<<2)|0;h=a+4|0;c[h>>2]=f;c[i>>2]=f;c[g>>2]=f+(r<<2);if((b|0)==(d|0)){return}else{s=b;t=f}do{if((t|0)==0){u=0}else{c[t>>2]=c[s>>2];u=c[h>>2]|0}t=u+4|0;c[h>>2]=t;s=s+4|0;}while((s|0)!=(d|0));return}function h$(a){a=a|0;yC(a+64|0,0,12);yC(a+8|0,0,24);yC(a+36|0,0,24);c[a+60>>2]=0;c[a>>2]=0;c[a+4>>2]=0;qw(a+64|0,40144)|0;c[a+80>>2]=0;c[a+76>>2]=-1;return}function h0(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f|0;h=g;j=g;a[j]=10;k=h+1|0;a[k]=a[12200]|0;a[k+1|0]=a[12201]|0;a[k+2|0]=a[12202]|0;a[k+3|0]=a[12203]|0;a[k+4|0]=a[12204]|0;a[h+6|0]=0;iv(b|0,g);if((a[j]&1)!=0){yr(c[g+8>>2]|0)}j9(b+144|0);c[b>>2]=29320;c[b+144>>2]=29468;c[b+152>>2]=d;a[b+156|0]=e;i=f;return}function h1(a){a=a|0;kb(a+144|0);ix(a|0);yr(a);return}function h2(a){a=a|0;var b=0;b=a-160+16|0;kb(b+144|0);ix(b);yr(b);return}function h3(a){a=a|0;kb(a+144|0);ix(a|0);return}function h4(a){a=a|0;var b=0;b=a-160+16|0;kb(b+144|0);ix(b);return}function h5(b,c){b=b|0;c=c|0;var d=0;if((c|0)>6){d=0;return d|0}d=a[((a[b+156|0]|0)==2?39560:39552)+c|0]|0;return d|0}function h6(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;switch(e<<24>>24|0){case 7:{f=3;break};case 10:{f=5;break};case 6:{f=2;break};case 2:{f=8;break};case 3:{f=6;break};case 5:{f=1;break};case 8:{f=4;break};case 4:{f=7;break};default:{f=0}}return c[39568+(((a[b+156|0]|0)==1|0)*252|0)+(f*28|0)+((d&255)-1<<2)>>2]|0}function h7(b,d){b=b|0;d=d|0;d=yp(16)|0;c[b+8>>2]=d;c[b>>2]=17;c[b+4>>2]=12;yA(d|0,14168,12)|0;a[d+12|0]=0;return}function h8(a){a=a|0;return 20}function h9(d,e){d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f|0;h=g;j=g;a[j]=12;k=h+1|0;a[k]=a[12080]|0;a[k+1|0]=a[12081]|0;a[k+2|0]=a[12082]|0;a[k+3|0]=a[12083]|0;a[k+4|0]=a[12084]|0;a[k+5|0]=a[12085]|0;a[h+7|0]=0;jE(d|0,g);if((a[j]&1)!=0){yr(c[g+8>>2]|0)}g=d+96|0;c[g>>2]=28248;j=d+100|0;h=j;c[j>>2]=h;c[d+104>>2]=h;c[d+108>>2]=0;lC(d+112|0);c[d>>2]=26816;c[g>>2]=26932;c[d+112>>2]=26952;g=d+132|0;h=g;c[g>>2]=h;g=d+136|0;c[g>>2]=h;h=d+140|0;c[h>>2]=0;fw(d+148|0);if((e|0)<=0){cd(17136,14144,35,19744)}c[d+144>>2]=e;jj(d|0);b[d+128>>1]=0;e=d+132|0;if((c[h>>2]|0)==0){i=f;return}d=c[g>>2]|0;g=e;j=(c[e>>2]|0)+4|0;e=d|0;c[(c[e>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[e>>2];c[h>>2]=0;if((d|0)==(g|0)){i=f;return}else{l=d}while(1){d=c[l+4>>2]|0;yr(l);if((d|0)==(g|0)){break}else{l=d}}i=f;return}function ia(a){a=a|0;id(a);yr(a);return}function ib(a){a=a|0;var b=0;b=a-296+200|0;id(b);yr(b);return}function ic(a){a=a|0;var b=0;b=a-296+184|0;id(b);yr(b);return}function id(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[a>>2]=26816;b=a+96|0;c[b>>2]=26932;c[a+112>>2]=26952;fy(a+148|0);d=a+132|0;e=a+140|0;do{if((c[e>>2]|0)!=0){f=c[a+136>>2]|0;g=d;h=(c[d>>2]|0)+4|0;i=f|0;c[(c[i>>2]|0)+4>>2]=c[h>>2];c[c[h>>2]>>2]=c[i>>2];c[e>>2]=0;if((f|0)==(g|0)){break}else{j=f}while(1){f=c[j+4>>2]|0;yr(j);if((f|0)==(g|0)){break}else{j=f}}}}while(0);lE(a+112|0);c[b>>2]=28248;b=a+100|0;j=a+108|0;if((c[j>>2]|0)==0){k=a|0;jo(k);return}e=c[a+104>>2]|0;d=b;g=(c[b>>2]|0)+4|0;b=e|0;c[(c[b>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[b>>2];c[j>>2]=0;if((e|0)==(d|0)){k=a|0;jo(k);return}else{l=e}while(1){e=c[l+4>>2]|0;yr(l);if((e|0)==(d|0)){break}else{l=e}}k=a|0;jo(k);return}function ie(a){a=a|0;id(a-296+200|0);return}function ig(a){a=a|0;id(a-296+184|0);return}function ih(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+40>>2]&255](d,a)|0;return(b?0:2)|0}function ii(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;g=b|0;b=a|0;jl(g,b);if((d|0)!=-1){jr(b,g,d);jk(b,1);i=e;return}c[f>>2]=g;d=a+8|0;h=c[d>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,f);jk(b,1);i=e;return}if((h|0)==0){j=0}else{c[h>>2]=g;j=c[d>>2]|0}c[d>>2]=j+4;jk(b,1);i=e;return}function ij(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+96|0;jL(d,a|0);if((b|0)==0){e=0;return e|0}if((c[a+108>>2]|0)==0){e=0;return e|0}e=jO(d,b|0)|0;return e|0}function ik(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+132|0;e=yp(12)|0;f=e;g=e+8|0;if((g|0)!=0){c[g>>2]=b}b=d|0;c[(c[b>>2]|0)+4>>2]=f;c[e>>2]=c[b>>2];c[b>>2]=f;c[e+4>>2]=d;d=a+140|0;c[d>>2]=(c[d>>2]|0)+1;return}function il(a){a=a|0;return a+132|0}function im(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+132|0;d=a+140|0;if((c[d>>2]|0)==0){return}e=c[a+136>>2]|0;a=b;f=(c[b>>2]|0)+4|0;b=e|0;c[(c[b>>2]|0)+4>>2]=c[f>>2];c[c[f>>2]>>2]=c[b>>2];c[d>>2]=0;if((e|0)==(a|0)){return}else{g=e}while(1){e=c[g+4>>2]|0;yr(g);if((e|0)==(a|0)){break}else{g=e}}return}function io(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;if((e|0)==0|(d|0)==0){dr(12432,(g=i,i=i+1|0,i=i+7&-8,c[g>>2]=0,g)|0);i=g;i=f;return}g=e+80|0;if((a[g]&1)!=0){h=c[e+64>>2]|0;j=b+112|0;if((h|0)==0){lF(j,c[d+64>>2]|0)}else{lF(j,h)}a[g]=0}h=e+81|0;if((a[h]&1)!=0){j=c[e+68>>2]|0;k=b+112|0;if((j|0)==0){lG(k,c[d+68>>2]|0)}else{lG(k,j)}a[h]=0}if((a[e+82|0]&1)!=0){h=c[e+72>>2]|0;j=b+112|0;if((h|0)==0){lH(j,c[d+72>>2]|0)}else{lH(j,h)}a[g]=0}g=c[e+64>>2]|0;if((g|0)!=0){e=b+148|0;h=g|0;iy(e,h)|0;c[b+292>>2]=c[g+144>>2];i=f;return}g=c[d+64>>2]|0;if((g|0)==0){i=f;return}iy(b+148|0,g|0)|0;c[b+292>>2]=c[g+144>>2];i=f;return}function ip(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==0){d=0;return d|0}do{if(iA(b)|0){e=b;f=5268}else{g=a+96|0;jL(g,a|0);h=jN(g,b|0)|0;if((h|0)==-1){e=b;f=5268;break}i=c[9315]|0;j=b;k=h;while(1){if((c[(c[(c[j>>2]|0)-4>>2]|0)+4>>2]|0)==(i|0)){l=j;f=5267;break}if((k|0)<1){l=b;f=5267;break}h=jO(g,j|0)|0;if((h|0)==0){f=5266;break}else{j=h;k=k-1|0}}if((f|0)==5266){cp();return 0}else if((f|0)==5267){if((l|0)==0){break}else{e=l;f=5268;break}}}}while(0);do{if((f|0)==5268){l=e;if((yc(l,37496,37256,-1)|0)==0){break}d=yc(l,37496,37256,-1)|0;return d|0}}while(0);d=a+148|0;return d|0}function iq(a,b){a=a|0;b=b|0;var c=0,d=0;c=ip(a,b)|0;if((c|0)==0){d=0;return d|0}d=fz(c)|0;return d|0}function ir(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+24|0;j=c[d>>2]|0;d=c[j>>2]|0;k=c[j+4>>2]|0;l=c[j+8>>2]|0;m=c[j+12>>2]|0;n=c[j+16>>2]|0;o=c[j+20>>2]|0;if((a[n]&1)!=0){p=2;i=e;return p|0}j=b+8|0;q=b+4|0;b=c[q>>2]|0;if(((c[j>>2]|0)-b|0)<=0){p=0;i=e;return p|0}r=d;s=d+8|0;t=d+12|0;u=d+4|0;d=h;v=l+1|0;w=h+1|0;x=h+8|0;y=l+8|0;z=h+4|0;A=l+4|0;B=h|0;h=g;C=k+1|0;D=g+1|0;E=g+8|0;F=k+8|0;G=g+4|0;H=k+4|0;I=g|0;g=0;J=b;L5818:while(1){b=a[k]|0;K=b&255;if((K&1|0)==0){L=K>>>1}else{L=c[H>>2]|0}L5824:do{if((L|0)==0){M=J;N=5312}else{if((a[m]&1)!=0){M=J;N=5312;break}K=c[J+(g<<2)>>2]|0;O=K+32|0;if((a[O]&1)==0){c[h>>2]=c[O>>2];c[h+4>>2]=c[O+4>>2];c[h+8>>2]=c[O+8>>2];P=b}else{O=c[K+40>>2]|0;Q=c[K+36>>2]|0;if(Q>>>0>4294967279>>>0){N=5291;break L5818}if(Q>>>0<11>>>0){a[h]=Q<<1&255;R=D}else{K=Q+16&-16;S=yp(K)|0;c[E>>2]=S;c[I>>2]=K|1;c[G>>2]=Q;R=S}yA(R|0,O|0,Q)|0;a[R+Q|0]=0;P=a[k]|0}Q=P&255;if((Q&1|0)==0){T=Q>>>1}else{T=c[H>>2]|0}Q=a[h]|0;O=Q&255;if((T|0)!=(((O&1|0)==0?O>>>1:c[G>>2]|0)|0)){if((Q&1)==0){break}yr(c[E>>2]|0);break}O=(P&1)==0;if(O){U=C}else{U=c[F>>2]|0}S=(Q&1)==0;Q=S?D:c[E>>2]|0;do{if(O){L5853:do{if((T|0)!=0){K=Q;V=U;W=T;while(1){if((a[V]|0)!=(a[K]|0)){break}X=W-1|0;if((X|0)==0){break L5853}else{K=K+1|0;V=V+1|0;W=X}}if(S){break L5824}yr(c[E>>2]|0);break L5824}}while(0);if(S){break}yr(c[E>>2]|0)}else{W=(yD(U|0,Q|0,T|0)|0)==0;if(!S){yr(c[E>>2]|0)}if(!W){break L5824}}}while(0);a[m]=1;M=c[q>>2]|0;N=5312}}while(0);do{if((N|0)==5312){N=0;b=iz(c[M+(g<<2)>>2]|0,(a[o]&1)!=0)|0;jl(b,r);c[f>>2]=b;S=c[s>>2]|0;if((S|0)==(c[t>>2]|0)){eb(u,f)}else{if((S|0)==0){Y=0}else{c[S>>2]=b;Y=c[s>>2]|0}c[s>>2]=Y+4}jk(r,1);b=a[l]|0;S=b&255;if((S&1|0)==0){Z=S>>>1}else{Z=c[A>>2]|0}if((Z|0)==0){break}S=c[(c[q>>2]|0)+(g<<2)>>2]|0;Q=S+32|0;if((a[Q]&1)==0){c[d>>2]=c[Q>>2];c[d+4>>2]=c[Q+4>>2];c[d+8>>2]=c[Q+8>>2];_=b}else{b=c[S+40>>2]|0;Q=c[S+36>>2]|0;if(Q>>>0>4294967279>>>0){N=5324;break L5818}if(Q>>>0<11>>>0){a[d]=Q<<1&255;$=w}else{S=Q+16&-16;O=yp(S)|0;c[x>>2]=O;c[B>>2]=S|1;c[z>>2]=Q;$=O}yA($|0,b|0,Q)|0;a[$+Q|0]=0;_=a[l]|0}Q=_&255;if((Q&1|0)==0){aa=Q>>>1}else{aa=c[A>>2]|0}Q=a[d]|0;b=Q&255;if((aa|0)!=(((b&1|0)==0?b>>>1:c[z>>2]|0)|0)){if((Q&1)==0){break}yr(c[x>>2]|0);break}b=(_&1)==0;if(b){ab=v}else{ab=c[y>>2]|0}ac=(Q&1)==0;Q=ac?w:c[x>>2]|0;if(!b){b=(yD(ab|0,Q|0,aa|0)|0)==0;if(!ac){yr(c[x>>2]|0)}if(b){break L5818}else{break}}if((aa|0)==0){N=5342;break L5818}else{ad=Q;ae=ab;af=aa}while(1){if((a[ae]|0)!=(a[ad]|0)){break}Q=af-1|0;if((Q|0)==0){N=5342;break L5818}else{ad=ad+1|0;ae=ae+1|0;af=Q}}if(ac){break}yr(c[x>>2]|0)}}while(0);Q=g+1|0;b=c[q>>2]|0;if((Q|0)<((c[j>>2]|0)-b>>2|0)){g=Q;J=b}else{p=0;N=5357;break}}do{if((N|0)==5291){qo(0);return 0}else if((N|0)==5342){if(ac){break}yr(c[x>>2]|0)}else if((N|0)==5324){qo(0);return 0}else if((N|0)==5357){i=e;return p|0}}while(0);a[n]=1;p=2;i=e;return p|0}function is(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+32|0;e=d|0;f=d+16|0;g=b|0;h[c[(c[g>>2]|0)+4>>2]>>3]=0.0;j=c[a+116>>2]|0;do{if((j|0)!=0){k=j|0;l=c[(c[j>>2]|0)+56>>2]|0;m=e|0;c[m>>2]=0;n=e+4|0;c[n>>2]=0;o=e+8|0;c[o>>2]=0;p=c[b+4>>2]|0;q=c[g>>2]|0;r=p-q|0;s=r>>2;do{if((s|0)!=0){if(s>>>0>1073741823>>>0){vf(0);return 0}t=yp(r)|0;c[n>>2]=t;c[m>>2]=t;c[o>>2]=t+(s<<2);if((q|0)==(p|0)){break}else{u=q;v=t}do{if((v|0)==0){w=0}else{c[v>>2]=c[u>>2];w=c[n>>2]|0}v=w+4|0;c[n>>2]=v;u=u+4|0;}while((u|0)!=(p|0))}}while(0);cW[l&255](k,e)|0;p=c[m>>2]|0;if((p|0)==0){break}q=c[n>>2]|0;if((p|0)!=(q|0)){c[n>>2]=q+(~((q-4+(-p|0)|0)>>>2)<<2)}yr(p)}}while(0);e=c[a+120>>2]|0;if((e|0)==0){i=d;return 0}a=e|0;u=c[(c[e>>2]|0)+56>>2]|0;e=f|0;c[e>>2]=0;v=f+4|0;c[v>>2]=0;w=f+8|0;c[w>>2]=0;j=c[b+4>>2]|0;b=c[g>>2]|0;g=j-b|0;p=g>>2;do{if((p|0)!=0){if(p>>>0>1073741823>>>0){vf(0);return 0}q=yp(g)|0;c[v>>2]=q;c[e>>2]=q;c[w>>2]=q+(p<<2);if((b|0)==(j|0)){break}else{x=b;y=q}do{if((y|0)==0){z=0}else{c[y>>2]=c[x>>2];z=c[v>>2]|0}y=z+4|0;c[v>>2]=y;x=x+4|0;}while((x|0)!=(j|0))}}while(0);cW[u&255](a,f)|0;f=c[e>>2]|0;if((f|0)==0){i=d;return 0}e=c[v>>2]|0;if((f|0)!=(e|0)){c[v>>2]=e+(~((e-4+(-f|0)|0)>>>2)<<2)}yr(f);i=d;return 0}function it(b,c){b=b|0;c=c|0;c=b;a[b]=10;b=c+1|0;a[b]=a[19744]|0;a[b+1|0]=a[19745]|0;a[b+2|0]=a[19746]|0;a[b+3|0]=a[19747]|0;a[b+4|0]=a[19748]|0;a[c+6|0]=0;return}function iu(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=e;a[f]=6;g=e+1|0;a[g]=a[11856]|0;a[g+1|0]=a[11857]|0;a[g+2|0]=a[11858]|0;a[e+4|0]=0;jE(b|0,e);if((a[f]&1)!=0){yr(c[e+8>>2]|0)}c[b>>2]=29160;a[b+109|0]=0;c[b+112>>2]=0;a[b+116|0]=0;yC(b+120|0,0,16);a[b+117|0]=1;c[b+96>>2]=-2147483647;c[b+100>>2]=0;c[b+104>>2]=0;a[b+108|0]=0;c[b+140>>2]=0;i=d;return}function iv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e|0;g=b|0;h=d;if((a[h]&1)==0){j=f;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2]}else{h=c[d+8>>2]|0;j=c[d+4>>2]|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){a[f]=j<<1&255;k=f+1|0}else{d=j+16&-16;l=yp(d)|0;c[f+8>>2]=l;c[f>>2]=d|1;c[f+4>>2]=j;k=l}yA(k|0,h|0,j)|0;a[k+j|0]=0}jE(g,f);if((a[f]&1)!=0){yr(c[f+8>>2]|0)}c[b>>2]=29160;a[b+109|0]=0;c[b+112>>2]=0;a[b+116|0]=0;yC(b+120|0,0,16);a[b+117|0]=1;c[b+96>>2]=-2147483647;c[b+100>>2]=0;c[b+104>>2]=0;a[b+108|0]=0;c[b+140>>2]=0;i=e;return}function iw(a){a=a|0;jo(a|0);yr(a);return}function ix(a){a=a|0;jo(a|0);return}function iy(b,d){b=b|0;d=d|0;if((b|0)==(d|0)){return b|0}a[b+109|0]=a[d+109|0]&1;c[b+112>>2]=c[d+112>>2];a[b+116|0]=a[d+116|0]|0;a[b+117|0]=a[d+117|0]&1;c[b+16>>2]=0;c[b+140>>2]=0;return b|0}function iz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e|0;g=e+16|0;L5993:do{if((b|0)!=0){h=b;do{if((yc(h,37496,36968,-1)|0)==0){if((yc(h,37496,37256,-1)|0)!=0){j=yp(148)|0;ji(j,b|0);c[j+60>>2]=c[b+60>>2];c[j+64>>2]=c[b+64>>2];c[j+68>>2]=c[b+68>>2];c[j+72>>2]=c[b+72>>2];c[j+76>>2]=c[b+76>>2];c[j+80>>2]=c[b+80>>2];c[j+84>>2]=c[b+84>>2];c[j+88>>2]=c[b+88>>2];a[j+92|0]=a[b+92|0]&1;c[j+96>>2]=c[b+96>>2];c[j+100>>2]=c[b+100>>2];c[j+104>>2]=c[b+104>>2];a[j+108|0]=a[b+108|0]&1;a[j+109|0]=a[b+109|0]&1;c[j+112>>2]=c[b+112>>2];a[j+116|0]=a[b+116|0]|0;a[j+117|0]=a[b+117|0]&1;k=b+120|0;l=j+120|0;m=c[k+4>>2]|0;c[l>>2]=c[k>>2];c[l+4>>2]=m;m=b+128|0;l=j+128|0;k=c[m+4>>2]|0;c[l>>2]=c[m>>2];c[l+4>>2]=k;a[j+136|0]=a[b+136|0]&1;c[j+140>>2]=c[b+140>>2];c[j>>2]=27584;c[j+144>>2]=c[b+144>>2];n=j;break}if((yc(h,37496,37080,-1)|0)!=0){j=yp(172)|0;ji(j,b|0);c[j+60>>2]=c[b+60>>2];c[j+64>>2]=c[b+64>>2];c[j+68>>2]=c[b+68>>2];c[j+72>>2]=c[b+72>>2];c[j+76>>2]=c[b+76>>2];c[j+80>>2]=c[b+80>>2];c[j+84>>2]=c[b+84>>2];c[j+88>>2]=c[b+88>>2];a[j+92|0]=a[b+92|0]&1;c[j+96>>2]=c[b+96>>2];c[j+100>>2]=c[b+100>>2];c[j+104>>2]=c[b+104>>2];a[j+108|0]=a[b+108|0]&1;a[j+109|0]=a[b+109|0]&1;c[j+112>>2]=c[b+112>>2];a[j+116|0]=a[b+116|0]|0;a[j+117|0]=a[b+117|0]&1;k=b+120|0;l=j+120|0;m=c[k+4>>2]|0;c[l>>2]=c[k>>2];c[l+4>>2]=m;m=b+128|0;l=j+128|0;k=c[m+4>>2]|0;c[l>>2]=c[m>>2];c[l+4>>2]=k;a[j+136|0]=a[b+136|0]&1;c[j+140>>2]=c[b+140>>2];c[j>>2]=26528;a[j+144|0]=a[b+144|0]|0;c[j+148>>2]=c[b+148>>2];c[j+152>>2]=c[b+152>>2];c[j+156>>2]=c[b+156>>2];a[j+160|0]=a[b+160|0]&1;c[j+164>>2]=c[b+164>>2];a[j+168|0]=a[b+168|0]|0;n=j;break}if((yc(h,37496,37216,-1)|0)!=0){j=yp(208)|0;iL(j,b);n=j;break}if((yc(h,37496,37160,-1)|0)!=0){j=yp(184)|0;k=b;ji(j,b|0);c[j+60>>2]=c[b+60>>2];c[j+64>>2]=c[b+64>>2];c[j+68>>2]=c[b+68>>2];c[j+72>>2]=c[b+72>>2];c[j+76>>2]=c[b+76>>2];c[j+80>>2]=c[b+80>>2];c[j+84>>2]=c[b+84>>2];c[j+88>>2]=c[b+88>>2];a[j+92|0]=a[b+92|0]&1;c[j+96>>2]=c[b+96>>2];c[j+100>>2]=c[b+100>>2];c[j+104>>2]=c[b+104>>2];a[j+108|0]=a[b+108|0]&1;a[j+109|0]=a[b+109|0]&1;c[j+112>>2]=c[b+112>>2];a[j+116|0]=a[b+116|0]|0;a[j+117|0]=a[b+117|0]&1;l=b+120|0;m=j+120|0;o=c[l+4>>2]|0;c[m>>2]=c[l>>2];c[m+4>>2]=o;o=b+128|0;m=j+128|0;l=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=l;a[j+136|0]=a[b+136|0]&1;c[j+140>>2]=c[b+140>>2];a[j+148|0]=a[b+148|0]|0;a[j+149|0]=a[k+149|0]|0;c[j+152>>2]=c[b+152>>2];c[j+156>>2]=c[b+156>>2];c[j+160>>2]=c[b+160>>2];l=j+164|0;m=b+164|0;a[l]=a[m]|0;a[l+1|0]=a[m+1|0]|0;a[l+2|0]=a[m+2|0]|0;a[l+3|0]=a[m+3|0]|0;a[l+4|0]=a[m+4|0]|0;a[l+5|0]=a[m+5|0]|0;a[j+170|0]=a[k+170|0]&1;a[j+176|0]=a[b+176|0]|0;a[j+177|0]=a[k+177|0]|0;c[j>>2]=27040;c[j+144>>2]=27188;c[j+172>>2]=27212;c[j+180>>2]=c[b+180>>2];n=j;break}if((yc(h,37496,37032,-1)|0)==0){break L5993}j=yp(160)|0;k=b;ji(j,b|0);c[j+60>>2]=c[b+60>>2];c[j+64>>2]=c[b+64>>2];c[j+68>>2]=c[b+68>>2];c[j+72>>2]=c[b+72>>2];c[j+76>>2]=c[b+76>>2];c[j+80>>2]=c[b+80>>2];c[j+84>>2]=c[b+84>>2];c[j+88>>2]=c[b+88>>2];a[j+92|0]=a[b+92|0]&1;c[j+96>>2]=c[b+96>>2];c[j+100>>2]=c[b+100>>2];c[j+104>>2]=c[b+104>>2];a[j+108|0]=a[b+108|0]&1;a[j+109|0]=a[b+109|0]&1;c[j+112>>2]=c[b+112>>2];a[j+116|0]=a[b+116|0]|0;a[j+117|0]=a[b+117|0]&1;m=b+120|0;l=j+120|0;o=c[m+4>>2]|0;c[l>>2]=c[m>>2];c[l+4>>2]=o;o=b+128|0;l=j+128|0;m=c[o+4>>2]|0;c[l>>2]=c[o>>2];c[l+4>>2]=m;a[j+136|0]=a[b+136|0]&1;c[j+140>>2]=c[b+140>>2];a[j+148|0]=a[b+148|0]|0;a[j+149|0]=a[k+149|0]|0;c[j>>2]=26200;c[j+144>>2]=26348;c[j+152>>2]=c[b+152>>2];a[j+156|0]=a[b+156|0]|0;a[j+157|0]=a[k+157|0]|0;n=j}else{j=yp(152)|0;ji(j,b|0);c[j+60>>2]=c[b+60>>2];c[j+64>>2]=c[b+64>>2];c[j+68>>2]=c[b+68>>2];c[j+72>>2]=c[b+72>>2];c[j+76>>2]=c[b+76>>2];c[j+80>>2]=c[b+80>>2];c[j+84>>2]=c[b+84>>2];c[j+88>>2]=c[b+88>>2];a[j+92|0]=a[b+92|0]&1;c[j+96>>2]=c[b+96>>2];c[j+100>>2]=c[b+100>>2];c[j+104>>2]=c[b+104>>2];a[j+108|0]=a[b+108|0]&1;a[j+109|0]=a[b+109|0]&1;c[j+112>>2]=c[b+112>>2];a[j+116|0]=a[b+116|0]|0;a[j+117|0]=a[b+117|0]&1;k=b+120|0;m=j+120|0;l=c[k+4>>2]|0;c[m>>2]=c[k>>2];c[m+4>>2]=l;l=b+128|0;m=j+128|0;k=c[l+4>>2]|0;c[m>>2]=c[l>>2];c[m+4>>2]=k;a[j+136|0]=a[b+136|0]&1;c[j+140>>2]=c[b+140>>2];c[j>>2]=25728;c[j+144>>2]=c[b+144>>2];a[j+148|0]=a[b+148|0]&1;a[j+149|0]=a[b+149|0]&1;n=j}}while(0);h=n;j=n;c[n+16>>2]=0;if(d){ju(j);i=e;return h|0}k=b+32|0;if((a[k]&1)==0){m=g;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];c[m+8>>2]=c[k+8>>2]}else{k=c[b+40>>2]|0;m=c[b+36>>2]|0;if(m>>>0>4294967279>>>0){qo(0);return 0}if(m>>>0<11>>>0){a[g]=m<<1&255;p=g+1|0}else{l=m+16&-16;o=yp(l)|0;c[g+8>>2]=o;c[g>>2]=l|1;c[g+4>>2]=m;p=o}yA(p|0,k|0,m)|0;a[p+m|0]=0}jq(j,g);if((a[g]&1)==0){i=e;return h|0}yr(c[g+8>>2]|0);i=e;return h|0}}while(0);cH[c[(c[b>>2]|0)+16>>2]&255](f,b|0);b=f;if((a[b]&1)==0){q=f+1|0}else{q=c[f+8>>2]|0}dr(17096,(e=i,i=i+8|0,c[e>>2]=q,e)|0);i=e;if((a[b]&1)==0){cd(14104,12400,104,20712);return 0}yr(c[f+8>>2]|0);cd(14104,12400,104,20712);return 0}function iA(a){a=a|0;var b=0;if((a|0)==0){b=0;return b|0}b=(yc(a,37496,37256,-1)|0)!=0;return b|0}function iB(a){a=a|0;var b=0;if((a|0)==0){b=0;return b|0}b=(yc(a,37496,37216,-1)|0)!=0;return b|0}function iC(a){a=a|0;return 10}function iD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)==0){return}e=a;if((yc(e,37496,37448,-1)|0)!=0){a=yc(e,37496,37448,-1)|0;cZ[c[(c[a>>2]|0)+8>>2]&127](a,b,d);return}if((yc(e,37496,37360,-1)|0)==0){return}a=yc(e,37496,37360,-1)|0;cZ[c[(c[a>>2]|0)+8>>2]&127](a,b,d);return}function iE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((a|0)==0){e=0;return e|0}f=a;if((yc(f,37496,37448,-1)|0)!=0){a=yc(f,37496,37448,-1)|0;e=cM[c[(c[a>>2]|0)+12>>2]&63](a,b,d)|0;return e|0}if((yc(f,37496,37360,-1)|0)==0){e=0;return e|0}a=yc(f,37496,37360,-1)|0;e=cM[c[(c[a>>2]|0)+12>>2]&63](a,b,d)|0;return e|0}function iF(a,b,d){a=a|0;b=b|0;d=d|0;if((a|0)==0){return}d=a;if((yc(d,37496,37368,-1)|0)==0){return}a=yc(d,37496,37368,-1)|0;cH[c[(c[a>>2]|0)+8>>2]&255](a,b);return}function iG(a){a=a|0;var b=0;if((a|0)==0){b=0;return b|0}b=(yc(a,37496,37368,-1)|0)!=0;return b|0}function iH(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+44>>2]&255](d,a)|0;return(b?0:2)|0}function iI(a){a=a|0;var b=0.0,d=0,e=0,f=0,g=0;if((a|0)==0){b=0.0;return+b}d=a;if((yc(d,37496,37368,-1)|0)==0){b=0.0;return+b}e=jy(a|0,36984,3)|0;do{if((e|0)==0){f=1;g=1}else{a=yc(e,37064,36984,-1)|0;if((a|0)==0){f=1;g=1;break}f=c[a+164>>2]|0;g=c[a+160>>2]|0}}while(0);e=yc(d,37496,37368,-1)|0;b=+cX[c[(c[e>>2]|0)+12>>2]&3](e,g,f);return+b}function iJ(a){a=a|0;var b=0,d=0;b=c[a+140>>2]|0;if((b|0)==0){d=0;return d|0}d=c[b+60>>2]|0;return d|0}function iK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0.0;d=c[b>>2]|0;b=c[d>>2]|0;e=c[d+4>>2]|0;do{if((a|0)==0){f=0}else{d=a;if((yc(d,37496,36968,-1)|0)!=0){f=4;break}if((yc(d,37496,37256,-1)|0)!=0){f=1;break}if((yc(d,37496,37512,-1)|0)!=0){f=3;break}if((yc(d,37496,37080,-1)|0)!=0){f=2;break}g=(yc(d,37496,36736,-1)|0)!=0;f=g?5:0}}while(0);i=+cR[c[(c[a>>2]|0)+136>>2]&3](a);dL(c[b>>2]|0,i+ +h[e>>3]);c[a+140>>2]=dK(c[b>>2]|0,+h[e>>3],f)|0;h[e>>3]=i+ +h[e>>3];return 0}function iL(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;ji(b|0,d|0);e=b|0;c[e>>2]=24520;c[b+60>>2]=c[d+60>>2];c[b+64>>2]=c[d+64>>2];c[b+68>>2]=c[d+68>>2];c[b+72>>2]=c[d+72>>2];c[b+76>>2]=c[d+76>>2];c[b+80>>2]=c[d+80>>2];c[b+84>>2]=c[d+84>>2];c[b+88>>2]=c[d+88>>2];a[b+92|0]=a[d+92|0]&1;c[e>>2]=29160;c[b+96>>2]=c[d+96>>2];c[b+100>>2]=c[d+100>>2];c[b+104>>2]=c[d+104>>2];a[b+108|0]=a[d+108|0]&1;a[b+109|0]=a[d+109|0]&1;c[b+112>>2]=c[d+112>>2];a[b+116|0]=a[d+116|0]|0;a[b+117|0]=a[d+117|0]&1;f=d+120|0;g=b+120|0;h=c[f+4>>2]|0;c[g>>2]=c[f>>2];c[g+4>>2]=h;h=d+128|0;g=b+128|0;f=c[h+4>>2]|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;a[b+136|0]=a[d+136|0]&1;c[b+140>>2]=c[d+140>>2];f=b+144|0;c[f>>2]=28336;a[b+148|0]=a[d+148|0]|0;a[b+149|0]=a[d+149|0]|0;c[b+152>>2]=c[d+152>>2];c[b+156>>2]=c[d+156>>2];c[b+160>>2]=c[d+160>>2];g=b+164|0;h=d+164|0;a[g]=a[h]|0;a[g+1|0]=a[h+1|0]|0;a[g+2|0]=a[h+2|0]|0;a[g+3|0]=a[h+3|0]|0;a[g+4|0]=a[h+4|0]|0;a[g+5|0]=a[h+5|0]|0;a[b+170|0]=a[d+170|0]&1;h=b+172|0;c[h>>2]=28888;a[b+176|0]=a[d+176|0]|0;a[b+177|0]=a[d+177|0]|0;a[b+178|0]=a[d+178|0]|0;c[e>>2]=27376;c[f>>2]=27524;c[h>>2]=27548;c[b+180>>2]=c[d+180>>2];c[b+184>>2]=c[d+184>>2];a[b+188|0]=a[d+188|0]|0;a[b+189|0]=a[d+189|0]|0;a[b+190|0]=a[d+190|0]&1;a[b+191|0]=a[d+191|0]|0;a[b+192|0]=a[d+192|0]|0;a[b+193|0]=a[d+193|0]&1;h=b+194|0;f=d+194|0;a[h]=a[f]|0;a[h+1|0]=a[f+1|0]|0;a[h+2|0]=a[f+2|0]|0;a[h+3|0]=a[f+3|0]|0;a[h+4|0]=a[f+4|0]|0;a[h+5|0]=a[f+5|0]|0;a[b+200|0]=a[d+200|0]|0;a[b+201|0]=a[d+201|0]|0;a[b+202|0]=a[d+202|0]&1;c[b+204>>2]=c[d+204>>2];return}function iM(){h[7146]=0.0;h[7147]=-2.0;h[7148]=605.0;h[7149]=242.0;yC(57200|0,0|0,16|0);h[7152]=427.7;h[7153]=516.0;yC(57232|0,0|0,16|0);h[7156]=296.0;h[7157]=496.0;h[7158]=0.0;h[7159]=-15.0;h[7160]=402.0;h[7161]=513.0;yC(57296|0,0|0,16|0);h[7164]=383.0;h[7165]=515.0;yC(57328|0,0|0,16|0);h[7168]=387.0;h[7169]=494.0;yC(57360|0,0|0,16|0);h[7172]=357.7;h[7173]=494.0;h[7174]=-1.3;h[7175]=0.0;h[7176]=395.3;h[7177]=516.0;yC(57424|0,0|0,16|0);h[7180]=404.0;h[7181]=511.0;yC(57456|0,0|0,16|0);h[7184]=386.0;h[7185]=515.0;yC(57488|0,0|0,16|0);h[7188]=397.0;h[7189]=513.0;h[7190]=-376.0;h[7191]=-57.0;h[7192]=753.0;h[7193]=405.0;h[7194]=-376.0;h[7195]=-348.0;h[7196]=753.0;h[7197]=405.0;h[7198]=-216.0;h[7199]=-161.0;h[7200]=432.0;h[7201]=364.0;h[7202]=-2.0;h[7203]=-69.0;h[7204]=360.0;h[7205]=633.0;h[7206]=1.0;h[7207]=-69.0;h[7208]=425.0;h[7209]=649.0;h[7210]=0.0;h[7211]=-133.0;h[7212]=405.0;h[7213]=266.0;h[7214]=0.0;h[7215]=-133.0;h[7216]=405.0;h[7217]=266.0;h[7218]=-15.0;h[7219]=-135.0;h[7220]=314.0;h[7221]=270.0;h[7222]=-15.0;h[7223]=-135.0;h[7224]=314.0;h[7225]=270.0;h[7226]=0.0;h[7227]=-597.0;h[7228]=276.0;h[7229]=577.0;h[7230]=164.0;h[7231]=20.0;h[7232]=276.0;h[7233]=577.0;h[7234]=0.0;h[7235]=-655.0;h[7236]=679.0;h[7237]=1809.0;h[7238]=4.0;h[7239]=-566.0;h[7240]=694.0;h[7241]=832.0;h[7242]=0.0;h[7243]=-536.0;h[7244]=659.0;h[7245]=1082.0;h[7246]=0.0;h[7247]=-844.0;h[7248]=679.0;h[7249]=1998.0;h[7250]=0.0;h[7251]=-364.0;h[7252]=197.0;h[7253]=746.0;h[7254]=20.0;h[7255]=-377.0;h[7256]=157.0;h[7257]=754.0;h[7258]=22.0;h[7259]=-184.0;h[7260]=198.0;h[7261]=678.0;h[7262]=-20.0;h[7263]=-114.0;h[7264]=271.0;h[7265]=228.0;h[7266]=0.0;h[7267]=-146.0;h[7268]=324.0;h[7269]=808.0;yC(58160|0,0|0,16|0);h[7272]=290.0;h[7273]=455.0;h[7274]=0.0;h[7275]=-249.0;h[7276]=341.0;h[7277]=702.0;h[7278]=1.0;h[7279]=-248.0;h[7280]=419.0;h[7281]=946.0;h[7282]=0.0;h[7283]=-248.0;h[7284]=503.0;h[7285]=1191.0;h[7286]=-1.0;h[7287]=-510.0;h[7288]=602.0;h[7289]=1485.0;h[7290]=0.0;h[7291]=-211.0;h[7292]=359.0;h[7293]=445.0;h[7294]=0.0;h[7295]=-211.0;h[7296]=359.0;h[7297]=445.0;h[7298]=-34.0;h[7299]=-211.0;h[7300]=358.0;h[7301]=445.0;h[7302]=-34.0;h[7303]=-211.0;h[7304]=358.0;h[7305]=445.0;h[7306]=0.0;h[7307]=-237.0;h[7308]=162.0;h[7309]=237.0;h[7310]=2.0;h[7311]=6.0;h[7312]=162.0;h[7313]=237.0;h[7314]=145.3;h[7315]=-180.7;h[7316]=461.7;h[7317]=936.3;h[7318]=109.0;h[7319]=-753.0;h[7320]=286.0;h[7321]=1108.0;h[7322]=154.0;h[7323]=-602.0;h[7324]=349.0;h[7325]=1197.0;h[7326]=13.0;h[7327]=-273.0;h[7328]=619.0;h[7329]=1031.0;h[7330]=0.0;h[7331]=-130.0;h[7332]=240.0;h[7333]=260.0;h[7334]=30.0;h[7335]=-334.0;h[7336]=134.0;h[7337]=713.0;h[7338]=30.0;h[7339]=-112.0;h[7340]=177.0;h[7341]=641.0;h[7342]=0.0;h[7343]=-114.0;h[7344]=271.0;h[7345]=228.0;h[7346]=80.0;h[7347]=0.0;h[7348]=170.0;h[7349]=170.0;h[7350]=80.0;h[7351]=0.0;h[7352]=170.0;h[7353]=170.0;h[7354]=80.0;h[7355]=0.0;h[7356]=162.0;h[7357]=262.0;h[7358]=80.0;h[7359]=0.0;h[7360]=162.0;h[7361]=362.0;h[7362]=80.0;h[7363]=0.0;h[7364]=162.0;h[7365]=461.0;h[7366]=80.0;h[7367]=0.0;h[7368]=162.0;h[7369]=558.0;h[7370]=1.0;h[7371]=-61.0;h[7372]=336.0;h[7373]=634.0;yC(58992|0,0|0,16|0);h[7376]=427.0;h[7377]=516.0;h[7378]=0.0;h[7379]=-171.0;h[7380]=274.0;h[7381]=326.0;h[7382]=0.0;h[7383]=-156.0;h[7384]=207.0;h[7385]=311.0;h[7386]=0.0;h[7387]=-171.0;h[7388]=214.0;h[7389]=326.0;h[7390]=0.0;h[7391]=-171.0;h[7392]=243.0;h[7393]=326.0;h[7394]=0.0;h[7395]=-171.0;h[7396]=260.0;h[7397]=326.0;h[7398]=0.0;h[7399]=-156.0;h[7400]=259.0;h[7401]=311.0;h[7402]=0.0;h[7403]=-171.0;h[7404]=240.0;h[7405]=326.0;h[7406]=0.0;h[7407]=-171.0;h[7408]=255.0;h[7409]=326.0;h[7410]=0.0;h[7411]=-156.0;h[7412]=243.0;h[7413]=311.0;h[7414]=0.0;h[7415]=-172.0;h[7416]=225.0;h[7417]=327.0;a[59344]=1;return}function iN(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var i=0;if((a[59344]&1)==0){iM()}switch(b&255|0){case 237:{i=52;break};case 238:{i=53;break};case 239:{i=54;break};case 134:{i=63;break};case 131:{i=59;break};case 228:{i=43;break};case 226:{i=41;break};case 35:{i=0;break};case 116:{i=13;break};case 54:{i=7;break};case 50:{i=3;break};case 220:{i=35;break};case 235:{i=50;break};case 236:{i=51;break};case 229:{i=44;break};case 230:{i=42;break};case 127:{i=14;break};case 64:{i=12;break};case 139:{i=67;break};case 232:{i=47;break};case 233:{i=48;break};case 140:{i=57;break};case 211:{i=26;break};case 214:{i=29;break};case 231:{i=46;break};case 55:{i=8;break};case 53:{i=6;break};case 137:{i=66;break};case 63:{i=11;break};case 133:{i=65;break};case 130:{i=61;break};case 138:{i=58;break};case 208:{i=23;break};case 227:{i=42;break};case 48:{i=1;break};case 207:{i=22;break};case 209:{i=24;break};case 217:{i=32;break};case 218:{i=33;break};case 219:{i=34;break};case 136:{i=60;break};case 240:{i=55;break};case 201:{i=16;break};case 202:{i=17;break};case 203:{i=18;break};case 210:{i=25;break};case 224:{i=39;break};case 205:{i=20;break};case 206:{i=21;break};case 225:{i=40;break};case 212:{i=27;break};case 213:{i=28;break};case 135:{i=64;break};case 52:{i=5;break};case 204:{i=19;break};case 221:{i=36;break};case 222:{i=37;break};case 223:{i=38;break};case 49:{i=2;break};case 51:{i=4;break};case 56:{i=9;break};case 57:{i=10;break};case 132:{i=62;break};case 234:{i=49;break};case 215:{i=30;break};case 216:{i=31;break};case 249:{i=56;break};case 183:{i=15;break};default:{i=29}}c[f>>2]=~~+h[57184+(i<<5)>>3];c[g>>2]=~~+h[57192+(i<<5)>>3];c[d>>2]=~~+h[57168+(i<<5)>>3];c[e>>2]=~~+h[57176+(i<<5)>>3];return}function iO(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=e;a[f]=14;g=e+1|0;a[g]=a[11352]|0;a[g+1|0]=a[11353]|0;a[g+2|0]=a[11354]|0;a[g+3|0]=a[11355]|0;a[g+4|0]=a[11356]|0;a[g+5|0]=a[11357]|0;a[g+6|0]=a[11358]|0;g=e+8|0;a[g]=0;iv(b|0,e);if((a[f]&1)!=0){yr(c[g>>2]|0)}c[b>>2]=26528;a[b+144|0]=0;c[b+164>>2]=0;a[b+168|0]=0;yC(b+148|0,0,13);i=d;return}function iP(a){a=a|0;ix(a|0);yr(a);return}function iQ(a){a=a|0;ix(a|0);return}function iR(b,d){b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){e=0;return e|0}f=yc(d,37064,37080,-1)|0;if((f|0)==0){e=0;return e|0}if((a[b+144|0]|0)!=(a[f+144|0]|0)){e=0;return e|0}if((c[b+148>>2]|0)!=(c[f+148>>2]|0)){e=0;return e|0}if((c[b+152>>2]|0)!=(c[f+152>>2]|0)){e=0;return e|0}if((c[b+156>>2]|0)!=(c[f+156>>2]|0)){e=0;return e|0}if(((a[f+160|0]^a[b+160|0])&1)!=0){e=0;return e|0}if((c[b+164>>2]|0)!=(c[f+164>>2]|0)){e=0;return e|0}e=(a[b+168|0]|0)==(a[f+168|0]|0);return e|0}function iS(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;e=b+152|0;c[e>>2]=0;f=b+156|0;c[f>>2]=0;switch(d|0){case 69:{c[b+148>>2]=0;c[b+164>>2]=2;a[b+168|0]=0;a[b+144|0]=0;a[b+160|0]=0;return};case 87:{c[b+148>>2]=0;c[b+164>>2]=2;a[b+168|0]=1;a[b+144|0]=1;a[b+160|0]=0;return};case 86:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=1;a[b+144|0]=0;a[b+160|0]=1;return};case 88:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=1;a[b+144|0]=1;a[b+160|0]=1;return};case 81:{c[b+148>>2]=0;c[b+164>>2]=2;a[b+168|0]=0;a[b+144|0]=1;a[b+160|0]=0;return};case 89:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=0;a[b+144|0]=1;a[b+160|0]=1;return};case 65:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=0;a[b+144|0]=1;a[b+160|0]=0;return};case 82:{c[b+148>>2]=0;c[b+164>>2]=2;a[b+168|0]=1;a[b+144|0]=0;a[b+160|0]=0;return};case 49:{c[b+148>>2]=0;c[b+164>>2]=0;a[b+168|0]=0;a[b+144|0]=0;a[b+160|0]=0;c[e>>2]=c[9878];c[f>>2]=c[9876];return};case 67:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=0;a[b+144|0]=0;a[b+160|0]=1;return};case 70:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=1;a[b+144|0]=0;a[b+160|0]=0;return};case 68:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=0;a[b+144|0]=0;a[b+160|0]=0;return};case 83:{c[b+148>>2]=0;c[b+164>>2]=1;a[b+168|0]=1;a[b+144|0]=1;a[b+160|0]=0;return};default:{return}}}function iT(b,c){b=b|0;c=c|0;c=b;a[b]=12;b=c+1|0;a[b]=a[14032]|0;a[b+1|0]=a[14033]|0;a[b+2|0]=a[14034]|0;a[b+3|0]=a[14035]|0;a[b+4|0]=a[14036]|0;a[b+5|0]=a[14037]|0;a[c+7|0]=0;return}function iU(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d|0;f=b|0;g=e;h=e;a[h]=20;j=g+1|0;yA(j|0,11224,10)|0;a[g+11|0]=0;iv(f,e);if((a[h]&1)!=0){yr(c[e+8>>2]|0)}c[b>>2]=24360;c[b+144>>2]=0;i=d;return}function iV(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e|0;g=b|0;h=f;j=f;a[j]=20;k=h+1|0;yA(k|0,11224,10)|0;a[h+11|0]=0;iv(g,f);if((a[j]&1)!=0){yr(c[f+8>>2]|0)}c[b>>2]=24360;c[b+144>>2]=d;i=e;return}function iW(a){a=a|0;ix(a|0);yr(a);return}function iX(a){a=a|0;ix(a|0);return}function iY(a,b){a=a|0;b=b|0;var d=0,e=0;if((b|0)==0){d=0;return d|0}e=yc(b,37064,36736,-1)|0;if((e|0)==0){d=0;return d|0}d=(c[a+144>>2]|0)==(c[e+144>>2]|0);return d|0}function iZ(b,c){b=b|0;c=c|0;c=b;a[b]=18;b=c+1|0;yA(b|0,14016,9)|0;a[c+10|0]=0;return}function i_(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=e;g=e;a[g]=10;h=f+1|0;a[h]=a[11168]|0;a[h+1|0]=a[11169]|0;a[h+2|0]=a[11170]|0;a[h+3|0]=a[11171]|0;a[h+4|0]=a[11172]|0;a[f+6|0]=0;iv(b|0,e);if((a[g]&1)!=0){yr(c[e+8>>2]|0)}go(b+144|0);j3(b+172|0);c[b>>2]=27376;c[b+144>>2]=27524;c[b+172>>2]=27548;c[b+204>>2]=0;yC(b+180|0,0,23);i=d;return}function i$(a){a=a|0;var b=0,d=0;c[a>>2]=27376;c[a+144>>2]=27524;c[a+172>>2]=27548;b=a+180|0;d=c[b>>2]|0;if((d|0)!=0){cG[c[(c[d>>2]|0)+4>>2]&1023](d);c[b>>2]=0}j5(a+172|0);gq(a+144|0);ix(a|0);yr(a);return}function i0(a){a=a|0;i$(a-208+64|0);return}function i1(a){a=a|0;i$(a-208+36|0);return}function i2(a){a=a|0;var b=0,d=0;c[a>>2]=27376;c[a+144>>2]=27524;c[a+172>>2]=27548;b=a+180|0;d=c[b>>2]|0;if((d|0)!=0){cG[c[(c[d>>2]|0)+4>>2]&1023](d);c[b>>2]=0}j5(a+172|0);gq(a+144|0);ix(a|0);return}function i3(a){a=a|0;var b=0,d=0,e=0,f=0;b=a-208+64|0;c[b>>2]=27376;a=b+144|0;c[a>>2]=27524;d=b+172|0;c[d>>2]=27548;e=b+180|0;f=c[e>>2]|0;if((f|0)!=0){cG[c[(c[f>>2]|0)+4>>2]&1023](f);c[e>>2]=0}j5(d);gq(a);ix(b);return}function i4(a){a=a|0;var b=0,d=0,e=0,f=0;b=a-208+36|0;c[b>>2]=27376;a=b+144|0;c[a>>2]=27524;d=b+172|0;c[d>>2]=27548;e=b+180|0;f=c[e>>2]|0;if((f|0)!=0){cG[c[(c[f>>2]|0)+4>>2]&1023](f);c[e>>2]=0}j5(d);gq(a);ix(b);return}function i5(a){a=a|0;var b=0;b=a+180|0;a=c[b>>2]|0;if((a|0)==0){return}cG[c[(c[a>>2]|0)+4>>2]&1023](a);c[b>>2]=0;return}function i6(b,d){b=b|0;d=d|0;var e=0;if((d|0)==0){return 0}e=yc(d,37064,37216,-1)|0;if((e|0)==0){return 0}if((a[b+188|0]|0)!=(a[e+188|0]|0)){return 0}if((a[b+189|0]|0)!=(a[e+189|0]|0)){return 0}if(((a[e+190|0]^a[b+190|0])&1)!=0){return 0}if((a[b+192|0]|0)!=(a[e+192|0]|0)){return 0}if((a[b+191|0]|0)!=(a[e+191|0]|0)){return 0}if(((a[e+193|0]^a[b+193|0])&1)!=0){return 0}if((a[b+200|0]|0)!=(a[e+200|0]|0)){return 0}if((a[b+201|0]|0)!=(a[e+201|0]|0)){return 0}if(((a[e+202|0]^a[b+202|0])&1)!=0){return 0}if((c[b+204>>2]|0)!=(c[e+204>>2]|0)){return 0}if(j8(b+172|0,e+172|0)|0){return gt(b+144|0,e+144|0)|0}else{return 0}return 0}function i7(b,c,d){b=b|0;c=c|0;d=d|0;gr(b+144|0,c);if((c-1|0)>>>0>1>>>0){a[b+191|0]=0;a[b+190|0]=0;a[b+193|0]=0;return}else{a[b+190|0]=0;a[b+193|0]=0;a[b+200|0]=0;a[b+201|0]=0;return}}function i8(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+16|0;e=d|0;f=b+180|0;if((c[f>>2]|0)==0){g=yp(152)|0;nr(g);c[f>>2]=g;nu(g,b);i=d;return}g=b+32|0;if((a[g]&1)==0){f=e;c[f>>2]=c[g>>2];c[f+4>>2]=c[g+4>>2];c[f+8>>2]=c[g+8>>2];h=a[f]|0;j=f}else{f=c[b+40>>2]|0;g=c[b+36>>2]|0;if(g>>>0>4294967279>>>0){qo(0)}if(g>>>0<11>>>0){b=g<<1&255;k=e;a[k]=b;l=e+1|0;m=b;n=k}else{k=g+16&-16;b=yp(k)|0;c[e+8>>2]=b;o=k|1;c[e>>2]=o;c[e+4>>2]=g;l=b;m=o&255;n=e}yA(l|0,f|0,g)|0;a[l+g|0]=0;h=m;j=n}if((h&1)==0){p=e+1|0}else{p=c[e+8>>2]|0}dt(16896,(h=i,i=i+8|0,c[h>>2]=p,h)|0);i=h;if((a[j]&1)==0){i=d;return}yr(c[e+8>>2]|0);i=d;return}function i9(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+32|0;f=e|0;g=e+16|0;h=b+184|0;if((c[h>>2]|0)!=0){j=b+32|0;if((a[j]&1)==0){k=f;c[k>>2]=c[j>>2];c[k+4>>2]=c[j+4>>2];c[k+8>>2]=c[j+8>>2];l=a[k]|0;m=k}else{k=c[b+40>>2]|0;j=c[b+36>>2]|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){n=j<<1&255;o=f;a[o]=n;p=f+1|0;q=n;r=o}else{o=j+16&-16;n=yp(o)|0;c[f+8>>2]=n;s=o|1;c[f>>2]=s;c[f+4>>2]=j;p=n;q=s&255;r=f}yA(p|0,k|0,j)|0;a[p+j|0]=0;l=q;m=r}if((l&1)==0){t=f+1|0}else{t=c[f+8>>2]|0}dt(13968,(u=i,i=i+8|0,c[u>>2]=t,u)|0);i=u;if((a[m]&1)==0){i=e;return}yr(c[f+8>>2]|0);i=e;return}do{if((d|0)!=0){f=c[d+180>>2]|0;if((f|0)==0){break}c[h>>2]=f;nv(f,b);i=e;return}}while(0);h=b+32|0;if((a[h]&1)==0){d=g;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];v=a[d]|0;w=d}else{d=c[b+40>>2]|0;h=c[b+36>>2]|0;if(h>>>0>4294967279>>>0){qo(0)}if(h>>>0<11>>>0){b=h<<1&255;f=g;a[f]=b;x=g+1|0;y=b;z=f}else{f=h+16&-16;b=yp(f)|0;c[g+8>>2]=b;m=f|1;c[g>>2]=m;c[g+4>>2]=h;x=b;y=m&255;z=g}yA(x|0,d|0,h)|0;a[x+h|0]=0;v=y;w=z}if((v&1)==0){A=g+1|0}else{A=c[g+8>>2]|0}dt(12208,(u=i,i=i+8|0,c[u>>2]=A,u)|0);i=u;if((a[w]&1)==0){i=e;return}yr(c[g+8>>2]|0);i=e;return}function ja(b){b=b|0;var c=0;c=b+190|0;a[c]=a[c]&1^1;return}function jb(b){b=b|0;var d=0;if(((c[b+152>>2]|0)-1|0)>>>0<2>>>0){return}d=b+200|0;a[d]=(a[d]|0)==0|0;return}function jc(b){b=b|0;var d=0;d=c[b+152>>2]|0;if((d|0)==0|(d|0)>2){return}a[b+191|0]=1;return}function jd(b){b=b|0;return((a[b+109|0]&1)==0?5:3)|0}function je(b,c){b=b|0;c=c|0;c=b;a[b]=8;b=c+1|0;E=1702129486;a[b]=E&255;E=E>>8;a[b+1|0]=E&255;E=E>>8;a[b+2|0]=E&255;E=E>>8;a[b+3|0]=E&255;a[c+5|0]=0;return}function jf(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;c[b>>2]=26384;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;f=e;g=e;yC(b+20|0,0,36);a[g]=4;h=f+1|0;E=11629;a[h]=E&255;E=E>>8;a[h+1|0]=E&255;a[f+3|0]=0;c[b+16>>2]=0;a[b+56|0]=1;qv(b+44|0,e)|0;jp(b);if((a[g]&1)==0){i=d;return}yr(c[e+8>>2]|0);i=d;return}function jg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e|0;c[b>>2]=26384;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;g=b+44|0;h=d;yC(b+20|0,0,36);if((a[h]&1)==0){j=f;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2]}else{h=c[d+8>>2]|0;j=c[d+4>>2]|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){a[f]=j<<1&255;k=f+1|0}else{d=j+16&-16;l=yp(d)|0;c[f+8>>2]=l;c[f>>2]=d|1;c[f+4>>2]=j;k=l}yA(k|0,h|0,j)|0;a[k+j|0]=0}c[b+16>>2]=0;a[b+56|0]=1;qv(g,f)|0;jp(b);if((a[f]&1)==0){i=e;return}yr(c[f+8>>2]|0);i=e;return}function jh(a){a=a|0;cd(16808,13936,57,19680);return 0}function ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+8|0;f=e|0;c[b>>2]=26384;g=b+4|0;c[g>>2]=0;h=b+8|0;c[h>>2]=0;j=b+12|0;c[j>>2]=0;yC(b+20|0,0,36);c[b+16>>2]=0;qv(b+44|0,d+44|0)|0;qv(b+32|0,d+32|0)|0;a[b+56|0]=1;k=d+8|0;l=d+4|0;d=c[l>>2]|0;if(((c[k>>2]|0)-d|0)>0){m=0;n=d}else{i=e;return}while(1){d=c[n+(m<<2)>>2]|0;o=cJ[c[(c[d>>2]|0)+8>>2]&255](d)|0;c[f>>2]=o;jk(o,1);d=o+16|0;if((c[d>>2]|0)!=0){break}c[d>>2]=b;d=c[h>>2]|0;if((d|0)==(c[j>>2]|0)){eb(g,f)}else{if((d|0)==0){p=0}else{c[d>>2]=o;p=c[h>>2]|0}c[h>>2]=p+4}o=m+1|0;d=c[l>>2]|0;if((o|0)<((c[k>>2]|0)-d>>2|0)){m=o;n=d}else{q=5995;break}}if((q|0)==5995){i=e;return}cd(10200,13936,193,19664)}function jj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=a+4|0;d=c[b>>2]|0;e=a+8|0;a=c[e>>2]|0;if((d|0)==(a|0)){return}else{f=d;g=a}while(1){a=c[f>>2]|0;if((a|0)==0){h=g}else{cG[c[(c[a>>2]|0)+4>>2]&1023](a);h=c[e>>2]|0}a=f+4|0;if((a|0)==(h|0)){break}else{f=a;g=h}}g=c[b>>2]|0;if((g|0)==(h|0)){return}c[e>>2]=h+(~((h-4+(-g|0)|0)>>>2)<<2);return}function jk(b,d){b=b|0;d=d|0;var e=0,f=0;e=c[b+16>>2]|0;f=b+56|0;do{if((e|0)!=0){if((a[f]&1)!=0|d^1){break}jk(e,1)}}while(0);a[f]=d&1;return}function jl(a,b){a=a|0;b=b|0;var d=0;d=a+16|0;if((c[d>>2]|0)==0){c[d>>2]=b;return}else{cd(10200,13936,193,19664)}}function jm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+8|0;f=e|0;if((b|0)==(d|0)){i=e;return b|0}g=b+4|0;h=c[g>>2]|0;j=b+8|0;k=c[j>>2]|0;do{if((h|0)!=(k|0)){l=h;m=k;while(1){n=c[l>>2]|0;if((n|0)==0){o=m}else{cG[c[(c[n>>2]|0)+4>>2]&1023](n);o=c[j>>2]|0}n=l+4|0;if((n|0)==(o|0)){break}else{l=n;m=o}}m=c[g>>2]|0;if((m|0)==(o|0)){break}c[j>>2]=o+(~((o-4+(-m|0)|0)>>>2)<<2)}}while(0);c[b+16>>2]=0;qv(b+44|0,d+44|0)|0;qv(b+32|0,d+32|0)|0;a[b+56|0]=1;o=d+8|0;g=d+4|0;d=c[g>>2]|0;if(((c[o>>2]|0)-d|0)<=0){i=e;return b|0}k=b+12|0;h=b+4|0;m=0;l=d;while(1){d=c[l+(m<<2)>>2]|0;n=cJ[c[(c[d>>2]|0)+8>>2]&255](d)|0;c[f>>2]=n;jk(n,1);d=n+16|0;if((c[d>>2]|0)!=0){p=14;break}c[d>>2]=b;d=c[j>>2]|0;if((d|0)==(c[k>>2]|0)){eb(h,f)}else{if((d|0)==0){q=0}else{c[d>>2]=n;q=c[j>>2]|0}c[j>>2]=q+4}n=m+1|0;d=c[g>>2]|0;if((n|0)<((c[o>>2]|0)-d>>2|0)){m=n;l=d}else{p=24;break}}if((p|0)==14){cd(10200,13936,193,19664);return 0}else if((p|0)==24){i=e;return b|0}return 0}function jn(a){a=a|0;jo(a);yr(a);return}function jo(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=26384;d=b+4|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;do{if((e|0)!=(g|0)){h=e;i=g;while(1){j=c[h>>2]|0;if((j|0)==0){k=i}else{cG[c[(c[j>>2]|0)+4>>2]&1023](j);k=c[f>>2]|0}j=h+4|0;if((j|0)==(k|0)){break}else{h=j;i=k}}i=c[d>>2]|0;if((i|0)==(k|0)){break}c[f>>2]=k+(~((k-4+(-i|0)|0)>>>2)<<2)}}while(0);if((a[b+44|0]&1)!=0){yr(c[b+52>>2]|0)}if((a[b+32|0]&1)!=0){yr(c[b+40>>2]|0)}if((a[b+20|0]&1)!=0){yr(c[b+28>>2]|0)}b=c[d>>2]|0;if((b|0)==0){return}d=c[f>>2]|0;if((b|0)!=(d|0)){c[f>>2]=d+(~((d-4+(-b|0)|0)>>>2)<<2)}yr(b);return}function jp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+56|0;e=d+24|0;f=d+40|0;g=aO()|0;h=d|0;be(h|0,16,11024,(j=i,i=i+8|0,c[j>>2]=g,j)|0)|0;i=j;j=b+44|0;g=yz(h|0)|0;if(g>>>0>4294967279>>>0){qo(0)}if(g>>>0<11>>>0){a[f]=g<<1&255;k=f+1|0}else{l=g+16&-16;m=yp(l)|0;c[f+8>>2]=m;c[f>>2]=l|1;c[f+4>>2]=g;k=m}yA(k|0,h|0,g)|0;a[k+g|0]=0;hj(e,j,f);qv(b+32|0,e)|0;if((a[e]&1)!=0){yr(c[e+8>>2]|0)}if((a[f]&1)==0){i=d;return}yr(c[f+8>>2]|0);i=d;return}function jq(a,b){a=a|0;b=b|0;qv(a+32|0,b)|0;return}function jr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+24|0;f=e|0;g=e+8|0;h=e+16|0;c[f>>2]=b;j=a+4|0;k=a+8|0;l=c[k>>2]|0;m=j|0;do{if((l-(c[m>>2]|0)>>2|0)<=(d|0)){if((l|0)==(c[a+12>>2]|0)){eb(j,f);break}if((l|0)==0){n=0}else{c[l>>2]=b;n=c[k>>2]|0}c[k>>2]=n+4}}while(0);c[g>>2]=(c[m>>2]|0)+(d<<2);js(h,j,g,f);i=e;return}function js(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;h=c[g>>2]|0;j=h;k=(c[d>>2]|0)-j|0;d=k>>2;l=h+(d<<2)|0;m=b+4|0;n=c[m>>2]|0;o=b+8|0;b=c[o>>2]|0;if(n>>>0<b>>>0){if((l|0)==(n|0)){if((l|0)==0){p=0}else{c[l>>2]=c[e>>2];p=c[m>>2]|0}c[m>>2]=p+4;q=l;r=a|0;c[r>>2]=q;i=f;return}p=n-(h+(d+1<<2))|0;s=p>>2;t=h+(s+d<<2)|0;if(t>>>0<n>>>0){d=t;t=n;do{if((t|0)==0){u=0}else{c[t>>2]=c[d>>2];u=c[m>>2]|0}d=d+4|0;t=u+4|0;c[m>>2]=t;}while(d>>>0<n>>>0)}yB(n+(-s<<2)|0,l|0,p|0);if(l>>>0>e>>>0){v=e}else{v=(c[m>>2]|0)>>>0>e>>>0?e+4|0:e}c[l>>2]=c[v>>2];q=l;r=a|0;c[r>>2]=q;i=f;return}v=(n-j>>2)+1|0;if(v>>>0>1073741823>>>0){vf(0)}n=b-j|0;if(n>>2>>>0>536870910>>>0){w=1073741823;x=l;y=k>>2;z=104}else{j=n>>1;n=j>>>0<v>>>0?v:j;j=l;v=k>>2;if((n|0)==0){A=0;B=0;C=j;D=v}else{w=n;x=j;y=v;z=104}}if((z|0)==104){A=yp(w<<2)|0;B=w;C=x;D=y}y=A+(D<<2)|0;x=A+(B<<2)|0;do{if((D|0)==(B|0)){if((D|0)>0){E=A+(((D+1|0)/-2|0)+D<<2)|0;F=x;break}w=D<<1;z=(w|0)==0?1:w;w=yp(z<<2)|0;v=w+(z>>>2<<2)|0;j=w+(z<<2)|0;if((A|0)==0){E=v;F=j;break}yr(A);E=v;F=j}else{E=y;F=x}}while(0);if((E|0)!=0){c[E>>2]=c[e>>2]}e=E+4|0;x=c[g>>2]|0;y=C-x|0;A=E+(-(y>>2)<<2)|0;D=A;B=x;yA(D|0,B|0,y)|0;y=(c[m>>2]|0)-C|0;C=y>>2;D=e;e=l;yA(D|0,e|0,y)|0;c[g>>2]=A;c[m>>2]=E+(C+1<<2);c[o>>2]=F;if((x|0)==0){q=E;r=a|0;c[r>>2]=q;i=f;return}yr(B);q=E;r=a|0;c[r>>2]=q;i=f;return}function jt(a,b){a=a|0;b=b|0;var d=0,e=0;if((b|0)<0){d=0;return d|0}e=c[a+4>>2]|0;if(((c[a+8>>2]|0)-e>>2|0)<=(b|0)){d=0;return d|0}d=c[e+(b<<2)>>2]|0;return d|0}function ju(a){a=a|0;jp(a);return}function jv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;cH[c[(c[b>>2]|0)+16>>2]&255](e,b);b=e;if((a[b]&1)==0){f=e+1|0}else{f=c[e+8>>2]|0}ds(9440,(g=i,i=i+8|0,c[g>>2]=f,g)|0);i=g;if((a[b]&1)==0){i=d;return 0}yr(c[e+8>>2]|0);i=d;return 0}function jw(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e|0;g=e+8|0;h=e+32|0;c[f>>2]=d;c[g>>2]=29504;c[g+12>>2]=0;a[g+16|0]=0;c[g+4>>2]=25;c[g+8>>2]=0;d=f;f=yp(4)|0;j=(f|0)==0;if(!j){c[f>>2]=d}k=c[(c[b>>2]|0)+20>>2]|0;l=h|0;c[l>>2]=0;m=h+4|0;c[m>>2]=0;n=h+8|0;c[n>>2]=0;o=yp(4)|0;p=o;c[m>>2]=p;c[l>>2]=p;c[n>>2]=o+4;if((o|0)==0){q=0}else{c[p>>2]=d;q=p}c[m>>2]=q+4;c0[k&63](b,g,h,0);h=c[l>>2]|0;l=h;if((h|0)!=0){g=c[m>>2]|0;if((h|0)!=(g|0)){c[m>>2]=g+(~((g-4+(-l|0)|0)>>>2)<<2)}yr(h)}if(j){i=e;return}yr(f);i=e;return}function jx(a){a=a|0;return}function jy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=b+4|0;b=d;d=a;while(1){if((b|0)==0){f=0;g=175;break}a=c[d+16>>2]|0;if((a|0)==0){f=0;g=176;break}if((c[(c[(c[a>>2]|0)-4>>2]|0)+4>>2]|0)==(c[e>>2]|0)){f=a;g=177;break}else{b=b-1|0;d=a}}if((g|0)==175){return f|0}else if((g|0)==176){return f|0}else if((g|0)==177){return f|0}return 0}function jz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+8>>2]|0;e=b+4|0;b=c[a+4>>2]|0;while(1){if((b|0)==(d|0)){f=0;g=185;break}a=c[b>>2]|0;if((a|0)==0){g=181;break}if((c[(c[(c[a>>2]|0)-4>>2]|0)+4>>2]|0)==(c[e>>2]|0)){f=a;g=184;break}else{b=b+4|0}}if((g|0)==181){cp();return 0}else if((g|0)==184){return f|0}else if((g|0)==185){return f|0}return 0}function jA(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=c[a+16>>2]|0;if((d|0)==0){e=0;return e|0}f=c[d+4>>2]|0;g=c[d+8>>2]|0;if((f|0)==(g|0)){e=0;return e|0}d=b+4|0;if((b|0)==0){b=f;h=0;while(1){i=c[b>>2]|0;j=(i|0)==(a|0);if(!(j|h^1)){e=i;k=199;break}i=b+4|0;if((i|0)==(g|0)){e=0;k=200;break}else{b=i;h=j|h}}if((k|0)==199){return e|0}else if((k|0)==200){return e|0}}else{l=f;m=0}while(1){f=c[l>>2]|0;h=(f|0)==(a|0);if(h|m^1){n=h|m}else{if((f|0)==0){k=193;break}if((c[(c[(c[f>>2]|0)-4>>2]|0)+4>>2]|0)==(c[d>>2]|0)){e=f;k=197;break}else{n=m}}f=l+4|0;if((f|0)==(g|0)){e=0;k=202;break}else{l=f;m=n}}if((k|0)==202){return e|0}else if((k|0)==193){cp();return 0}else if((k|0)==197){return e|0}return 0}function jB(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=c[a+16>>2]|0;if((d|0)==0){e=0;return e|0}f=c[d+4>>2]|0;g=(b|0)==0;h=b+4|0;b=0;i=c[d+8>>2]|0;L222:while(1){L224:do{if(b){if(g){if((i|0)==(f|0)){e=0;j=219;break L222}d=i-4|0;k=c[d>>2]|0;if((k|0)==(a|0)){l=d;m=1;break}else{e=k;j=220;break L222}}else{n=i}while(1){if((n|0)==(f|0)){e=0;j=221;break L222}k=n-4|0;d=c[k>>2]|0;if((d|0)==(a|0)){l=k;m=1;break L224}if((d|0)==0){j=215;break L222}if((c[(c[(c[d>>2]|0)-4>>2]|0)+4>>2]|0)==(c[h>>2]|0)){e=d;j=222;break L222}else{n=k}}}else{if((i|0)==(f|0)){e=0;j=218;break L222}k=i-4|0;l=k;m=(c[k>>2]|0)==(a|0)}}while(0);b=m|b;i=l}if((j|0)==220){return e|0}else if((j|0)==221){return e|0}else if((j|0)==222){return e|0}else if((j|0)==215){cp();return 0}else if((j|0)==218){return e|0}else if((j|0)==219){return e|0}return 0}function jC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+48|0;g=f|0;h=f+16|0;j=f+32|0;k=b+12|0;if((c[k>>2]|0)==2){i=f;return}l=c[(c[b>>2]|0)+8>>2]|0;m=g|0;c[m>>2]=0;n=g+4|0;c[n>>2]=0;o=g+8|0;c[o>>2]=0;p=d+4|0;q=c[p>>2]|0;r=d|0;d=c[r>>2]|0;s=q-d|0;t=s>>2;do{if((t|0)!=0){if(t>>>0>1073741823>>>0){vf(0)}u=yp(s)|0;c[n>>2]=u;c[m>>2]=u;c[o>>2]=u+(t<<2);if((d|0)==(q|0)){break}else{v=d;w=u}do{if((w|0)==0){x=0}else{c[w>>2]=c[v>>2];x=c[n>>2]|0}w=x+4|0;c[n>>2]=w;v=v+4|0;}while((v|0)!=(q|0))}}while(0);cZ[l&127](b,a,g);g=c[m>>2]|0;m=g;if((g|0)!=0){l=c[n>>2]|0;if((g|0)!=(l|0)){c[n>>2]=l+(~((l-4+(-m|0)|0)>>>2)<<2)}yr(g)}if((c[k>>2]|0)==1){c[k>>2]=0;i=f;return}k=c[a+4>>2]|0;g=a+8|0;L272:do{if((k|0)!=(c[g>>2]|0)){m=h|0;l=h+4|0;n=h+8|0;q=k;L274:while(1){v=c[q>>2]|0;w=c[(c[v>>2]|0)+20>>2]|0;c[m>>2]=0;c[l>>2]=0;c[n>>2]=0;x=c[p>>2]|0;d=c[r>>2]|0;t=x-d|0;o=t>>2;do{if((o|0)!=0){if(o>>>0>1073741823>>>0){break L274}s=yp(t)|0;c[l>>2]=s;c[m>>2]=s;c[n>>2]=s+(o<<2);if((d|0)==(x|0)){break}else{y=d;z=s}do{if((z|0)==0){A=0}else{c[z>>2]=c[y>>2];A=c[l>>2]|0}z=A+4|0;c[l>>2]=z;y=y+4|0;}while((y|0)!=(x|0))}}while(0);c0[w&63](v,b,h,e);x=c[m>>2]|0;d=x;if((x|0)!=0){o=c[l>>2]|0;if((x|0)!=(o|0)){c[l>>2]=o+(~((o-4+(-d|0)|0)>>>2)<<2)}yr(x)}q=q+4|0;if((q|0)==(c[g>>2]|0)){break L272}}vf(0)}}while(0);if((e|0)==0){i=f;return}g=c[(c[e>>2]|0)+8>>2]|0;h=j|0;c[h>>2]=0;b=j+4|0;c[b>>2]=0;y=j+8|0;c[y>>2]=0;z=c[p>>2]|0;p=c[r>>2]|0;r=z-p|0;A=r>>2;do{if((A|0)!=0){if(A>>>0>1073741823>>>0){vf(0)}k=yp(r)|0;c[b>>2]=k;c[h>>2]=k;c[y>>2]=k+(A<<2);if((p|0)==(z|0)){break}else{B=p;C=k}do{if((C|0)==0){D=0}else{c[C>>2]=c[B>>2];D=c[b>>2]|0}C=D+4|0;c[b>>2]=C;B=B+4|0;}while((B|0)!=(z|0))}}while(0);cZ[g&127](e,a,j);j=c[h>>2]|0;if((j|0)==0){i=f;return}h=c[b>>2]|0;if((j|0)!=(h|0)){c[b>>2]=h+(~((h-4+(-j|0)|0)>>>2)<<2)}yr(j);i=f;return}function jD(b){b=b|0;c[b+60>>2]=65535;c[b+64>>2]=65535;c[b+68>>2]=-65535;c[b+72>>2]=-65535;c[b+76>>2]=65535;c[b+80>>2]=65535;c[b+84>>2]=-65535;c[b+88>>2]=-65535;a[b+92|0]=0;return}function jE(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+16|0;f=e|0;g=b|0;h=d;if((a[h]&1)==0){j=f;c[j>>2]=c[h>>2];c[j+4>>2]=c[h+4>>2];c[j+8>>2]=c[h+8>>2]}else{h=c[d+8>>2]|0;j=c[d+4>>2]|0;if(j>>>0>4294967279>>>0){qo(0)}if(j>>>0<11>>>0){a[f]=j<<1&255;k=f+1|0}else{d=j+16&-16;l=yp(d)|0;c[f+8>>2]=l;c[f>>2]=d|1;c[f+4>>2]=j;k=l}yA(k|0,h|0,j)|0;a[k+j|0]=0}jg(g,f);if((a[f]&1)!=0){yr(c[f+8>>2]|0)}c[b>>2]=24520;c[b+60>>2]=65535;c[b+64>>2]=65535;c[b+68>>2]=-65535;c[b+72>>2]=-65535;c[b+76>>2]=65535;c[b+80>>2]=65535;c[b+84>>2]=-65535;c[b+88>>2]=-65535;a[b+92|0]=0;i=e;return}function jF(a){a=a|0;jo(a|0);yr(a);return}function jG(a){a=a|0;var b=0;b=a+16|0;a=c[b>>2]|0;if((a|0)==0){return}if((yc(a,37064,36752,-1)|0)==0){return}a=c[b>>2]|0;cG[c[(c[a>>2]|0)+104>>2]&1023](a);return}function jH(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=(f|0)<(d|0)?f:d;i=(d|0)<(f|0)?f:d;d=(g|0)<(e|0)?g:e;f=(e|0)<(g|0)?g:e;e=b+60|0;if((c[e>>2]|0)>(h|0)){c[e>>2]=h}h=b+64|0;if((c[h>>2]|0)>(d|0)){c[h>>2]=d}d=b+68|0;if((c[d>>2]|0)<(i|0)){c[d>>2]=i}i=b+72|0;if((c[i>>2]|0)>=(f|0)){j=b+92|0;a[j]=1;return}c[i>>2]=f;j=b+92|0;a[j]=1;return}function jI(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=(f|0)<(d|0)?f:d;i=(d|0)<(f|0)?f:d;d=(g|0)<(e|0)?g:e;f=(e|0)<(g|0)?g:e;e=b+76|0;if((c[e>>2]|0)>(h|0)){c[e>>2]=h}h=b+80|0;if((c[h>>2]|0)>(d|0)){c[h>>2]=d}d=b+84|0;if((c[d>>2]|0)<(i|0)){c[d>>2]=i}i=b+88|0;if((c[i>>2]|0)>=(f|0)){j=b+92|0;a[j]=1;return}c[i>>2]=f;j=b+92|0;a[j]=1;return}function jJ(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=28248;b=a+4|0;d=b;c[b>>2]=d;c[a+8>>2]=d;c[a+12>>2]=0;return}function jK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;if((a|0)==(b|0)){return a|0}b=a+4|0;d=a+12|0;if((c[d>>2]|0)==0){return a|0}e=c[a+8>>2]|0;f=b;g=(c[b>>2]|0)+4|0;b=e|0;c[(c[b>>2]|0)+4>>2]=c[g>>2];c[c[g>>2]>>2]=c[b>>2];c[d>>2]=0;if((e|0)==(f|0)){return a|0}else{h=e}while(1){e=c[h+4>>2]|0;yr(h);if((e|0)==(f|0)){break}else{h=e}}return a|0}function jL(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=d+56|0;if((a[e]&1)==0){return}f=b+4|0;g=b+12|0;do{if((c[g>>2]|0)!=0){h=c[b+8>>2]|0;i=f;j=(c[f>>2]|0)+4|0;k=h|0;c[(c[k>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[k>>2];c[g>>2]=0;if((h|0)==(i|0)){break}else{l=h}while(1){h=c[l+4>>2]|0;yr(l);if((h|0)==(i|0)){break}else{l=h}}}}while(0);jw(d,f);cG[c[(c[b>>2]|0)+8>>2]&1023](b);a[e]=0;return}function jM(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=d+56|0;f=b+4|0;if((a[e]&1)==0){return f|0}g=b+12|0;do{if((c[g>>2]|0)!=0){h=c[b+8>>2]|0;i=f;j=(c[f>>2]|0)+4|0;k=h|0;c[(c[k>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[k>>2];c[g>>2]=0;if((h|0)==(i|0)){break}else{l=h}while(1){h=c[l+4>>2]|0;yr(l);if((h|0)==(i|0)){break}else{l=h}}}}while(0);jw(d,f);cG[c[(c[b>>2]|0)+8>>2]&1023](b);a[e]=0;return f|0}function jN(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=c[a+8>>2]|0;e=a+4|0;if((d|0)==(e|0)){f=-1;return f|0}else{g=0;h=d}while(1){if((c[h+8>>2]|0)==(b|0)){f=g;i=387;break}d=c[h+4>>2]|0;if((d|0)==(e|0)){f=-1;i=388;break}else{g=g+1|0;h=d}}if((i|0)==387){return f|0}else if((i|0)==388){return f|0}return 0}function jO(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=c[a+8>>2]|0;e=a+4|0;if((d|0)==(e|0)){f=0;return f|0}else{g=0;h=d}while(1){if((c[h+8>>2]|0)==(b|0)){break}d=c[h+4>>2]|0;if((d|0)==(e|0)){f=0;i=395;break}else{g=g+1|0;h=d}}if((i|0)==395){return f|0}if((g|0)<=0){f=0;return f|0}f=c[(c[h>>2]|0)+8>>2]|0;return f|0}function jP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=c[d>>2]|0;g=c[d+4>>2]|0;c[b>>2]=29504;c[b+12>>2]=0;a[b+16|0]=0;d=b+4|0;c[d>>2]=f;c[d+4>>2]=g;i=e;return}function jQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e|0;g=a+4|0;h=b+(c[g+4>>2]|0)|0;b=h;j=c[g>>2]|0;if((j&1|0)==0){k=j}else{k=c[(c[h>>2]|0)+(j-1)>>2]|0}j=f|0;c[j>>2]=0;h=f+4|0;c[h>>2]=0;g=f+8|0;c[g>>2]=0;l=c[d+4>>2]|0;m=c[d>>2]|0;d=l-m|0;n=d>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0)}o=yp(d)|0;c[h>>2]=o;c[j>>2]=o;c[g>>2]=o+(n<<2);if((m|0)==(l|0)){break}else{p=m;q=o}do{if((q|0)==0){r=0}else{c[q>>2]=c[p>>2];r=c[h>>2]|0}q=r+4|0;c[h>>2]=q;p=p+4|0;}while((p|0)!=(l|0))}}while(0);c[a+12>>2]=cW[k&255](b,f)|0;f=c[j>>2]|0;if((f|0)==0){i=e;return}j=c[h>>2]|0;if((f|0)!=(j|0)){c[h>>2]=j+(~((j-4+(-f|0)|0)>>>2)<<2)}yr(f);i=e;return}function jR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[c[c[b>>2]>>2]>>2]|0;b=yp(12)|0;e=b;f=b+8|0;if((f|0)!=0){c[f>>2]=a}a=d|0;c[(c[a>>2]|0)+4>>2]=e;c[b>>2]=c[a>>2];c[a>>2]=e;c[b+4>>2]=d;b=d+8|0;c[b>>2]=(c[b>>2]|0)+1;return 0}function jS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e|0;g=c[d>>2]|0;d=c[g+4>>2]|0;if((c[d>>2]|0)!=0){h=2;i=e;return h|0}j=c[g>>2]|0;g=b+32|0;if((a[g]&1)==0){k=f;c[k>>2]=c[g>>2];c[k+4>>2]=c[g+4>>2];c[k+8>>2]=c[g+8>>2]}else{g=c[b+40>>2]|0;k=c[b+36>>2]|0;if(k>>>0>4294967279>>>0){qo(0);return 0}if(k>>>0<11>>>0){a[f]=k<<1&255;l=f+1|0}else{m=k+16&-16;n=yp(m)|0;c[f+8>>2]=n;c[f>>2]=m|1;c[f+4>>2]=k;l=n}yA(l|0,g|0,k)|0;a[l+k|0]=0}k=a[j]|0;l=k&255;if((l&1|0)==0){o=l>>>1}else{o=c[j+4>>2]|0}l=f;g=a[f]|0;n=g&255;if((n&1|0)==0){p=n>>>1}else{p=c[f+4>>2]|0}if((o|0)!=(p|0)){if((g&1)==0){h=0;i=e;return h|0}yr(c[f+8>>2]|0);h=0;i=e;return h|0}p=(k&1)==0;if(p){q=j+1|0}else{q=c[j+8>>2]|0}j=(g&1)==0;if(j){r=l+1|0}else{r=c[f+8>>2]|0}do{if(p){L501:do{if((o|0)!=0){l=r;g=q;k=o;while(1){if((a[g]|0)!=(a[l]|0)){break}n=k-1|0;if((n|0)==0){break L501}else{l=l+1|0;g=g+1|0;k=n}}if(j){h=0;i=e;return h|0}yr(c[f+8>>2]|0);h=0;i=e;return h|0}}while(0);if(j){break}yr(c[f+8>>2]|0)}else{k=(yD(q|0,r|0,o|0)|0)==0;if(!j){yr(c[f+8>>2]|0)}if(k){break}else{h=0}i=e;return h|0}}while(0);c[d>>2]=b;h=2;i=e;return h|0}function jT(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=c[b>>2]|0;b=c[d>>2]|0;e=b;f=c[d+4>>2]|0;if((a|0)==0){return 0}d=a;a=yc(d,37064,37200,-1)|0;if((a|0)!=0){lW(e,1,1,0);g=a+128|0;h=g;i=b;jm(h,i)|0;i=a+188|0;h=b+60|0;lI(i,h)|0;if((g|0)==(b|0)){return 0}g=a+208|0;h=a+216|0;if((c[h>>2]|0)==0){return 0}i=c[a+212>>2]|0;a=g;j=(c[g>>2]|0)+4|0;g=i|0;c[(c[g>>2]|0)+4>>2]=c[j>>2];c[c[j>>2]>>2]=c[g>>2];c[h>>2]=0;if((i|0)==(a|0)){return 0}else{k=i}while(1){i=c[k+4>>2]|0;yr(k);if((i|0)==(a|0)){break}else{k=i}}return 0}if((yc(d,37064,37016,-1)|0)!=0){lW(e,1,1,0);return 0}k=yc(d,37064,37096,-1)|0;if((k|0)!=0){c[f>>2]=lT(e,c[k+124>>2]|0)|0;return 0}k=yc(d,37064,37112,-1)|0;if((k|0)!=0){io(k,e,c[f>>2]|0);return 0}f=yc(d,37064,37256,-1)|0;if((f|0)!=0){lF(b+60|0,f);return 0}f=yc(d,37064,37512,-1)|0;if((f|0)==0){return 0}lG(b+60|0,f);return 0}function jU(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+48|0;f=e|0;g=e+16|0;h=e+32|0;j=d|0;k=c[j>>2]|0;l=c[k>>2]|0;m=c[k+4>>2]|0;if((b|0)==0){i=e;return 0}k=b;b=yc(k,37064,36952,-1)|0;if((b|0)!=0){c[m>>2]=0;c[l>>2]=0;if((c[b+328>>2]|0)==0){i=e;return 0}n=b+184|0;b=n;o=c[(c[n>>2]|0)+44>>2]|0;n=f|0;c[n>>2]=0;p=f+4|0;c[p>>2]=0;q=f+8|0;c[q>>2]=0;r=c[d+4>>2]|0;s=c[j>>2]|0;t=r-s|0;u=t>>2;do{if((u|0)!=0){if(u>>>0>1073741823>>>0){vf(0);return 0}v=yp(t)|0;c[p>>2]=v;c[n>>2]=v;c[q>>2]=v+(u<<2);if((s|0)==(r|0)){break}else{w=s;x=v}do{if((x|0)==0){y=0}else{c[x>>2]=c[w>>2];y=c[p>>2]|0}x=y+4|0;c[p>>2]=x;w=w+4|0;}while((w|0)!=(r|0))}}while(0);cW[o&255](b,f)|0;f=c[n>>2]|0;if((f|0)==0){i=e;return 0}n=c[p>>2]|0;if((f|0)!=(n|0)){c[p>>2]=n+(~((n-4+(-f|0)|0)>>>2)<<2)}yr(f);i=e;return 0}f=yc(k,37064,37112,-1)|0;if((f|0)==0){n=yc(k,37064,37496,-1)|0;k=n;if((n|0)==0){i=e;return 0}p=n+140|0;b=c[p>>2]|0;if((b|0)==0){cd(18088,13936,753,19712);return 0}if((a[n+92|0]&1)==0){dO(b,c[l>>2]|0);i=e;return 0}if((yc(n,37496,37272,-1)|0)!=0){i=e;return 0}if((yc(n,37496,37304,-1)|0)!=0){i=e;return 0}if((yc(n,37496,36984,-1)|0)!=0){i=e;return 0}b=c[p>>2]|0;o=c[b+60>>2]|0;r=o-(c[n+60>>2]|0)|0;w=(r|0)<0?0:r;r=c[l>>2]|0;if((o-w|0)<(r|0)){dP(b,r-o+w|0)}w=n+68|0;o=c[w>>2]|0;r=n;c[l>>2]=(cJ[c[(c[r>>2]|0)+108>>2]&255](k)|0)+o;o=c[p>>2]|0;p=(c[w>>2]|0)-(c[o+60>>2]|0)|0;dQ(o,p+(cJ[c[(c[r>>2]|0)+108>>2]&255](k)|0)|0);i=e;return 0}k=c[m>>2]|0;r=c[l>>2]|0;c[m>>2]=(k|0)<(r|0)?r:k;c[l>>2]=0;k=-1;r=f;while(1){if((k|0)==0){break}z=c[r+16>>2]|0;if((z|0)==0){break}if((c[(c[(c[z>>2]|0)-4>>2]|0)+4>>2]|0)==(c[9331]|0)){A=536;break}else{k=k-1|0;r=z}}do{if((A|0)==536){r=yc(z,37064,37320,-1)|0;if((r|0)==0){break}c[l>>2]=c[r+232>>2]}}while(0);l=c[f+116>>2]|0;do{if((l|0)!=0){z=l|0;A=c[(c[l>>2]|0)+44>>2]|0;r=g|0;c[r>>2]=0;k=g+4|0;c[k>>2]=0;m=g+8|0;c[m>>2]=0;p=c[d+4>>2]|0;o=c[j>>2]|0;w=p-o|0;n=w>>2;do{if((n|0)!=0){if(n>>>0>1073741823>>>0){vf(0);return 0}b=yp(w)|0;c[k>>2]=b;c[r>>2]=b;c[m>>2]=b+(n<<2);if((o|0)==(p|0)){break}else{B=o;C=b}do{if((C|0)==0){D=0}else{c[C>>2]=c[B>>2];D=c[k>>2]|0}C=D+4|0;c[k>>2]=C;B=B+4|0;}while((B|0)!=(p|0))}}while(0);cW[A&255](z,g)|0;p=c[r>>2]|0;if((p|0)==0){break}o=c[k>>2]|0;if((p|0)!=(o|0)){c[k>>2]=o+(~((o-4+(-p|0)|0)>>>2)<<2)}yr(p)}}while(0);g=c[f+120>>2]|0;if((g|0)==0){i=e;return 0}f=g|0;B=c[(c[g>>2]|0)+44>>2]|0;g=h|0;c[g>>2]=0;C=h+4|0;c[C>>2]=0;D=h+8|0;c[D>>2]=0;l=c[d+4>>2]|0;d=c[j>>2]|0;j=l-d|0;p=j>>2;do{if((p|0)!=0){if(p>>>0>1073741823>>>0){vf(0);return 0}o=yp(j)|0;c[C>>2]=o;c[g>>2]=o;c[D>>2]=o+(p<<2);if((d|0)==(l|0)){break}else{E=d;F=o}do{if((F|0)==0){G=0}else{c[F>>2]=c[E>>2];G=c[C>>2]|0}F=G+4|0;c[C>>2]=F;E=E+4|0;}while((E|0)!=(l|0))}}while(0);cW[B&255](f,h)|0;h=c[g>>2]|0;if((h|0)==0){i=e;return 0}g=c[C>>2]|0;if((h|0)!=(g|0)){c[C>>2]=g+(~((g-4+(-h|0)|0)>>>2)<<2)}yr(h);i=e;return 0}function jV(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+16|0;e=d|0;f=b|0;g=c[f>>2]|0;h=c[g>>2]|0;j=c[g+4>>2]|0;if((a|0)==0){i=d;return 0}g=a;a=yc(g,37064,36952,-1)|0;if((a|0)==0){if((yc(g,37064,37112,-1)|0)==0){i=d;return 0}g=c[j>>2]|0;k=c[h>>2]|0;c[j>>2]=(g|0)<(k|0)?k:g;i=d;return 0}c[h>>2]=c[j>>2];if((c[a+480>>2]|0)==0){i=d;return 0}j=a+336|0;a=j;h=c[(c[j>>2]|0)+44>>2]|0;j=e|0;c[j>>2]=0;g=e+4|0;c[g>>2]=0;k=e+8|0;c[k>>2]=0;l=c[b+4>>2]|0;b=c[f>>2]|0;f=l-b|0;m=f>>2;do{if((m|0)!=0){if(m>>>0>1073741823>>>0){vf(0);return 0}n=yp(f)|0;c[g>>2]=n;c[j>>2]=n;c[k>>2]=n+(m<<2);if((b|0)==(l|0)){break}else{o=b;p=n}do{if((p|0)==0){q=0}else{c[p>>2]=c[o>>2];q=c[g>>2]|0}p=q+4|0;c[g>>2]=p;o=o+4|0;}while((o|0)!=(l|0))}}while(0);cW[h&255](a,e)|0;e=c[j>>2]|0;if((e|0)==0){i=d;return 0}j=c[g>>2]|0;if((e|0)!=(j|0)){c[g>>2]=j+(~((j-4+(-e|0)|0)>>>2)<<2)}yr(e);i=d;return 0}function jW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[c[b>>2]>>2]|0;if((a|0)==0){e=0;return e|0}b=a;if((yc(b,37064,36952,-1)|0)!=0){c[d>>2]=0}a=yc(b,37064,37096,-1)|0;if((a|0)==0){e=0;return e|0}b=c[a+128>>2]|0;if((b|0)==0){cd(18088,13936,849,19688);return 0}f=c[b+60>>2]|0;g=f-(c[a+72>>2]|0)|0;h=(g|0)>0?0:g;g=c[d>>2]|0;if((f-h|0)>(g|0)){dF(b,g-f+h|0)}c[d>>2]=c[a+64>>2];e=1;return e|0}function jX(a){a=a|0;yr(a);return}function jY(d){d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e|0;g=f;h=f;a[h]=10;j=g+1|0;a[j]=a[10280]|0;a[j+1|0]=a[10281]|0;a[j+2|0]=a[10282]|0;a[j+3|0]=a[10283]|0;a[j+4|0]=a[10284]|0;a[g+6|0]=0;jE(d|0,f);if((a[h]&1)!=0){yr(c[f+8>>2]|0)}c[d>>2]=27248;yC(d+112|0,0,12);f=d+128|0;lJ(f);h=d|0;jj(h);lQ(f);a[d+124|0]=18;c[d+100>>2]=-1;c[d+96>>2]=-1;b[d+104>>1]=0;b[d+106>>1]=0;b[d+108>>1]=0;ju(h);i=e;return}function jZ(b){b=b|0;c[b>>2]=27248;lN(b+128|0);if((a[b+112|0]&1)!=0){yr(c[b+120>>2]|0)}jo(b|0);yr(b);return}function j_(b){b=b|0;var d=0;c[b>>2]=27248;lN(b+128|0);if((a[b+112|0]&1)==0){d=b|0;jo(d);return}yr(c[b+120>>2]|0);d=b|0;jo(d);return}function j$(a,b){a=a|0;b=b|0;var d=0;d=c[c[b>>2]>>2]|0;b=cW[c[(c[d>>2]|0)+16>>2]&255](d,a)|0;return(b?0:2)|0}function j0(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=b|0;b=a|0;jl(f,b);c[e>>2]=f;g=a+8|0;h=c[g>>2]|0;if((h|0)==(c[a+12>>2]|0)){eb(a+4|0,e);jk(b,1);i=d;return}if((h|0)==0){j=0}else{c[h>>2]=f;j=c[g>>2]|0}c[g>>2]=j+4;jk(b,1);i=d;return}function j1(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0,cw=0,cx=0,cy=0,cz=0,cA=0,cB=0,cC=0,cD=0,cE=0;b=i;i=i+920|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;j=b+32|0;k=b+56|0;l=b+64|0;m=b+80|0;n=b+88|0;o=b+96|0;p=b+120|0;q=b+128|0;r=b+144|0;s=b+304|0;t=b+408|0;u=b+416|0;v=b+424|0;w=b+448|0;x=b+456|0;y=b+480|0;z=b+488|0;A=b+504|0;B=b+512|0;C=b+536|0;D=b+544|0;E=b+560|0;F=b+584|0;G=b+592|0;H=b+616|0;I=b+624|0;J=b+640|0;K=b+648|0;L=b+672|0;M=b+680|0;N=b+696|0;O=b+704|0;P=b+712|0;Q=b+720|0;R=b+744|0;S=b+752|0;T=b+768|0;U=b+792|0;V=b+800|0;W=b+816|0;X=b+824|0;Y=b+848|0;Z=b+856|0;_=b+872|0;$=b+880|0;aa=b+888|0;ab=b+912|0;ac=a|0;ad=a+16|0;ae=c[ad>>2]|0;if((ae|0)==0){cd(16496,13656,157,20600)}if((yc(ae,37064,37320,-1)|0)==0){cd(16496,13656,157,20600)}ae=c[ad>>2]|0;if((ae|0)==0){af=0}else{af=yc(ae,37064,37320,-1)|0}gk(af,a);c[d>>2]=0;h[e>>3]=0.0;c[f>>2]=0;c[g>>2]=0;ae=d;d=yp(4)|0;ad=(d|0)==0;if(!ad){c[d>>2]=ae}ag=yp(8)|0;ah=ag+4|0;if((ah|0)!=0){c[ah>>2]=e}c[ag>>2]=ae;if(!ad){yr(d)}d=yp(16)|0;ad=d;ae=d+8|0;e=d+16|0;if((ae|0)!=0){c[ae>>2]=f}f=d+12|0;ae=f;ah=ag;ai=d;aj=c[ah+4>>2]|0;c[ai>>2]=c[ah>>2];c[ai+4>>2]=aj;if((ag|0)!=0){yr(ag)}ag=g;do{if(0){if(0){vf(0)}if(0){ak=737}else{if(!0){ak=737}}if((ak|0)==737){yp(0)|0}if(0){al=0;am=0;an=0;break}al=0;am=0;an=0}else{if((f|0)!=0){c[ae>>2]=ag}al=ad;am=d+16|0;an=e}}while(0);e=al;d=am;c[k>>2]=57;c[k+4>>2]=0;jP(j,k);k=a;ad=c[(c[k>>2]|0)+20>>2]|0;ag=l|0;c[ag>>2]=0;ae=l+4|0;c[ae>>2]=0;f=l+8|0;c[f>>2]=0;g=am-e|0;aj=g>>2;do{if((aj|0)!=0){if(aj>>>0>1073741823>>>0){vf(0)}ai=yp(g)|0;c[ae>>2]=ai;c[ag>>2]=ai;c[f>>2]=ai+(aj<<2);if((al|0)==(am|0)){break}else{ao=al;ap=ai}do{if((ap|0)==0){aq=0}else{c[ap>>2]=c[ao>>2];aq=c[ae>>2]|0}ap=aq+4|0;c[ae>>2]=ap;ao=ao+4|0;}while((ao|0)!=(am|0))}}while(0);c0[ad&63](ac,j,l,0);l=c[ag>>2]|0;ag=l;if((l|0)!=0){j=c[ae>>2]|0;if((l|0)!=(j|0)){c[ae>>2]=j+(~((j-4+(-ag|0)|0)>>>2)<<2)}yr(l)}l=(d+(-e|0)|0)>>>2;d=am+(-l<<2)|0;h[m>>3]=0.0;c[n>>2]=0;ag=m;do{if((d|0)==(an|0)){m=an-e|0;j=m>>2;ae=j+1|0;if(ae>>>0>1073741823>>>0){vf(0)}if(j>>>0>536870910>>>0){ar=1073741823;ak=771}else{ad=m>>1;ao=ad>>>0<ae>>>0?ae:ad;if((ao|0)==0){as=0;at=0}else{ar=ao;ak=771}}if((ak|0)==771){as=yp(ar<<2)|0;at=ar}ao=as+(j<<2)|0;j=as+(at<<2)|0;if((ao|0)!=0){c[ao>>2]=ag}ao=as+(ae<<2)|0;ae=as;ad=al;yA(ae|0,ad|0,m)|0;if((al|0)==0){au=as;av=ao;aw=j;break}yr(ad);au=as;av=ao;aw=j}else{if((d|0)!=0){c[d>>2]=ag}au=al;av=am+(1-l<<2)|0;aw=an}}while(0);an=n;do{if((av|0)==(aw|0)){n=aw-au|0;l=n>>2;am=l+1|0;if(am>>>0>1073741823>>>0){vf(0)}if(l>>>0>536870910>>>0){ax=1073741823;ak=786}else{al=n>>1;ag=al>>>0<am>>>0?am:al;if((ag|0)==0){ay=0;az=0}else{ax=ag;ak=786}}if((ak|0)==786){ay=yp(ax<<2)|0;az=ax}ag=ay+(l<<2)|0;l=ay+(az<<2)|0;if((ag|0)!=0){c[ag>>2]=an}ag=ay+(am<<2)|0;am=ay;al=au;yA(am|0,al|0,n)|0;if((au|0)==0){aA=ay;aB=ag;aC=l;break}yr(al);aA=ay;aB=ag;aC=l}else{if((av|0)!=0){c[av>>2]=an}aA=au;aB=av+4|0;aC=aw}}while(0);c[p>>2]=61;c[p+4>>2]=0;jP(o,p);p=o;do{if((aB|0)==(aC|0)){aw=aC-aA|0;av=aw>>2;au=av+1|0;if(au>>>0>1073741823>>>0){vf(0)}if(av>>>0>536870910>>>0){aD=1073741823;ak=802}else{an=aw>>1;ay=an>>>0<au>>>0?au:an;if((ay|0)==0){aE=0;aF=0}else{aD=ay;ak=802}}if((ak|0)==802){aE=yp(aD<<2)|0;aF=aD}ay=aE+(av<<2)|0;av=aE+(aF<<2)|0;if((ay|0)!=0){c[ay>>2]=p}ay=aE+(au<<2)|0;au=aE;an=aA;yA(au|0,an|0,aw)|0;if((aA|0)==0){aG=aE;aH=ay;aI=av;break}yr(an);aG=aE;aH=ay;aI=av}else{if((aB|0)!=0){c[aB>>2]=p}aG=aA;aH=aB+4|0;aI=aC}}while(0);aC=aG;aB=aH;aA=c[(c[k>>2]|0)+20>>2]|0;p=q|0;c[p>>2]=0;aE=q+4|0;c[aE>>2]=0;aF=q+8|0;c[aF>>2]=0;aD=aH-aC|0;av=aD>>2;do{if((av|0)!=0){if(av>>>0>1073741823>>>0){vf(0)}ay=yp(aD)|0;c[aE>>2]=ay;c[p>>2]=ay;c[aF>>2]=ay+(av<<2);if((aG|0)==(aH|0)){break}else{aJ=aG;aK=ay}do{if((aK|0)==0){aL=0}else{c[aK>>2]=c[aJ>>2];aL=c[aE>>2]|0}aK=aL+4|0;c[aE>>2]=aK;aJ=aJ+4|0;}while((aJ|0)!=(aH|0))}}while(0);c0[aA&63](ac,o,q,0);q=c[p>>2]|0;p=q;if((q|0)!=0){o=c[aE>>2]|0;if((q|0)!=(o|0)){c[aE>>2]=o+(~((o-4+(-p|0)|0)>>>2)<<2)}yr(q)}kf(r);eI(s,r,0,0);ki(r,af);k8(r,s|0,a,0);a=(aB+(-aC|0)|0)>>>2;aB=aH+(-a<<2)|0;c[t>>2]=0;c[u>>2]=0;q=t;do{if((aB|0)==(aI|0)){t=aI-aC|0;p=t>>2;o=p+1|0;if(o>>>0>1073741823>>>0){vf(0)}if(p>>>0>536870910>>>0){aM=1073741823;ak=839}else{aE=t>>1;aA=aE>>>0<o>>>0?o:aE;if((aA|0)==0){aN=0;aO=0}else{aM=aA;ak=839}}if((ak|0)==839){aN=yp(aM<<2)|0;aO=aM}aA=aN+(p<<2)|0;p=aN+(aO<<2)|0;if((aA|0)!=0){c[aA>>2]=q}aA=aN+(o<<2)|0;o=aN;aE=aG;yA(o|0,aE|0,t)|0;if((aG|0)==0){aP=aN;aQ=aA;aR=p;break}yr(aE);aP=aN;aQ=aA;aR=p}else{if((aB|0)!=0){c[aB>>2]=q}aP=aG;aQ=aH+(1-a<<2)|0;aR=aI}}while(0);aI=u;do{if((aQ|0)==(aR|0)){u=aR-aP|0;a=u>>2;aH=a+1|0;if(aH>>>0>1073741823>>>0){vf(0)}if(a>>>0>536870910>>>0){aS=1073741823;ak=854}else{aG=u>>1;q=aG>>>0<aH>>>0?aH:aG;if((q|0)==0){aT=0;aU=0}else{aS=q;ak=854}}if((ak|0)==854){aT=yp(aS<<2)|0;aU=aS}q=aT+(a<<2)|0;a=aT+(aU<<2)|0;if((q|0)!=0){c[q>>2]=aI}q=aT+(aH<<2)|0;aH=aT;aG=aP;yA(aH|0,aG|0,u)|0;if((aP|0)==0){aV=aT;aW=q;aX=a;break}yr(aG);aV=aT;aW=q;aX=a}else{if((aQ|0)!=0){c[aQ>>2]=aI}aV=aP;aW=aQ+4|0;aX=aR}}while(0);aR=aV;aQ=aW;c[w>>2]=45;c[w+4>>2]=0;jP(v,w);c[y>>2]=49;c[y+4>>2]=0;jP(x,y);y=c[(c[k>>2]|0)+20>>2]|0;w=z|0;c[w>>2]=0;aP=z+4|0;c[aP>>2]=0;aI=z+8|0;c[aI>>2]=0;aT=aW-aR|0;aU=aT>>2;do{if((aU|0)!=0){if(aU>>>0>1073741823>>>0){vf(0)}aS=yp(aT)|0;c[aP>>2]=aS;c[w>>2]=aS;c[aI>>2]=aS+(aU<<2);if((aV|0)==(aW|0)){break}else{aY=aV;aZ=aS}do{if((aZ|0)==0){a_=0}else{c[aZ>>2]=c[aY>>2];a_=c[aP>>2]|0}aZ=a_+4|0;c[aP>>2]=aZ;aY=aY+4|0;}while((aY|0)!=(aW|0))}}while(0);c0[y&63](ac,v,z,x);x=c[w>>2]|0;w=x;if((x|0)!=0){z=c[aP>>2]|0;if((x|0)!=(z|0)){c[aP>>2]=z+(~((z-4+(-w|0)|0)>>>2)<<2)}yr(x)}x=(aQ+(-aR|0)|0)>>>2;aQ=aW+(-x<<2)|0;c[A>>2]=0;w=A;do{if((aQ|0)==(aX|0)){z=aX-aR|0;aP=z>>2;v=aP+1|0;if(v>>>0>1073741823>>>0){vf(0)}if(aP>>>0>536870910>>>0){a$=1073741823;ak=889}else{y=z>>1;aY=y>>>0<v>>>0?v:y;if((aY|0)==0){a0=0;a1=0}else{a$=aY;ak=889}}if((ak|0)==889){a0=yp(a$<<2)|0;a1=a$}aY=a0+(aP<<2)|0;aP=a0+(a1<<2)|0;if((aY|0)!=0){c[aY>>2]=w}aY=a0+(v<<2)|0;v=a0;y=aV;yA(v|0,y|0,z)|0;if((aV|0)==0){a2=a0;a3=aY;a4=aP;break}yr(y);a2=a0;a3=aY;a4=aP}else{if((aQ|0)!=0){c[aQ>>2]=w}a2=aV;a3=aW+(1-x<<2)|0;a4=aX}}while(0);c[C>>2]=81;c[C+4>>2]=0;jP(B,C);C=B;do{if((a3|0)==(a4|0)){aX=a4-a2|0;x=aX>>2;aW=x+1|0;if(aW>>>0>1073741823>>>0){vf(0)}if(x>>>0>536870910>>>0){a5=1073741823;ak=905}else{aV=aX>>1;aQ=aV>>>0<aW>>>0?aW:aV;if((aQ|0)==0){a6=0;a7=0}else{a5=aQ;ak=905}}if((ak|0)==905){a6=yp(a5<<2)|0;a7=a5}aQ=a6+(x<<2)|0;x=a6+(a7<<2)|0;if((aQ|0)!=0){c[aQ>>2]=C}aQ=a6+(aW<<2)|0;aW=a6;aV=a2;yA(aW|0,aV|0,aX)|0;if((a2|0)==0){a8=a6;a9=aQ;ba=x;break}yr(aV);a8=a6;a9=aQ;ba=x}else{if((a3|0)!=0){c[a3>>2]=C}a8=a2;a9=a3+4|0;ba=a4}}while(0);a4=a8;a3=a9;a2=c[(c[k>>2]|0)+20>>2]|0;C=D|0;c[C>>2]=0;a6=D+4|0;c[a6>>2]=0;a7=D+8|0;c[a7>>2]=0;a5=a9-a4|0;x=a5>>2;do{if((x|0)!=0){if(x>>>0>1073741823>>>0){vf(0)}aQ=yp(a5)|0;c[a6>>2]=aQ;c[C>>2]=aQ;c[a7>>2]=aQ+(x<<2);if((a8|0)==(a9|0)){break}else{bb=a8;bc=aQ}do{if((bc|0)==0){bd=0}else{c[bc>>2]=c[bb>>2];bd=c[a6>>2]|0}bc=bd+4|0;c[a6>>2]=bc;bb=bb+4|0;}while((bb|0)!=(a9|0))}}while(0);c0[a2&63](ac,B,D,0);D=c[C>>2]|0;C=D;if((D|0)!=0){B=c[a6>>2]|0;if((D|0)!=(B|0)){c[a6>>2]=B+(~((B-4+(-C|0)|0)>>>2)<<2)}yr(D)}D=(a3+(-a4|0)|0)>>>2;a3=a9+(-D<<2)|0;c[A>>2]=0;do{if((a3|0)==(ba|0)){C=ba-a4|0;B=C>>2;a6=B+1|0;if(a6>>>0>1073741823>>>0){vf(0)}if(B>>>0>536870910>>>0){be=1073741823;ak=938}else{a2=C>>1;bb=a2>>>0<a6>>>0?a6:a2;if((bb|0)==0){bf=0;bg=0}else{be=bb;ak=938}}if((ak|0)==938){bf=yp(be<<2)|0;bg=be}bb=bf+(B<<2)|0;B=bf+(bg<<2)|0;if((bb|0)!=0){c[bb>>2]=w}bb=bf+(a6<<2)|0;a6=bf;a2=a8;yA(a6|0,a2|0,C)|0;if((a8|0)==0){bh=bf;bi=bb;bj=B;break}yr(a2);bh=bf;bi=bb;bj=B}else{if((a3|0)!=0){c[a3>>2]=w}bh=a8;bi=a9+(1-D<<2)|0;bj=ba}}while(0);ba=bh;D=bi;c[F>>2]=89;c[F+4>>2]=0;jP(E,F);c[H>>2]=93;c[H+4>>2]=0;jP(G,H);H=c[(c[k>>2]|0)+20>>2]|0;F=I|0;c[F>>2]=0;a9=I+4|0;c[a9>>2]=0;a8=I+8|0;c[a8>>2]=0;a3=bi-ba|0;bf=a3>>2;do{if((bf|0)!=0){if(bf>>>0>1073741823>>>0){vf(0)}bg=yp(a3)|0;c[a9>>2]=bg;c[F>>2]=bg;c[a8>>2]=bg+(bf<<2);if((bh|0)==(bi|0)){break}else{bk=bh;bl=bg}do{if((bl|0)==0){bm=0}else{c[bl>>2]=c[bk>>2];bm=c[a9>>2]|0}bl=bm+4|0;c[a9>>2]=bl;bk=bk+4|0;}while((bk|0)!=(bi|0))}}while(0);c0[H&63](ac,E,I,G);G=c[F>>2]|0;F=G;if((G|0)!=0){I=c[a9>>2]|0;if((G|0)!=(I|0)){c[a9>>2]=I+(~((I-4+(-F|0)|0)>>>2)<<2)}yr(G)}G=(D+(-ba|0)|0)>>>2;D=bi+(-G<<2)|0;c[J>>2]=0;F=J;do{if((D|0)==(bj|0)){J=bj-ba|0;I=J>>2;a9=I+1|0;if(a9>>>0>1073741823>>>0){vf(0)}if(I>>>0>536870910>>>0){bn=1073741823;ak=973}else{E=J>>1;H=E>>>0<a9>>>0?a9:E;if((H|0)==0){bo=0;bp=0}else{bn=H;ak=973}}if((ak|0)==973){bo=yp(bn<<2)|0;bp=bn}H=bo+(I<<2)|0;I=bo+(bp<<2)|0;if((H|0)!=0){c[H>>2]=F}H=bo+(a9<<2)|0;a9=bo;E=bh;yA(a9|0,E|0,J)|0;if((bh|0)==0){bq=bo;br=H;bs=I;break}yr(E);bq=bo;br=H;bs=I}else{if((D|0)!=0){c[D>>2]=F}bq=bh;br=bi+(1-G<<2)|0;bs=bj}}while(0);bj=bq;G=br;c[L>>2]=53;c[L+4>>2]=0;jP(K,L);L=c[(c[k>>2]|0)+20>>2]|0;bi=M|0;c[bi>>2]=0;bh=M+4|0;c[bh>>2]=0;F=M+8|0;c[F>>2]=0;D=br-bj|0;bo=D>>2;do{if((bo|0)!=0){if(bo>>>0>1073741823>>>0){vf(0)}bp=yp(D)|0;c[bh>>2]=bp;c[bi>>2]=bp;c[F>>2]=bp+(bo<<2);if((bq|0)==(br|0)){break}else{bt=bq;bu=bp}do{if((bu|0)==0){bv=0}else{c[bu>>2]=c[bt>>2];bv=c[bh>>2]|0}bu=bv+4|0;c[bh>>2]=bu;bt=bt+4|0;}while((bt|0)!=(br|0))}}while(0);c0[L&63](ac,K,M,0);M=c[bi>>2]|0;bi=M;if((M|0)!=0){K=c[bh>>2]|0;if((M|0)!=(K|0)){c[bh>>2]=K+(~((K-4+(-bi|0)|0)>>>2)<<2)}yr(M)}M=(G+(-bj|0)|0)>>>2;G=br+(-M<<2)|0;c[N>>2]=0;bi=af+260|0;c[O>>2]=c[bi>>2];c[P>>2]=af+252;K=N;do{if((G|0)==(bs|0)){N=bs-bj|0;bh=N>>2;L=bh+1|0;if(L>>>0>1073741823>>>0){vf(0)}if(bh>>>0>536870910>>>0){bw=1073741823;ak=1007}else{bt=N>>1;bu=bt>>>0<L>>>0?L:bt;if((bu|0)==0){bx=0;by=0}else{bw=bu;ak=1007}}if((ak|0)==1007){bx=yp(bw<<2)|0;by=bw}bu=bx+(bh<<2)|0;bh=bx+(by<<2)|0;if((bu|0)!=0){c[bu>>2]=K}bu=bx+(L<<2)|0;L=bx;bt=bq;yA(L|0,bt|0,N)|0;if((bq|0)==0){bz=bx;bA=bu;bB=bh;break}yr(bt);bz=bx;bA=bu;bB=bh}else{if((G|0)!=0){c[G>>2]=K}bz=bq;bA=br+(1-M<<2)|0;bB=bs}}while(0);bs=O;do{if((bA|0)==(bB|0)){O=bB-bz|0;M=O>>2;br=M+1|0;if(br>>>0>1073741823>>>0){vf(0)}if(M>>>0>536870910>>>0){bC=1073741823;ak=1022}else{bq=O>>1;K=bq>>>0<br>>>0?br:bq;if((K|0)==0){bD=0;bE=0}else{bC=K;ak=1022}}if((ak|0)==1022){bD=yp(bC<<2)|0;bE=bC}K=bD+(M<<2)|0;M=bD+(bE<<2)|0;if((K|0)!=0){c[K>>2]=bs}K=bD+(br<<2)|0;br=bD;bq=bz;yA(br|0,bq|0,O)|0;if((bz|0)==0){bF=bD;bG=K;bH=M;break}yr(bq);bF=bD;bG=K;bH=M}else{if((bA|0)!=0){c[bA>>2]=bs}bF=bz;bG=bA+4|0;bH=bB}}while(0);bB=P;do{if((bG|0)==(bH|0)){P=bH-bF|0;bA=P>>2;bz=bA+1|0;if(bz>>>0>1073741823>>>0){vf(0)}if(bA>>>0>536870910>>>0){bI=1073741823;ak=1037}else{bs=P>>1;bD=bs>>>0<bz>>>0?bz:bs;if((bD|0)==0){bJ=0;bK=0}else{bI=bD;ak=1037}}if((ak|0)==1037){bJ=yp(bI<<2)|0;bK=bI}bD=bJ+(bA<<2)|0;bA=bJ+(bK<<2)|0;if((bD|0)!=0){c[bD>>2]=bB}bD=bJ+(bz<<2)|0;bz=bJ;bs=bF;yA(bz|0,bs|0,P)|0;if((bF|0)==0){bL=bJ;bM=bD;bN=bA;break}yr(bs);bL=bJ;bM=bD;bN=bA}else{if((bG|0)!=0){c[bG>>2]=bB}bL=bF;bM=bG+4|0;bN=bH}}while(0);c[R>>2]=65;c[R+4>>2]=0;jP(Q,R);R=Q;do{if((bM|0)==(bN|0)){bH=bN-bL|0;bG=bH>>2;bF=bG+1|0;if(bF>>>0>1073741823>>>0){vf(0)}if(bG>>>0>536870910>>>0){bO=1073741823;ak=1053}else{bB=bH>>1;bJ=bB>>>0<bF>>>0?bF:bB;if((bJ|0)==0){bP=0;bQ=0}else{bO=bJ;ak=1053}}if((ak|0)==1053){bP=yp(bO<<2)|0;bQ=bO}bJ=bP+(bG<<2)|0;bG=bP+(bQ<<2)|0;if((bJ|0)!=0){c[bJ>>2]=R}bJ=bP+(bF<<2)|0;bF=bP;bB=bL;yA(bF|0,bB|0,bH)|0;if((bL|0)==0){bR=bP;bS=bJ;bT=bG;break}yr(bB);bR=bP;bS=bJ;bT=bG}else{if((bM|0)!=0){c[bM>>2]=R}bR=bL;bS=bM+4|0;bT=bN}}while(0);bN=bR;bM=bS;bL=c[(c[k>>2]|0)+20>>2]|0;R=S|0;c[R>>2]=0;bP=S+4|0;c[bP>>2]=0;bQ=S+8|0;c[bQ>>2]=0;bO=bS-bN|0;bG=bO>>2;do{if((bG|0)!=0){if(bG>>>0>1073741823>>>0){vf(0)}bJ=yp(bO)|0;c[bP>>2]=bJ;c[R>>2]=bJ;c[bQ>>2]=bJ+(bG<<2);if((bR|0)==(bS|0)){break}else{bU=bR;bV=bJ}do{if((bV|0)==0){bW=0}else{c[bV>>2]=c[bU>>2];bW=c[bP>>2]|0}bV=bW+4|0;c[bP>>2]=bV;bU=bU+4|0;}while((bU|0)!=(bS|0))}}while(0);c0[bL&63](ac,Q,S,0);S=c[R>>2]|0;R=S;if((S|0)!=0){Q=c[bP>>2]|0;if((S|0)!=(Q|0)){c[bP>>2]=Q+(~((Q-4+(-R|0)|0)>>>2)<<2)}yr(S)}S=(bM+(-bN|0)|0)>>>2;bM=bS+(-S<<2)|0;c[A>>2]=0;do{if((bM|0)==(bT|0)){R=bT-bN|0;Q=R>>2;bP=Q+1|0;if(bP>>>0>1073741823>>>0){vf(0)}if(Q>>>0>536870910>>>0){bX=1073741823;ak=1086}else{bL=R>>1;bU=bL>>>0<bP>>>0?bP:bL;if((bU|0)==0){bY=0;bZ=0}else{bX=bU;ak=1086}}if((ak|0)==1086){bY=yp(bX<<2)|0;bZ=bX}bU=bY+(Q<<2)|0;Q=bY+(bZ<<2)|0;if((bU|0)!=0){c[bU>>2]=w}bU=bY+(bP<<2)|0;bP=bY;bL=bR;yA(bP|0,bL|0,R)|0;if((bR|0)==0){b_=bY;b$=bU;b0=Q;break}yr(bL);b_=bY;b$=bU;b0=Q}else{if((bM|0)!=0){c[bM>>2]=w}b_=bR;b$=bS+(1-S<<2)|0;b0=bT}}while(0);c[U>>2]=85;c[U+4>>2]=0;jP(T,U);U=T;do{if((b$|0)==(b0|0)){bT=b0-b_|0;S=bT>>2;bS=S+1|0;if(bS>>>0>1073741823>>>0){vf(0)}if(S>>>0>536870910>>>0){b1=1073741823;ak=1102}else{bR=bT>>1;bM=bR>>>0<bS>>>0?bS:bR;if((bM|0)==0){b2=0;b3=0}else{b1=bM;ak=1102}}if((ak|0)==1102){b2=yp(b1<<2)|0;b3=b1}bM=b2+(S<<2)|0;S=b2+(b3<<2)|0;if((bM|0)!=0){c[bM>>2]=U}bM=b2+(bS<<2)|0;bS=b2;bR=b_;yA(bS|0,bR|0,bT)|0;if((b_|0)==0){b4=b2;b5=bM;b6=S;break}yr(bR);b4=b2;b5=bM;b6=S}else{if((b$|0)!=0){c[b$>>2]=U}b4=b_;b5=b$+4|0;b6=b0}}while(0);b0=b4;b$=b5;b_=c[(c[k>>2]|0)+20>>2]|0;U=V|0;c[U>>2]=0;b2=V+4|0;c[b2>>2]=0;b3=V+8|0;c[b3>>2]=0;b1=b5-b0|0;S=b1>>2;do{if((S|0)!=0){if(S>>>0>1073741823>>>0){vf(0)}bM=yp(b1)|0;c[b2>>2]=bM;c[U>>2]=bM;c[b3>>2]=bM+(S<<2);if((b4|0)==(b5|0)){break}else{b7=b4;b8=bM}do{if((b8|0)==0){b9=0}else{c[b8>>2]=c[b7>>2];b9=c[b2>>2]|0}b8=b9+4|0;c[b2>>2]=b8;b7=b7+4|0;}while((b7|0)!=(b5|0))}}while(0);c0[b_&63](ac,T,V,0);V=c[U>>2]|0;U=V;if((V|0)!=0){T=c[b2>>2]|0;if((V|0)!=(T|0)){c[b2>>2]=T+(~((T-4+(-U|0)|0)>>>2)<<2)}yr(V)}V=(b$+(-b0|0)|0)>>>2;b$=b5+(-V<<2)|0;c[A>>2]=(c[af+744>>2]|0)-(c[af+760>>2]|0);c[W>>2]=c[bi>>2];do{if((b$|0)==(b6|0)){bi=b6-b0|0;A=bi>>2;U=A+1|0;if(U>>>0>1073741823>>>0){vf(0)}if(A>>>0>536870910>>>0){ca=1073741823;ak=1135}else{T=bi>>1;b2=T>>>0<U>>>0?U:T;if((b2|0)==0){cb=0;cc=0}else{ca=b2;ak=1135}}if((ak|0)==1135){cb=yp(ca<<2)|0;cc=ca}b2=cb+(A<<2)|0;A=cb+(cc<<2)|0;if((b2|0)!=0){c[b2>>2]=w}b2=cb+(U<<2)|0;U=cb;T=b4;yA(U|0,T|0,bi)|0;if((b4|0)==0){ce=cb;cf=b2;cg=A;break}yr(T);ce=cb;cf=b2;cg=A}else{if((b$|0)!=0){c[b$>>2]=w}ce=b4;cf=b5+(1-V<<2)|0;cg=b6}}while(0);b6=W;do{if((cf|0)==(cg|0)){W=cg-ce|0;V=W>>2;b5=V+1|0;if(b5>>>0>1073741823>>>0){vf(0)}if(V>>>0>536870910>>>0){ch=1073741823;ak=1150}else{b4=W>>1;w=b4>>>0<b5>>>0?b5:b4;if((w|0)==0){ci=0;cj=0}else{ch=w;ak=1150}}if((ak|0)==1150){ci=yp(ch<<2)|0;cj=ch}w=ci+(V<<2)|0;V=ci+(cj<<2)|0;if((w|0)!=0){c[w>>2]=b6}w=ci+(b5<<2)|0;b5=ci;b4=ce;yA(b5|0,b4|0,W)|0;if((ce|0)==0){ck=ci;cl=w;cm=V;break}yr(b4);ck=ci;cl=w;cm=V}else{if((cf|0)!=0){c[cf>>2]=b6}ck=ce;cl=cf+4|0;cm=cg}}while(0);cg=ck;cf=cl;c[Y>>2]=101;c[Y+4>>2]=0;jP(X,Y);Y=c[(c[k>>2]|0)+20>>2]|0;k=Z|0;c[k>>2]=0;ce=Z+4|0;c[ce>>2]=0;b6=Z+8|0;c[b6>>2]=0;ci=cl-cg|0;cj=ci>>2;do{if((cj|0)!=0){if(cj>>>0>1073741823>>>0){vf(0)}ch=yp(ci)|0;c[ce>>2]=ch;c[k>>2]=ch;c[b6>>2]=ch+(cj<<2);if((ck|0)==(cl|0)){break}else{cn=ck;co=ch}do{if((co|0)==0){cp=0}else{c[co>>2]=c[cn>>2];cp=c[ce>>2]|0}co=cp+4|0;c[ce>>2]=co;cn=cn+4|0;}while((cn|0)!=(cl|0))}}while(0);c0[Y&63](ac,X,Z,0);Z=c[k>>2]|0;k=Z;if((Z|0)!=0){X=c[ce>>2]|0;if((Z|0)!=(X|0)){c[ce>>2]=X+(~((X-4+(-k|0)|0)>>>2)<<2)}yr(Z)}Z=(cf+(-cg|0)|0)>>>2;cf=cl+(-Z<<2)|0;h[_>>3]=0.0;c[$>>2]=(c[af+748>>2]|0)-(c[af+752>>2]|0)-(c[af+756>>2]|0);af=_;do{if((cf|0)==(cm|0)){_=cm-cg|0;k=_>>2;X=k+1|0;if(X>>>0>1073741823>>>0){vf(0)}if(k>>>0>536870910>>>0){cq=1073741823;ak=1184}else{ce=_>>1;ac=ce>>>0<X>>>0?X:ce;if((ac|0)==0){cr=0;cs=0}else{cq=ac;ak=1184}}if((ak|0)==1184){cr=yp(cq<<2)|0;cs=cq}ac=cr+(k<<2)|0;k=cr+(cs<<2)|0;if((ac|0)!=0){c[ac>>2]=af}ac=cr+(X<<2)|0;X=cr;ce=ck;yA(X|0,ce|0,_)|0;if((ck|0)==0){ct=cr;cu=ac;cv=k;break}yr(ce);ct=cr;cu=ac;cv=k}else{if((cf|0)!=0){c[cf>>2]=af}ct=ck;cu=cl+(1-Z<<2)|0;cv=cm}}while(0);cm=$;do{if((cu|0)==(cv|0)){$=cv-ct|0;Z=$>>2;cl=Z+1|0;if(cl>>>0>1073741823>>>0){vf(0)}if(Z>>>0>536870910>>>0){cw=1073741823;ak=1199}else{ck=$>>1;af=ck>>>0<cl>>>0?cl:ck;if((af|0)==0){cx=0;cy=0}else{cw=af;ak=1199}}if((ak|0)==1199){cx=yp(cw<<2)|0;cy=cw}af=cx+(Z<<2)|0;Z=cx+(cy<<2)|0;if((af|0)!=0){c[af>>2]=cm}af=cx+(cl<<2)|0;cl=cx;ck=ct;yA(cl|0,ck|0,$)|0;if((ct|0)==0){cz=cx;cA=af;cB=Z;break}yr(ck);cz=cx;cA=af;cB=Z}else{if((cu|0)!=0){c[cu>>2]=cm}cz=ct;cA=cu+4|0;cB=cv}}while(0);c[ab>>2]=97;c[ab+4>>2]=0;jP(aa,ab);ab=aa;do{if((cA|0)==(cB|0)){aa=cB-cz|0;cv=aa>>2;cu=cv+1|0;if(cu>>>0>1073741823>>>0){vf(0)}if(cv>>>0>536870910>>>0){cC=1073741823;ak=1214}else{ct=aa>>1;cm=ct>>>0<cu>>>0?cu:ct;if((cm|0)==0){cD=0}else{cC=cm;ak=1214}}if((ak|0)==1214){cD=yp(cC<<2)|0}cm=cD+(cv<<2)|0;if((cm|0)!=0){c[cm>>2]=ab}cm=cD;cv=cz;yA(cm|0,cv|0,aa)|0;if((cz|0)==0){cE=cD;break}yr(cv);cE=cD}else{if((cA|0)==0){cE=cz;break}c[cA>>2]=ab;cE=cz}}while(0);eL(s);kh(r);if((cE|0)==0){i=b;return}yr(cE);i=b;return}function j2(b,c){b=b|0;c=c|0;c=b;a[b]=8;b=c+1|0;E=1701273936;a[b]=E&255;E=E>>8;a[b+1|0]=E&255;E=E>>8;a[b+2|0]=E&255;E=E>>8;a[b+3|0]=E&255;a[c+5|0]=0;return}function j3(b){b=b|0;c[b>>2]=28888;a[b+4|0]=0;a[b+5|0]=0;a[b+6|0]=0;return}function j4(a){a=a|0;yr(a);return}function j5(a){a=a|0;return}function j6(b,c,d){b=b|0;c=c|0;d=d|0;a[b+5|0]=d&255;a[b+6|0]=c&255;return}function j7(b,e,f){b=b|0;e=e|0;f=f|0;c[f>>2]=a[b+5|0]|0;c[e>>2]=d[b+6|0]|0;return 1}function j8(b,c){b=b|0;c=c|0;var d=0;if((c|0)==0){d=0;return d|0}if((a[b+4|0]|0)!=(a[c+4|0]|0)){d=0;return d|0}if((a[b+5|0]|0)!=(a[c+5|0]|0)){d=0;return d|0}d=(a[b+6|0]|0)==(a[c+6|0]|0);return d|0}function j9(b){b=b|0;c[b>>2]=28304;a[b+4|0]=5;a[b+5|0]=1;return}function ka(a){a=a|0;yr(a);return}function kb(a){a=a|0;return}function kc(b,c,d){b=b|0;c=c|0;d=d|0;a[b+4|0]=d&255;a[b+5|0]=c&255;return}function kd(b,e,f){b=b|0;e=e|0;f=f|0;c[f>>2]=a[b+4|0]|0;c[e>>2]=d[b+5|0]|0;return 1}function ke(b,c){b=b|0;c=c|0;var d=0;if((c|0)==0){d=0;return d|0}if((a[b+4|0]|0)!=(a[c+4|0]|0)){d=0;return d|0}d=(a[b+5|0]|0)==(a[c+5|0]|0);return d|0}function kf(a){a=a|0;c[a>>2]=26976;yC(a+16|0,0,12);lJ(a+64|0);c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+60>>2]=0;yC(a+28|0,0,30);qz(a+16|0,1e3);return}function kg(b){b=b|0;var d=0;c[b>>2]=26976;lN(b+64|0);if((a[b+16|0]&1)==0){d=b;yr(d);return}yr(c[b+24>>2]|0);d=b;yr(d);return}function kh(b){b=b|0;c[b>>2]=26976;lN(b+64|0);if((a[b+16|0]&1)==0){return}yr(c[b+24>>2]|0);return}function ki(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+4|0;if((b|0)==0){c[d>>2]=0;c[a+8>>2]=0;yC(a+32|0,0,20);cG[c[(c[a>>2]|0)+36>>2]&1023](a);return}c[d>>2]=b;c[a+12>>2]=0;d=c[c[b+4>>2]>>2]|0;e=d;if((d|0)==0){cd(10096,16288,84,19912)}gk(b,e);c[a+8>>2]=e;e=a;yC(a+32|0,0,16);cG[c[(c[e>>2]|0)+40>>2]&1023](a);cG[c[(c[e>>2]|0)+24>>2]&1023](a);return}function kj(a,b){a=a|0;b=b|0;return b|0}function kk(a,b){a=a|0;b=b|0;return b|0}function kl(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+4>>2]|0;if((d|0)==0){e=0;return e|0}e=(c[d+744>>2]|0)-b|0;return e|0}function km(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+4>>2]|0;if((d|0)==0){e=0;return e|0}e=(c[d+744>>2]|0)-b|0;return e|0}function kn(a){a=a|0;return}function ko(a){a=a|0;return}function kp(a){a=a|0;return}function kq(a){a=a|0;return}function kr(a){a=a|0;return}function ks(a){a=a|0;return}function kt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return}function ku(a){a=a|0;return}function kv(a){a=a|0;return}
function xr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?40120:f)|0;f=c[j>>2]|0;L3045:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break L3045}o=d+1|0;q=c[p+(l<<2)>>2]|0;r=e-1|0;break}}else{o=d;q=f;r=e}}while(0);L3063:do{if((r|0)==0){s=q}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(q>>26))>>>0>7>>>0){break L3045}else{t=o;u=q;v=r;w=l}while(1){t=t+1|0;u=(w&255)-128|u<<6;v=v-1|0;if((u|0)>=0){break}if((v|0)==0){s=u;break L3063}w=a[t]|0;if(((w&255)-128|0)>>>0>63>>>0){break L3045}}c[j>>2]=0;c[m>>2]=u;k=e-v|0;i=g;return k|0}}while(0);c[j>>2]=s;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(b3()|0)>>2]=84;k=-1;i=g;return k|0}function xs(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;L3076:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break L3076}z=y?s:x;A=t-z|0;x=xt(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break L3076}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);L3087:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=xr(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break L3087}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==0){c[j>>2]=0;D=G;break}else if((J|0)==(-1|0)){D=-1;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function xt(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;h=c[e>>2]|0;do{if((g|0)==0){i=2729}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=2729;break}if((b|0)==0){l=k;m=h;n=f;i=2740;break}c[j>>2]=0;o=k;q=h;r=b;s=f;i=2760}}while(0);if((i|0)==2729){if((b|0)==0){t=h;u=f;i=2731}else{v=h;w=b;x=f;i=2730}}L3108:while(1){if((i|0)==2740){i=0;h=(d[m]|0)>>>3;if((h-16|h+(l>>26))>>>0>7>>>0){i=2741;break}h=m+1|0;do{if((l&33554432|0)==0){y=h}else{if(((d[h]|0)-128|0)>>>0>63>>>0){i=2744;break L3108}g=m+2|0;if((l&524288|0)==0){y=g;break}if(((d[g]|0)-128|0)>>>0>63>>>0){i=2747;break L3108}y=m+3|0}}while(0);t=y;u=n-1|0;i=2731;continue}else if((i|0)==2760){i=0;h=d[q]|0;g=h>>>3;if((g-16|g+(o>>26))>>>0>7>>>0){i=2761;break}g=q+1|0;z=h-128|o<<6;do{if((z|0)<0){h=(d[g]|0)-128|0;if(h>>>0>63>>>0){i=2764;break L3108}k=q+2|0;A=h|z<<6;if((A|0)>=0){B=A;C=k;break}h=(d[k]|0)-128|0;if(h>>>0>63>>>0){i=2767;break L3108}B=h|A<<6;C=q+3|0}else{B=z;C=g}}while(0);c[r>>2]=B;v=C;w=r+4|0;x=s-1|0;i=2730;continue}else if((i|0)==2730){i=0;if((x|0)==0){D=f;i=2779;break}else{E=x;F=w;G=v}while(1){g=a[G]|0;do{if(((g&255)-1|0)>>>0<127>>>0){if((G&3|0)==0&E>>>0>3>>>0){H=E;I=F;J=G}else{K=G;L=F;M=E;N=g;break}while(1){O=c[J>>2]|0;if(((O-16843009|O)&-2139062144|0)!=0){i=2754;break}c[I>>2]=O&255;c[I+4>>2]=d[J+1|0]|0;c[I+8>>2]=d[J+2|0]|0;P=J+4|0;Q=I+16|0;c[I+12>>2]=d[J+3|0]|0;R=H-4|0;if(R>>>0>3>>>0){H=R;I=Q;J=P}else{i=2755;break}}if((i|0)==2754){i=0;K=J;L=I;M=H;N=O&255;break}else if((i|0)==2755){i=0;K=P;L=Q;M=R;N=a[P]|0;break}}else{K=G;L=F;M=E;N=g}}while(0);S=N&255;if((S-1|0)>>>0>=127>>>0){break}c[L>>2]=S;g=M-1|0;if((g|0)==0){D=f;i=2778;break L3108}else{E=g;F=L+4|0;G=K+1|0}}g=S-194|0;if(g>>>0>50>>>0){T=M;U=L;V=K;i=2771;break}o=c[p+(g<<2)>>2]|0;q=K+1|0;r=L;s=M;i=2760;continue}else if((i|0)==2731){i=0;g=a[t]|0;do{if(((g&255)-1|0)>>>0<127>>>0){if((t&3|0)!=0){W=t;X=u;Y=g;break}h=c[t>>2]|0;if(((h-16843009|h)&-2139062144|0)==0){Z=u;_=t}else{W=t;X=u;Y=h&255;break}do{_=_+4|0;Z=Z-4|0;$=c[_>>2]|0;}while((($-16843009|$)&-2139062144|0)==0);W=_;X=Z;Y=$&255}else{W=t;X=u;Y=g}}while(0);g=Y&255;if((g-1|0)>>>0<127>>>0){t=W+1|0;u=X-1|0;i=2731;continue}h=g-194|0;if(h>>>0>50>>>0){T=X;U=b;V=W;i=2771;break}l=c[p+(h<<2)>>2]|0;m=W+1|0;n=X;i=2740;continue}}if((i|0)==2761){aa=o;ab=q-1|0;ac=r;ad=s;i=2770}else if((i|0)==2778){return D|0}else if((i|0)==2779){return D|0}else if((i|0)==2741){aa=l;ab=m-1|0;ac=b;ad=n;i=2770}else if((i|0)==2764){aa=z;ab=q-1|0;ac=r;ad=s;i=2770}else if((i|0)==2767){aa=A;ab=q-1|0;ac=r;ad=s;i=2770}else if((i|0)==2747){aa=l;ab=m-1|0;ac=b;ad=n;i=2770}else if((i|0)==2744){aa=l;ab=m-1|0;ac=b;ad=n;i=2770}if((i|0)==2770){if((aa|0)==0){T=ad;U=ac;V=ab;i=2771}else{ae=ac;af=ab}}do{if((i|0)==2771){if((a[V]|0)!=0){ae=U;af=V;break}if((U|0)!=0){c[U>>2]=0;c[e>>2]=0}D=f-T|0;return D|0}}while(0);c[(b3()|0)>>2]=84;if((ae|0)==0){D=-1;return D|0}c[e>>2]=af;D=-1;return D|0}function xu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[p+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(b3()|0)>>2]=84;j=-1;i=g;return j|0}function xv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d&255;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=(d>>>6|192)&255;a[b+1|0]=(d&63|128)&255;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=(d>>>12|224)&255;a[b+1|0]=(d>>>6&63|128)&255;a[b+2|0]=(d&63|128)&255;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=(d>>>18|240)&255;a[b+1|0]=(d>>>12&63|128)&255;a[b+2|0]=(d>>>6&63|128)&255;a[b+3|0]=(d&63|128)&255;f=4;return f|0}else{c[(b3()|0)>>2]=84;f=-1;return f|0}return 0}function xw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;L3229:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break L3229}x=w?r:s;y=s-x|0;w=xx(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break L3229}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);L3240:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=xv(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break L3240}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function xx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=xv(j,o,0)|0;if((k|0)==-1){l=-1;p=2872;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=2870;break}else{m=k;n=h;o=r}}if((p|0)==2872){i=f;return l|0}else if((p|0)==2870){i=f;return l|0}}L3266:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break L3266}if(q>>>0>127>>>0){j=xv(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q&255;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break L3266}}i=f;return l|0}else{s=e;t=b}}while(0);L3278:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=2867;break}if(m>>>0>127>>>0){n=xv(b,m,0)|0;if((n|0)==-1){l=-1;p=2875;break}if(n>>>0>u>>>0){p=2863;break}o=c[w>>2]|0;xv(v,o,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m&255;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break L3278}else{u=z;v=y;w=m}}if((p|0)==2863){l=e-u|0;i=f;return l|0}else if((p|0)==2867){a[v]=0;x=u;break}else if((p|0)==2875){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function xy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0;e=i;i=i+104|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=yj(20)|0;p=o;if((o|0)==0){q=12;i=e;return q|0}r=yj(2048)|0;c[o+16>>2]=r;if((r|0)==0){yk(o);q=12;i=e;return q|0}c[o>>2]=512;c[o+4>>2]=10240;c[o+8>>2]=128;c[o+12>>2]=0;s=xN(0,0)|0;if((s|0)==0){yk(r);yk(o);q=12;i=e;return q|0}yC(n|0,0,44);c[n>>2]=s;c[n+4>>2]=p;c[n+12>>2]=b;c[n+36>>2]=d;b=n+28|0;c[b>>2]=-1;r=xz(n)|0;L3308:do{if((r|0)==0){t=n+20|0;u=c[t>>2]|0;v=u-1|0;c[a>>2]=v;w=c[n+8>>2]|0;x=c[b>>2]|0;if((x|0)>-1){if((c[n+32>>2]|0)!=0){y=2;z=0;A=0;B=0;break}}if((x|0)>(v|0)){y=6;z=0;A=0;B=0;break}v=yl(1,68)|0;C=v;if((v|0)==0){y=12;z=C;A=0;B=0;break}D=x>>>31;c[v+60>>2]=D^1;c[v+64>>2]=c[n+32>>2];c[v+28>>2]=u;if((D|0)==1){if((d&8|0)==0){E=2889}else{F=0}}else{E=2889}if((E|0)==2889){D=xA(0,p,w,C)|0;if((D|0)!=0){y=D;z=C;A=0;B=0;break}D=c[v+40>>2]|0;if((D|0)>0){u=(D<<2)+4|0;x=yj(u)|0;G=x;if((x|0)==0){y=12;z=C;A=0;B=0;break}c[v+32>>2]=G;yC(x|0,-1|0,u|0);H=G}else{H=0}G=yl(D<<1|1,4)|0;c[v+36>>2]=G;if((G|0)==0){y=12;z=C;A=0;B=0;break}G=yl(c[t>>2]|0,12)|0;if((G|0)==0){y=12;z=C;A=0;B=0;break}c[v+16>>2]=G;G=xA(s,p,w,C)|0;if((G|0)==0){F=H}else{y=G;z=C;A=0;B=0;break}}G=n+24|0;t=o+12|0;D=c[t>>2]|0;c[h>>2]=0;c[j>>2]=0;u=xG(p,w)|0;L3327:do{if((u|0)==0){x=xG(p,0)|0;if((x|0)!=0){I=x;break}x=o+16|0;J=c[t>>2]|0;L3330:do{if((J|0)>(D|0)){K=0;L=0;M=0;N=J;L3331:while(1){O=N-1|0;c[t>>2]=O;P=c[x>>2]|0;Q=c[P+(O<<2)>>2]|0;O=N-2|0;c[t>>2]=O;R=c[P+(O<<2)>>2]|0;do{if((Q|0)==0){O=c[R>>2]|0;if((O|0)==3){S=c[R+4>>2]|0;T=xG(p,c[S+4>>2]|0)|0;if((T|0)!=0){U=T;V=L;break L3330}T=xG(p,0)|0;if((T|0)!=0){U=T;V=L;break L3330}T=xG(p,c[S>>2]|0)|0;if((T|0)!=0){U=T;V=L;break L3330}W=xG(p,0)|0}else if((O|0)==2){T=c[R+4>>2]|0;S=xG(p,K)|0;if((S|0)!=0){U=S;V=L;break L3330}S=xG(p,R)|0;if((S|0)!=0){U=S;V=L;break L3330}S=xG(p,1)|0;if((S|0)!=0){U=S;V=L;break L3330}S=xG(p,c[T>>2]|0)|0;if((S|0)!=0){U=S;V=L;break L3330}S=xG(p,0)|0;if((S|0)!=0){U=S;V=L;break L3330}if((c[T+4>>2]|0)>1){E=2921}else{if((c[T+8>>2]|0)>1){E=2921}else{X=K}}if((E|0)==2921){E=0;c[h>>2]=0;X=0}Y=M+1|0;Z=L;_=X;break}else if((O|0)==0){T=c[R+4>>2]|0;S=c[T>>2]|0;if(!((S|0)>-1|(S|0)==-4)){Y=M;Z=L;_=K;break}S=T+8|0;T=(c[S>>2]|0)+K|0;c[S>>2]=T;if((T|0)<=(c[j>>2]|0)){Y=M;Z=L;_=K;break}c[j>>2]=T;Y=M;Z=L;_=K;break}else if((O|0)==1){O=c[R+4>>2]|0;T=xG(p,c[O+4>>2]|0)|0;if((T|0)!=0){U=T;V=L;break L3330}T=xG(p,0)|0;if((T|0)!=0){U=T;V=L;break L3330}T=xG(p,c[O>>2]|0)|0;if((T|0)!=0){U=T;V=L;break L3330}W=xG(p,0)|0}else{Y=M;Z=L;_=K;break}if((W|0)==0){Y=M;Z=L;_=K}else{U=W;V=L;break L3330}}else if((Q|0)==1){T=R+4|0;O=c[T>>2]|0;S=N-3|0;c[t>>2]=S;$=c[P+(S<<2)>>2]|0;c[h>>2]=$;S=O+4|0;aa=c[S>>2]|0;do{if((aa|0)>1){c[k>>2]=0;ab=O;E=2927}else{if((c[O+8>>2]|0)<=1){ac=$;break}c[k>>2]=0;ad=O;if((aa|0)>0){ab=ad;E=2927}else{ae=aa;af=0;ag=$;ah=ad;E=2936}}}while(0);L3364:do{if((E|0)==2927){E=0;ad=aa;ai=0;aj=1;ak=$;while(1){al=xH(s,p,c[ab>>2]|0,(aj|0)<(ad|0)?1:2,h,F,l,j)|0;if((al|0)!=0){I=al;break L3327}al=c[l>>2]|0;if((ai|0)==0){am=al}else{an=xP(s,0,0,1,32)|0;if((an|0)==0){I=12;break L3327}ao=xP(s,0,0,1,8)|0;ap=an+4|0;c[ap>>2]=ao;if((ao|0)==0){I=12;break L3327}c[an>>2]=1;c[an+8>>2]=-1;c[an+12>>2]=-1;c[ao>>2]=ai;c[(c[ap>>2]|0)+4>>2]=al;c[an+16>>2]=(c[al+16>>2]|0)+(c[ai+16>>2]|0);am=an}if((am|0)==0){I=12;break L3327}an=c[S>>2]|0;if((aj|0)>=(an|0)){ae=an;af=am;ag=ak;ah=ab;E=2936;break L3364}ad=an;ai=am;aj=aj+1|0;ak=c[h>>2]|0}}}while(0);if((E|0)==2936){E=0;S=O+8|0;aa=c[S>>2]|0;do{if((aa|0)==-1){ak=c[h>>2]|0;aj=xH(s,p,c[ah>>2]|0,0,h,0,k,j)|0;if((aj|0)!=0){I=aj;break L3327}aj=c[k>>2]|0;ai=xP(s,0,0,1,32)|0;ad=ai;if((ai|0)==0){E=2941;break L3331}an=xP(s,0,0,1,16)|0;c[ai+4>>2]=an;if((an|0)==0){E=2941;break L3331}c[ai>>2]=2;c[ai+8>>2]=-1;c[ai+12>>2]=-1;c[an>>2]=aj;c[an+4>>2]=0;c[an+8>>2]=-1;al=an+12|0;c[al>>2]=c[al>>2]&-2;c[ai+16>>2]=c[aj+16>>2];c[k>>2]=ad;aq=ak;ar=ad}else{if((ae|0)<(aa|0)){as=0;at=ae}else{aq=ag;ar=0;break}while(1){ad=c[h>>2]|0;ak=xH(s,p,c[ah>>2]|0,0,h,0,m,j)|0;if((ak|0)!=0){I=ak;break L3327}ak=c[m>>2]|0;if((as|0)==0){au=ak}else{aj=xP(s,0,0,1,32)|0;if((aj|0)==0){E=2948;break L3331}ai=xP(s,0,0,1,8)|0;al=aj+4|0;c[al>>2]=ai;if((ai|0)==0){E=2948;break L3331}c[aj>>2]=1;c[aj+8>>2]=-1;c[aj+12>>2]=-1;c[ai>>2]=ak;c[(c[al>>2]|0)+4>>2]=as;c[aj+16>>2]=(c[as+16>>2]|0)+(c[ak+16>>2]|0);au=aj}c[k>>2]=au;if((au|0)==0){I=12;break L3327}aj=xP(s,0,0,1,32)|0;if((aj|0)==0){I=12;break L3327}ak=xP(s,0,0,1,20)|0;c[aj+4>>2]=ak;if((ak|0)==0){I=12;break L3327}c[aj>>2]=0;c[aj+8>>2]=-1;c[aj+12>>2]=-1;c[ak>>2]=-1;c[ak+4>>2]=-1;c[ak+8>>2]=-1;ak=xP(s,0,0,1,32)|0;al=ak;if((ak|0)==0){E=2954;break L3331}ai=xP(s,0,0,1,8)|0;an=ak+4|0;c[an>>2]=ai;if((ai|0)==0){E=2954;break L3331}c[ak>>2]=3;c[ak+8>>2]=-1;c[ak+12>>2]=-1;c[ai>>2]=aj;c[(c[an>>2]|0)+4>>2]=au;c[ak+16>>2]=(c[au+16>>2]|0)+(c[aj+16>>2]|0);c[k>>2]=al;aj=at+1|0;if((aj|0)<(c[S>>2]|0)){as=al;at=aj}else{aq=ad;ar=al;break}}}}while(0);c[h>>2]=aq;do{if((af|0)==0){av=ar;E=2961}else{if((ar|0)==0){aw=af;break}S=xP(s,0,0,1,32)|0;if((S|0)==0){I=12;break L3327}aa=xP(s,0,0,1,8)|0;O=S+4|0;c[O>>2]=aa;if((aa|0)==0){I=12;break L3327}c[S>>2]=1;c[S+8>>2]=-1;c[S+12>>2]=-1;c[aa>>2]=af;c[(c[O>>2]|0)+4>>2]=ar;c[S+16>>2]=(c[ar+16>>2]|0)+(c[af+16>>2]|0);av=S;E=2961}}while(0);if((E|0)==2961){E=0;if((av|0)==0){I=12;break L3327}else{aw=av}}c[T>>2]=c[aw+4>>2];c[R>>2]=c[aw>>2];ac=aq}S=M-1|0;O=ac-$+L|0;if((S|0)!=0){Y=S;Z=O;_=ac;break}c[h>>2]=O;Y=0;Z=O;_=O}else{Y=M;Z=L;_=K}}while(0);R=c[t>>2]|0;if((R|0)>(D|0)){K=_;L=Z;M=Y;N=R}else{U=0;V=Z;break L3330}}if((E|0)==2948){c[k>>2]=0;I=12;break L3327}else if((E|0)==2954){c[k>>2]=0;I=12;break L3327}else if((E|0)==2941){c[k>>2]=0;I=12;break L3327}}else{U=0;V=0}}while(0);x=(c[G>>2]|0)+V|0;c[G>>2]=x;J=c[j>>2]|0;if((J|0)<=(x|0)){I=U;break}c[G>>2]=J;I=U}else{I=u}}while(0);if((I|0)!=0){y=I;z=C;A=0;B=0;break}u=c[G>>2]|0;c[G>>2]=u+1;D=xP(s,0,0,1,32)|0;if((D|0)==0){y=12;z=C;A=0;B=0;break}J=xP(s,0,0,1,20)|0;c[D+4>>2]=J;if((J|0)==0){y=12;z=C;A=0;B=0;break}c[D>>2]=0;c[D+8>>2]=-1;c[D+12>>2]=-1;c[J>>2]=0;c[J+4>>2]=0;c[J+8>>2]=u;u=xP(s,0,0,1,32)|0;J=u;if((u|0)==0){y=12;z=C;A=0;B=0;break}x=xP(s,0,0,1,8)|0;N=u+4|0;c[N>>2]=x;if((x|0)==0){y=12;z=C;A=0;B=0;break}c[u>>2]=1;c[u+8>>2]=-1;c[u+12>>2]=-1;c[x>>2]=w;c[(c[N>>2]|0)+4>>2]=D;c[u+16>>2]=(c[D+16>>2]|0)+(c[w+16>>2]|0);D=c[t>>2]|0;N=xG(p,u)|0;if((N|0)!=0){y=N;z=C;A=0;B=0;break}N=xG(p,0)|0;if((N|0)!=0){y=N;z=C;A=0;B=0;break}N=c[t>>2]|0;L3423:do{if((N|0)>(D|0)){x=o+16|0;M=N;L3425:while(1){L=M-1|0;c[t>>2]=L;K=c[x>>2]|0;R=c[K+(L<<2)>>2]|0;L=M-2|0;c[t>>2]=L;ax=c[K+(L<<2)>>2]|0;do{if((R|0)==0){L=c[ax>>2]|0;if((L|0)==3){K=xG(p,ax)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,1)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=ax+4|0;P=xG(p,c[(c[K>>2]|0)+4>>2]|0)|0;if((P|0)!=0){y=P;z=C;A=0;B=0;break L3308}P=xG(p,0)|0;if((P|0)!=0){y=P;z=C;A=0;B=0;break L3308}P=xG(p,c[c[K>>2]>>2]|0)|0;if((P|0)!=0){y=P;z=C;A=0;B=0;break L3308}P=xG(p,0)|0;if((P|0)==0){break}else{y=P;z=C;A=0;B=0;break L3308}}else if((L|0)==1){P=xG(p,ax)|0;if((P|0)!=0){y=P;z=C;A=0;B=0;break L3308}P=xG(p,2)|0;if((P|0)!=0){y=P;z=C;A=0;B=0;break L3308}P=ax+4|0;K=xG(p,c[(c[P>>2]|0)+4>>2]|0)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,0)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,c[c[P>>2]>>2]|0)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,0)|0;if((K|0)==0){break}else{y=K;z=C;A=0;B=0;break L3308}}else if((L|0)==2){K=xG(p,ax)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,3)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,c[c[ax+4>>2]>>2]|0)|0;if((K|0)!=0){y=K;z=C;A=0;B=0;break L3308}K=xG(p,0)|0;if((K|0)==0){break}else{y=K;z=C;A=0;B=0;break L3308}}else if((L|0)==0){L=c[ax+4>>2]|0;K=L;P=c[K>>2]|0;if((P|0)==-4){c[ax+8>>2]=0;Q=L+8|0;O=c[Q>>2]|0;S=xP(s,0,0,1,64)|0;if((S|0)==0){E=2981;break L3425}c[S>>2]=O;c[S+4>>2]=0;c[S+8>>2]=1114111;c[S+20>>2]=0;c[S+24>>2]=0;yC(S+28|0,-1|0,16);c[ax+24>>2]=S;S=c[Q>>2]|0;Q=c[L+4>>2]|0;O=xP(s,0,0,1,64)|0;if((O|0)==0){E=2983;break L3425}c[O>>2]=S;c[O+4>>2]=0;c[O+8>>2]=1114111;c[O+20>>2]=0;c[O+24>>2]=0;c[O+28>>2]=Q;c[O+32>>2]=-1;c[O+36>>2]=-1;c[O+40>>2]=-1;c[ax+28>>2]=O;break}O=ax+8|0;if((P|0)<0){c[O>>2]=1;P=xP(s,0,0,1,32)|0;if((P|0)==0){E=2987;break L3425}c[P>>2]=-1;c[P+4>>2]=-1;c[P+8>>2]=-1;c[ax+24>>2]=P;P=xP(s,0,0,1,32)|0;if((P|0)==0){E=2989;break L3425}c[P>>2]=-1;c[P+4>>2]=-1;c[P+8>>2]=-1;c[ax+28>>2]=P;break}else{c[O>>2]=0;O=L+8|0;P=c[O>>2]|0;Q=c[K>>2]|0;S=L+4|0;aa=c[S>>2]|0;al=xP(s,0,0,1,64)|0;if((al|0)==0){E=2992;break L3425}c[al>>2]=P;c[al+4>>2]=Q;c[al+8>>2]=aa;c[al+20>>2]=0;c[al+24>>2]=0;yC(al+28|0,-1|0,16);c[ax+24>>2]=al;al=c[O>>2]|0;O=c[K>>2]|0;K=c[S>>2]|0;S=c[L+12>>2]|0;aa=c[L+16>>2]|0;L=xP(s,0,0,1,64)|0;if((L|0)==0){E=2994;break L3425}c[L>>2]=al;c[L+4>>2]=O;c[L+8>>2]=K;c[L+20>>2]=S;c[L+24>>2]=aa;yC(L+28|0,-1|0,16);c[ax+28>>2]=L;break}}else{break}}else if((R|0)==1){L=c[ax+4>>2]|0;aa=L;S=L+4|0;if((c[(c[aa>>2]|0)+8>>2]|0)==0){ay=(c[(c[S>>2]|0)+8>>2]|0)!=0|0}else{ay=1}c[ax+8>>2]=ay;L=xE(s,c[(c[aa>>2]|0)+24>>2]|0,c[(c[S>>2]|0)+24>>2]|0,0,0)|0;c[ax+24>>2]=L;if((L|0)==0){y=12;z=C;A=0;B=0;break L3308}L=xE(s,c[(c[aa>>2]|0)+28>>2]|0,c[(c[S>>2]|0)+28>>2]|0,0,0)|0;c[ax+28>>2]=L;if((L|0)==0){y=12;z=C;A=0;B=0;break L3308}}else if((R|0)==3){L=c[ax+4>>2]|0;S=L;do{if((c[L+4>>2]|0)==0){E=3018}else{if((c[(c[S>>2]|0)+8>>2]|0)!=0){E=3018;break}c[ax+8>>2]=0}}while(0);if((E|0)==3018){E=0;c[ax+8>>2]=1}c[ax+24>>2]=c[(c[S>>2]|0)+24>>2];c[ax+28>>2]=c[(c[S>>2]|0)+28>>2]}else if((R|0)==2){L=c[ax+4>>2]|0;aa=L;if((c[(c[aa>>2]|0)+8>>2]|0)==0){az=0}else{az=(c[(c[L+4>>2]|0)+8>>2]|0)!=0|0}c[ax+8>>2]=az;K=c[aa>>2]|0;if((c[K+8>>2]|0)==0){c[ax+24>>2]=c[K+24>>2];aA=L+4|0}else{O=xF(p,K,0,0,f)|0;if((O|0)!=0){y=O;z=C;A=0;B=0;break L3308}aB=yj((c[f>>2]<<2)+4|0)|0;O=aB;if((aB|0)==0){y=12;z=C;A=0;B=0;break L3308}c[O>>2]=-1;c[g>>2]=0;aC=xF(p,c[aa>>2]|0,O,g,0)|0;if((aC|0)!=0){E=3027;break L3425}K=L+4|0;L=ax+24|0;c[L>>2]=xE(s,c[(c[K>>2]|0)+24>>2]|0,c[(c[aa>>2]|0)+24>>2]|0,O,c[g>>2]|0)|0;yk(aB);if((c[L>>2]|0)==0){y=12;z=C;A=0;B=0;break L3308}else{aA=K}}K=c[aA>>2]|0;if((c[K+8>>2]|0)==0){c[ax+28>>2]=c[K+28>>2];break}L=xF(p,K,0,0,f)|0;if((L|0)!=0){y=L;z=C;A=0;B=0;break L3308}aD=yj((c[f>>2]<<2)+4|0)|0;L=aD;if((aD|0)==0){y=12;z=C;A=0;B=0;break L3308}c[L>>2]=-1;c[g>>2]=0;aE=xF(p,c[aA>>2]|0,L,g,0)|0;if((aE|0)!=0){E=3034;break L3425}K=ax+28|0;c[K>>2]=xE(s,c[(c[aa>>2]|0)+28>>2]|0,c[(c[aA>>2]|0)+28>>2]|0,L,c[g>>2]|0)|0;yk(aD);if((c[K>>2]|0)==0){y=12;z=C;A=0;B=0;break L3308}}}while(0);M=c[t>>2]|0;if((M|0)<=(D|0)){break L3423}}if((E|0)==2987){c[ax+24>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==2989){c[ax+28>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==2992){c[ax+24>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==3034){yk(aD);y=aE;z=C;A=0;B=0;break L3308}else if((E|0)==2994){c[ax+28>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==2981){c[ax+24>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==2983){c[ax+28>>2]=0;y=12;z=C;A=0;B=0;break L3308}else if((E|0)==3027){yk(aB);y=aC;z=C;A=0;B=0;break L3308}}}while(0);D=c[G>>2]|0;t=D<<2;N=yj(t)|0;w=N;if((N|0)==0){y=12;z=C;A=w;B=0;break}M=yj(t)|0;t=M;if((M|0)==0){y=12;z=C;A=w;B=t;break}if((D|0)>0){yC(N|0,0,((D|0)>1?D<<2:4)|0)}xB(J,0,w,0)|0;D=c[G>>2]|0;if((D|0)>0){x=0;R=0;while(1){c[t+(x<<2)>>2]=R;K=w+(x<<2)|0;L=R+1+(c[K>>2]|0)|0;c[K>>2]=0;K=x+1|0;if((K|0)<(D|0)){x=K;R=L}else{aF=L;break}}}else{aF=0}R=yl(aF+1|0,32)|0;x=R;if((R|0)==0){y=12;z=C;A=w;B=t;break}c[v>>2]=x;R=v+4|0;c[R>>2]=aF;D=xB(J,x,w,t)|0;if((D|0)!=0){y=D;z=C;A=w;B=t;break}c[v+20>>2]=0;D=u+24|0;L=c[D>>2]|0;if((c[L>>2]|0)>-1){K=1;aa=L;while(1){L=aa+32|0;O=K+1|0;if((c[L>>2]|0)>-1){K=O;aa=L}else{aG=O;break}}}else{aG=1}aa=yl(aG,32)|0;K=aa;if((aa|0)==0){y=12;z=C;A=w;B=t;break}c[v+8>>2]=K;aa=c[D>>2]|0;J=c[aa>>2]|0;if((J|0)>-1){O=0;L=aa;aa=J;while(1){c[K+(O<<5)+8>>2]=x+(c[t+(aa<<2)>>2]<<5);c[K+(O<<5)+12>>2]=c[L>>2];J=K+(O<<5)+16|0;c[J>>2]=0;al=L+12|0;Q=c[al>>2]|0;if((Q|0)!=0){P=0;while(1){aH=P+1|0;if((c[Q+(P<<2)>>2]|0)>-1){P=aH}else{break}}P=aH<<2;Q=yj(P)|0;c[J>>2]=Q;if((Q|0)==0){y=12;z=C;A=w;B=t;break L3308}ad=c[al>>2]|0;yA(Q|0,ad|0,P)|0}c[K+(O<<5)+20>>2]=c[L+16>>2];P=O+1|0;ad=L+32|0;Q=c[ad>>2]|0;if((Q|0)>-1){O=P;L=ad;aa=Q}else{aI=P;break}}}else{aI=0}c[K+(aI<<5)+8>>2]=0;c[R>>2]=aF;c[v+12>>2]=x+(c[t+(c[c[u+28>>2]>>2]<<2)>>2]<<5);c[v+52>>2]=c[G>>2];c[v+56>>2]=d;xO(s);yk(c[o+16>>2]|0);yk(o);yk(N);yk(M);c[a+4>>2]=v;q=0;i=e;return q|0}else{y=r;z=0;A=0;B=0}}while(0);xO(s);yk(c[o+16>>2]|0);yk(o);if((A|0)!=0){yk(A)}if((B|0)!=0){yk(B)}c[a+4>>2]=z;xC(a);q=y;i=e;return q|0}function xz(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0;d=i;i=i+424|0;e=d|0;f=d+8|0;g=d+72|0;h=d+328|0;j=d+336|0;k=d+384|0;l=d+392|0;m=c[b+4>>2]|0;n=m+12|0;o=c[n>>2]|0;if((c[b+40>>2]|0)==0){p=b+20|0;q=c[p>>2]|0;xG(m,q)|0;xG(m,2)|0;c[p>>2]=(c[p>>2]|0)+1}p=xG(m,0)|0;q=b+12|0;r=b+16|0;c[r>>2]=c[q>>2];s=c[n>>2]|0;t=(p|0)==0;L3538:do{if((s|0)>(o|0)&t){u=m+16|0;v=b+36|0;w=b|0;x=b+24|0;y=b+20|0;z=f|0;A=b+28|0;B=l|0;C=k|0;D=k+1|0;E=j;F=b;G=j+12|0;H=j+40|0;I=j+24|0;J=j+8|0;K=0;L=0;M=s;L3540:while(1){N=M-1|0;c[n>>2]=N;O=c[u>>2]|0;L3542:do{switch(c[O+(N<<2)>>2]|0){case 1:{P=c[q>>2]|0;L3544:do{switch(a[P]|0){case 40:{if((c[v>>2]&1|0)!=0){Q=P;R=3139}break};case 91:{S=P+1|0;c[q>>2]=S;T=yj(128)|0;if((T|0)==0){U=12;R=3365;break L3540}if((a[S]|0)==94){V=P+2|0;c[q>>2]=V;W=1;X=V}else{W=0;X=S}S=(W|0)==0;V=X;Y=32;Z=0;_=0;$=T;L3551:while(1){T=a[V]|0;if((T<<24>>24|0)==0){aa=V;ab=7;ac=$;R=3205;break}else if((T<<24>>24|0)==93){if(V>>>0>(c[q>>2]|0)>>>0){R=3150;break}}T=xu(e,V,-1)|0;if((T|0)<0){c[e>>2]=-1;ad=1}else{ad=T}T=V+ad|0;do{if((a[T]|0)==45){ae=ad+1|0;af=V+ae|0;if((a[af]|0)==93){R=3159;break}ag=c[e>>2]|0;ah=xu(e,af,-1)|0;if((ah|0)<0){c[e>>2]=-1;ai=1;aj=-1}else{ai=ah;aj=c[e>>2]|0}ak=V+(ai+ae)|0;al=aj;am=ag;an=ag>>>0>aj>>>0?11:0;ao=0}else{R=3159}}while(0);L3566:do{if((R|0)==3159){R=0;ag=a[V]|0;do{if((ag<<24>>24|0)==45){if((a[V+1|0]|0)==93){ap=0;break}ap=(c[q>>2]|0)==(V|0)?0:11}else if((ag<<24>>24|0)==91){ae=a[V+1|0]|0;if((ae<<24>>24|0)==46|(ae<<24>>24|0)==61){aa=V;ab=3;ac=$;R=3205;break L3551}else if((ae<<24>>24|0)!=58){ap=0;break}ae=V+2|0;ah=ae;while(1){af=a[ah]|0;aq=af<<24>>24==0;if(af<<24>>24!=58&(aq^1)){ah=ah+1|0}else{break}}if(aq){aa=V;ab=4;ac=$;R=3205;break L3551}af=ah-V-2|0;ar=(af|0)>63?63:af;yG(z|0,ae|0,ar|0)|0;a[f+ar|0]=0;ar=xe(z)|0;ak=ah+2|0;al=1114111;am=0;an=(ar|0)==0?4:0;ao=ar;break L3566}else{ap=0}}while(0);ag=c[e>>2]|0;ak=T;al=ag;am=ag;an=ap;ao=0}}while(0);if((an|0)!=0){aa=ak;ab=an;ac=$;R=3205;break}T=(ao|0)!=0;do{if(S|T^1){ag=c[w>>2]|0;if((Z|0)<(Y|0)){as=Y;at=$}else{if((Y|0)>1024){aa=ak;ab=12;ac=$;R=3205;break L3551}ar=ym($,Y<<3)|0;if((ar|0)==0){aa=ak;ab=12;ac=$;R=3205;break L3551}else{as=Y<<1;at=ar}}ar=xP(ag,0,0,1,32)|0;if((ar|0)==0){R=3177;break L3551}af=xP(ag,0,0,1,20)|0;ag=ar+4|0;c[ag>>2]=af;if((af|0)==0){R=3177;break L3551}c[ar>>2]=0;c[ar+8>>2]=-1;c[ar+12>>2]=-1;c[af>>2]=am;c[af+4>>2]=al;c[af+8>>2]=-1;c[at+(Z<<2)>>2]=ar;c[(c[ag>>2]|0)+12>>2]=ao;au=0;av=as;aw=Z+1|0;ax=_;ay=at}else{if((_|0)>63){au=12;av=Y;aw=Z;ax=_;ay=$;break}c[g+(_<<2)>>2]=ao;au=0;av=Y;aw=Z;ax=_+1|0;ay=$}}while(0);ag=(au|0)==0;if(ag&(((c[v>>2]&2|0)==0|T)^1)){az=am;aA=av;aB=aw;aC=ay}else{if(ag){V=ak;Y=av;Z=aw;_=ax;$=ay;continue}else{aa=ak;ab=au;ac=ay;R=3205;break}}while(1){ag=az;while(1){if(ag>>>0>al>>>0){V=ak;Y=aA;Z=aB;_=ax;$=aC;continue L3551}if((xh(ag)|0)!=0){R=3183;break}aD=ag+1|0;if((xl(ag)|0)==0){ag=aD}else{R=3194;break}}if((R|0)==3194){R=0;ar=xp(ag)|0;L3601:do{if((xl(aD)|0)==0){aE=aD;aF=ar}else{af=aD;aG=ar;while(1){if((xp(af)|0)!=(aG+1|0)|af>>>0>al>>>0){aE=af;aF=aG;break L3601}aH=af+1|0;aI=xp(af)|0;if((xl(aH)|0)==0){aE=aH;aF=aI;break}else{af=aH;aG=aI}}}}while(0);aG=c[w>>2]|0;if((aB|0)<(aA|0)){aJ=aA;aK=aC}else{if((aA|0)>1024){aa=ak;ab=12;ac=aC;R=3205;break L3551}af=ym(aC,aA<<3)|0;if((af|0)==0){aa=ak;ab=12;ac=aC;R=3205;break L3551}else{aJ=aA<<1;aK=af}}af=xP(aG,0,0,1,32)|0;ah=af;do{if((af|0)==0){aL=0}else{ae=xP(aG,0,0,1,20)|0;c[af+4>>2]=ae;if((ae|0)==0){aL=0;break}c[af>>2]=0;c[af+8>>2]=-1;c[af+12>>2]=-1;c[ae>>2]=ar;c[ae+4>>2]=aF;c[ae+8>>2]=-1;aL=ah}}while(0);c[aK+(aB<<2)>>2]=aL;aM=aE;aN=aJ;aO=aL;aP=aK}else if((R|0)==3183){R=0;ah=xn(ag)|0;ar=ag+1|0;L3615:do{if((xh(ar)|0)==0){aQ=ah;aR=ar}else{af=ah;aG=ar;while(1){if((xn(aG)|0)!=(af+1|0)|aG>>>0>al>>>0){aQ=af;aR=aG;break L3615}ae=xn(aG)|0;aI=aG+1|0;if((xh(aI)|0)==0){aQ=ae;aR=aI;break}else{af=ae;aG=aI}}}}while(0);ar=c[w>>2]|0;if((aB|0)<(aA|0)){aS=aA;aT=aC}else{if((aA|0)>1024){aa=ak;ab=12;ac=aC;R=3205;break L3551}ag=ym(aC,aA<<3)|0;if((ag|0)==0){aa=ak;ab=12;ac=aC;R=3205;break L3551}else{aS=aA<<1;aT=ag}}ag=xP(ar,0,0,1,32)|0;aG=ag;do{if((ag|0)==0){aU=0}else{af=xP(ar,0,0,1,20)|0;c[ag+4>>2]=af;if((af|0)==0){aU=0;break}c[ag>>2]=0;c[ag+8>>2]=-1;c[ag+12>>2]=-1;c[af>>2]=ah;c[af+4>>2]=aQ;c[af+8>>2]=-1;aU=aG}}while(0);c[aT+(aB<<2)>>2]=aU;aM=aR;aN=aS;aO=aU;aP=aT}if((aO|0)==0){R=3206;break L3551}else{az=aM;aA=aN;aB=aB+1|0;aC=aP}}}L3629:do{if((R|0)==3206){R=0;c[q>>2]=ak;aW=0;aX=12;aY=aP}else if((R|0)==3150){R=0;c[q>>2]=V+1;Y=(W|0)!=0;if(Y){bT($|0,Z|0,4,148)}L3635:do{if((Z|0)>0){S=(_|0)>0;T=(_<<2)+4|0;if(Y){aZ=0;a_=0;a$=0;a0=0}else{aG=0;ah=0;while(1){ag=$+(aG<<2)|0;ar=c[(c[ag>>2]|0)+4>>2]|0;do{if((ar|0)==0){a1=ah;a2=0}else{c[ar+8>>2]=c[x>>2];if(S){af=xP(c[w>>2]|0,0,0,0,T)|0;aI=af;ae=ar+16|0;c[ae>>2]=aI;if((af|0)==0){aW=ah;aX=12;aY=$;break L3629}else{a3=0;a4=aI}do{c[a4+(a3<<2)>>2]=c[g+(a3<<2)>>2];a3=a3+1|0;a4=c[ae>>2]|0}while((a3|0)<(_|0));c[a4+(_<<2)>>2]=0}else{c[ar+16>>2]=0}if((ah|0)==0){a1=c[ag>>2]|0;a2=0;break}ae=c[w>>2]|0;aI=c[ag>>2]|0;af=xP(ae,0,0,1,32)|0;aH=af;do{if((af|0)==0){a5=0}else{a6=xP(ae,0,0,1,8)|0;a7=af+4|0;c[a7>>2]=a6;if((a6|0)==0){a5=0;break}c[af>>2]=3;c[af+8>>2]=-1;c[af+12>>2]=-1;c[a6>>2]=ah;c[(c[a7>>2]|0)+4>>2]=aI;c[af+16>>2]=(c[aI+16>>2]|0)+(c[ah+16>>2]|0);a5=aH}}while(0);a1=a5;a2=(a5|0)==0?12:0}}while(0);ag=aG+1|0;if((ag|0)<(Z|0)&(a2|0)==0){aG=ag;ah=a1}else{a8=a2;a9=0;ba=a1;break L3635}}}while(1){ah=$+(aZ<<2)|0;aG=c[(c[ah>>2]|0)+4>>2]|0;ag=aG;ar=c[ag>>2]|0;aH=aG+4|0;aI=c[aH>>2]|0;do{if((ar|0)<(a_|0)){af=aI+1|0;bb=a0;bc=0;bd=(af|0)<(a_|0)?a_:af;be=a$}else{af=ar-1|0;if((af|0)<(a$|0)){ae=aI+1|0;bb=a0;bc=0;bd=ae;be=ae;break}c[ag>>2]=a$;c[aH>>2]=af;af=aI+1|0;if((aG|0)==0){bb=a0;bc=0;bd=af;be=af;break}c[aG+8>>2]=c[x>>2];if(S){ae=xP(c[w>>2]|0,0,0,0,T)|0;a7=ae;a6=aG+16|0;c[a6>>2]=a7;if((ae|0)==0){aW=a0;aX=12;aY=$;break L3629}else{bf=0;bg=a7}do{c[bg+(bf<<2)>>2]=c[g+(bf<<2)>>2];bf=bf+1|0;bg=c[a6>>2]|0}while((bf|0)<(_|0));c[bg+(_<<2)>>2]=0}else{c[aG+16>>2]=0}if((a0|0)==0){bb=c[ah>>2]|0;bc=0;bd=af;be=af;break}a6=c[w>>2]|0;a7=c[ah>>2]|0;ae=xP(a6,0,0,1,32)|0;bh=ae;do{if((ae|0)==0){bi=0}else{bj=xP(a6,0,0,1,8)|0;bk=ae+4|0;c[bk>>2]=bj;if((bj|0)==0){bi=0;break}c[ae>>2]=3;c[ae+8>>2]=-1;c[ae+12>>2]=-1;c[bj>>2]=a0;c[(c[bk>>2]|0)+4>>2]=a7;c[ae+16>>2]=(c[a7+16>>2]|0)+(c[a0+16>>2]|0);bi=bh}}while(0);bb=bi;bc=(bi|0)==0?12:0;bd=af;be=af}}while(0);ah=aZ+1|0;if((ah|0)<(Z|0)&(bc|0)==0){aZ=ah;a_=bd;a$=be;a0=bb}else{a8=bc;a9=be;ba=bb;break}}}else{a8=0;a9=0;ba=0}}while(0);if((a8|0)!=0|Y^1){aW=ba;aX=a8;aY=$;break}T=c[w>>2]|0;S=c[x>>2]|0;ah=xP(T,0,0,1,32)|0;aG=ah;if((ah|0)==0){aW=ba;aX=12;aY=$;break}aI=xP(T,0,0,1,20)|0;T=ah+4|0;c[T>>2]=aI;if((aI|0)==0){aW=ba;aX=12;aY=$;break}c[ah>>2]=0;c[ah+8>>2]=-1;c[ah+12>>2]=-1;c[aI>>2]=a9;c[aI+4>>2]=1114111;c[aI+8>>2]=S;S=c[T>>2]|0;if((_|0)>0){T=xP(c[w>>2]|0,0,0,0,(_<<2)+4|0)|0;aI=T;aH=S+16|0;c[aH>>2]=aI;if((T|0)==0){aW=ba;aX=12;aY=$;break}else{bl=0;bm=aI}do{c[bm+(bl<<2)>>2]=c[g+(bl<<2)>>2];bl=bl+1|0;bm=c[aH>>2]|0}while((bl|0)<(_|0));c[bm+(_<<2)>>2]=0}else{c[S+16>>2]=0}if((ba|0)==0){aW=aG;aX=0;aY=$;break}aH=c[w>>2]|0;Y=xP(aH,0,0,1,32)|0;aI=Y;do{if((Y|0)==0){bn=0}else{T=xP(aH,0,0,1,8)|0;ag=Y+4|0;c[ag>>2]=T;if((T|0)==0){bn=0;break}c[Y>>2]=3;c[Y+8>>2]=-1;c[Y+12>>2]=-1;c[T>>2]=ba;c[(c[ag>>2]|0)+4>>2]=aG;c[Y+16>>2]=(c[ah+16>>2]|0)+(c[ba+16>>2]|0);bn=aI}}while(0);aW=bn;aX=(bn|0)==0?12:0;aY=$}else if((R|0)==3177){R=0;c[at+(Z<<2)>>2]=0;aa=ak;ab=12;ac=at;R=3205}}while(0);if((R|0)==3205){R=0;c[q>>2]=aa;aW=0;aX=ab;aY=ac}yk(aY);c[x>>2]=(c[x>>2]|0)+1;if((aX|0)==0){bo=0;bp=L;bq=aW;break L3542}else{U=aX;R=3411;break L3540}break};case 94:{if((c[v>>2]&1|0)==0){if((P|0)!=(c[r>>2]|0)){break L3544}Z=xG(m,5)|0;if((Z|0)!=0){br=Z;bs=L;R=3071;break L3540}}Z=c[w>>2]|0;$=xP(Z,0,0,1,32)|0;if(($|0)==0){U=12;R=3377;break L3540}_=xP(Z,0,0,1,20)|0;c[$+4>>2]=_;if((_|0)==0){U=12;R=3378;break L3540}c[$>>2]=0;c[$+8>>2]=-1;c[$+12>>2]=-1;c[_>>2]=-2;c[_+4>>2]=1;c[_+8>>2]=-1;c[q>>2]=(c[q>>2]|0)+1;bo=0;bp=L;bq=$;break L3542;break};case 36:{if((c[v>>2]&1|0)==0){if((a[P+1|0]|0)!=0){break L3544}}$=c[w>>2]|0;_=xP($,0,0,1,32)|0;if((_|0)==0){U=12;R=3379;break L3540}Z=xP($,0,0,1,20)|0;c[_+4>>2]=Z;if((Z|0)==0){U=12;R=3380;break L3540}c[_>>2]=0;c[_+8>>2]=-1;c[_+12>>2]=-1;c[Z>>2]=-2;c[Z+4>>2]=2;c[Z+8>>2]=-1;c[q>>2]=(c[q>>2]|0)+1;bo=0;bp=L;bq=_;break L3542;break};case 41:{if((L|0)!=0){R=3331}break};case 42:case 124:case 123:case 43:case 63:{R=3331;break};case 46:{_=(c[v>>2]&4|0)==0;Z=c[w>>2]|0;$=c[x>>2]|0;V=xP(Z,0,0,1,32)|0;aI=V;ah=(V|0)==0;if(_){if(ah){U=12;R=3375;break L3540}_=xP(Z,0,0,1,20)|0;c[V+4>>2]=_;if((_|0)==0){U=12;R=3376;break L3540}c[V>>2]=0;c[V+8>>2]=-1;c[V+12>>2]=-1;c[_>>2]=0;c[_+4>>2]=1114111;c[_+8>>2]=$;bt=(c[x>>2]|0)+1|0;bu=aI}else{if(ah){U=12;R=3369;break L3540}ah=xP(Z,0,0,1,20)|0;c[V+4>>2]=ah;if((ah|0)==0){U=12;R=3370;break L3540}c[V>>2]=0;c[V+8>>2]=-1;c[V+12>>2]=-1;c[ah>>2]=0;c[ah+4>>2]=9;c[ah+8>>2]=$;$=c[w>>2]|0;ah=(c[x>>2]|0)+1|0;Z=xP($,0,0,1,32)|0;if((Z|0)==0){U=12;R=3371;break L3540}_=xP($,0,0,1,20)|0;c[Z+4>>2]=_;if((_|0)==0){U=12;R=3372;break L3540}c[Z>>2]=0;c[Z+8>>2]=-1;c[Z+12>>2]=-1;c[_>>2]=11;c[_+4>>2]=1114111;c[_+8>>2]=ah;ah=c[w>>2]|0;_=xP(ah,0,0,1,32)|0;if((_|0)==0){U=12;R=3373;break L3540}$=xP(ah,0,0,1,8)|0;ah=_+4|0;c[ah>>2]=$;if(($|0)==0){U=12;R=3374;break L3540}c[_>>2]=3;c[_+8>>2]=-1;c[_+12>>2]=-1;c[$>>2]=aI;c[(c[ah>>2]|0)+4>>2]=Z;c[_+16>>2]=(c[Z+16>>2]|0)+(c[V+16>>2]|0);bt=(c[x>>2]|0)+2|0;bu=_}c[x>>2]=bt;c[q>>2]=(c[q>>2]|0)+1;bo=0;bp=L;bq=bu;break L3542;break};case 0:{R=3332;break};case 92:{_=P+1|0;V=a[_]|0;do{if((c[v>>2]&1|0)==0){if(V<<24>>24==40){c[q>>2]=_;Q=_;R=3139;break L3544}else{Z=a[P+1|0]|0;if(Z<<24>>24==41){R=3332;break L3544}else{bv=Z;break}}}else{bv=V}}while(0);V=P+1|0;_=bv<<24>>24==0;if(_){U=5;R=3412;break L3540}else{bw=0}while(1){if((bw|0)==12){break}if((a[88+(bw<<3)|0]|0)==bv<<24>>24){R=3261;break}else{bw=bw+1|0}}if((R|0)==3261){R=0;Z=c[92+(bw<<3)>>2]|0;yA(E|0,F|0,40)|0;c[G>>2]=Z;c[H>>2]=1;Z=xz(j)|0;if((Z|0)!=0){U=Z;R=3413;break L3540}c[q>>2]=(c[q>>2]|0)+2;c[x>>2]=c[I>>2];bo=0;bp=L;bq=c[J>>2]|0;break L3542}if(_){U=5;R=3414;break L3540}c[q>>2]=V;Z=a[V]|0;L3743:do{switch(Z|0){case 66:{ah=c[w>>2]|0;aI=xP(ah,0,0,1,32)|0;$=aI;do{if((aI|0)==0){bx=0}else{Y=xP(ah,0,0,1,20)|0;c[aI+4>>2]=Y;if((Y|0)==0){bx=0;break}c[aI>>2]=0;c[aI+8>>2]=-1;c[aI+12>>2]=-1;c[Y>>2]=-2;c[Y+4>>2]=128;c[Y+8>>2]=-1;bx=$}}while(0);c[q>>2]=(c[q>>2]|0)+1;by=bx;break};case 60:{$=c[w>>2]|0;aI=xP($,0,0,1,32)|0;ah=aI;do{if((aI|0)==0){bz=0}else{Y=xP($,0,0,1,20)|0;c[aI+4>>2]=Y;if((Y|0)==0){bz=0;break}c[aI>>2]=0;c[aI+8>>2]=-1;c[aI+12>>2]=-1;c[Y>>2]=-2;c[Y+4>>2]=16;c[Y+8>>2]=-1;bz=ah}}while(0);c[q>>2]=(c[q>>2]|0)+1;by=bz;break};case 62:{ah=c[w>>2]|0;aI=xP(ah,0,0,1,32)|0;$=aI;do{if((aI|0)==0){bA=0}else{Y=xP(ah,0,0,1,20)|0;c[aI+4>>2]=Y;if((Y|0)==0){bA=0;break}c[aI>>2]=0;c[aI+8>>2]=-1;c[aI+12>>2]=-1;c[Y>>2]=-2;c[Y+4>>2]=32;c[Y+8>>2]=-1;bA=$}}while(0);c[q>>2]=(c[q>>2]|0)+1;by=bA;break};case 120:{$=P+2|0;c[q>>2]=$;aI=a[$]|0;if(aI<<24>>24==123){$=P+3|0;c[q>>2]=$;ah=0;Y=$;while(1){$=a[Y]|0;if(($<<24>>24|0)==125|($<<24>>24|0)==0){bB=Y;bC=ah;break}if((xm($<<24>>24)|0)==0){U=9;R=3381;break L3540}$=c[q>>2]|0;a[l+ah|0]=a[$]|0;aG=ah+1|0;aH=$+1|0;c[q>>2]=aH;if(aG>>>0>31>>>0){bB=aH;bC=aG;break}else{ah=aG;Y=aH}}c[q>>2]=bB+1;a[l+bC|0]=0;Y=aV(B|0,0,16)|0;ah=c[w>>2]|0;aH=c[x>>2]|0;aG=xP(ah,0,0,1,32)|0;$=aG;do{if((aG|0)==0){bD=0}else{S=xP(ah,0,0,1,20)|0;c[aG+4>>2]=S;if((S|0)==0){bD=0;break}c[aG>>2]=0;c[aG+8>>2]=-1;c[aG+12>>2]=-1;c[S>>2]=Y;c[S+4>>2]=Y;c[S+8>>2]=aH;bD=$}}while(0);c[x>>2]=(c[x>>2]|0)+1;by=bD;break L3743}else{yC(C|0,0,3);$=(xm(aI<<24>>24)|0)==0;aH=c[q>>2]|0;if($){bE=aH}else{a[C]=a[aH]|0;$=aH+1|0;c[q>>2]=$;bE=$}if((xm(a[bE]|0)|0)!=0){$=c[q>>2]|0;a[D]=a[$]|0;c[q>>2]=$+1}$=aV(C|0,0,16)|0;aH=c[w>>2]|0;Y=c[x>>2]|0;aG=xP(aH,0,0,1,32)|0;ah=aG;do{if((aG|0)==0){bF=0}else{S=xP(aH,0,0,1,20)|0;c[aG+4>>2]=S;if((S|0)==0){bF=0;break}c[aG>>2]=0;c[aG+8>>2]=-1;c[aG+12>>2]=-1;c[S>>2]=$;c[S+4>>2]=$;c[S+8>>2]=Y;bF=ah}}while(0);c[x>>2]=(c[x>>2]|0)+1;by=bF;break L3743}break};case 98:{ah=c[w>>2]|0;Y=xP(ah,0,0,1,32)|0;$=Y;do{if((Y|0)==0){bG=0}else{aG=xP(ah,0,0,1,20)|0;c[Y+4>>2]=aG;if((aG|0)==0){bG=0;break}c[Y>>2]=0;c[Y+8>>2]=-1;c[Y+12>>2]=-1;c[aG>>2]=-2;c[aG+4>>2]=64;c[aG+8>>2]=-1;bG=$}}while(0);c[q>>2]=(c[q>>2]|0)+1;by=bG;break};default:{if((xf(Z)|0)!=0){$=(a[c[q>>2]|0]|0)-48|0;Y=c[w>>2]|0;ah=c[x>>2]|0;aG=xP(Y,0,0,1,32)|0;if((aG|0)==0){U=12;R=3382;break L3540}aH=xP(Y,0,0,1,20)|0;c[aG+4>>2]=aH;if((aH|0)==0){U=12;R=3383;break L3540}c[aG>>2]=0;c[aG+8>>2]=-1;c[aG+12>>2]=-1;c[aH>>2]=-4;c[aH+4>>2]=$;c[aH+8>>2]=ah;c[x>>2]=(c[x>>2]|0)+1;ah=c[A>>2]|0;c[A>>2]=($|0)<(ah|0)?ah:$;c[q>>2]=(c[q>>2]|0)+1;bo=0;bp=L;bq=aG;break L3542}aG=c[w>>2]|0;$=a[c[q>>2]|0]|0;ah=c[x>>2]|0;aH=xP(aG,0,0,1,32)|0;Y=aH;do{if((aH|0)==0){bH=0}else{aI=xP(aG,0,0,1,20)|0;c[aH+4>>2]=aI;if((aI|0)==0){bH=0;break}c[aH>>2]=0;c[aH+8>>2]=-1;c[aH+12>>2]=-1;c[aI>>2]=$;c[aI+4>>2]=$;c[aI+8>>2]=ah;bH=Y}}while(0);c[x>>2]=(c[x>>2]|0)+1;c[q>>2]=(c[q>>2]|0)+1;by=bH}}}while(0);if((by|0)==0){U=12;R=3384;break L3540}else{bo=0;bp=L;bq=by;break L3542}break};default:{}}}while(0);if((R|0)==3139){R=0;Z=L+1|0;c[q>>2]=Q+1;V=xG(m,c[y>>2]|0)|0;if((V|0)!=0){br=V;bs=Z;R=3071;break L3540}V=xG(m,2)|0;if((V|0)!=0){br=V;bs=Z;R=3071;break L3540}V=xG(m,0)|0;if((V|0)!=0){br=V;bs=Z;R=3071;break L3540}c[y>>2]=(c[y>>2]|0)+1;bo=0;bp=Z;bq=K;break L3542}else if((R|0)==3331){R=0;if((c[v>>2]&1|0)!=0){R=3332}}if((R|0)==3332){R=0;Z=c[w>>2]|0;V=xP(Z,0,0,1,32)|0;if((V|0)==0){U=12;R=3385;break L3540}_=xP(Z,0,0,1,20)|0;c[V+4>>2]=_;if((_|0)==0){U=12;R=3399;break L3540}c[V>>2]=0;c[V+8>>2]=-1;c[V+12>>2]=-1;c[_>>2]=-1;c[_+4>>2]=-1;c[_+8>>2]=-1;bo=0;bp=L;bq=V;break L3542}V=xu(h,P,-1)|0;if((V|0)<0){c[h>>2]=-1;bI=1}else{bI=V}do{if((c[v>>2]&2|0)==0){R=3347}else{if((xl(c[h>>2]|0)|0)==0){if((xh(c[h>>2]|0)|0)==0){R=3347;break}}V=c[w>>2]|0;_=xn(c[h>>2]|0)|0;Z=xn(c[h>>2]|0)|0;Y=c[x>>2]|0;ah=xP(V,0,0,1,32)|0;if((ah|0)==0){U=12;R=3400;break L3540}$=xP(V,0,0,1,20)|0;c[ah+4>>2]=$;if(($|0)==0){U=12;R=3401;break L3540}c[ah>>2]=0;c[ah+8>>2]=-1;c[ah+12>>2]=-1;c[$>>2]=_;c[$+4>>2]=Z;c[$+8>>2]=Y;Y=c[w>>2]|0;$=xp(c[h>>2]|0)|0;Z=xp(c[h>>2]|0)|0;_=c[x>>2]|0;V=xP(Y,0,0,1,32)|0;if((V|0)==0){U=12;R=3402;break L3540}aH=xP(Y,0,0,1,20)|0;c[V+4>>2]=aH;if((aH|0)==0){U=12;R=3403;break L3540}c[V>>2]=0;c[V+8>>2]=-1;c[V+12>>2]=-1;c[aH>>2]=$;c[aH+4>>2]=Z;c[aH+8>>2]=_;_=c[w>>2]|0;aH=xP(_,0,0,1,32)|0;if((aH|0)==0){U=12;R=3404;break L3540}Z=xP(_,0,0,1,8)|0;_=aH+4|0;c[_>>2]=Z;if((Z|0)==0){U=12;R=3405;break L3540}c[aH>>2]=3;c[aH+8>>2]=-1;c[aH+12>>2]=-1;c[Z>>2]=ah;c[(c[_>>2]|0)+4>>2]=V;c[aH+16>>2]=(c[V+16>>2]|0)+(c[ah+16>>2]|0);bJ=aH}}while(0);if((R|0)==3347){R=0;P=c[w>>2]|0;aH=c[h>>2]|0;ah=c[x>>2]|0;V=xP(P,0,0,1,32)|0;if((V|0)==0){U=12;R=3406;break L3540}_=xP(P,0,0,1,20)|0;c[V+4>>2]=_;if((_|0)==0){U=12;R=3407;break L3540}c[V>>2]=0;c[V+8>>2]=-1;c[V+12>>2]=-1;c[_>>2]=aH;c[_+4>>2]=aH;c[_+8>>2]=ah;bJ=V}c[x>>2]=(c[x>>2]|0)+1;c[q>>2]=(c[q>>2]|0)+bI;bo=0;bp=L;bq=bJ;break};case 5:{V=c[q>>2]|0;ah=a[V]|0;if(ah<<24>>24==0){bo=0;bp=L;bq=K;break L3542}_=c[v>>2]&1;aH=(_|0)!=0;if(aH&ah<<24>>24==124){bo=0;bp=L;bq=K;break L3542}do{if(!(aH&ah<<24>>24==41&(L|0)>0)){if((_|0)==0&ah<<24>>24==92){if((a[V+1|0]|0)==41){break}}P=xG(m,5)|0;if((P|0)!=0){br=P;bs=L;R=3071;break L3540}P=xG(m,K)|0;if((P|0)!=0){br=P;bs=L;R=3071;break L3540}P=xG(m,6)|0;if((P|0)!=0){br=P;bs=L;R=3071;break L3540}bo=xG(m,4)|0;bp=L;bq=K;break L3542}}while(0);ah=(_|L|0)==0?8:0;aH=L-1|0;if((_|0)!=0){bo=ah;bp=aH;bq=K;break L3542}c[q>>2]=V+2;bo=ah;bp=aH;bq=K;break};case 0:{if((c[v>>2]&1|0)!=0){aH=xG(m,7)|0;if((aH|0)!=0){br=aH;bs=L;R=3071;break L3540}}bo=xG(m,3)|0;bp=L;bq=K;break};case 8:{aH=M-2|0;c[n>>2]=aH;ah=c[O+(aH<<2)>>2]|0;aH=c[w>>2]|0;P=xP(aH,0,0,1,32)|0;if((P|0)==0){U=12;R=3366;break L3540}Z=xP(aH,0,0,1,8)|0;aH=P+4|0;c[aH>>2]=Z;if((Z|0)==0){U=12;R=3362;break L3540}c[P>>2]=3;c[P+8>>2]=-1;c[P+12>>2]=-1;c[Z>>2]=ah;c[(c[aH>>2]|0)+4>>2]=K;c[P+16>>2]=(c[K+16>>2]|0)+(c[ah+16>>2]|0);bo=0;bp=L;bq=P;break};case 7:{P=c[q>>2]|0;ah=a[P]|0;if((ah|0)==41){c[q>>2]=P+1;bo=0;bp=L;bq=K;break L3542}else if((ah|0)!=124){bo=0;bp=L;bq=K;break L3542}ah=xG(m,7)|0;if((ah|0)!=0){br=ah;bs=L;R=3071;break L3540}ah=xG(m,K)|0;if((ah|0)!=0){br=ah;bs=L;R=3071;break L3540}ah=xG(m,8)|0;if((ah|0)!=0){br=ah;bs=L;R=3071;break L3540}ah=xG(m,3)|0;if((ah|0)!=0){br=ah;bs=L;R=3071;break L3540}c[q>>2]=(c[q>>2]|0)+1;bo=0;bp=L;bq=K;break};case 6:{ah=M-2|0;c[n>>2]=ah;P=c[O+(ah<<2)>>2]|0;ah=c[w>>2]|0;aH=xP(ah,0,0,1,32)|0;if((aH|0)==0){U=12;R=3368;break L3540}Z=xP(ah,0,0,1,8)|0;ah=aH+4|0;c[ah>>2]=Z;if((Z|0)==0){U=12;R=3367;break L3540}c[aH>>2]=1;c[aH+8>>2]=-1;c[aH+12>>2]=-1;c[Z>>2]=P;c[(c[ah>>2]|0)+4>>2]=K;c[aH+16>>2]=(c[K+16>>2]|0)+(c[P+16>>2]|0);bo=0;bp=L;bq=aH;break};case 4:{aH=xG(m,9)|0;if((aH|0)!=0){br=aH;bs=L;R=3071;break L3540}bo=xG(m,1)|0;bp=L;bq=K;break};case 3:{aH=xG(m,5)|0;if((aH|0)!=0){br=aH;bs=L;R=3071;break L3540}bo=xG(m,4)|0;bp=L;bq=K;break};case 10:{aH=M-2|0;c[n>>2]=aH;c[v>>2]=c[O+(aH<<2)>>2];bo=0;bp=L;bq=K;break};case 9:{aH=c[q>>2]|0;P=a[aH]|0;switch(P<<24>>24|0){case 92:{ah=c[v>>2]|0;if((ah&1|0)!=0){bo=0;bp=L;bq=K;break L3542}Z=aH+1|0;if((a[Z]|0)!=123){bo=0;bp=L;bq=K;break L3542}c[q>>2]=Z;bK=Z;bL=ah;break};case 123:{ah=c[v>>2]|0;if((ah&1|0)==0){bo=0;bp=L;bq=K;break L3542}else{bK=aH;bL=ah}break};case 43:case 63:{if((c[v>>2]&1|0)==0){bo=0;bp=L;bq=K;break L3542}else{R=3106}break};case 42:{R=3106;break};default:{bo=0;bp=L;bq=K;break L3542}}if((R|0)==3106){R=0;c[q>>2]=aH+1;aH=c[w>>2]|0;ah=xP(aH,0,0,1,32)|0;if((ah|0)==0){U=12;R=3398;break L3540}Z=xP(aH,0,0,1,16)|0;c[ah+4>>2]=Z;if((Z|0)==0){U=12;R=3415;break L3540}c[ah>>2]=2;c[ah+8>>2]=-1;c[ah+12>>2]=-1;c[Z>>2]=K;c[Z+4>>2]=P<<24>>24==43;c[Z+8>>2]=P<<24>>24==63?1:-1;P=Z+12|0;c[P>>2]=c[P>>2]&-2;c[ah+16>>2]=c[K+16>>2];bo=xG(m,9)|0;bp=L;bq=ah;break L3542}ah=bK+1|0;c[q>>2]=ah;P=a[ah]|0;if((P-48&255)>>>0<10>>>0){Z=P<<24>>24;if((Z-48|0)>>>0<10>>>0){bM=-1;bN=ah;bO=Z}else{U=10;R=3386;break L3540}while(1){Z=((bM|0)<0?-48:(bM*10|0)-48|0)+bO|0;aH=bN+1|0;$=a[aH]|0;Y=$<<24>>24;if((Y-48|0)>>>0<10>>>0){bM=Z;bN=aH;bO=Y}else{bP=Z;bQ=aH;bR=$;break}}}else{bP=-1;bQ=ah;bR=P}do{if(bR<<24>>24==44){V=bQ+1|0;_=a[V]|0;$=_<<24>>24;if(($-48|0)>>>0<10>>>0){bS=-1;bU=V;bV=$}else{bW=V;bX=-1;bY=_;break}while(1){_=((bS|0)<0?-48:(bS*10|0)-48|0)+bV|0;V=bU+1|0;$=a[V]|0;aH=$<<24>>24;if((aH-48|0)>>>0<10>>>0){bS=_;bU=V;bV=aH}else{bZ=_;b_=V;b$=$;R=3119;break}}}else{bZ=bP;b_=bQ;b$=bR;R=3119}}while(0);do{if((R|0)==3119){R=0;if((bZ|0)<=-1){bW=b_;bX=bZ;bY=b$;break}if((bP|0)>(bZ|0)|(bZ|0)>255){U=10;R=3387;break L3540}else{bW=b_;bX=bZ;bY=b$}}}while(0);if(bY<<24>>24==0){U=9;R=3388;break L3540}if((bW|0)==(ah|0)){U=10;R=3389;break L3540}if((bL&1|0)==0){if(bY<<24>>24!=92){U=10;R=3395;break L3540}if((a[bW+1|0]|0)!=125){U=10;R=3396;break L3540}b0=bW+2|0}else{if(bY<<24>>24!=125){U=10;R=3390;break L3540}b0=bW+1|0}if((bX|bP|0)==0){P=c[w>>2]|0;$=xP(P,0,0,1,32)|0;if(($|0)==0){U=12;R=3397;break L3540}V=xP(P,0,0,1,20)|0;c[$+4>>2]=V;if((V|0)==0){U=12;R=3391;break L3540}c[$>>2]=0;c[$+8>>2]=-1;c[$+12>>2]=-1;c[V>>2]=-1;c[V+4>>2]=-1;c[V+8>>2]=-1;b1=$}else{$=(bX&bP|0)<0;V=c[w>>2]|0;P=xP(V,0,0,1,32)|0;if((P|0)==0){U=12;R=3363;break L3540}_=xP(V,0,0,1,16)|0;c[P+4>>2]=_;if((_|0)==0){U=12;R=3364;break L3540}c[P>>2]=2;c[P+8>>2]=-1;c[P+12>>2]=-1;c[_>>2]=K;c[_+4>>2]=$?1:bP;c[_+8>>2]=$?1:bX;$=_+12|0;c[$>>2]=c[$>>2]&-2;c[P+16>>2]=c[K+16>>2];b1=P}c[q>>2]=b0;bo=xG(m,9)|0;bp=L;bq=b1;break};case 2:{P=M-2|0;c[n>>2]=P;$=c[O+(P<<2)>>2]|0;if((c[K+12>>2]|0)>-1){P=c[w>>2]|0;_=xP(P,0,0,1,32)|0;if((_|0)==0){U=12;R=3408;break L3540}V=xP(P,0,0,1,20)|0;c[_+4>>2]=V;if((V|0)==0){U=12;R=3409;break L3540}c[_>>2]=0;c[_+8>>2]=-1;c[_+12>>2]=-1;c[V>>2]=-1;c[V+4>>2]=-1;c[V+8>>2]=-1;V=c[w>>2]|0;P=xP(V,0,0,1,32)|0;if((P|0)==0){U=12;R=3410;break L3540}aH=xP(V,0,0,1,8)|0;V=P+4|0;c[V>>2]=aH;if((aH|0)==0){U=12;R=3392;break L3540}c[P>>2]=1;c[P+8>>2]=-1;c[P+12>>2]=-1;c[aH>>2]=_;c[(c[V>>2]|0)+4>>2]=K;V=K+16|0;aH=P+16|0;c[aH>>2]=(c[V>>2]|0)+(c[_+16>>2]|0);c[aH>>2]=c[V>>2];b2=P}else{b2=K}c[b2+12>>2]=$;$=b2+16|0;c[$>>2]=(c[$>>2]|0)+1;bo=0;bp=L;bq=b2;break};default:{bo=0;bp=L;bq=K}}}while(0);O=c[n>>2]|0;N=(bo|0)==0;if((O|0)>(o|0)&N){K=bq;L=bp;M=O}else{b3=bq;b4=bp;b5=bo;b6=N;break L3538}}if((R|0)==3071){b3=K;b4=bs;b5=br;b6=(br|0)==0;break}else if((R|0)==3362){i=d;return U|0}else if((R|0)==3363){i=d;return U|0}else if((R|0)==3364){i=d;return U|0}else if((R|0)==3365){i=d;return U|0}else if((R|0)==3366){i=d;return U|0}else if((R|0)==3367){i=d;return U|0}else if((R|0)==3368){i=d;return U|0}else if((R|0)==3369){i=d;return U|0}else if((R|0)==3370){i=d;return U|0}else if((R|0)==3371){i=d;return U|0}else if((R|0)==3372){i=d;return U|0}else if((R|0)==3373){i=d;return U|0}else if((R|0)==3374){i=d;return U|0}else if((R|0)==3375){i=d;return U|0}else if((R|0)==3376){i=d;return U|0}else if((R|0)==3377){i=d;return U|0}else if((R|0)==3378){i=d;return U|0}else if((R|0)==3379){i=d;return U|0}else if((R|0)==3380){i=d;return U|0}else if((R|0)==3381){i=d;return U|0}else if((R|0)==3382){i=d;return U|0}else if((R|0)==3383){i=d;return U|0}else if((R|0)==3384){i=d;return U|0}else if((R|0)==3385){i=d;return U|0}else if((R|0)==3386){i=d;return U|0}else if((R|0)==3387){i=d;return U|0}else if((R|0)==3388){i=d;return U|0}else if((R|0)==3389){i=d;return U|0}else if((R|0)==3390){i=d;return U|0}else if((R|0)==3391){i=d;return U|0}else if((R|0)==3392){i=d;return U|0}else if((R|0)==3395){i=d;return U|0}else if((R|0)==3396){i=d;return U|0}else if((R|0)==3397){i=d;return U|0}else if((R|0)==3398){i=d;return U|0}else if((R|0)==3399){i=d;return U|0}else if((R|0)==3400){i=d;return U|0}else if((R|0)==3401){i=d;return U|0}else if((R|0)==3402){i=d;return U|0}else if((R|0)==3403){i=d;return U|0}else if((R|0)==3404){i=d;return U|0}else if((R|0)==3405){i=d;return U|0}else if((R|0)==3406){i=d;return U|0}else if((R|0)==3407){i=d;return U|0}else if((R|0)==3408){i=d;return U|0}else if((R|0)==3409){i=d;return U|0}else if((R|0)==3410){i=d;return U|0}else if((R|0)==3411){i=d;return U|0}else if((R|0)==3412){i=d;return U|0}else if((R|0)==3413){i=d;return U|0}else if((R|0)==3414){i=d;return U|0}else if((R|0)==3415){i=d;return U|0}}else{b3=0;b4=0;b5=p;b6=t}}while(0);t=(b4|0)>0;if(t|b6^1){U=t?8:b5;i=d;return U|0}c[b+8>>2]=b3;U=0;i=d;return U|0}function xA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0;f=b+12|0;g=c[f>>2]|0;h=(a|0)==0|(e|0)==0;if(!h){c[e+48>>2]=0;c[c[e+36>>2]>>2]=-1}i=c[e+28>>2]|0;j=yj((i<<3)+8|0)|0;k=j;if((j|0)==0){l=12;return l|0}c[k>>2]=-1;m=yj((i<<2)+4|0)|0;n=m;if((m|0)==0){yk(j);l=12;return l|0}c[n>>2]=-1;o=0;while(1){if(o>>>0>i>>>0){break}else{o=o+1|0}}xG(b,d)|0;d=xG(b,0)|0;o=c[f>>2]|0;L3988:do{if((o|0)>(g|0)&(d|0)==0){i=b+16|0;p=e+32|0;q=e+16|0;r=e+36|0;s=0;t=-1;u=1;v=0;w=0;x=0;y=k;z=o;while(1){A=z-1|0;c[f>>2]=A;B=c[i>>2]|0;L3992:do{switch(c[B+(A<<2)>>2]|0){case 5:{C=z-2|0;c[f>>2]=C;D=c[B+(C<<2)>>2]|0;if(!h){E=0;F=y;G=x;H=w;I=v;J=u;K=t;L=s;break L3992}C=c[D+4>>2]|0;c[D+20>>2]=(c[(c[C+4>>2]|0)+20>>2]|0)+(c[(c[C>>2]|0)+20>>2]|0);E=0;F=y;G=x;H=w;I=v;J=u;K=t;L=s;break};case 4:{C=z-2|0;c[f>>2]=C;D=c[B+(C<<2)>>2]|0;C=z-3|0;c[f>>2]=C;E=0;F=y;G=x;H=w;I=(D|0)>-1?D:v;J=c[B+(C<<2)>>2]|0;K=t;L=s;break};case 0:{C=z-2|0;c[f>>2]=C;D=c[B+(C<<2)>>2]|0;C=D;M=D+12|0;N=c[M>>2]|0;if((N|0)>-1){O=0;do{P=y+(O<<2)|0;O=O+1|0}while((c[P>>2]|0)>-1);c[P>>2]=N<<1;c[y+(O<<2)>>2]=-1;do{if(!h){Q=0;while(1){if((c[n+(Q<<2)>>2]|0)>-1){Q=Q+1|0}else{break}}c[(c[q>>2]|0)+(N*12|0)+8>>2]=0;if((Q|0)<=0){break}R=yj((Q<<2)+4|0)|0;S=R;if((R|0)==0){T=t;U=v;V=w;W=x;X=y;Y=12;break L3988}c[(c[q>>2]|0)+(N*12|0)+8>>2]=S;R=c[n>>2]|0;if((R|0)>-1){Z=0;_=R;R=S;while(1){c[R>>2]=_;$=Z+1|0;aa=c[n+($<<2)>>2]|0;ab=S+($<<2)|0;if((aa|0)>-1){Z=$;_=aa;R=ab}else{ac=ab;break}}}else{ac=S}c[ac>>2]=-1}}while(0);N=xG(b,c[M>>2]|0)|0;if((N|0)!=0){T=t;U=v;V=w;W=x;X=y;Y=N;break L3988}N=xG(b,6)|0;if((N|0)!=0){T=t;U=v;V=w;W=x;X=y;Y=N;break L3988}}N=c[D>>2]|0;do{if((N|0)==3){O=c[D+4>>2]|0;R=c[O>>2]|0;_=c[O+4>>2]|0;O=(c[y>>2]|0)>-1;Z=u+1|0;Q=xG(b,O?Z:u)|0;if((Q|0)!=0){ad=Q;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}Q=xG(b,O?u:v)|0;if((Q|0)!=0){ad=Q;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}Q=xG(b,y)|0;if((Q|0)!=0){ad=Q;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}Q=xG(b,(c[y>>2]|0)>>>31^1)|0;if((Q|0)!=0){ad=Q;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}Q=xG(b,D)|0;if((Q|0)!=0){ad=Q;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}Q=_;_=xG(b,Q)|0;if((_|0)!=0){ad=_;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}_=R;R=xG(b,_)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,3)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,Q)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,0)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,2)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,_)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,0)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}if((c[y>>2]|0)>-1){if(h){ak=0;al=w;am=t}else{R=xI(a,C,v)|0;c[(c[p>>2]|0)+(v<<2)>>2]=s;if((t|0)>-1){_=c[r>>2]|0;Q=0;while(1){an=_+(Q<<2)|0;ao=Q+1|0;if((c[an>>2]|0)>-1){Q=ao}else{break}}c[an>>2]=v;c[(c[r>>2]|0)+(ao<<2)>>2]=t;c[(c[r>>2]|0)+(Q+2<<2)>>2]=-1;ap=w+1|0;aq=-1}else{ap=w;aq=t}_=c[y>>2]|0;if((_|0)>-1){S=0;O=_;do{_=(O|0)/2|0;ab=c[q>>2]|0;if((O&1|0)==0){c[ab+(_*12|0)>>2]=v}else{c[ab+(_*12|0)+4>>2]=v}S=S+1|0;O=c[y+(S<<2)>>2]|0;}while((O|0)>-1)}c[y>>2]=-1;ak=R;al=ap;am=aq}c[y>>2]=-1;ar=ak;as=x+1|0;at=al;au=u;av=Z;aw=am}else{ar=0;as=x;at=w;au=v;av=u;aw=t}if((c[D+16>>2]|0)<=0){ad=ar;ae=as;af=at;ag=au;ah=av;ai=aw;aj=s;break}ad=ar;ae=as;af=at;ag=av+1|0;ah=av+2|0;ai=aw;aj=s}else if((N|0)==2){O=c[D+4>>2]|0;if(h){if((c[y>>2]|0)>-1){ax=1}else{ax=c[O+12>>2]&1}S=xG(b,ax)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}}else{S=xG(b,v)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}S=xG(b,c[O+12>>2]&1)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}}S=xG(b,D)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}S=xG(b,1)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}S=xG(b,c[O>>2]|0)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}S=xG(b,0)|0;if((S|0)!=0){ad=S;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}if((c[y>>2]|0)<=-1){if((c[O+12>>2]&1|0)==0){ad=0;ae=x;af=w;ag=v;ah=u;ai=t;aj=0;break}}if(h){ay=0;az=w;aA=t}else{S=xI(a,C,v)|0;c[(c[p>>2]|0)+(v<<2)>>2]=(c[O+12>>2]&1|0)==0?s:1;if((t|0)>-1){O=c[r>>2]|0;Q=0;while(1){aB=O+(Q<<2)|0;aC=Q+1|0;if((c[aB>>2]|0)>-1){Q=aC}else{break}}c[aB>>2]=v;c[(c[r>>2]|0)+(aC<<2)>>2]=t;c[(c[r>>2]|0)+(Q+2<<2)>>2]=-1;aD=w+1|0;aE=-1}else{aD=w;aE=t}O=c[y>>2]|0;if((O|0)>-1){Z=0;R=O;do{O=(R|0)/2|0;_=c[q>>2]|0;if((R&1|0)==0){c[_+(O*12|0)>>2]=v}else{c[_+(O*12|0)+4>>2]=v}Z=Z+1|0;R=c[y+(Z<<2)>>2]|0;}while((R|0)>-1)}c[y>>2]=-1;ay=S;az=aD;aA=aE}c[y>>2]=-1;ad=ay;ae=x+1|0;af=az;ag=u;ah=u+1|0;ai=aA;aj=0}else if((N|0)==1){R=c[D+4>>2]|0;Z=c[R>>2]|0;Q=c[R+4>>2]|0;R=xG(b,D)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,5)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,Q)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=xG(b,0)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}R=Z+20|0;O=xG(b,(c[R>>2]|0)+u|0)|0;if((O|0)!=0){ad=O;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}if((c[R>>2]|0)>0){R=(c[Q+20>>2]|0)>0;aF=(R&1)+u|0;aG=R?u:-1}else{aF=u;aG=-1}R=xG(b,aG)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=aF;ai=t;aj=s;break}R=xG(b,4)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=aF;ai=t;aj=s;break}R=xG(b,Z)|0;if((R|0)!=0){ad=R;ae=x;af=w;ag=v;ah=aF;ai=t;aj=s;break}ad=xG(b,0)|0;ae=x;af=w;ag=v;ah=aF;ai=t;aj=s}else if((N|0)==0){R=c[c[D+4>>2]>>2]|0;if(!((R|0)>-1|(R|0)==-4)){ad=0;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}if((c[y>>2]|0)<=-1){ad=0;ae=x;af=w;ag=v;ah=u;ai=t;aj=s;break}if(h){c[D+20>>2]=1;aH=0;aI=w;aJ=t}else{R=xI(a,C,v)|0;c[(c[p>>2]|0)+(v<<2)>>2]=s;if((t|0)>-1){Z=c[r>>2]|0;Q=0;while(1){aK=Z+(Q<<2)|0;aL=Q+1|0;if((c[aK>>2]|0)>-1){Q=aL}else{break}}c[aK>>2]=v;c[(c[r>>2]|0)+(aL<<2)>>2]=t;c[(c[r>>2]|0)+(Q+2<<2)>>2]=-1;aM=w+1|0;aN=-1}else{aM=w;aN=t}Z=c[y>>2]|0;if((Z|0)>-1){S=0;O=Z;do{Z=(O|0)/2|0;_=c[q>>2]|0;if((O&1|0)==0){c[_+(Z*12|0)>>2]=v}else{c[_+(Z*12|0)+4>>2]=v}S=S+1|0;O=c[y+(S<<2)>>2]|0;}while((O|0)>-1)}c[y>>2]=-1;aH=R;aI=aM;aJ=aN}c[y>>2]=-1;ad=aH;ae=x+1|0;af=aI;ag=u;ah=u+1|0;ai=aJ;aj=s}else{ad=0;ae=x;af=w;ag=v;ah=u;ai=t;aj=s}}while(0);C=c[M>>2]|0;if((C|0)>-1){aO=0}else{E=ad;F=y;G=ae;H=af;I=ag;J=ah;K=ai;L=aj;break L3992}do{aP=n+(aO<<2)|0;aO=aO+1|0}while((c[aP>>2]|0)>-1);c[aP>>2]=C;c[n+(aO<<2)>>2]=-1;E=ad;F=y;G=ae;H=af;I=ag;J=ah;K=ai;L=aj;break};case 6:{M=z-2|0;c[f>>2]=M;D=c[B+(M<<2)>>2]|0;M=0;do{aQ=y+(M<<2)|0;M=M+1|0}while((c[aQ>>2]|0)>-1);c[aQ>>2]=D<<1|1;c[y+(M<<2)>>2]=-1;C=0;while(1){if((c[n+(C<<2)>>2]|0)>-1){C=C+1|0}else{break}}c[n+(C-1<<2)>>2]=-1;E=0;F=y;G=x;H=w;I=v;J=u;K=t;L=s;break};case 1:{M=z-2|0;c[f>>2]=M;D=c[B+(M<<2)>>2]|0;if(h){M=c[(c[c[D+4>>2]>>2]|0)+20>>2]|0;N=z-3|0;c[f>>2]=N;c[D+20>>2]=(c[B+(N<<2)>>2]|0)+M;E=0;F=y;G=x;H=w;I=v;J=u;K=-1;L=s;break L3992}else{M=z-3|0;c[f>>2]=M;N=c[B+(M<<2)>>2]|0;M=z-4|0;c[f>>2]=M;D=(N|0)==0;E=0;F=y;G=x;H=w;I=v;J=u;K=D?t:c[B+(M<<2)>>2]|0;L=D&1;break L3992}break};case 2:{D=y;while(1){if((c[D>>2]|0)>-1){D=D+4|0}else{E=0;F=D;G=x;H=w;I=v;J=u;K=t;L=s;break}}break};case 3:{D=z-2|0;c[f>>2]=D;C=c[B+(D<<2)>>2]|0;D=z-3|0;c[f>>2]=D;M=c[B+(D<<2)>>2]|0;D=z-4|0;c[f>>2]=D;N=c[B+(D<<2)>>2]|0;D=z-5|0;c[f>>2]=D;if(h){O=c[N+4>>2]|0;S=N+16|0;c[N+20>>2]=(c[(c[O>>2]|0)+20>>2]|0)+(c[B+(D<<2)>>2]|0)+(c[(c[O+4>>2]|0)+20>>2]|0)+((c[S>>2]|0)>0?2:0);aR=c[f>>2]|0;aS=c[i>>2]|0;aT=S}else{aR=D;aS=B;aT=N+16|0}N=aR-1|0;c[f>>2]=N;D=c[aS+(N<<2)>>2]|0;N=aR-2|0;c[f>>2]=N;S=c[aS+(N<<2)>>2]|0;N=aR-3|0;c[f>>2]=N;O=c[aS+(N<<2)>>2]|0;if((c[aT>>2]|0)<=0){E=0;F=D;G=x;H=w;I=v;J=u;K=t;L=1;break L3992}if(h){aU=0}else{xJ(a,C,S)|0;c[(c[p>>2]|0)+(S<<2)>>2]=1;S=xJ(a,M,O)|0;c[(c[p>>2]|0)+(O<<2)>>2]=1;aU=S}E=aU;F=D;G=x+2|0;H=w;I=v;J=u;K=t;L=1;break};default:{E=0;F=y;G=x;H=w;I=v;J=u;K=t;L=s}}}while(0);B=c[f>>2]|0;if((B|0)>(g|0)&(E|0)==0){s=L;t=K;u=J;v=I;w=H;x=G;y=F;z=B}else{T=K;U=I;V=H;W=G;X=F;Y=E;break L3988}}}else{T=-1;U=0;V=0;W=0;X=k;Y=d}}while(0);do{if(h){aV=V}else{d=c[X>>2]|0;if((d|0)>-1){k=e+16|0;E=0;F=d;do{d=(F|0)/2|0;G=c[k>>2]|0;if((F&1|0)==0){c[G+(d*12|0)>>2]=U}else{c[G+(d*12|0)+4>>2]=U}E=E+1|0;F=c[X+(E<<2)>>2]|0;}while((F|0)>-1)}c[X>>2]=-1;if((T|0)<=-1){aV=V;break}F=e+36|0;E=c[F>>2]|0;k=0;while(1){aW=E+(k<<2)|0;aX=k+1|0;if((c[aW>>2]|0)>-1){k=aX}else{break}}c[aW>>2]=U;c[(c[F>>2]|0)+(aX<<2)>>2]=T;c[(c[F>>2]|0)+(k+2<<2)>>2]=-1;aV=V+1|0}}while(0);c[e+48>>2]=W;c[e+40>>2]=W;c[e+44>>2]=aV;yk(j);yk(m);l=Y;return l|0}function xB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=a;L4162:while(1){a=c[f>>2]|0;do{if((a|0)==1){g=c[f+4>>2]|0;h=g;i=g+4|0;g=xD(c[(c[h>>2]|0)+28>>2]|0,c[(c[i>>2]|0)+24>>2]|0,b,d,e)|0;if((g|0)!=0){j=g;k=3566;break L4162}g=xB(c[h>>2]|0,b,d,e)|0;if((g|0)==0){l=i}else{j=g;k=3565;break L4162}}else if((a|0)==2){g=c[f+4>>2]|0;i=g;if((c[g+8>>2]|0)!=-1){l=i;break}g=c[i>>2]|0;h=xD(c[g+28>>2]|0,c[g+24>>2]|0,b,d,e)|0;if((h|0)==0){l=i}else{j=h;k=3567;break L4162}}else if((a|0)==3){h=c[f+4>>2]|0;i=xB(c[h>>2]|0,b,d,e)|0;if((i|0)!=0){j=i;k=3568;break L4162}l=h+4|0}else{j=0;k=3569;break L4162}}while(0);f=c[l>>2]|0}if((k|0)==3569){return j|0}else if((k|0)==3565){return j|0}else if((k|0)==3567){return j|0}else if((k|0)==3568){return j|0}else if((k|0)==3566){return j|0}return 0}function xC(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=c[a+4>>2]|0;if((b|0)==0){return}a=b+4|0;d=b;e=c[d>>2]|0;if((c[a>>2]|0)==0){f=e}else{g=0;h=e;while(1){do{if((c[h+(g<<5)+8>>2]|0)==0){i=h}else{e=c[h+(g<<5)+16>>2]|0;if((e|0)==0){j=h}else{yk(e);j=c[d>>2]|0}e=c[j+(g<<5)+28>>2]|0;if((e|0)==0){i=j;break}yk(e);i=c[d>>2]|0}}while(0);e=g+1|0;if(e>>>0<(c[a>>2]|0)>>>0){g=e;h=i}else{f=i;break}}}if((f|0)!=0){yk(f)}f=b+8|0;i=c[f>>2]|0;if((i|0)!=0){if((c[i+8>>2]|0)==0){k=i}else{h=i;while(1){i=c[h+16>>2]|0;if((i|0)!=0){yk(i)}if((c[h+40>>2]|0)==0){break}else{h=h+32|0}}k=c[f>>2]|0}yk(k)}k=b+16|0;f=c[k>>2]|0;if((f|0)!=0){h=b+28|0;i=c[h>>2]|0;if((i|0)==0){l=f}else{g=0;a=f;f=i;while(1){i=c[a+(g*12|0)+8>>2]|0;if((i|0)==0){m=f;n=a}else{yk(i);m=c[h>>2]|0;n=c[k>>2]|0}i=g+1|0;if(i>>>0<m>>>0){g=i;a=n;f=m}else{l=n;break}}}yk(l)}l=c[b+32>>2]|0;if((l|0)!=0){yk(l)}l=c[b+20>>2]|0;if((l|0)!=0){yk(l)}l=c[b+36>>2]|0;if((l|0)!=0){yk(l)}yk(b);return}function xD(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;g=a|0;a=c[g>>2]|0;h=(a|0)>-1;if((d|0)==0){if(!h){i=0;return i|0}j=b|0;k=g;l=a;while(1){L4235:do{if((c[j>>2]|0)>-1){a=b;m=l;while(1){n=e+(m<<2)|0;c[n>>2]=(c[n>>2]|0)+1;n=a+32|0;if((c[n>>2]|0)<=-1){break L4235}a=n;m=c[k>>2]|0}}}while(0);m=k+32|0;a=c[m>>2]|0;if((a|0)>-1){k=m;l=a}else{i=0;break}}return i|0}if(h){o=g}else{i=0;return i|0}L4244:while(1){g=o+4|0;h=o+8|0;l=o+16|0;k=o+20|0;e=o+24|0;j=o+28|0;a=o+12|0;m=-1;n=b;L4246:while(1){p=n;while(1){q=p|0;r=c[q>>2]|0;if((r|0)<=-1){break L4246}s=p+32|0;if((r|0)==(m|0)){p=s}else{break}}t=d+(c[f+(c[o>>2]<<2)>>2]<<5)|0;while(1){u=t+8|0;if((c[u>>2]|0)==0){break}else{t=t+32|0}}c[t+40>>2]=0;c[t>>2]=c[g>>2];c[t+4>>2]=c[h>>2];c[u>>2]=d+(c[f+(c[q>>2]<<2)>>2]<<5);c[t+12>>2]=c[q>>2];v=c[p+16>>2]|c[l>>2]|((c[k>>2]|0)!=0?4:0)|((c[e>>2]|0)!=0?8:0);w=t+20|0;c[w>>2]=v;x=c[j>>2]|0;if((x|0)>-1){c[t+24>>2]=x;c[w>>2]=v|256}else{c[t+24>>2]=c[k>>2]}v=c[e>>2]|0;if((v|0)==0){c[t+28>>2]=0}else{w=0;while(1){y=w+1|0;if((c[v+(w<<2)>>2]|0)==0){break}else{w=y}}w=yj(y<<2)|0;v=w;x=t+28|0;c[x>>2]=v;if((w|0)==0){i=12;z=3652;break L4244}w=c[c[e>>2]>>2]|0;if((w|0)==0){A=v}else{B=0;C=w;w=v;while(1){c[w>>2]=C;v=B+1|0;D=c[(c[e>>2]|0)+(v<<2)>>2]|0;E=(c[x>>2]|0)+(v<<2)|0;if((D|0)==0){A=E;break}else{B=v;C=D;w=E}}}c[A>>2]=0}w=c[a>>2]|0;if((w|0)==0){F=0}else{C=0;while(1){if((c[w+(C<<2)>>2]|0)>-1){C=C+1|0}else{F=C;break}}}C=p+12|0;w=c[C>>2]|0;if((w|0)==0){G=0}else{B=0;while(1){if((c[w+(B<<2)>>2]|0)>-1){B=B+1|0}else{G=B;break}}}B=t+16|0;w=c[B>>2]|0;if((w|0)!=0){yk(w)}c[B>>2]=0;w=G+F|0;if((w|0)<=0){m=r;n=s;continue}p=yj((w<<2)+4|0)|0;w=p;c[B>>2]=w;if((p|0)==0){i=12;z=3654;break L4244}p=c[a>>2]|0;L4283:do{if((p|0)==0){H=0}else{x=c[p>>2]|0;if((x|0)>-1){I=0;J=x;K=w}else{H=0;break}while(1){c[K+(I<<2)>>2]=J;x=I+1|0;E=c[(c[a>>2]|0)+(x<<2)>>2]|0;if((E|0)<=-1){H=x;break L4283}I=x;J=E;K=c[B>>2]|0}}}while(0);w=c[C>>2]|0;do{if((w|0)==0){L=H}else{p=c[w>>2]|0;if((p|0)>-1){M=0;N=H;O=w;P=p}else{L=H;break}while(1){p=0;while(1){if((p|0)>=(H|0)){z=3640;break}if((c[(c[B>>2]|0)+(p<<2)>>2]|0)==(P|0)){Q=N;R=O;break}else{p=p+1|0}}if((z|0)==3640){z=0;c[(c[B>>2]|0)+(N<<2)>>2]=P;Q=N+1|0;R=c[C>>2]|0}p=M+1|0;t=c[R+(p<<2)>>2]|0;if((t|0)>-1){M=p;N=Q;O=R;P=t}else{L=Q;break}}}}while(0);c[(c[B>>2]|0)+(L<<2)>>2]=-1;m=r;n=s}n=o+32|0;if((c[n>>2]|0)>-1){o=n}else{i=0;z=3653;break}}if((z|0)==3652){return i|0}else if((z|0)==3653){return i|0}else if((z|0)==3654){return i|0}return 0}function xE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=(e|0)==0;if(g){h=0}else{i=0;while(1){if((c[e+(i<<2)>>2]|0)>-1){i=i+1|0}else{h=i;break}}}i=0;while(1){if((c[b+(i<<5)>>2]|0)>-1){i=i+1|0}else{j=0;break}}while(1){if((c[d+(j<<5)>>2]|0)>-1){j=j+1|0}else{break}}k=xP(a,0,0,1,(j+i<<5)+32|0)|0;i=k;if((k|0)==0){l=0;return l|0}k=c[b>>2]|0;L4318:do{if((k|0)>-1){j=(h|0)>0;m=0;n=k;while(1){c[i+(m<<5)>>2]=n;c[i+(m<<5)+4>>2]=c[b+(m<<5)+4>>2];c[i+(m<<5)+8>>2]=c[b+(m<<5)+8>>2];c[i+(m<<5)+16>>2]=c[b+(m<<5)+16>>2]|f;c[i+(m<<5)+20>>2]=c[b+(m<<5)+20>>2];c[i+(m<<5)+24>>2]=c[b+(m<<5)+24>>2];c[i+(m<<5)+28>>2]=c[b+(m<<5)+28>>2];o=b+(m<<5)+12|0;p=c[o>>2]|0;q=(p|0)==0;if(q&g){c[i+(m<<5)+12>>2]=0}else{L4324:do{if(q){r=0}else{s=0;while(1){if((c[p+(s<<2)>>2]|0)<=-1){r=s;break L4324}s=s+1|0}}}while(0);p=xP(a,0,0,0,(r+h<<2)+4|0)|0;q=p;if((p|0)==0){l=0;break}if((r|0)>0){p=0;while(1){c[q+(p<<2)>>2]=c[(c[o>>2]|0)+(p<<2)>>2];s=p+1|0;if((s|0)<(r|0)){p=s}else{t=r;break}}}else{t=0}if(j){p=0;while(1){c[q+(p+t<<2)>>2]=c[e+(p<<2)>>2];o=p+1|0;if((o|0)<(h|0)){p=o}else{u=h;break}}}else{u=0}c[q+(u+t<<2)>>2]=-1;c[i+(m<<5)+12>>2]=q}p=m+1|0;o=c[b+(p<<5)>>2]|0;if((o|0)>-1){m=p;n=o}else{v=p;break L4318}}return l|0}else{v=0}}while(0);b=c[d>>2]|0;t=i+(v<<5)|0;L4342:do{if((b|0)>-1){u=0;h=b;e=v;r=t;while(1){c[r>>2]=h;c[i+(e<<5)+4>>2]=c[d+(u<<5)+4>>2];c[i+(e<<5)+8>>2]=c[d+(u<<5)+8>>2];c[i+(e<<5)+16>>2]=c[d+(u<<5)+16>>2];c[i+(e<<5)+20>>2]=c[d+(u<<5)+20>>2];c[i+(e<<5)+24>>2]=c[d+(u<<5)+24>>2];c[i+(e<<5)+28>>2]=c[d+(u<<5)+28>>2];g=d+(u<<5)+12|0;f=c[g>>2]|0;if((f|0)==0){c[i+(e<<5)+12>>2]=0}else{k=0;while(1){if((c[f+(k<<2)>>2]|0)>-1){k=k+1|0}else{break}}f=xP(a,0,0,0,(k<<2)+4|0)|0;q=f;if((f|0)==0){l=0;break}if((k|0)>0){f=0;while(1){c[q+(f<<2)>>2]=c[(c[g>>2]|0)+(f<<2)>>2];n=f+1|0;if((n|0)<(k|0)){f=n}else{w=k;break}}}else{w=0}c[q+(w<<2)>>2]=-1;c[i+(e<<5)+12>>2]=q}k=u+1|0;f=c[d+(k<<5)>>2]|0;g=k+v|0;n=i+(g<<5)|0;if((f|0)>-1){u=k;h=f;e=g;r=n}else{x=n;break L4342}}return l|0}else{x=t}}while(0);c[x>>2]=-1;l=i;return l|0}function xF(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=a+12|0;h=c[g>>2]|0;i=(f|0)!=0;if(i){c[f>>2]=0}j=xG(a,b)|0;if((j|0)!=0){k=j;return k|0}j=a+16|0;b=(d|0)==0;l=(e|0)==0;L4366:while(1){m=c[g>>2]|0;if((m|0)<=(h|0)){k=0;n=3718;break}o=m-1|0;c[g>>2]=o;m=c[(c[j>>2]|0)+(o<<2)>>2]|0;o=c[m>>2]|0;do{if((o|0)==3){p=c[m+4>>2]|0;q=c[p>>2]|0;if((c[q+8>>2]|0)!=0){r=xG(a,q)|0;break}q=c[p+4>>2]|0;if((c[q+8>>2]|0)==0){continue L4366}r=xG(a,q)|0}else if((o|0)==0){q=c[m+4>>2]|0;p=c[q>>2]|0;if((p|0)==(-2|0)){if(l){continue L4366}c[e>>2]=c[e>>2]|c[q+4>>2];continue L4366}else if((p|0)!=(-3|0)){continue L4366}p=c[q+4>>2]|0;if((p|0)<=-1){continue L4366}do{if(!b){q=0;while(1){s=d+(q<<2)|0;t=c[s>>2]|0;if((t|0)<=-1){n=3703;break}u=q+1|0;if((t|0)==(p|0)){n=3702;break}else{q=u}}if((n|0)==3703){n=0;v=q+1|0}else if((n|0)==3702){n=0;if((p|0)<0){v=u}else{break}}c[s>>2]=p;c[d+(v<<2)>>2]=-1}}while(0);if(!i){continue L4366}c[f>>2]=(c[f>>2]|0)+1;continue L4366}else if((o|0)==1){p=c[m+4>>2]|0;t=xG(a,c[p>>2]|0)|0;if((t|0)!=0){k=t;n=3721;break L4366}r=xG(a,c[p+4>>2]|0)|0}else if((o|0)==2){p=c[c[m+4>>2]>>2]|0;if((c[p+8>>2]|0)==0){continue L4366}r=xG(a,p)|0}else{continue L4366}}while(0);if((r|0)!=0){k=r;n=3719;break}}if((n|0)==3719){return k|0}else if((n|0)==3721){return k|0}else if((n|0)==3718){return k|0}return 0}function xG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a+12|0;e=c[d>>2]|0;f=a|0;g=c[f>>2]|0;if((e|0)<(g|0)){c[(c[a+16>>2]|0)+(e<<2)>>2]=b;c[d>>2]=(c[d>>2]|0)+1;h=0;return h|0}d=c[a+4>>2]|0;if((g|0)>=(d|0)){h=12;return h|0}e=(c[a+8>>2]|0)+g|0;g=(e|0)>(d|0)?d:e;e=a+16|0;d=ym(c[e>>2]|0,g<<2)|0;if((d|0)==0){h=12;return h|0}else{c[f>>2]=g;c[e>>2]=d;xG(a,b)|0;return 0}return 0}function xH(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;j=b+12|0;k=c[j>>2]|0;xG(b,d)|0;d=xG(b,0)|0;L4412:do{if((d|0)==0){l=b+16|0;m=(e&1|0)==0;n=(e&2|0)==0;o=h;p=1;q=0;L4414:while(1){r=c[j>>2]|0;if((r|0)<=(k|0)){s=q;t=0;break L4412}u=r-1|0;c[j>>2]=u;v=c[l>>2]|0;w=c[v+(u<<2)>>2]|0;if((w|0)==1){u=r-2|0;c[j>>2]=u;o=c[v+(u<<2)>>2]|0;p=p;q=q;continue}else if((w|0)!=0){o=o;p=p;q=q;continue}w=r-2|0;c[j>>2]=w;r=c[v+(w<<2)>>2]|0;w=c[r>>2]|0;do{if((w|0)==0){v=c[r+4>>2]|0;u=c[v+8>>2]|0;x=c[v>>2]|0;y=c[v+4>>2]|0;do{if((x|0)>-1|(x|0)==-4){z=q+1|0;A=p;B=y;C=x;D=(c[f>>2]|0)+u|0}else{if((x|0)!=-3){z=q;A=p;B=y;C=x;D=u;break}if(!m){z=q;A=p;B=-1;C=-1;D=-1;break}if(n|(p|0)==0){z=q;A=p;B=y;C=-3;D=u;break}c[g+(y<<2)>>2]=1;z=q;A=0;B=y;C=-3;D=u}}while(0);u=xP(a,0,0,1,32)|0;y=u;do{if((u|0)==0){E=0}else{x=xP(a,0,0,1,20)|0;c[u+4>>2]=x;if((x|0)==0){E=0;break}c[u>>2]=0;c[u+8>>2]=-1;c[u+12>>2]=-1;c[x>>2]=C;c[x+4>>2]=B;c[x+8>>2]=D;E=y}}while(0);c[o>>2]=E;y=(E|0)==0?12:0;if((D|0)<=(c[i>>2]|0)){F=y;G=z;H=A;I=o;break}c[i>>2]=D;F=y;G=z;H=A;I=o}else if((w|0)==1){y=c[r+4>>2]|0;u=y;x=c[u>>2]|0;v=y+4|0;y=c[v>>2]|0;J=xP(a,0,0,1,32)|0;if((J|0)==0){K=3759;break L4414}L=xP(a,0,0,1,8)|0;M=J+4|0;c[M>>2]=L;if((L|0)==0){K=3759;break L4414}c[J>>2]=1;c[J+8>>2]=-1;c[J+12>>2]=-1;c[L>>2]=x;c[(c[M>>2]|0)+4>>2]=y;c[J+16>>2]=(c[y+16>>2]|0)+(c[x+16>>2]|0);c[o>>2]=J;J=c[M>>2]|0;M=J;c[M>>2]=0;x=J+4|0;c[x>>2]=0;J=xG(b,c[v>>2]|0)|0;if((J|0)!=0){s=q;t=J;break L4412}J=xG(b,0)|0;if((J|0)!=0){s=q;t=J;break L4412}J=xG(b,x)|0;if((J|0)!=0){s=q;t=J;break L4412}J=xG(b,1)|0;if((J|0)!=0){s=q;t=J;break L4412}J=xG(b,c[u>>2]|0)|0;if((J|0)!=0){s=q;t=J;break L4412}F=xG(b,0)|0;G=q;H=p;I=M}else if((w|0)==3){M=c[r+4>>2]|0;J=M;u=c[J>>2]|0;x=M+4|0;M=c[x>>2]|0;v=xP(a,0,0,1,32)|0;if((v|0)==0){K=3750;break L4414}y=xP(a,0,0,1,8)|0;L=v+4|0;c[L>>2]=y;if((y|0)==0){K=3750;break L4414}c[v>>2]=3;c[v+8>>2]=-1;c[v+12>>2]=-1;c[y>>2]=u;c[(c[L>>2]|0)+4>>2]=M;c[v+16>>2]=(c[M+16>>2]|0)+(c[u+16>>2]|0);c[o>>2]=v;v=c[L>>2]|0;L=xG(b,c[x>>2]|0)|0;if((L|0)!=0){s=q;t=L;break L4412}L=xG(b,0)|0;if((L|0)!=0){s=q;t=L;break L4412}L=xG(b,v+4|0)|0;if((L|0)!=0){s=q;t=L;break L4412}L=xG(b,1)|0;if((L|0)!=0){s=q;t=L;break L4412}L=xG(b,c[J>>2]|0)|0;if((L|0)!=0){s=q;t=L;break L4412}F=xG(b,0)|0;G=q;H=p;I=v}else if((w|0)==2){v=c[r+4>>2]|0;L=v;J=xG(b,c[L>>2]|0)|0;if((J|0)!=0){s=q;t=J;break L4412}J=xG(b,0)|0;if((J|0)!=0){s=q;t=J;break L4412}J=c[L>>2]|0;L=c[v+4>>2]|0;x=c[v+8>>2]|0;u=c[v+12>>2]&1;v=xP(a,0,0,1,32)|0;if((v|0)==0){K=3770;break L4414}M=xP(a,0,0,1,16)|0;y=v+4|0;c[y>>2]=M;if((M|0)==0){K=3770;break L4414}c[v>>2]=2;c[v+8>>2]=-1;c[v+12>>2]=-1;c[M>>2]=J;c[M+4>>2]=L;c[M+8>>2]=x;x=M+12|0;c[x>>2]=c[x>>2]&-2|u;c[v+16>>2]=c[J+16>>2];c[o>>2]=v;o=c[y>>2]|0;p=p;q=q;continue L4414}else{o=o;p=p;q=q;continue L4414}}while(0);if((F|0)==0){o=I;p=H;q=G}else{s=G;t=F;break L4412}}if((K|0)==3759){c[o>>2]=0;s=q;t=12;break}else if((K|0)==3750){c[o>>2]=0;s=q;t=12;break}else if((K|0)==3770){c[o>>2]=0;s=q;t=12;break}}else{s=0;t=d}}while(0);c[f>>2]=(c[f>>2]|0)+s;return t|0}function xI(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=xP(a,0,0,0,8)|0;if((e|0)==0){f=12;return f|0}g=xP(a,0,0,1,32)|0;h=g;do{if((g|0)!=0){i=xP(a,0,0,1,20)|0;c[g+4>>2]=i;if((i|0)==0){break}c[g>>2]=0;c[g+8>>2]=-1;c[g+12>>2]=-1;c[i>>2]=-3;c[i+4>>2]=d;c[i+8>>2]=-1;c[e>>2]=h;i=xP(a,0,0,0,32)|0;j=e+4|0;c[j>>2]=i;if((i|0)==0){f=12;return f|0}k=b+4|0;c[i+4>>2]=c[k>>2];i=b|0;c[c[j>>2]>>2]=c[i>>2];c[(c[j>>2]|0)+8>>2]=-1;c[(c[j>>2]|0)+12>>2]=-1;c[(c[j>>2]|0)+24>>2]=0;c[(c[j>>2]|0)+28>>2]=0;c[(c[j>>2]|0)+20>>2]=0;c[k>>2]=e;c[i>>2]=1;f=0;return f|0}}while(0);c[e>>2]=0;f=12;return f|0}function xJ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=xP(a,0,0,0,8)|0;if((e|0)==0){f=12;return f|0}g=xP(a,0,0,1,32)|0;h=g;do{if((g|0)!=0){i=xP(a,0,0,1,20)|0;c[g+4>>2]=i;if((i|0)==0){break}c[g>>2]=0;c[g+8>>2]=-1;c[g+12>>2]=-1;c[i>>2]=-3;c[i+4>>2]=d;c[i+8>>2]=-1;c[e+4>>2]=h;i=xP(a,0,0,0,32)|0;j=e;c[j>>2]=i;if((i|0)==0){f=12;return f|0}k=b+4|0;c[i+4>>2]=c[k>>2];i=b|0;c[c[j>>2]>>2]=c[i>>2];c[(c[j>>2]|0)+8>>2]=-1;c[(c[j>>2]|0)+12>>2]=-1;c[(c[j>>2]|0)+24>>2]=0;c[(c[j>>2]|0)+28>>2]=0;c[(c[j>>2]|0)+20>>2]=0;c[k>>2]=e;c[i>>2]=1;f=0;return f|0}}while(0);c[e+4>>2]=0;f=12;return f|0}function xK(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[c[(c[a>>2]|0)+4>>2]>>2]|0;a=c[c[(c[b>>2]|0)+4>>2]>>2]|0;if((d|0)<(a|0)){e=-1;return e|0}e=(d|0)>(a|0)|0;return e|0}function xL(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cu=0,cv=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=c[a+4>>2]|0;a=k;l=k+40|0;m=c[l>>2]|0;do{if((m|0)<1|(d|0)==0){n=0}else{o=yj(m<<2)|0;if((o|0)==0){p=12}else{n=o;break}i=g;return p|0}}while(0);m=n;L4497:do{if((c[k+60>>2]|0)==0){c[h>>2]=0;o=f&1;q=f&2;r=k+56|0;s=c[r>>2]&4;if((n|0)==0){t=0}else{t=c[l>>2]|0}u=t<<2;v=c[k+52>>2]|0;w=v<<3;x=w+8|0;y=u+12+w+(x+(ai(u,v)|0)<<1)|0;z=yj(y)|0;if((z|0)==0){A=12;break}yC(z|0,0,y|0);y=z;B=z+u&3;C=((B|0)==0?0:4-B|0)+u|0;B=z+C|0;D=C+x|0;C=z+D&3;E=((C|0)==0?0:4-C|0)+D|0;D=z+E|0;C=E+x|0;x=z+C&3;E=((x|0)==0?0:4-x|0)+C|0;C=z+E|0;x=E+w|0;w=z+x&3;if((v|0)>0){E=t<<3;F=0;G=z+(((w|0)==0?0:4-w|0)+x)|0;while(1){c[D+(F<<3)+4>>2]=G;c[B+(F<<3)+4>>2]=G+u;x=F+1|0;if((x|0)<(v|0)){F=x;G=G+E|0}else{H=0;break}}do{c[C+(H<<3)>>2]=-1;H=H+1|0;}while((H|0)<(v|0))}v=xu(h,b,4)|0;if((v|0)<1){if((v|0)<0){A=1;break}I=v+1|0}else{I=v}v=k+8|0;E=(s|0)==0;G=(o|0)==0;F=(t|0)>0;u=k+12|0;x=k+44|0;w=k+32|0;J=k+36|0;K=(t|0)==0;L=F^1;M=0;N=b+I|0;O=0;P=I;Q=D;R=y;S=0;T=-1;U=B;V=B;while(1){if((T|0)<0){W=c[v>>2]|0;X=W+8|0;L4811:do{if((c[X>>2]|0)==0){Y=V;Z=T;_=S}else{$=(O|0)==0;aa=(M|0)==95;ab=(O|0)<1&G;ac=((M|0)!=10|E)^1;ad=V;ae=T;af=S;ag=W;ah=X;while(1){aj=ag;ak=ah;L4815:while(1){al=aj+12|0;if((c[C+(c[al>>2]<<3)>>2]|0)>=(O|0)){am=af;an=ae;ao=ad;break}ap=aj+20|0;aq=c[ap>>2]|0;if((aq|0)==0){ar=4061;break}L4819:do{if((aq&1|0)==0|ab|ac){if((aq&2|0)!=0){as=c[h>>2]|0;if((as|q|0)!=0&((as|0)!=10|E)){break}}do{if((aq&16|0)!=0){if(aa){break L4819}if((w9(M)|0)!=0){break L4819}as=c[h>>2]|0;if((as|0)==95){break}if((w9(as)|0)==0){break L4819}}}while(0);as=c[ap>>2]|0;if((as&32|0)==0){at=as}else{if(!aa){if((w9(M)|0)==0){break}}as=c[h>>2]|0;if((as|0)==95){break}if((w9(as)|0)!=0){break}at=c[ap>>2]|0}do{if((at&64|0)==0|$){au=at}else{as=c[h>>2]|0;if((as|0)==0){au=at;break}if(aa){av=1;aw=as}else{as=(w9(M)|0)!=0|0;av=as;aw=c[h>>2]|0}if((aw|0)==95){ax=1}else{ax=(w9(aw)|0)!=0|0}if((av|0)==(ax|0)){break L4819}au=c[ap>>2]|0}}while(0);if((au&128|0)==0){ar=4061;break L4815}if($){break}as=c[h>>2]|0;if((as|0)==0){break}if(aa){ay=1;az=as}else{as=(w9(M)|0)!=0|0;ay=as;az=c[h>>2]|0}if((az|0)==95){aA=1}else{aA=(w9(az)|0)!=0|0}if((ay|0)==(aA|0)){ar=4061;break L4815}}}while(0);ap=aj+40|0;if((c[ap>>2]|0)==0){Y=ad;Z=ae;_=af;break L4811}else{aj=aj+32|0;ak=ap}}if((ar|0)==4061){ar=0;ap=ad|0;c[ap>>2]=c[ak>>2];if(F){aq=ad+4|0;as=0;do{c[(c[aq>>2]|0)+(as<<2)>>2]=-1;as=as+1|0;}while((as|0)<(t|0))}as=c[aj+16>>2]|0;do{if((as|0)!=0){aq=c[as>>2]|0;if((aq|0)<=-1){break}ak=ad+4|0;aB=as;aC=aq;do{if((aC|0)<(t|0)){c[(c[ak>>2]|0)+(aC<<2)>>2]=O}aB=aB+4|0;aC=c[aB>>2]|0;}while((aC|0)>-1)}}while(0);as=(c[ap>>2]|0)!=(c[u>>2]|0);if(as|L){aD=as?af:1;aE=as?ae:O;aF=ad+4|0}else{as=ad+4|0;aC=0;while(1){c[n+(aC<<2)>>2]=c[(c[as>>2]|0)+(aC<<2)>>2];aB=aC+1|0;if((aB|0)<(t|0)){aC=aB}else{aD=1;aE=O;aF=as;break}}}c[C+(c[al>>2]<<3)>>2]=O;c[C+(c[al>>2]<<3)+4>>2]=aF;am=aD;an=aE;ao=ad+8|0}as=aj+40|0;if((c[as>>2]|0)==0){Y=ao;Z=an;_=am;break}else{ad=ao;ae=an;af=am;ag=aj+32|0;ah=as}}}}while(0);c[Y>>2]=0;aG=_;aH=Z}else{if(K|(V|0)==(U|0)){aI=T;break}else{aG=S;aH=T}}X=c[h>>2]|0;if((X|0)==0){aI=aH;break}W=O+P|0;ah=xu(h,N,4)|0;if((ah|0)<1){if((ah|0)<0){A=1;break L4497}aJ=ah+1|0}else{aJ=ah}ah=N+aJ|0;if((c[x>>2]|0)==0|(aG|0)==0){aK=U;aL=aG;aM=Q}else{ag=U|0;af=c[ag>>2]|0;if((af|0)==0){aN=Q}else{ae=Q;ad=ag;ag=af;while(1){af=c[J>>2]|0;aa=c[af>>2]|0;$=ad+4|0;L4894:do{if((aa|0)>-1){ac=0;ab=aa;while(1){as=c[af+((ac|1)<<2)>>2]|0;if((ab|0)>=(t|0)){aO=ae;break L4894}aC=c[$>>2]|0;if((c[aC+(as<<2)>>2]|0)==(c[n+(as<<2)>>2]|0)){if((c[aC+(ab<<2)>>2]|0)<(c[n+(ab<<2)>>2]|0)){aO=ae;break L4894}}aC=ac+2|0;as=c[af+(aC<<2)>>2]|0;if((as|0)>-1){ac=aC;ab=as}else{ar=4089;break}}}else{ar=4089}}while(0);if((ar|0)==4089){ar=0;c[ae>>2]=ag;af=ae+4|0;aa=c[af>>2]|0;c[af>>2]=c[$>>2];c[$>>2]=aa;aO=ae+8|0}aa=ad+8|0;af=c[aa>>2]|0;if((af|0)==0){aN=aO;break}else{ae=aO;ad=aa;ag=af}}}c[aN>>2]=0;aK=Q;aL=0;aM=U}ag=c[aK>>2]|0;if((ag|0)==0){aP=aM;aQ=aH;aR=aL;aS=R}else{ad=(W|0)==0;ae=(X|0)==95;af=(W|0)<1&G;aa=((X|0)!=10|E)^1;ab=aK;ac=aM;aj=aH;as=aL;aC=R;ap=ag;while(1){ag=ap+8|0;if((c[ag>>2]|0)==0){aT=ac;aU=aj;aV=as;aW=aC}else{aB=ab+4|0;ak=ac;aq=aj;aX=as;aY=aC;aZ=ap;a_=ag;while(1){L4914:do{if((c[aZ>>2]|0)>>>0>X>>>0){a$=aY;a0=aX;a1=aq;a2=ak}else{if((c[aZ+4>>2]|0)>>>0<X>>>0){a$=aY;a0=aX;a1=aq;a2=ak;break}ag=aZ+20|0;a3=c[ag>>2]|0;L4917:do{if((a3|0)!=0){if(!((a3&1|0)==0|af|aa)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}if((a3&2|0)!=0){a4=c[h>>2]|0;if((a4|q|0)!=0&((a4|0)!=10|E)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}do{if((a3&16|0)!=0){if(ae){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}if((w9(X)|0)!=0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}a4=c[h>>2]|0;if((a4|0)==95){break}if((w9(a4)|0)==0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}}while(0);a4=c[ag>>2]|0;if((a4&32|0)==0){a5=a4}else{if(!ae){if((w9(X)|0)==0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}a4=c[h>>2]|0;if((a4|0)==95){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}if((w9(a4)|0)!=0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}a5=c[ag>>2]|0}do{if((a5&64|0)==0|ad){a6=a5}else{a4=c[h>>2]|0;if((a4|0)==0){a6=a5;break}if(ae){a7=1;a8=a4}else{a4=(w9(X)|0)!=0|0;a7=a4;a8=c[h>>2]|0}if((a8|0)==95){a9=1}else{a9=(w9(a8)|0)!=0|0}if((a7|0)==(a9|0)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}a6=c[ag>>2]|0}}while(0);if((a6&128|0)==0){ba=a6}else{if(ad){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}a4=c[h>>2]|0;if((a4|0)==0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}if(ae){bb=1;bc=a4}else{a4=(w9(X)|0)!=0|0;bb=a4;bc=c[h>>2]|0}if((bc|0)==95){bd=1}else{bd=(w9(bc)|0)!=0|0}if((bb|0)!=(bd|0)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}ba=c[ag>>2]|0}do{if((ba&4|0)==0){be=ba}else{if((c[r>>2]&2|0)!=0){be=ba;break}if((xd(X,c[aZ+24>>2]|0)|0)==0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}be=c[ag>>2]|0}}while(0);do{if((be&4|0)!=0){if((c[r>>2]&2|0)==0){break}a4=xp(X)|0;bf=aZ+24|0;if((xd(a4,c[bf>>2]|0)|0)!=0){break}a4=xn(X)|0;if((xd(a4,c[bf>>2]|0)|0)==0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}}while(0);if((c[ag>>2]&8|0)==0){break}bf=c[aZ+28>>2]|0;a4=c[bf>>2]|0;if((a4|0)==0){break}if((c[r>>2]&2|0)==0){bg=bf;bh=a4;while(1){if((xd(X,bh)|0)!=0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}bg=bg+4|0;bh=c[bg>>2]|0;if((bh|0)==0){break L4917}}}else{bi=bf}do{bh=xn(X)|0;if((xd(bh,c[bi>>2]|0)|0)!=0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}bh=xp(X)|0;if((xd(bh,c[bi>>2]|0)|0)!=0){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}bi=bi+4|0;}while((c[bi>>2]|0)!=0)}}while(0);if(F){ag=0;do{c[aY+(ag<<2)>>2]=c[(c[aB>>2]|0)+(ag<<2)>>2];ag=ag+1|0;}while((ag|0)<(t|0))}ag=c[aZ+16>>2]|0;do{if((ag|0)!=0){a3=c[ag>>2]|0;if((a3|0)>-1){bj=ag;bk=a3}else{break}do{if((bk|0)<(t|0)){c[aY+(bk<<2)>>2]=W}bj=bj+4|0;bk=c[bj>>2]|0;}while((bk|0)>-1)}}while(0);ag=aZ+12|0;a3=c[ag>>2]|0;if((c[C+(a3<<3)>>2]|0)<(W|0)){bf=ak|0;c[bf>>2]=c[a_>>2];bh=ak+4|0;bg=c[bh>>2]|0;c[bh>>2]=aY;c[C+(c[ag>>2]<<3)>>2]=W;c[C+(c[ag>>2]<<3)+4>>2]=bh;do{if((c[bf>>2]|0)==(c[u>>2]|0)){if((aq|0)==-1){if(F){bl=0}else{bm=1;bn=W;break}}else{if(!F){bm=aX;bn=aq;break}if((c[c[bh>>2]>>2]|0)>(c[n>>2]|0)){bm=aX;bn=aq;break}else{bl=0}}while(1){c[n+(bl<<2)>>2]=c[(c[bh>>2]|0)+(bl<<2)>>2];ag=bl+1|0;if((ag|0)<(t|0)){bl=ag}else{bm=1;bn=W;break}}}else{bm=aX;bn=aq}}while(0);a$=bg;a0=bm;a1=bn;a2=ak+8|0;break}bh=c[w>>2]|0;bf=c[C+(a3<<3)+4>>2]|0;ag=c[bf>>2]|0;if(F){bo=0}else{a$=aY;a0=aX;a1=aq;a2=ak;break}while(1){a4=c[aY+(bo<<2)>>2]|0;bp=c[ag+(bo<<2)>>2]|0;if((c[bh+(bo<<2)>>2]|0)==0){if((a4|0)<(bp|0)){break}if((a4|0)>(bp|0)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}else{if((a4|0)>(bp|0)){break}if((a4|0)<(bp|0)){a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}bp=bo+1|0;if((bp|0)<(t|0)){bo=bp}else{a$=aY;a0=aX;a1=aq;a2=ak;break L4914}}c[bf>>2]=aY;if((c[a_>>2]|0)==(c[u>>2]|0)){bq=0}else{a$=ag;a0=aX;a1=aq;a2=ak;break}while(1){c[n+(bq<<2)>>2]=c[aY+(bq<<2)>>2];bh=bq+1|0;if((bh|0)<(t|0)){bq=bh}else{a$=ag;a0=1;a1=W;a2=ak;break}}}}while(0);ag=aZ+40|0;if((c[ag>>2]|0)==0){aT=a2;aU=a1;aV=a0;aW=a$;break}else{ak=a2;aq=a1;aX=a0;aY=a$;aZ=aZ+32|0;a_=ag}}}a_=ab+8|0;aZ=c[a_>>2]|0;if((aZ|0)==0){aP=aT;aQ=aU;aR=aV;aS=aW;break}else{ab=a_;ac=aT;aj=aU;as=aV;aC=aW;ap=aZ}}}c[aP>>2]=0;M=X;N=ah;O=W;P=aJ;Q=aK;R=aS;S=aR;T=aQ;U=aM;V=aP}yk(z);br=aI>>>31;bs=aI;ar=4174}else{c[j>>2]=0;V=f&1;U=f&2;T=k+56|0;S=c[T>>2]&4;R=xN(0,0)|0;if((R|0)==0){A=12;break}Q=xP(R,0,0,0,32)|0;P=Q;if((Q|0)==0){xO(R);A=12;break}c[Q+24>>2]=0;c[Q+28>>2]=0;Q=c[l>>2]|0;if((Q|0)==0){bt=0;ar=3809}else{O=yj(Q<<2)|0;N=O;if((O|0)==0){bu=12;bv=0;bw=0;bx=N;by=0}else{bt=N;ar=3809}}do{if((ar|0)==3809){N=bt;O=c[k+28>>2]|0;if((O|0)==0){bz=0}else{M=yj(O<<3)|0;O=M;if((M|0)==0){bu=12;bv=O;bw=0;bx=bt;by=0;break}else{bz=O}}O=k+52|0;M=c[O>>2]|0;if((M|0)==0){bA=0}else{u=yj(M<<2)|0;M=u;if((u|0)==0){bu=12;bv=bz;bw=M;bx=bt;by=0;break}else{bA=M}}M=bA;u=(n|0)==0;F=k+8|0;C=k+12|0;w=k+32|0;r=(S|0)==0;E=(V|0)==0;q=b;G=1;J=-1;x=-1;K=P;L=Q;L4513:while(1){do{if((L|0)>0){if(u){yC(N|0,-1|0,L<<2|0);break}else{v=0;do{c[bt+(v<<2)>>2]=-1;c[n+(v<<2)>>2]=-1;v=v+1|0;}while((v|0)<(c[l>>2]|0))}}}while(0);v=c[O>>2]|0;if((v|0)>0){yC(M|0,0,v<<2|0)}v=c[j>>2]|0;B=G+J|0;y=xu(j,q,4)|0;if((y|0)<1){if((y|0)<0){A=1;break L4497}bB=y+1|0}else{bB=y}y=q+bB|0;D=c[j>>2]|0;o=c[F>>2]|0;s=o+8|0;if((c[s>>2]|0)==0){bC=bB;bD=x;bE=K;bF=0;ar=3996}else{ap=(B|0)==0;aC=(v|0)==95;as=(B|0)<1&E;aj=((v|0)!=10|r)^1;ac=0;ab=0;ae=K;ad=o;o=s;while(1){s=ad+20|0;aa=c[s>>2]|0;L4533:do{if((aa|0)==0){ar=3856}else{if(!((aa&1|0)==0|as|aj)){bG=ae;bH=ab;bJ=ac;break}if((aa&2|0)!=0){af=c[j>>2]|0;if((af|U|0)!=0&((af|0)!=10|r)){bG=ae;bH=ab;bJ=ac;break}}do{if((aa&16|0)!=0){if(aC){bG=ae;bH=ab;bJ=ac;break L4533}if((w9(v)|0)!=0){bG=ae;bH=ab;bJ=ac;break L4533}af=c[j>>2]|0;if((af|0)==95){break}if((w9(af)|0)==0){bG=ae;bH=ab;bJ=ac;break L4533}}}while(0);af=c[s>>2]|0;if((af&32|0)==0){bK=af}else{if(!aC){if((w9(v)|0)==0){bG=ae;bH=ab;bJ=ac;break}}af=c[j>>2]|0;if((af|0)==95){bG=ae;bH=ab;bJ=ac;break}if((w9(af)|0)!=0){bG=ae;bH=ab;bJ=ac;break}bK=c[s>>2]|0}do{if((bK&64|0)==0|ap){bL=bK}else{af=c[j>>2]|0;if((af|0)==0){bL=bK;break}if(aC){bM=1;bN=af}else{af=(w9(v)|0)!=0|0;bM=af;bN=c[j>>2]|0}if((bN|0)==95){bO=1}else{bO=(w9(bN)|0)!=0|0}if((bM|0)==(bO|0)){bG=ae;bH=ab;bJ=ac;break L4533}bL=c[s>>2]|0}}while(0);if((bL&128|0)==0){ar=3856;break}if(ap){bG=ae;bH=ab;bJ=ac;break}af=c[j>>2]|0;if((af|0)==0){bG=ae;bH=ab;bJ=ac;break}if(aC){bP=1;bQ=af}else{af=(w9(v)|0)!=0|0;bP=af;bQ=c[j>>2]|0}if((bQ|0)==95){bR=1}else{bR=(w9(bQ)|0)!=0|0}if((bP|0)==(bR|0)){ar=3856}else{bG=ae;bH=ab;bJ=ac}}}while(0);do{if((ar|0)==3856){ar=0;if((ac|0)==0){bG=ae;bH=c[ad+16>>2]|0;bJ=c[o>>2]|0;break}s=ae+28|0;aa=c[s>>2]|0;if((aa|0)==0){af=xP(R,0,0,0,32)|0;aZ=af;if((af|0)==0){ar=3860;break L4513}c[af+24>>2]=ae;c[af+28>>2]=0;a_=xP(R,0,0,0,c[l>>2]<<2)|0;c[af+20>>2]=a_;if((a_|0)==0){ar=3867;break L4513}c[s>>2]=aZ;bS=aZ}else{bS=aa}c[bS>>2]=B;c[bS+4>>2]=y;c[bS+8>>2]=c[o>>2];c[bS+12>>2]=c[ad+12>>2];c[bS+16>>2]=c[j>>2];if((c[l>>2]|0)>0){aa=bS+20|0;aZ=0;do{c[(c[aa>>2]|0)+(aZ<<2)>>2]=c[bt+(aZ<<2)>>2];aZ=aZ+1|0;}while((aZ|0)<(c[l>>2]|0))}aZ=c[ad+16>>2]|0;if((aZ|0)==0){bG=bS;bH=ab;bJ=ac;break}aa=c[aZ>>2]|0;if((aa|0)<=-1){bG=bS;bH=ab;bJ=ac;break}s=bS+20|0;a_=aZ;aZ=aa;while(1){aa=a_+4|0;c[(c[s>>2]|0)+(aZ<<2)>>2]=B;af=c[aa>>2]|0;if((af|0)>-1){a_=aa;aZ=af}else{bG=bS;bH=ab;bJ=ac;break}}}}while(0);aZ=ad+40|0;if((c[aZ>>2]|0)==0){break}else{ac=bJ;ab=bH;ae=bG;ad=ad+32|0;o=aZ}}do{if((bH|0)==0){bT=0}else{o=c[bH>>2]|0;if((o|0)>-1){bU=bH;bV=o}else{bT=bH;break}while(1){c[bt+(bV<<2)>>2]=B;o=bU+4|0;ad=c[o>>2]|0;if((ad|0)>-1){bU=o;bV=ad}else{bT=o;break}}}}while(0);if((bJ|0)==0){bC=bB;bD=x;bE=bG;bF=bT;ar=3996}else{bW=y;bX=B;bY=bB;bZ=x;b_=bG;b$=bT;b0=bJ}}L4599:while(1){if((ar|0)==3996){ar=0;o=bE+24|0;if((c[o>>2]|0)==0){break}ad=bE+8|0;ae=c[ad>>2]|0;if((c[ae+20>>2]&256|0)==0){b1=ae}else{c[bA+(c[bE+12>>2]<<2)>>2]=0;b1=c[ad>>2]|0}ad=c[bE>>2]|0;ae=c[bE+4>>2]|0;c[j>>2]=c[bE+16>>2];ab=c[l>>2]|0;if((ab|0)>0){ac=bE+20|0;v=0;do{c[bt+(v<<2)>>2]=c[(c[ac>>2]|0)+(v<<2)>>2];v=v+1|0;}while((v|0)<(ab|0))}bW=ae;bX=ad;bY=bC;bZ=bD;b_=c[o>>2]|0;b$=bF;b0=b1}if((b0|0)==(c[C>>2]|0)){b2=b$;b3=b_;b4=bY;b5=bX}else{ab=b0;v=b$;ac=b_;aC=bY;ap=bX;aj=bW;while(1){as=ab+8|0;do{if((c[as>>2]|0)==0){ar=3909}else{if((c[ab+20>>2]&256|0)==0){ar=3909;break}aZ=c[ab+24>>2]|0;xM(aZ+1|0,bz,c[T>>2]&-9,a,bt,ap);a_=c[bz+(aZ<<3)>>2]|0;s=c[bz+(aZ<<3)+4>>2]|0;aZ=s-a_|0;if((bI(b+a_|0,aj-1|0,aZ|0)|0)!=0){bC=aC;bD=bZ;bE=ac;bF=v;ar=3996;continue L4599}af=(s|0)==(a_|0);a_=af&1;s=bA+(c[ab+12>>2]<<2)|0;if(af){if((c[s>>2]|0)!=0){bC=aC;bD=bZ;bE=ac;bF=v;ar=3996;continue L4599}}c[s>>2]=a_;a_=aZ-1|0;aZ=a_+ap|0;s=c[j>>2]|0;af=xu(j,aj+a_|0,4)|0;if((af|0)<1){if((af|0)<0){A=1;break L4497}b6=af+1|0}else{b6=af}b7=s;b8=b6+a_|0;b9=aZ;ca=b6}}while(0);do{if((ar|0)==3909){ar=0;aZ=c[j>>2]|0;if((aZ|0)==0){bC=aC;bD=bZ;bE=ac;bF=v;ar=3996;continue L4599}a_=xu(j,aj,4)|0;if((a_|0)>=1){b7=aZ;b8=a_;b9=ap;ca=a_;break}if((a_|0)<0){A=1;break L4497}s=a_+1|0;b7=aZ;b8=s;b9=ap;ca=s}}while(0);s=aj+b8|0;aZ=b9+aC|0;if((c[as>>2]|0)==0){bC=ca;bD=bZ;bE=ac;bF=v;ar=3996;continue L4599}a_=(aZ|0)==0;af=(b7|0)==95;aa=(aZ|0)<1&E;aY=((b7|0)!=10|r)^1;aX=v;aq=ac;ak=ab;aB=0;$=as;while(1){L4635:do{if((c[ak>>2]|0)>>>0>b7>>>0){cb=aB;cc=aq;cd=aX}else{if((c[ak+4>>2]|0)>>>0<b7>>>0){cb=aB;cc=aq;cd=aX;break}ag=ak+20|0;bf=c[ag>>2]|0;L4638:do{if((bf|0)!=0){if(!((bf&1|0)==0|aa|aY)){cb=aB;cc=aq;cd=aX;break L4635}if((bf&2|0)!=0){bh=c[j>>2]|0;if((bh|U|0)!=0&((bh|0)!=10|r)){cb=aB;cc=aq;cd=aX;break L4635}}do{if((bf&16|0)!=0){if(af){cb=aB;cc=aq;cd=aX;break L4635}if((w9(b7)|0)!=0){cb=aB;cc=aq;cd=aX;break L4635}bh=c[j>>2]|0;if((bh|0)==95){break}if((w9(bh)|0)==0){cb=aB;cc=aq;cd=aX;break L4635}}}while(0);bh=c[ag>>2]|0;if((bh&32|0)==0){ce=bh}else{if(!af){if((w9(b7)|0)==0){cb=aB;cc=aq;cd=aX;break L4635}}bh=c[j>>2]|0;if((bh|0)==95){cb=aB;cc=aq;cd=aX;break L4635}if((w9(bh)|0)!=0){cb=aB;cc=aq;cd=aX;break L4635}ce=c[ag>>2]|0}do{if((ce&64|0)==0|a_){cf=ce}else{bh=c[j>>2]|0;if((bh|0)==0){cf=ce;break}if(af){cg=1;ch=bh}else{bh=(w9(b7)|0)!=0|0;cg=bh;ch=c[j>>2]|0}if((ch|0)==95){ci=1}else{ci=(w9(ch)|0)!=0|0}if((cg|0)==(ci|0)){cb=aB;cc=aq;cd=aX;break L4635}cf=c[ag>>2]|0}}while(0);if((cf&128|0)==0){cj=cf}else{if(a_){cb=aB;cc=aq;cd=aX;break L4635}bh=c[j>>2]|0;if((bh|0)==0){cb=aB;cc=aq;cd=aX;break L4635}if(af){ck=1;cl=bh}else{bh=(w9(b7)|0)!=0|0;ck=bh;cl=c[j>>2]|0}if((cl|0)==95){cm=1}else{cm=(w9(cl)|0)!=0|0}if((ck|0)!=(cm|0)){cb=aB;cc=aq;cd=aX;break L4635}cj=c[ag>>2]|0}do{if((cj&4|0)==0){cn=cj}else{if((c[T>>2]&2|0)!=0){cn=cj;break}if((xd(b7,c[ak+24>>2]|0)|0)==0){cb=aB;cc=aq;cd=aX;break L4635}cn=c[ag>>2]|0}}while(0);do{if((cn&4|0)!=0){if((c[T>>2]&2|0)==0){break}bh=xp(b7)|0;a3=ak+24|0;if((xd(bh,c[a3>>2]|0)|0)!=0){break}bh=xn(b7)|0;if((xd(bh,c[a3>>2]|0)|0)==0){cb=aB;cc=aq;cd=aX;break L4635}}}while(0);if((c[ag>>2]&8|0)==0){break}a3=c[ak+28>>2]|0;bh=c[a3>>2]|0;if((bh|0)==0){break}if((c[T>>2]&2|0)==0){bg=a3;bp=bh;while(1){if((xd(b7,bp)|0)!=0){cb=aB;cc=aq;cd=aX;break L4635}bg=bg+4|0;bp=c[bg>>2]|0;if((bp|0)==0){break L4638}}}else{co=a3}do{bp=xn(b7)|0;if((xd(bp,c[co>>2]|0)|0)!=0){cb=aB;cc=aq;cd=aX;break L4635}bp=xp(b7)|0;if((xd(bp,c[co>>2]|0)|0)!=0){cb=aB;cc=aq;cd=aX;break L4635}co=co+4|0;}while((c[co>>2]|0)!=0)}}while(0);if((aB|0)==0){cb=c[$>>2]|0;cc=aq;cd=c[ak+16>>2]|0;break}ag=aq+28|0;bf=c[ag>>2]|0;if((bf|0)==0){a3=xP(R,0,0,0,32)|0;bp=a3;if((a3|0)==0){ar=3969;break L4513}c[a3+24>>2]=aq;c[a3+28>>2]=0;bg=xP(R,0,0,0,c[l>>2]<<2)|0;c[a3+20>>2]=bg;if((bg|0)==0){ar=3976;break L4513}c[ag>>2]=bp;cp=bp}else{cp=bf}c[cp>>2]=aZ;c[cp+4>>2]=s;c[cp+8>>2]=c[$>>2];c[cp+12>>2]=c[ak+12>>2];c[cp+16>>2]=c[j>>2];if((c[l>>2]|0)>0){bf=cp+20|0;bp=0;do{c[(c[bf>>2]|0)+(bp<<2)>>2]=c[bt+(bp<<2)>>2];bp=bp+1|0;}while((bp|0)<(c[l>>2]|0))}bp=c[ak+16>>2]|0;if((bp|0)==0){cb=aB;cc=cp;cd=aX;break}bf=cp+20|0;ag=bp;while(1){bp=c[ag>>2]|0;if((bp|0)<=-1){cb=aB;cc=cp;cd=aX;break L4635}c[(c[bf>>2]|0)+(bp<<2)>>2]=aZ;bp=ag+4|0;if((bp|0)==0){cb=aB;cc=cp;cd=aX;break}else{ag=bp}}}}while(0);ag=ak+40|0;if((c[ag>>2]|0)==0){break}else{aX=cd;aq=cc;ak=ak+32|0;aB=cb;$=ag}}if((cb|0)==0){bC=ca;bD=bZ;bE=cc;bF=cd;ar=3996;continue L4599}do{if((cd|0)==0){cq=0}else{$=c[cd>>2]|0;if(($|0)>-1){cr=cd;cs=$}else{cq=cd;break}while(1){$=cr+4|0;c[bt+(cs<<2)>>2]=aZ;aB=c[$>>2]|0;if((aB|0)>-1){cr=$;cs=aB}else{cq=$;break}}}}while(0);if((cb|0)==(c[C>>2]|0)){b2=cq;b3=cc;b4=ca;b5=aZ;break}else{ab=cb;v=cq;ac=cc;aC=ca;ap=aZ;aj=s}}}L4728:do{if((bZ|0)<(b5|0)){ar=3896}else{if((bZ|0)!=(b5|0)|u){bC=b4;bD=bZ;bE=b3;bF=b2;ar=3996;continue L4599}aj=c[l>>2]|0;ap=c[w>>2]|0;if((aj|0)>0){ct=0}else{bC=b4;bD=bZ;bE=b3;bF=b2;ar=3996;continue L4599}while(1){aC=c[bt+(ct<<2)>>2]|0;ac=c[n+(ct<<2)>>2]|0;if((c[ap+(ct<<2)>>2]|0)==0){if((aC|0)<(ac|0)){ar=3896;break L4728}if((aC|0)>(ac|0)){bC=b4;bD=bZ;bE=b3;bF=b2;ar=3996;continue L4599}}else{if((aC|0)>(ac|0)){cu=aj;break L4728}if((aC|0)<(ac|0)){bC=b4;bD=bZ;bE=b3;bF=b2;ar=3996;continue L4599}}ac=ct+1|0;if((ac|0)<(aj|0)){ct=ac}else{bC=b4;bD=bZ;bE=b3;bF=b2;ar=3996;continue L4599}}}}while(0);if((ar|0)==3896){ar=0;if(u){bC=b4;bD=b5;bE=b3;bF=b2;ar=3996;continue}cu=c[l>>2]|0}if((cu|0)>0){cv=0}else{bC=b4;bD=b5;bE=b3;bF=b2;ar=3996;continue}while(1){c[n+(cv<<2)>>2]=c[bt+(cv<<2)>>2];aj=cv+1|0;if((aj|0)<(c[l>>2]|0)){cv=aj}else{bC=b4;bD=b5;bE=b3;bF=b2;ar=3996;continue L4599}}}if((bD|0)>=0){ar=4006;break}if((c[j>>2]|0)==0){ar=4006;break}c[j>>2]=D;q=y;G=bC;J=B;x=bD;K=bE;L=c[l>>2]|0}if((ar|0)==3976){xO(R);if((bt|0)!=0){yk(N)}if((bz|0)!=0){yk(bz)}if((bA|0)==0){A=12;break L4497}yk(M);A=12;break L4497}else if((ar|0)==4006){bu=bD>>>31;bv=bz;bw=bA;bx=bt;by=bD;break}else if((ar|0)==3860){xO(R);if((bt|0)!=0){yk(N)}if((bz|0)!=0){yk(bz)}if((bA|0)==0){A=12;break L4497}yk(M);A=12;break L4497}else if((ar|0)==3867){xO(R);if((bt|0)!=0){yk(N)}if((bz|0)!=0){yk(bz)}if((bA|0)==0){A=12;break L4497}yk(M);A=12;break L4497}else if((ar|0)==3969){xO(R);if((bt|0)!=0){yk(N)}if((bz|0)!=0){yk(bz)}if((bA|0)==0){A=12;break L4497}yk(M);A=12;break L4497}}}while(0);xO(R);if((bx|0)!=0){yk(bx)}if((bv|0)!=0){yk(bv)}if((bw|0)==0){br=bu;bs=by;ar=4174;break}yk(bw);br=bu;bs=by;ar=4174}}while(0);do{if((ar|0)==4174){if((br|0)!=0){A=br;break}xM(d,e,c[k+56>>2]|0,a,n,bs);A=0}}while(0);if((n|0)==0){p=A;i=g;return p|0}yk(m);p=A;i=g;return p|0}function xM(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;do{if((g|0)>-1){if((d&8|0)!=0){h=0;break}i=c[e+16>>2]|0;j=e+28|0;k=c[j>>2]|0;l=(a|0)!=0;if((k|0)!=0&l){m=e+48|0;n=0;while(1){o=c[i+(n*12|0)>>2]|0;if((o|0)==(c[m>>2]|0)){c[b+(n<<3)>>2]=g;p=g}else{q=c[f+(o<<2)>>2]|0;c[b+(n<<3)>>2]=q;p=q}q=c[i+(n*12|0)+4>>2]|0;if((q|0)==(c[m>>2]|0)){c[b+(n<<3)+4>>2]=g;r=g}else{o=c[f+(q<<2)>>2]|0;c[b+(n<<3)+4>>2]=o;r=o}if((p|0)==-1|(r|0)==-1){c[b+(n<<3)+4>>2]=-1;c[b+(n<<3)>>2]=-1}o=n+1|0;q=c[j>>2]|0;if(o>>>0<q>>>0&o>>>0<a>>>0){n=o}else{s=q;break}}}else{s=k}if((s|0)!=0&l){t=0;u=s}else{h=0;break}while(1){n=b+(t<<3)+4|0;m=c[i+(t*12|0)+8>>2]|0;do{if((m|0)==0){v=u}else{q=c[m>>2]|0;if((q|0)<=-1){v=u;break}o=b+(t<<3)|0;w=0;x=q;q=c[o>>2]|0;while(1){if((q|0)<(c[b+(x<<3)>>2]|0)){y=4202}else{if((c[n>>2]|0)>(c[b+(x<<3)+4>>2]|0)){y=4202}else{z=q}}if((y|0)==4202){y=0;c[n>>2]=-1;c[o>>2]=-1;z=-1}A=w+1|0;B=c[m+(A<<2)>>2]|0;if((B|0)>-1){w=A;x=B;q=z}else{break}}v=c[j>>2]|0}}while(0);m=t+1|0;if(m>>>0<v>>>0&m>>>0<a>>>0){t=m;u=v}else{h=m;break}}}else{h=0}}while(0);if(h>>>0<a>>>0){C=h}else{return}do{c[b+(C<<3)>>2]=-1;c[b+(C<<3)+4>>2]=-1;C=C+1|0;}while(C>>>0<a>>>0);return}function xN(a,b){a=a|0;b=b|0;var c=0,d=0;if((a|0)==0){c=yl(1,24)|0}else{yC(b|0,0,24);c=b}if((c|0)==0){d=0;return d|0}d=c;return d|0}function xO(a){a=a|0;var b=0,d=0,e=0;b=c[a>>2]|0;if((b|0)==0){d=a;yk(d);return}else{e=b}while(1){yk(c[e>>2]|0);b=c[e+4>>2]|0;yk(e);if((b|0)==0){break}else{e=b}}d=a;yk(d);return}function xP(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=a+16|0;if((c[g>>2]|0)!=0){h=0;return h|0}i=a+12|0;j=c[i>>2]|0;do{if(j>>>0<f>>>0){if((b|0)!=0){if((d|0)!=0){c[a+8>>2]=d;c[i>>2]=1024;k=1024;l=d;break}c[g>>2]=1;h=0;return h|0}m=f<<3;n=m>>>0>1024>>>0?m:1024;m=yj(8)|0;o=m;if((m|0)==0){c[g>>2]=1;h=0;return h|0}p=yj(n)|0;q=m;c[q>>2]=p;if((p|0)==0){yk(m);c[g>>2]=1;h=0;return h|0}c[m+4>>2]=0;m=a+4|0;p=c[m>>2]|0;if((p|0)!=0){c[p+4>>2]=o}p=a|0;if((c[p>>2]|0)==0){c[p>>2]=o}c[m>>2]=o;o=c[q>>2]|0;c[a+8>>2]=o;c[i>>2]=n;k=n;l=o}else{k=j;l=c[a+8>>2]|0}}while(0);j=l+f&3;g=((j|0)==0?0:4-j|0)+f|0;c[a+8>>2]=l+g;c[i>>2]=k-g;if((e|0)==0){h=l;return h|0}yC(l|0,0,g|0);h=l;return h|0}function xQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((b|0)==0){d=a+((xR(a)|0)<<2)|0;return d|0}else{e=a}while(1){f=c[e>>2]|0;if((f|0)==0|(f|0)==(b|0)){break}else{e=e+4|0}}d=(f|0)!=0?e:0;return d|0}function xR(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function xS(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function xT(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function xU(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function xV(a){a=a|0;return}function xW(a){a=a|0;c[a>>2]=21312;return}function xX(a){a=a|0;yr(a);return}function xY(a){a=a|0;return}function xZ(a){a=a|0;return 16360}function x_(a){a=a|0;xV(a|0);return}function x$(a){a=a|0;return}function x0(a){a=a|0;return}function x1(a){a=a|0;xV(a|0);yr(a);return}function x2(a){a=a|0;xV(a|0);yr(a);return}function x3(a){a=a|0;xV(a|0);yr(a);return}function x4(a){a=a|0;xV(a|0);yr(a);return}function x5(a){a=a|0;xV(a|0);yr(a);return}function x6(a,b,c){a=a|0;b=b|0;c=c|0;return(a|0)==(b|0)|0}function x7(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=yc(b,37648,37632,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}yC(f|0,0,56);c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;c0[c[(c[h>>2]|0)+28>>2]&63](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function x8(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function x9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;c0[c[(c[g>>2]|0)+28>>2]&63](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function ya(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;c0[c[(c[j>>2]|0)+28>>2]&63](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;c0[c[(c[j>>2]|0)+28>>2]&63](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]&1)!=0){m=4349;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=4352;break}}if((m|0)==4349){return}else if((m|0)==4352){return}}function yb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+56|0;f=e|0;c[d>>2]=c[c[d>>2]>>2];g=b|0;do{if((a|0)==(g|0)|(g|0)==37664){h=1}else{if((b|0)==0){h=0;break}j=yc(b,37648,37600,-1)|0;if((j|0)==0){h=0;break}if((c[j+8>>2]&~c[a+8>>2]|0)!=0){h=0;break}k=c[a+12>>2]|0;l=j+12|0;if((k|0)==(c[l>>2]|0)|(k|0)==35056){h=1;break}if((k|0)==0){h=0;break}j=yc(k,37648,37632,-1)|0;if((j|0)==0){h=0;break}k=c[l>>2]|0;if((k|0)==0){h=0;break}l=yc(k,37648,37632,-1)|0;k=l;if((l|0)==0){h=0;break}yC(f|0,0,56);c[f>>2]=k;c[f+8>>2]=j;c[f+12>>2]=-1;c[f+48>>2]=1;c0[c[(c[l>>2]|0)+28>>2]&63](k,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){h=0;break}c[d>>2]=c[f+16>>2];h=1}}while(0);i=e;return h|0}function yc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;yC(e|0,0,39);if((k|0)==(d|0)){c[g+48>>2]=1;cP[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}cF[c[(c[k>>2]|0)+24>>2]&31](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function yd(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;L5304:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;L5306:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;cP[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]&1)!=0){x=t;y=r;break}do{if((a[m]&1)==0){z=t;A=r}else{if((a[l]&1)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break L5306}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=4411;break L5304}if((c[o>>2]&2|0)==0){B=4411;break L5304}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=4410}else{D=x;B=4407}}else{D=0;B=4407}}while(0);do{if((B|0)==4407){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=4410;break}if((c[d+24>>2]|0)!=2){C=D;B=4410;break}a[d+54|0]=1;if(D){B=4411}else{B=4412}}}while(0);if((B|0)==4410){if(C){B=4411}else{B=4412}}if((B|0)==4411){c[i>>2]=3;return}else if((B|0)==4412){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;cF[c[(c[y>>2]|0)+24>>2]&31](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]&1)!=0){B=4449;break}if((c[b>>2]|0)==1){B=4451;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;cF[c[(c[w>>2]|0)+24>>2]&31](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=4450;break}}if((B|0)==4449){return}else if((B|0)==4450){return}else if((B|0)==4451){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]&1)!=0){B=4443;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=4444;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;cF[c[(c[w>>2]|0)+24>>2]&31](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=4448;break}}if((B|0)==4448){return}else if((B|0)==4443){return}else if((B|0)==4444){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]&1)!=0){B=4454;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;cF[c[(c[i>>2]|0)+24>>2]&31](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=4452;break}}if((B|0)==4452){return}else if((B|0)==4454){return}}function ye(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;cF[c[(c[h>>2]|0)+24>>2]&31](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;cP[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]&1)==0){m=0;n=4467}else{if((a[j]&1)==0){m=1;n=4467}}L5406:do{if((n|0)==4467){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=4470;break}a[d+54|0]=1;if(m){break L5406}}else{n=4470}}while(0);if((n|0)==4470){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function yf(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function yg(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]&1;k=d+53|0;l=a[k]&1;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;cP[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);L5455:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]&1)!=0){break L5455}do{if((a[i]&1)==0){if((a[k]&1)==0){break}if((c[q>>2]&1|0)==0){break L5455}}else{if((c[o>>2]|0)==1){break L5455}if((c[q>>2]&2|0)==0){break L5455}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;cP[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function yh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;cP[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function yi(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function yj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[10042]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=40208+(h<<2)|0;j=40208+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[10042]=e&~(1<<g)}else{if(l>>>0<(c[10046]|0)>>>0){cg();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{cg();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[10044]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=40208+(p<<2)|0;m=40208+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[10042]=e&~(1<<r)}else{if(l>>>0<(c[10046]|0)>>>0){cg();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{cg();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[10044]|0;if((l|0)!=0){q=c[10047]|0;d=l>>>3;l=d<<1;f=40208+(l<<2)|0;k=c[10042]|0;h=1<<d;do{if((k&h|0)==0){c[10042]=k|h;s=f;t=40208+(l+2<<2)|0}else{d=40208+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[10046]|0)>>>0){s=g;t=d;break}cg();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[10044]=m;c[10047]=e;n=i;return n|0}l=c[10043]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[40472+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[10046]|0;if(r>>>0<i>>>0){cg();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){cg();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){cg();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){cg();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){cg();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{cg();return 0}}}while(0);L5622:do{if((e|0)!=0){f=d+28|0;i=40472+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[10043]=c[10043]&~(1<<c[f>>2]);break L5622}else{if(e>>>0<(c[10046]|0)>>>0){cg();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L5622}}}while(0);if(v>>>0<(c[10046]|0)>>>0){cg();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[10044]|0;if((f|0)!=0){e=c[10047]|0;i=f>>>3;f=i<<1;q=40208+(f<<2)|0;k=c[10042]|0;g=1<<i;do{if((k&g|0)==0){c[10042]=k|g;y=q;z=40208+(f+2<<2)|0}else{i=40208+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[10046]|0)>>>0){y=l;z=i;break}cg();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[10044]=p;c[10047]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[10043]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[40472+(A<<2)>>2]|0;L5670:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L5670}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[40472+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[10044]|0)-g|0)>>>0){o=g;break}q=K;m=c[10046]|0;if(q>>>0<m>>>0){cg();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){cg();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){cg();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){cg();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){cg();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{cg();return 0}}}while(0);L5720:do{if((e|0)!=0){i=K+28|0;m=40472+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[10043]=c[10043]&~(1<<c[i>>2]);break L5720}else{if(e>>>0<(c[10046]|0)>>>0){cg();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L5720}}}while(0);if(L>>>0<(c[10046]|0)>>>0){cg();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=40208+(e<<2)|0;r=c[10042]|0;j=1<<i;do{if((r&j|0)==0){c[10042]=r|j;O=m;P=40208+(e+2<<2)|0}else{i=40208+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[10046]|0)>>>0){O=d;P=i;break}cg();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=40472+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[10043]|0;l=1<<Q;if((m&l|0)==0){c[10043]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=4727;break}else{l=l<<1;m=j}}if((T|0)==4727){if(S>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[10046]|0;if(m>>>0<i>>>0){cg();return 0}if(j>>>0<i>>>0){cg();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[10044]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[10047]|0;if(S>>>0>15>>>0){R=J;c[10047]=R+o;c[10044]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[10044]=0;c[10047]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[10045]|0;if(o>>>0<J>>>0){S=J-o|0;c[10045]=S;J=c[10048]|0;K=J;c[10048]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[10024]|0)==0){J=bQ(30)|0;if((J-1&J|0)==0){c[10026]=J;c[10025]=J;c[10027]=-1;c[10028]=-1;c[10029]=0;c[10153]=0;c[10024]=(cD(0)|0)&-16^1431655768;break}else{cg();return 0}}}while(0);J=o+48|0;S=c[10026]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[10152]|0;do{if((O|0)!=0){P=c[10150]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L5812:do{if((c[10153]&4|0)==0){O=c[10048]|0;L5814:do{if((O|0)==0){T=4757}else{L=O;P=40616;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=4757;break L5814}else{P=M}}if((P|0)==0){T=4757;break}L=R-(c[10045]|0)&Q;if(L>>>0>=2147483647>>>0){W=0;break}m=b2(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=4766}}while(0);do{if((T|0)==4757){O=b2(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[10025]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[10150]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[10152]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=b2($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=4766}}while(0);L5834:do{if((T|0)==4766){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=4777;break L5812}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[10026]|0;O=K-_+g&-g;if(O>>>0>=2147483647>>>0){ac=_;break}if((b2(O|0)|0)==-1){b2(m|0)|0;W=Y;break L5834}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=4777;break L5812}}}while(0);c[10153]=c[10153]|4;ad=W;T=4774}else{ad=0;T=4774}}while(0);do{if((T|0)==4774){if(S>>>0>=2147483647>>>0){break}W=b2(S|0)|0;Z=b2(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=4777}}}while(0);do{if((T|0)==4777){ad=(c[10150]|0)+aa|0;c[10150]=ad;if(ad>>>0>(c[10151]|0)>>>0){c[10151]=ad}ad=c[10048]|0;L5854:do{if((ad|0)==0){S=c[10046]|0;if((S|0)==0|ab>>>0<S>>>0){c[10046]=ab}c[10154]=ab;c[10155]=aa;c[10157]=0;c[10051]=c[10024];c[10050]=-1;S=0;do{Y=S<<1;ac=40208+(Y<<2)|0;c[40208+(Y+3<<2)>>2]=ac;c[40208+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32>>>0);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[10048]=ab+ae;c[10045]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[10049]=c[10028]}else{S=40616;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=4789;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==4789){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[10048]|0;Y=(c[10045]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[10048]=Z+ai;c[10045]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[10049]=c[10028];break L5854}}while(0);if(ab>>>0<(c[10046]|0)>>>0){c[10046]=ab}S=ab+aa|0;Y=40616;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=4799;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==4799){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[10048]|0)){J=(c[10045]|0)+K|0;c[10045]=J;c[10048]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[10047]|0)){J=(c[10044]|0)+K|0;c[10044]=J;c[10047]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L5889:do{if(X>>>0<256>>>0){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=40208+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[10046]|0)>>>0){cg();return 0}if((c[U+12>>2]|0)==(Z|0)){break}cg();return 0}}while(0);if((Q|0)==(U|0)){c[10042]=c[10042]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[10046]|0)>>>0){cg();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}cg();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[10046]|0)>>>0){cg();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){cg();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{cg();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=40472+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[10043]=c[10043]&~(1<<c[P>>2]);break L5889}else{if(m>>>0<(c[10046]|0)>>>0){cg();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L5889}}}while(0);if(an>>>0<(c[10046]|0)>>>0){cg();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256>>>0){V=J<<1;X=40208+(V<<2)|0;P=c[10042]|0;m=1<<J;do{if((P&m|0)==0){c[10042]=P|m;as=X;at=40208+(V+2<<2)|0}else{J=40208+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[10046]|0)>>>0){as=U;at=J;break}cg();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215>>>0){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=40472+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[10043]|0;Q=1<<au;if((X&Q|0)==0){c[10043]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}aw=X+16+(Q>>>31<<2)|0;m=c[aw>>2]|0;if((m|0)==0){T=4872;break}else{Q=Q<<1;X=m}}if((T|0)==4872){if(aw>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[aw>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[10046]|0;if(X>>>0<$>>>0){cg();return 0}if(m>>>0<$>>>0){cg();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=40616;while(1){ax=c[W>>2]|0;if(ax>>>0<=Y>>>0){ay=c[W+4>>2]|0;az=ax+ay|0;if(az>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ax+(ay-39)|0;if((W&7|0)==0){aA=0}else{aA=-W&7}W=ax+(ay-47+aA)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aB=0}else{aB=-_&7}_=aa-40-aB|0;c[10048]=ab+aB;c[10045]=_;c[ab+(aB+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[10049]=c[10028];c[ac+4>>2]=27;c[W>>2]=c[10154];c[W+4>>2]=c[10155];c[W+8>>2]=c[10156];c[W+12>>2]=c[10157];c[10154]=ab;c[10155]=aa;c[10157]=0;c[10156]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<az>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<az>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256>>>0){K=W<<1;Z=40208+(K<<2)|0;S=c[10042]|0;m=1<<W;do{if((S&m|0)==0){c[10042]=S|m;aC=Z;aD=40208+(K+2<<2)|0}else{W=40208+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[10046]|0)>>>0){aC=Q;aD=W;break}cg();return 0}}while(0);c[aD>>2]=ad;c[aC+12>>2]=ad;c[ad+8>>2]=aC;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aE=0}else{if(_>>>0>16777215>>>0){aE=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aE=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=40472+(aE<<2)|0;c[ad+28>>2]=aE;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[10043]|0;Q=1<<aE;if((Z&Q|0)==0){c[10043]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aE|0)==31){aF=0}else{aF=25-(aE>>>1)|0}Q=_<<aF;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aG=Z+16+(Q>>>31<<2)|0;m=c[aG>>2]|0;if((m|0)==0){T=4907;break}else{Q=Q<<1;Z=m}}if((T|0)==4907){if(aG>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[aG>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[10046]|0;if(Z>>>0<m>>>0){cg();return 0}if(_>>>0<m>>>0){cg();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[10045]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[10045]=_;ad=c[10048]|0;Q=ad;c[10048]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(b3()|0)>>2]=12;n=0;return n|0}function yk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[10046]|0;if(b>>>0<e>>>0){cg()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){cg()}h=f&-8;i=a+(h-8)|0;j=i;L6071:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){cg()}if((n|0)==(c[10047]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[10044]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=40208+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){cg()}if((c[k+12>>2]|0)==(n|0)){break}cg()}}while(0);if((s|0)==(k|0)){c[10042]=c[10042]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){cg()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}cg()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){cg()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){cg()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){cg()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{cg()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=40472+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[10043]=c[10043]&~(1<<c[v>>2]);q=n;r=o;break L6071}else{if(p>>>0<(c[10046]|0)>>>0){cg()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L6071}}}while(0);if(A>>>0<(c[10046]|0)>>>0){cg()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[10046]|0)>>>0){cg()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[10046]|0)>>>0){cg()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){cg()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){cg()}do{if((e&2|0)==0){if((j|0)==(c[10048]|0)){B=(c[10045]|0)+r|0;c[10045]=B;c[10048]=q;c[q+4>>2]=B|1;if((q|0)!=(c[10047]|0)){return}c[10047]=0;c[10044]=0;return}if((j|0)==(c[10047]|0)){B=(c[10044]|0)+r|0;c[10044]=B;c[10047]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L6173:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=40208+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[10046]|0)>>>0){cg()}if((c[u+12>>2]|0)==(j|0)){break}cg()}}while(0);if((g|0)==(u|0)){c[10042]=c[10042]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[10046]|0)>>>0){cg()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}cg()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[10046]|0)>>>0){cg()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[10046]|0)>>>0){cg()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){cg()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{cg()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=40472+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[10043]=c[10043]&~(1<<c[t>>2]);break L6173}else{if(f>>>0<(c[10046]|0)>>>0){cg()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L6173}}}while(0);if(E>>>0<(c[10046]|0)>>>0){cg()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[10046]|0)>>>0){cg()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[10046]|0)>>>0){cg()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[10047]|0)){H=B;break}c[10044]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=40208+(d<<2)|0;A=c[10042]|0;E=1<<r;do{if((A&E|0)==0){c[10042]=A|E;I=e;J=40208+(d+2<<2)|0}else{r=40208+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[10046]|0)>>>0){I=h;J=r;break}cg()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=40472+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[10043]|0;d=1<<K;do{if((r&d|0)==0){c[10043]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=5084;break}else{A=A<<1;J=E}}if((N|0)==5084){if(M>>>0<(c[10046]|0)>>>0){cg()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[10046]|0;if(J>>>0<E>>>0){cg()}if(B>>>0<E>>>0){cg()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[10050]|0)-1|0;c[10050]=q;if((q|0)==0){O=40624}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[10050]=-1;return}function yl(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((a|0)==0){d=0}else{e=ai(b,a)|0;if((b|a)>>>0<=65535>>>0){d=e;break}d=((e>>>0)/(a>>>0)|0|0)==(b|0)?e:-1}}while(0);b=yj(d)|0;if((b|0)==0){return b|0}if((c[b-4>>2]&3|0)==0){return b|0}yC(b|0,0,d|0);return b|0}function ym(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=yj(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(b3()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=yn(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=yj(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;e=g>>>0<b>>>0?g:b;yA(f|0,a|0,e)|0;yk(a);d=f;return d|0}function yn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[10046]|0;if(g>>>0<j>>>0){cg();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){cg();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){cg();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[10026]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15>>>0){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;yo(g+b|0,k);n=a;return n|0}if((i|0)==(c[10048]|0)){k=(c[10045]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[10048]=g+b;c[10045]=l;n=a;return n|0}if((i|0)==(c[10047]|0)){l=(c[10044]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[10044]=q;c[10047]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L6372:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=40208+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){cg();return 0}if((c[l+12>>2]|0)==(i|0)){break}cg();return 0}}while(0);if((k|0)==(l|0)){c[10042]=c[10042]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){cg();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}cg();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){cg();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){cg();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){cg();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{cg();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=40472+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[10043]=c[10043]&~(1<<c[t>>2]);break L6372}else{if(s>>>0<(c[10046]|0)>>>0){cg();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L6372}}}while(0);if(y>>>0<(c[10046]|0)>>>0){cg();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[10046]|0)>>>0){cg();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;yo(g+b|0,q);n=a;return n|0}return 0}function yo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L6448:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[10046]|0;if(i>>>0<l>>>0){cg()}if((j|0)==(c[10047]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[10044]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=40208+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){cg()}if((c[p+12>>2]|0)==(j|0)){break}cg()}}while(0);if((q|0)==(p|0)){c[10042]=c[10042]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){cg()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}cg()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){cg()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){cg()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){cg()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{cg()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=40472+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[10043]=c[10043]&~(1<<c[t>>2]);n=j;o=k;break L6448}else{if(m>>>0<(c[10046]|0)>>>0){cg()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L6448}}}while(0);if(y>>>0<(c[10046]|0)>>>0){cg()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[10046]|0)>>>0){cg()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[10046]|0)>>>0){cg()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[10046]|0;if(e>>>0<a>>>0){cg()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[10048]|0)){A=(c[10045]|0)+o|0;c[10045]=A;c[10048]=n;c[n+4>>2]=A|1;if((n|0)!=(c[10047]|0)){return}c[10047]=0;c[10044]=0;return}if((f|0)==(c[10047]|0)){A=(c[10044]|0)+o|0;c[10044]=A;c[10047]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L6547:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=40208+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){cg()}if((c[g+12>>2]|0)==(f|0)){break}cg()}}while(0);if((t|0)==(g|0)){c[10042]=c[10042]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){cg()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}cg()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){cg()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){cg()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){cg()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{cg()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=40472+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[10043]=c[10043]&~(1<<c[l>>2]);break L6547}else{if(m>>>0<(c[10046]|0)>>>0){cg()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L6547}}}while(0);if(C>>>0<(c[10046]|0)>>>0){cg()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[10046]|0)>>>0){cg()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[10046]|0)>>>0){cg()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[10047]|0)){F=A;break}c[10044]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=40208+(z<<2)|0;C=c[10042]|0;b=1<<o;do{if((C&b|0)==0){c[10042]=C|b;G=y;H=40208+(z+2<<2)|0}else{o=40208+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[10046]|0)>>>0){G=d;H=o;break}cg()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=40472+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[10043]|0;z=1<<I;if((o&z|0)==0){c[10043]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=5374;break}else{I=I<<1;J=G}}if((L|0)==5374){if(K>>>0<(c[10046]|0)>>>0){cg()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[10046]|0;if(J>>>0<I>>>0){cg()}if(L>>>0<I>>>0){cg()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function yp(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=yj(b)|0;if((d|0)!=0){e=5418;break}a=(K=c[15094]|0,c[15094]=K+0,K);if((a|0)==0){break}c_[a&3]()}if((e|0)==5418){return d|0}d=cr(4)|0;c[d>>2]=21280;bJ(d|0,35080,414);return 0}function yq(a){a=a|0;return yp(a)|0}function yr(a){a=a|0;if((a|0)==0){return}yk(a);return}function ys(a){a=a|0;yr(a);return}function yt(a){a=a|0;yr(a);return}function yu(a){a=a|0;return}function yv(a){a=a|0;return 12632}function yw(){var a=0;a=cr(4)|0;c[a>>2]=21280;bJ(a|0,35080,414)}function yx(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0.0;e=b;while(1){f=e+1|0;if((a$(a[e]|0)|0)==0){break}else{e=f}}g=a[e]|0;if((g<<24>>24|0)==43){i=f;j=0}else if((g<<24>>24|0)==45){i=f;j=1}else{i=e;j=0}e=-1;f=0;g=i;while(1){k=a[g]|0;if(((k<<24>>24)-48|0)>>>0<10>>>0){l=e}else{if(k<<24>>24!=46|(e|0)>-1){break}else{l=f}}e=l;f=f+1|0;g=g+1|0}l=g+(-f|0)|0;i=(e|0)<0;m=((i^1)<<31>>31)+f|0;n=(m|0)>18;o=(n?-18:-m|0)+(i?f:e)|0;e=n?18:m;do{if((e|0)==0){p=b;q=0.0}else{if((e|0)>9){m=l;n=e;f=0;while(1){i=a[m]|0;r=m+1|0;if(i<<24>>24==46){s=a[r]|0;t=m+2|0}else{s=i;t=r}u=(f*10|0)-48+(s<<24>>24)|0;r=n-1|0;if((r|0)>9){m=t;n=r;f=u}else{break}}v=+(u|0)*1.0e9;w=9;x=t;y=5449}else{if((e|0)>0){v=0.0;w=e;x=l;y=5449}else{z=0.0;A=0.0}}if((y|0)==5449){f=x;n=w;m=0;while(1){r=a[f]|0;i=f+1|0;if(r<<24>>24==46){B=a[i]|0;C=f+2|0}else{B=r;C=i}D=(m*10|0)-48+(B<<24>>24)|0;i=n-1|0;if((i|0)>0){f=C;n=i;m=D}else{break}}z=+(D|0);A=v}E=A+z;do{if((k<<24>>24|0)==69|(k<<24>>24|0)==101){m=g+1|0;n=a[m]|0;if((n<<24>>24|0)==43){F=g+2|0;G=0}else if((n<<24>>24|0)==45){F=g+2|0;G=1}else{F=m;G=0}m=a[F]|0;if(((m<<24>>24)-48|0)>>>0<10>>>0){H=F;I=0;J=m}else{K=0;L=F;M=G;break}while(1){m=(I*10|0)-48+(J<<24>>24)|0;n=H+1|0;f=a[n]|0;if(((f<<24>>24)-48|0)>>>0<10>>>0){H=n;I=m;J=f}else{K=m;L=n;M=G;break}}}else{K=0;L=g;M=0}}while(0);n=o+((M|0)==0?K:-K|0)|0;m=(n|0)<0?-n|0:n;if((m|0)>511){c[(b3()|0)>>2]=34;N=1.0;O=6336;P=511;y=5466}else{if((m|0)==0){Q=1.0}else{N=1.0;O=6336;P=m;y=5466}}if((y|0)==5466){while(1){y=0;if((P&1|0)==0){R=N}else{R=N*+h[O>>3]}m=P>>1;if((m|0)==0){Q=R;break}else{N=R;O=O+8|0;P=m;y=5466}}}if((n|0)>-1){p=L;q=E*Q;break}else{p=L;q=E/Q;break}}}while(0);if((d|0)!=0){c[d>>2]=p}if((j|0)==0){S=q;return+S}S=-0.0-q;return+S}function yy(a,b,c){a=a|0;b=b|0;c=c|0;return+(+yx(a,b))}function yz(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function yA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function yB(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)<(b|0)&(b|0)<(c+d|0)){c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}}else{yA(b,c,d)|0}}function yC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function yD(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0;while((e|0)<(c|0)){f=d[a+e|0]|0;g=d[b+e|0]|0;if((f|0)!=(g|0))return((f|0)>(g|0)?1:-1)|0;e=e+1|0}return 0}function yE(a){a=a|0;if((a|0)<65)return a|0;if((a|0)>90)return a|0;return a-65+97|0}function yF(b,c){b=b|0;c=c|0;var d=0;do{a[b+d|0]=a[c+d|0];d=d+1|0}while(a[c+(d-1)|0]|0);return b|0}function yG(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;while((e|0)<(d|0)){a[b+e|0]=f?0:a[c+e|0]|0;f=f?1:(a[c+e|0]|0)==0;e=e+1|0}return b|0}function yH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(M=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function yI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(M=e,a-c>>>0|0)|0}function yJ(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){M=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}M=a<<c-32;return 0}function yK(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){M=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}M=0;return b>>>c-32|0}function yL(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){M=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}M=(b|0)<0?-1:0;return b>>c-32|0}function yM(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function yN(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function yO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ai(d,c)|0;f=a>>>16;a=(e>>>16)+(ai(d,f)|0)|0;d=b>>>16;b=ai(d,c)|0;return(M=(a>>>16)+(ai(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function yP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=yI(e^a,f^b,e,f)|0;b=M;a=g^e;e=h^f;f=yI((yU(i,b,yI(g^c,h^d,g,h)|0,M,0)|0)^a,M^e,a,e)|0;return(M=M,f)|0}function yQ(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=yI(h^a,j^b,h,j)|0;b=M;a=yI(k^d,l^e,k,l)|0;yU(m,b,a,M,g)|0;a=yI(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=M;i=f;return(M=j,a)|0}function yR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=yO(e,a)|0;f=M;return(M=(ai(b,a)|0)+(ai(d,e)|0)+f|f&0,c|0|0)|0}function yS(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=yU(a,b,c,d,0)|0;return(M=M,e)|0}function yT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;yU(a,b,d,e,g)|0;i=f;return(M=c[g+4>>2]|0,c[g>>2]|0)|0}function yU(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(M=n,o)|0}else{if(!m){n=0;o=0;return(M=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(M=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(M=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(M=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((yN(l|0)|0)>>>0);return(M=n,o)|0}p=(yM(l|0)|0)-(yM(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(M=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(M=n,o)|0}else{if(!m){r=(yM(l|0)|0)-(yM(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(M=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(M=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(yM(j|0)|0)+33-(yM(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(M=n,o)|0}else{p=yN(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(M=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=yH(g,d,-1,-1)|0;k=M;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;yI(e,k,j,a)|0;b=M;h=b>>31|((b|0)<0?-1:0)<<1;J=h&1;K=yI(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;L=M;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=L;u=K;t=b;s=J}}B=H;C=I;D=L;E=K;F=0;G=J}J=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(J|0)>>>31|(B|C)<<1|(C<<1|J>>>31)&0|F;o=(J<<1|0>>>31)&-2|G;return(M=n,o)|0}function yV(){cu()}function yW(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;cF[a&31](b|0,c|0,d|0,e|0,f|0)}function yX(a,b){a=a|0;b=b|0;cG[a&1023](b|0)}function yY(a,b,c){a=a|0;b=b|0;c=c|0;cH[a&255](b|0,c|0)}function yZ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;cI[a&7](b|0,c|0,d|0,e|0,+f)}function y_(a,b){a=a|0;b=b|0;return cJ[a&255](b|0)|0}function y$(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return cK[a&31](b|0,c|0,d|0,e|0,f|0)|0}function y0(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;cL[a&7](b|0,+c,+d)}function y1(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return cM[a&63](b|0,c|0,d|0)|0}function y2(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;cN[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function y3(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;cO[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function y4(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;cP[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function y5(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=+h;cQ[a&7](b|0,c|0,d|0,e|0,f|0,+g,+h)}function y6(a,b){a=a|0;b=b|0;return+cR[a&3](b|0)}function y7(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;cS[a&7](b|0,c|0,+d)}function y8(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;cT[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function y9(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;cU[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function za(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;cV[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function zb(a,b,c){a=a|0;b=b|0;c=c|0;return cW[a&255](b|0,c|0)|0}function zc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+cX[a&3](b|0,c|0,d|0)}function zd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cY[a&31](b|0,c|0,d|0,e|0)|0}function ze(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cZ[a&127](b|0,c|0,d|0)}function zf(a){a=a|0;c_[a&3]()}function zg(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return c$[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function zh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c0[a&63](b|0,c|0,d|0,e|0)}function zi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aj(0)}function zj(a){a=a|0;aj(1)}function zk(a,b){a=a|0;b=b|0;aj(2)}function zl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;aj(3)}function zm(a){a=a|0;aj(4);return 0}function zn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aj(5);return 0}function zo(a,b,c){a=a|0;b=+b;c=+c;aj(6)}function zp(a,b,c){a=a|0;b=b|0;c=c|0;aj(7);return 0}function zq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;aj(8)}function zr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;aj(9)}function zs(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;aj(10)}function zt(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;aj(11)}function zu(a){a=a|0;aj(12);return 0.0}function zv(a,b,c){a=a|0;b=b|0;c=+c;aj(13)}function zw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;aj(14)}function zx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;aj(15)}function zy(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;aj(16)}function zz(a,b){a=a|0;b=b|0;aj(17);return 0}function zA(a,b,c){a=a|0;b=b|0;c=c|0;aj(18);return 0.0}function zB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aj(19);return 0}function zC(a,b,c){a=a|0;b=b|0;c=c|0;aj(20)}function zD(){aj(21)}function zE(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;aj(22);return 0}function zF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aj(23)}
// EMSCRIPTEN_END_FUNCS
var cF=[zi,zi,yf,zi,e8,zi,ye,zi,mV,zi,e6,zi,e4,zi,mX,zi,mT,zi,yd,zi,e1,zi,mR,zi,kt,zi,zi,zi,zi,zi,zi,zi];var cG=[zj,zj,i4,zj,u9,zj,ei,zj,nK,zj,r5,zj,ms,zj,u4,zj,p5,zj,qc,zj,el,zj,qU,zj,dy,zj,ve,zj,l6,zj,vs,zj,pU,zj,i3,zj,oE,zj,ix,zj,fo,zj,eY,zj,p4,zj,v4,zj,qa,zj,kn,zj,su,zj,nE,zj,qd,zj,eP,zj,ex,zj,j4,zj,gz,zj,rX,zj,jo,zj,rT,zj,dI,zj,gF,zj,lX,zj,hT,zj,p5,zj,vq,zj,nW,zj,mB,zj,vG,zj,du,zj,mk,zj,m9,zj,tD,zj,sv,zj,xW,zj,rL,zj,fr,zj,qO,zj,f0,zj,u5,zj,gJ,zj,pA,zj,hp,zj,vr,zj,eO,zj,f4,zj,tb,zj,rl,zj,oB,zj,h1,zj,ug,zj,lK,zj,vj,zj,oI,zj,ib,zj,rS,zj,ep,zj,fv,zj,eK,zj,hq,zj,mL,zj,fk,zj,eJ,zj,n0,zj,x$,zj,fQ,zj,x5,zj,kv,zj,dA,zj,lx,zj,fm,zj,ie,zj,ml,zj,l4,zj,ws,zj,h3,zj,f3,zj,l9,zj,hw,zj,qa,zj,w3,zj,p5,zj,fu,zj,nA,zj,ny,zj,lU,zj,r1,zj,id,zj,tX,zj,oJ,zj,dz,zj,jX,zj,l_,zj,kg,zj,jY,zj,vt,zj,rj,zj,nL,zj,u_,zj,wr,zj,x1,zj,m7,zj,hx,zj,iW,zj,l7,zj,ry,zj,oN,zj,i$,zj,dM,zj,r0,zj,tS,zj,ee,zj,sY,zj,w1,zj,fE,zj,pb,zj,sZ,zj,i0,zj,lO,zj,eg,zj,wt,zj,gq,zj,wf,zj,hU,zj,gc,zj,kp,zj,m8,zj,iO,zj,eh,zj,gE,zj,eq,zj,xY,zj,l3,zj,uh,zj,eX,zj,nD,zj,lv,zj,rk,zj,lV,zj,lZ,zj,rF,zj,ly,zj,tP,zj,tC,zj,f1,zj,uM,zj,rU,zj,t5,zj,j5,zj,gw,zj,l5,zj,dE,zj,qT,zj,kb,zj,l8,zj,qP,zj,jn,zj,w4,zj,lM,zj,w5,zj,ka,zj,ew,zj,nz,zj,rR,zj,gC,zj,rM,zj,mt,zj,ku,zj,gp,zj,oA,zj,hu,zj,gv,zj,kh,zj,vQ,zj,nx,zj,kr,zj,eo,zj,rm,zj,j_,zj,h2,zj,uC,zj,py,zj,ur,zj,ig,zj,nt,zj,lz,zj,m6,zj,rN,zj,nB,zj,iQ,zj,x3,zj,yu,zj,lL,zj,w7,zj,x0,zj,hv,zj,o8,zj,ja,zj,mM,zj,dw,zj,iw,zj,dD,zj,pN,zj,f2,zj,fl,zj,vi,zj,jx,zj,tQ,zj,uN,zj,xX,zj,wq,zj,ec,zj,uF,zj,u$,zj,lE,zj,w6,zj,tW,zj,ta,zj,rW,zj,gD,zj,en,zj,rY,zj,rA,zj,oO,zj,nV,zj,jb,zj,jc,zj,lt,zj,pc,zj,ns,zj,ko,zj,lY,zj,uU,zj,yt,zj,dG,zj,wu,zj,i1,zj,ed,zj,r6,zj,kq,zj,gH,zj,qG,zj,pl,zj,dN,zj,pG,zj,jG,zj,oF,zj,fy,zj,nd,zj,hS,zj,pH,zj,gl,zj,x4,zj,jF,zj,wv,zj,rE,zj,fq,zj,hl,zj,gI,zj,vn,zj,iU,zj,hs,zj,qm,zj,iX,zj,xY,zj,i2,zj,x_,zj,hr,zj,yk,zj,hN,zj,jZ,zj,pO,zj,qQ,zj,rK,zj,fj,zj,gL,zj,em,zj,eL,zj,ft,zj,fO,zj,f5,zj,fF,zj,i_,zj,rD,zj,ql,zj,pV,zj,vl,zj,gx,zj,h4,zj,o9,zj,rV,zj,ge,zj,us,zj,to,zj,t6,zj,lJ,zj,gi,zj,lP,zj,ks,zj,rz,zj,q5,zj,rC,zj,mA,zj,lw,zj,fx,zj,ia,zj,nr,zj,lN,zj,iP,zj,q6,zj,gf,zj,lu,zj,dv,zj,nf,zj,tp,zj,lD,zj,pk,zj,x2,zj,l$,zj,va,zj,pz,zj,fD,zj,dH,zj,rx,zj,ic,zj,fw,zj,ng,zj,tT,zj,uV,zj,uD,zj,ho,zj,w8,zj,qu,zj,vH,zj,kf,zj,p9,zj,vY,zj,fn,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj,zj];var cH=[zk,zk,m5,zk,wE,zk,nF,zk,me,zk,mJ,zk,ux,zk,jP,zk,iZ,zk,t9,zk,wB,zk,mK,zk,qV,zk,uq,zk,lB,zk,e0,zk,dY,zk,wA,zk,je,zk,uf,zk,nc,zk,t_,zk,pB,zk,u8,zk,q7,zk,t1,zk,uA,zk,eH,zk,mG,zk,pI,zk,un,zk,t0,zk,uy,zk,vm,zk,mg,zk,pP,zk,mq,zk,mi,zk,j2,zk,uB,zk,eV,zk,wD,zk,mh,zk,n1,zk,ua,zk,fR,zk,p8,zk,wF,zk,up,zk,uc,zk,eW,zk,eU,zk,uv,zk,eS,zk,nw,zk,fs,zk,iV,zk,vd,zk,pW,zk,uk,zk,iT,zk,t4,zk,t3,zk,gr,zk,fC,zk,t$,zk,mI,zk,ul,zk,um,zk,wC,zk,nq,zk,et,zk,ue,zk,mQ,zk,h7,zk,h9,zk,uw,zk,nT,zk,ub,zk,it,zk,fh,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk,zk];var cI=[zl,zl,m_,zl,fb,zl,zl,zl];var cJ=[zm,zm,oz,zm,wT,zm,pQ,zm,ol,zm,q0,zm,oH,zm,vV,zm,jd,zm,ff,zm,q1,zm,wm,zm,iC,zm,wR,zm,t7,zm,tq,zm,wH,zm,oL,zm,pY,zm,rf,zm,oy,zm,pd,zm,gM,zm,re,zm,n6,zm,wl,zm,wN,zm,wL,zm,xZ,zm,wO,zm,qb,zm,oP,zm,wz,zm,wJ,zm,ww,zm,wM,zm,fV,zm,wx,zm,hy,zm,qZ,zm,oc,zm,vU,zm,uz,zm,pC,zm,oR,zm,t8,zm,wb,zm,jh,zm,oD,zm,md,zm,v1,zm,ox,zm,ut,zm,oo,zm,wG,zm,pJ,zm,ou,zm,ot,zm,rP,zm,t2,zm,oS,zm,rc,zm,pK,zm,oQ,zm,wy,zm,mf,zm,q_,zm,eu,zm,or,zm,rb,zm,ow,zm,fW,zm,vX,zm,ov,zm,ud,zm,wS,zm,pX,zm,os,zm,wa,zm,yv,zm,tY,zm,wI,zm,tZ,zm,p6,zm,oG,zm,ui,zm,v3,zm,uo,zm,uj,zm,wK,zm,oM,zm,uu,zm,v0,zm,tE,zm,pe,zm,f8,zm,of,zm,oq,zm,oC,zm,wQ,zm,h8,zm,wP,zm,gA,zm,oi,zm,op,zm,we,zm,n$,zm,wp,zm,fi,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm,zm];var cK=[zn,zn,vF,zn,v9,zn,r2,zn,wn,zn,vP,zn,wc,zn,rZ,zn,vW,zn,v$,zn,wk,zn,v2,zn,vT,zn,zn,zn,zn,zn,zn,zn];var cL=[zo,zo,e_,zo,mO,zo,zo,zo];var cM=[zp,zp,rh,zp,r$,zp,vB,zp,iE,zp,fS,zp,x7,zp,vE,zp,kd,zp,r4,zp,u6,zp,q3,zp,q$,zp,vu,zp,vJ,zp,q8,zp,vb,zp,j7,zp,vO,zp,yb,zp,x6,zp,pD,zp,rd,zp,qg,zp,qh,zp,vL,zp,qW,zp,pR,zp,vz,zp,zp,zp,zp,zp,zp,zp];var cN=[zq,zq,tl,zq,tj,zq,e9,zq,s8,zq,s5,zq,mY,zq,zq,zq];var cO=[zr,zr,tU,zr,tR,zr,uE,zr,uO,zr,uI,zr,uQ,zr,zr,zr];var cP=[zs,zs,e7,zs,yg,zs,th,zs,td,zs,tc,zs,yh,zs,fT,zs,u7,zs,tm,zs,q9,zs,s_,zs,s9,zs,s3,zs,s$,zs,f6,zs,yi,zs,mW,zs,qX,zs,vc,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs,zs];var cQ=[zt,zt,e5,zt,mU,zt,zt,zt];var cR=[zu,zu,iI,zu];var cS=[zv,zv,fe,zv,mF,zv,zv,zv];var cT=[zw,zw,tr,zw,tv,zw,tF,zw,tH,zw,r9,zw,u3,zw,tG,zw,ti,zw,tg,zw,uZ,zw,tu,zw,tI,zw,sQ,zw,tt,zw,sn,zw,sE,zw,s4,zw,s2,zw,sG,zw,sI,zw,sA,zw,sC,zw,sr,zw,sy,zw,sw,zw,sO,zw,sM,zw,sK,zw,tJ,zw,sb,zw,sf,zw,ts,zw,sj,zw,sd,zw,sh,zw,sp,zw,sl,zw,r7,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw,zw];var cU=[zx,zx,uW,zx,u0,zx,zx,zx];var cV=[zy,zy,tK,zy,tw,zy,zy,zy];var cW=[zz,zz,dW,zz,pZ,zz,gg,zz,mp,zz,ma,zz,lA,zz,na,zz,nn,zz,is,zz,vA,zz,dZ,zz,nm,zz,dU,zz,dT,zz,vC,zz,eC,zz,rg,zz,d8,zz,ek,zz,vM,zz,dV,zz,vI,zz,eF,zz,jT,zz,pL,zz,vy,zz,jS,zz,ef,zz,mc,zz,hA,zz,oe,zz,d5,zz,d3,zz,l2,zz,ga,zz,d9,zz,j$,zz,iR,zz,nl,zz,jv,zz,jV,zz,ih,zz,ob,zz,d1,zz,d$,zz,dX,zz,d7,zz,d6,zz,ok,zz,i6,zz,pS,zz,fX,zz,oh,zz,mb,zz,vK,zz,eE,zz,eD,zz,jU,zz,er,zz,d2,zz,ey,zz,ir,zz,gB,zz,ea,zz,np,zz,gO,zz,q4,zz,gn,zz,nh,zz,mm,zz,ri,zz,jR,zz,n_,zz,xK,zz,eG,zz,nk,zz,ni,zz,iK,zz,f9,zz,mn,zz,jW,zz,iY,zz,d0,zz,n8,zz,dS,zz,d_,zz,fY,zz,no,zz,nj,zz,d4,zz,q2,zz,pE,zz,fA,zz,iH,zz,dR,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz];var cX=[zA,zA,gs,zA];var cY=[zB,zB,o1,zB,vv,zB,vw,zB,vN,zB,o7,zB,o3,zB,o4,zB,o_,zB,vD,zB,o6,zB,o5,zB,vx,zB,zB,zB,zB,zB,zB,zB];var cZ=[zC,zC,oj,zC,od,zC,h0,zC,m2,zC,eZ,zC,mE,zC,j6,zC,nb,zC,eQ,zC,eN,zC,iF,zC,kc,zC,fg,zC,iS,zC,qf,zC,oK,zC,mz,zC,mC,zC,m1,zC,mr,zC,fB,zC,mN,zC,n7,zC,fd,zC,iD,zC,i7,zC,rQ,zC,oa,zC,eR,zC,pa,zC,jQ,zC,ev,zC,nZ,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC,zC];var c_=[zD,zD,yV,zD];var c$=[zE,zE,vZ,zE,v7,zE,v5,zE,wg,zE,wi,zE,v_,zE,vR,zE,vS,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE,zE];var c0=[zF,zF,e3,zF,mZ,zF,m0,zF,f7,zF,fa,zF,eM,zF,my,zF,fc,zF,r3,zF,mS,zF,x9,zF,ya,zF,eI,zF,e$,zF,x8,zF,mH,zF,fU,zF,qY,zF,og,zF,ra,zF,mP,zF,jC,zF,eT,zF,r_,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF,zF];return{_memcmp:yD,_strlen:yz,__GLOBAL__I_a:dx,_free:yk,__GLOBAL__I_a581:ky,_realloc:ym,_strncpy:yG,_memmove:yB,_tolower:yE,_convertMusic:di,_memset:yC,_malloc:yj,_memcpy:yA,__GLOBAL__I_a1332:p$,_strcpy:yF,_calloc:yl,runPostSets:dh,stackAlloc:c1,stackSave:c2,stackRestore:c3,setThrew:c4,setTempRet0:c7,setTempRet1:c8,setTempRet2:c9,setTempRet3:da,setTempRet4:db,setTempRet5:dc,setTempRet6:dd,setTempRet7:de,setTempRet8:df,setTempRet9:dg,dynCall_viiiii:yW,dynCall_vi:yX,dynCall_vii:yY,dynCall_viiiid:yZ,dynCall_ii:y_,dynCall_iiiiii:y$,dynCall_vidd:y0,dynCall_iiii:y1,dynCall_viiiiid:y2,dynCall_viiiiiiii:y3,dynCall_viiiiii:y4,dynCall_viiiiidd:y5,dynCall_di:y6,dynCall_viid:y7,dynCall_viiiiiii:y8,dynCall_viiiiiid:y9,dynCall_viiiiiiiii:za,dynCall_iii:zb,dynCall_diii:zc,dynCall_iiiii:zd,dynCall_viii:ze,dynCall_v:zf,dynCall_iiiiiiiii:zg,dynCall_viiii:zh}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viiiid": invoke_viiiid, "invoke_ii": invoke_ii, "invoke_iiiiii": invoke_iiiiii, "invoke_vidd": invoke_vidd, "invoke_iiii": invoke_iiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiidd": invoke_viiiiidd, "invoke_di": invoke_di, "invoke_viid": invoke_viid, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "_rand": _rand, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_strtoull": _strtoull, "_fflush": _fflush, "_strtol": _strtol, "_fputc": _fputc, "_strtok": _strtok, "_fwrite": _fwrite, "_send": _send, "_fputs": _fputs, "_isspace": _isspace, "_read": _read, "_ceil": _ceil, "_fsync": _fsync, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_isblank": _isblank, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "___resumeException": ___resumeException, "_strcmp": _strcmp, "_memchr": _memchr, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_close": _close, "_strchr": _strchr, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_ftell": _ftell, "_abs": _abs, "_exit": _exit, "_sprintf": _sprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_catgets": _catgets, "__isLeapYear": __isLeapYear, "_asprintf": _asprintf, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_cos": _cos, "___cxa_call_unexpected": ___cxa_call_unexpected, "_round": _round, "__exit": __exit, "_strftime": _strftime, "_strncmp": _strncmp, "___cxa_throw": ___cxa_throw, "_ldexp": _ldexp, "_llvm_eh_exception": _llvm_eh_exception, "_pread": _pread, "_fopen": _fopen, "_open": _open, "__arraySum": __arraySum, "_sysconf": _sysconf, "_isalnum": _isalnum, "_exp2": _exp2, "_qsort": _qsort, "_isalpha": _isalpha, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_fread": _fread, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_atoi": _atoi, "_isascii": _isascii, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_llvm_pow_f64": _llvm_pow_f64, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "__parseInt": __parseInt, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_srand": _srand, "_strtok_r": _strtok_r, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__addDays": __addDays, "_fabs": _fabs, "_floor": _floor, "__reallyNegative": __reallyNegative, "_fseek": _fseek, "___cxa_bad_typeid": ___cxa_bad_typeid, "_write": _write, "___cxa_allocate_exception": ___cxa_allocate_exception, "_sin": _sin, "_ceilf": _ceilf, "___cxa_pure_virtual": ___cxa_pure_virtual, "_vasprintf": _vasprintf, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_atan2": _atan2, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "___fsmu8": ___fsmu8, "__ZTIc": __ZTIc, "_stdout": _stdout, "__ZTVN10__cxxabiv119__pointer_type_infoE": __ZTVN10__cxxabiv119__pointer_type_infoE, "___dso_handle": ___dso_handle, "_stdin": _stdin, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr }, buffer);
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _free = Module["_free"] = asm["_free"];
var __GLOBAL__I_a581 = Module["__GLOBAL__I_a581"] = asm["__GLOBAL__I_a581"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _convertMusic = Module["_convertMusic"] = asm["_convertMusic"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__I_a1332 = Module["__GLOBAL__I_a1332"] = asm["__GLOBAL__I_a1332"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _calloc = Module["_calloc"] = asm["_calloc"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viiiid = Module["dynCall_viiiid"] = asm["dynCall_viiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiidd = Module["dynCall_viiiiidd"] = asm["dynCall_viiiiidd"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
